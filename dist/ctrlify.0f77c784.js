// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  externals,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        if (externals[name]) {
          return externals[name];
        }
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  function $parcel$resolve(url) {  url = importMap[url] || url;  return import.meta.resolve(distDir + url);}newRequire.resolve = $parcel$resolve;

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"7wZbQ":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "9440bf780f77c784";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            // Ignore cloudflare workers error.
            if (err.message && !err.message.includes('Disallowed operation called within global scope')) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"2R06K":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$0bfa = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$0bfa.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$0bfa.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
var _home = require("./Pages/Home/Home");
var _homeDefault = parcelHelpers.interopDefault(_home);
var _reactRouter = require("react-router");
var _profile = require("./Pages/Profile/Profile");
var _profileDefault = parcelHelpers.interopDefault(_profile);
var _notifications = require("./Pages/Notifications/Notifications");
var _notificationsDefault = parcelHelpers.interopDefault(_notifications);
var _dashboard = require("./Pages/Dashboard/Dashboard");
var _dashboardDefault = parcelHelpers.interopDefault(_dashboard);
var _appContext = require("./Context/AppContext");
const appRouter = (0, _reactRouter.createBrowserRouter)([
    {
        path: "/",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _homeDefault.default), {}, void 0, false, {
            fileName: "src/app.js",
            lineNumber: 14,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/Profile",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _profileDefault.default), {}, void 0, false, {
            fileName: "src/app.js",
            lineNumber: 18,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/Notifications",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationsDefault.default), {}, void 0, false, {
            fileName: "src/app.js",
            lineNumber: 22,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/Dashboard",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dashboardDefault.default), {}, void 0, false, {
            fileName: "src/app.js",
            lineNumber: 26,
            columnNumber: 14
        }, undefined)
    }
]);
const root = (0, _clientDefault.default).createRoot(document.querySelector("#root"));
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactDefault.default).StrictMode, {
    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appContext.AppProvider), {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.RouterProvider), {
            router: appRouter
        }, void 0, false, {
            fileName: "src/app.js",
            lineNumber: 34,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/app.js",
        lineNumber: 33,
        columnNumber: 5
    }, undefined)
}, void 0, false, {
    fileName: "src/app.js",
    lineNumber: 32,
    columnNumber: 3
}, undefined));

  $parcel$ReactRefreshHelpers$0bfa.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-dom/client":"hrvwu","./Pages/Home/Home":"gj00L","react-router":"2jawN","./Pages/Profile/Profile":"1tmvP","./Pages/Notifications/Notifications":"ggL6I","./Pages/Dashboard/Dashboard":"auQZz","./Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dVPUn":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"gnlQf"}],"gnlQf":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) {
            if (isStaticChildren) {
                if (isArrayImpl(children)) {
                    for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
                    Object.freeze && Object.freeze(children);
                } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            } else validateChildKeys(children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey, debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = require("58362d9d82be395f"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        "react-stack-bottom-frame": function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React["react-stack-bottom-frame"].bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
})();

},{"58362d9d82be395f":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                console.warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
        });
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function warnNoop(publicInstance, callerName) {
        publicInstance = (publicInstance = publicInstance.constructor) && (publicInstance.displayName || publicInstance.name) || "ReactClass";
        var warningKey = publicInstance + "." + callerName;
        didWarnStateUpdateForUnmountedComponent[warningKey] || (console.error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, publicInstance), didWarnStateUpdateForUnmountedComponent[warningKey] = !0);
    }
    function Component(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        newKey = ReactElement(oldElement.type, newKey, void 0, void 0, oldElement._owner, oldElement.props, oldElement._debugStack, oldElement._debugTask);
        oldElement._store && (newKey._store.validated = oldElement._store.validated);
        return newKey;
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function escape(key) {
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        return "$" + key.replace(/[=:]/g, function(match) {
            return escaperLookup[match];
        });
    }
    function getElementKey(element, index) {
        return "object" === typeof element && null !== element && null != element.key ? (checkKeyStringCoercion(element.key), escape("" + element.key)) : index.toString(36);
    }
    function noop$1() {}
    function resolveThenable(thenable) {
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenable.reason;
            default:
                switch("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(function(fulfilledValue) {
                    "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
                }, function(error) {
                    "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
                })), thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenable.reason;
                }
        }
        throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if ("undefined" === type || "boolean" === type) children = null;
        var invokeCallback = !1;
        if (null === children) invokeCallback = !0;
        else switch(type){
            case "bigint":
            case "string":
            case "number":
                invokeCallback = !0;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = !0;
                        break;
                    case REACT_LAZY_TYPE:
                        return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);
                }
        }
        if (invokeCallback) {
            invokeCallback = children;
            callback = callback(invokeCallback);
            var childKey = "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
            isArrayImpl(callback) ? (escapedPrefix = "", null != childKey && (escapedPrefix = childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function(c) {
                return c;
            })) : null != callback && (isValidElement(callback) && (null != callback.key && (invokeCallback && invokeCallback.key === callback.key || checkKeyStringCoercion(callback.key)), escapedPrefix = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || invokeCallback && invokeCallback.key === callback.key ? "" : ("" + callback.key).replace(userProvidedKeyEscapeRegex, "$&/") + "/") + childKey), "" !== nameSoFar && null != invokeCallback && isValidElement(invokeCallback) && null == invokeCallback.key && invokeCallback._store && !invokeCallback._store.validated && (escapedPrefix._store.validated = 2), callback = escapedPrefix), array.push(callback));
            return 1;
        }
        invokeCallback = 0;
        childKey = "" === nameSoFar ? "." : nameSoFar + ":";
        if (isArrayImpl(children)) for(var i = 0; i < children.length; i++)nameSoFar = children[i], type = childKey + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if (i = getIteratorFn(children), "function" === typeof i) for(i === children.entries && (didWarnAboutMaps || console.warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0), children = i.call(children), i = 0; !(nameSoFar = children.next()).done;)nameSoFar = nameSoFar.value, type = childKey + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if ("object" === type) {
            if ("function" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);
            array = String(children);
            throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead.");
        }
        return invokeCallback;
    }
    function mapChildren(children, func, context) {
        if (null == children) return children;
        var result = [], count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    function lazyInitializer(payload) {
        if (-1 === payload._status) {
            var ctor = payload._result;
            ctor = ctor();
            ctor.then(function(moduleObject) {
                if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;
            }, function(error) {
                if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;
            });
            -1 === payload._status && (payload._status = 0, payload._result = ctor);
        }
        if (1 === payload._status) return ctor = payload._result, void 0 === ctor && console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", ctor), "default" in ctor || console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", ctor), ctor.default;
        throw payload._result;
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function noop() {}
    function enqueueTask(task) {
        if (null === enqueueTaskImpl) try {
            var requireString = ("require" + Math.random()).slice(0, 7);
            enqueueTaskImpl = (module && module[requireString]).call(module, "timers").setImmediate;
        } catch (_err) {
            enqueueTaskImpl = function(callback) {
                !1 === didWarnAboutMessageChannel && (didWarnAboutMessageChannel = !0, "undefined" === typeof MessageChannel && console.error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
            };
        }
        return enqueueTaskImpl(task);
    }
    function aggregateErrors(errors) {
        return 1 < errors.length && "function" === typeof AggregateError ? new AggregateError(errors) : errors[0];
    }
    function popActScope(prevActQueue, prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && console.error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactSharedInternals.actQueue;
        if (null !== queue) {
            if (0 !== queue.length) try {
                flushActQueue(queue);
                enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                });
                return;
            } catch (error) {
                ReactSharedInternals.thrownErrors.push(error);
            }
            else ReactSharedInternals.actQueue = null;
        }
        0 < ReactSharedInternals.thrownErrors.length ? (queue = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(queue)) : resolve(returnValue);
    }
    function flushActQueue(queue) {
        if (!isFlushing) {
            isFlushing = !0;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do {
                        ReactSharedInternals.didUsePromise = !1;
                        var continuation = callback(!1);
                        if (null !== continuation) {
                            if (ReactSharedInternals.didUsePromise) {
                                queue[i] = callback;
                                queue.splice(0, i);
                                return;
                            }
                            callback = continuation;
                        } else break;
                    }while (1);
                }
                queue.length = 0;
            } catch (error) {
                queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
            } finally{
                isFlushing = !1;
            }
        }
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, didWarnStateUpdateForUnmountedComponent = {}, ReactNoopUpdateQueue = {
        isMounted: function() {
            return !1;
        },
        enqueueForceUpdate: function(publicInstance) {
            warnNoop(publicInstance, "forceUpdate");
        },
        enqueueReplaceState: function(publicInstance) {
            warnNoop(publicInstance, "replaceState");
        },
        enqueueSetState: function(publicInstance) {
            warnNoop(publicInstance, "setState");
        }
    }, assign = Object.assign, emptyObject = {};
    Object.freeze(emptyObject);
    Component.prototype.isReactComponent = {};
    Component.prototype.setState = function(partialState, callback) {
        if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState) throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    }, fnName;
    for(fnName in deprecatedAPIs)deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    ComponentDummy.prototype = Component.prototype;
    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
    deprecatedAPIs.constructor = PureComponent;
    assign(deprecatedAPIs, Component.prototype);
    deprecatedAPIs.isPureReactComponent = !0;
    var isArrayImpl = Array.isArray, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = {
        H: null,
        A: null,
        T: null,
        S: null,
        V: null,
        actQueue: null,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1,
        didUsePromise: !1,
        thrownErrors: [],
        getCurrentStack: null,
        recentlyCreatedOwnerStacks: 0
    }, hasOwnProperty = Object.prototype.hasOwnProperty, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    deprecatedAPIs = {
        "react-stack-bottom-frame": function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = deprecatedAPIs["react-stack-bottom-frame"].bind(deprecatedAPIs, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, didWarnAboutMessageChannel = !1, enqueueTaskImpl = null, actScopeDepth = 0, didWarnNoAwaitAct = !1, isFlushing = !1, queueSeveralMicrotasks = "function" === typeof queueMicrotask ? function(callback) {
        queueMicrotask(function() {
            return queueMicrotask(callback);
        });
    } : enqueueTask;
    deprecatedAPIs = Object.freeze({
        __proto__: null,
        c: function(size) {
            return resolveDispatcher().useMemoCache(size);
        }
    });
    exports.Children = {
        map: mapChildren,
        forEach: function(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
                forEachFunc.apply(this, arguments);
            }, forEachContext);
        },
        count: function(children) {
            var n = 0;
            mapChildren(children, function() {
                n++;
            });
            return n;
        },
        toArray: function(children) {
            return mapChildren(children, function(child) {
                return child;
            }) || [];
        },
        only: function(children) {
            if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
            return children;
        }
    };
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
    exports.__COMPILER_RUNTIME = deprecatedAPIs;
    exports.act = function(callback) {
        var prevActQueue = ReactSharedInternals.actQueue, prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        var queue = ReactSharedInternals.actQueue = null !== prevActQueue ? prevActQueue : [], didAwaitActCall = !1;
        try {
            var result = callback();
        } catch (error) {
            ReactSharedInternals.thrownErrors.push(error);
        }
        if (0 < ReactSharedInternals.thrownErrors.length) throw popActScope(prevActQueue, prevActScopeDepth), callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        if (null !== result && "object" === typeof result && "function" === typeof result.then) {
            var thenable = result;
            queueSeveralMicrotasks(function() {
                didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            });
            return {
                then: function(resolve, reject) {
                    didAwaitActCall = !0;
                    thenable.then(function(returnValue) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        if (0 === prevActScopeDepth) {
                            try {
                                flushActQueue(queue), enqueueTask(function() {
                                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                });
                            } catch (error$0) {
                                ReactSharedInternals.thrownErrors.push(error$0);
                            }
                            if (0 < ReactSharedInternals.thrownErrors.length) {
                                var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);
                                ReactSharedInternals.thrownErrors.length = 0;
                                reject(_thrownError);
                            }
                        } else resolve(returnValue);
                    }, function(error) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        0 < ReactSharedInternals.thrownErrors.length ? (error = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(error)) : reject(error);
                    });
                }
            };
        }
        var returnValue$jscomp$0 = result;
        popActScope(prevActQueue, prevActScopeDepth);
        0 === prevActScopeDepth && (flushActQueue(queue), 0 !== queue.length && queueSeveralMicrotasks(function() {
            didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"));
        }), ReactSharedInternals.actQueue = null);
        if (0 < ReactSharedInternals.thrownErrors.length) throw callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        return {
            then: function(resolve, reject) {
                didAwaitActCall = !0;
                0 === prevActScopeDepth ? (ReactSharedInternals.actQueue = queue, enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue$jscomp$0, resolve, reject);
                })) : resolve(returnValue$jscomp$0);
            }
        };
    };
    exports.cache = function(fn) {
        return function() {
            return fn.apply(null, arguments);
        };
    };
    exports.captureOwnerStack = function() {
        var getCurrentStack = ReactSharedInternals.getCurrentStack;
        return null === getCurrentStack ? null : getCurrentStack();
    };
    exports.cloneElement = function(element, config, children) {
        if (null === element || void 0 === element) throw Error("The argument must be a React element, but you passed " + element + ".");
        var props = assign({}, element.props), key = element.key, owner = element._owner;
        if (null != config) {
            var JSCompiler_inline_result;
            a: {
                if (hasOwnProperty.call(config, "ref") && (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(config, "ref").get) && JSCompiler_inline_result.isReactWarning) {
                    JSCompiler_inline_result = !1;
                    break a;
                }
                JSCompiler_inline_result = void 0 !== config.ref;
            }
            JSCompiler_inline_result && (owner = getOwner());
            hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
            for(propName in config)!hasOwnProperty.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && void 0 === config.ref || (props[propName] = config[propName]);
        }
        var propName = arguments.length - 2;
        if (1 === propName) props.children = children;
        else if (1 < propName) {
            JSCompiler_inline_result = Array(propName);
            for(var i = 0; i < propName; i++)JSCompiler_inline_result[i] = arguments[i + 2];
            props.children = JSCompiler_inline_result;
        }
        props = ReactElement(element.type, key, void 0, void 0, owner, props, element._debugStack, element._debugTask);
        for(key = 2; key < arguments.length; key++)owner = arguments[key], isValidElement(owner) && owner._store && (owner._store.validated = 1);
        return props;
    };
    exports.createContext = function(defaultValue) {
        defaultValue = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        };
        defaultValue.Provider = defaultValue;
        defaultValue.Consumer = {
            $$typeof: REACT_CONSUMER_TYPE,
            _context: defaultValue
        };
        defaultValue._currentRenderer = null;
        defaultValue._currentRenderer2 = null;
        return defaultValue;
    };
    exports.createElement = function(type, config, children) {
        for(var i = 2; i < arguments.length; i++){
            var node = arguments[i];
            isValidElement(node) && node._store && (node._store.validated = 1);
        }
        i = {};
        node = null;
        if (null != config) for(propName in didWarnAboutOldJSXRuntime || !("__self" in config) || "key" in config || (didWarnAboutOldJSXRuntime = !0, console.warn("Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform")), hasValidKey(config) && (checkKeyStringCoercion(config.key), node = "" + config.key), config)hasOwnProperty.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (i[propName] = config[propName]);
        var childrenLength = arguments.length - 2;
        if (1 === childrenLength) i.children = children;
        else if (1 < childrenLength) {
            for(var childArray = Array(childrenLength), _i = 0; _i < childrenLength; _i++)childArray[_i] = arguments[_i + 2];
            Object.freeze && Object.freeze(childArray);
            i.children = childArray;
        }
        if (type && type.defaultProps) for(propName in childrenLength = type.defaultProps, childrenLength)void 0 === i[propName] && (i[propName] = childrenLength[propName]);
        node && defineKeyPropWarningGetter(i, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return ReactElement(type, node, void 0, void 0, getOwner(), i, propName ? Error("react-stack-top-frame") : unknownOwnerDebugStack, propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
    exports.createRef = function() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    };
    exports.forwardRef = function(render) {
        null != render && render.$$typeof === REACT_MEMO_TYPE ? console.error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : "function" !== typeof render ? console.error("forwardRef requires a render function but was given %s.", null === render ? "null" : typeof render) : 0 !== render.length && 2 !== render.length && console.error("forwardRef render functions accept exactly two parameters: props and ref. %s", 1 === render.length ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        null != render && null != render.defaultProps && console.error("forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?");
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        }, ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                render.name || render.displayName || (Object.defineProperty(render, "name", {
                    value: name
                }), render.displayName = name);
            }
        });
        return elementType;
    };
    exports.isValidElement = isValidElement;
    exports.lazy = function(ctor) {
        return {
            $$typeof: REACT_LAZY_TYPE,
            _payload: {
                _status: -1,
                _result: ctor
            },
            _init: lazyInitializer
        };
    };
    exports.memo = function(type, compare) {
        null == type && console.error("memo: The first argument must be a component. Instead received: %s", null === type ? "null" : typeof type);
        compare = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: void 0 === compare ? null : compare
        };
        var ownName;
        Object.defineProperty(compare, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                type.name || type.displayName || (Object.defineProperty(type, "name", {
                    value: name
                }), type.displayName = name);
            }
        });
        return compare;
    };
    exports.startTransition = function(scope) {
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = scope(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);
        } catch (error) {
            reportGlobalError(error);
        } finally{
            null === prevTransition && currentTransition._updatedFibers && (scope = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < scope && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.")), ReactSharedInternals.T = prevTransition;
        }
    };
    exports.unstable_useCacheRefresh = function() {
        return resolveDispatcher().useCacheRefresh();
    };
    exports.use = function(usable) {
        return resolveDispatcher().use(usable);
    };
    exports.useActionState = function(action, initialState, permalink) {
        return resolveDispatcher().useActionState(action, initialState, permalink);
    };
    exports.useCallback = function(callback, deps) {
        return resolveDispatcher().useCallback(callback, deps);
    };
    exports.useContext = function(Context) {
        var dispatcher = resolveDispatcher();
        Context.$$typeof === REACT_CONSUMER_TYPE && console.error("Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?");
        return dispatcher.useContext(Context);
    };
    exports.useDebugValue = function(value, formatterFn) {
        return resolveDispatcher().useDebugValue(value, formatterFn);
    };
    exports.useDeferredValue = function(value, initialValue) {
        return resolveDispatcher().useDeferredValue(value, initialValue);
    };
    exports.useEffect = function(create, createDeps, update) {
        null == create && console.warn("React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        var dispatcher = resolveDispatcher();
        if ("function" === typeof update) throw Error("useEffect CRUD overload is not enabled in this build of React.");
        return dispatcher.useEffect(create, createDeps);
    };
    exports.useId = function() {
        return resolveDispatcher().useId();
    };
    exports.useImperativeHandle = function(ref, create, deps) {
        return resolveDispatcher().useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function(create, deps) {
        null == create && console.warn("React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function(create, deps) {
        null == create && console.warn("React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useLayoutEffect(create, deps);
    };
    exports.useMemo = function(create, deps) {
        return resolveDispatcher().useMemo(create, deps);
    };
    exports.useOptimistic = function(passthrough, reducer) {
        return resolveDispatcher().useOptimistic(passthrough, reducer);
    };
    exports.useReducer = function(reducer, initialArg, init) {
        return resolveDispatcher().useReducer(reducer, initialArg, init);
    };
    exports.useRef = function(initialValue) {
        return resolveDispatcher().useRef(initialValue);
    };
    exports.useState = function(initialState) {
        return resolveDispatcher().useState(initialState);
    };
    exports.useSyncExternalStore = function(subscribe, getSnapshot, getServerSnapshot) {
        return resolveDispatcher().useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    };
    exports.useTransition = function() {
        return resolveDispatcher().useTransition();
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("2b53550ce04dc092");

},{"2b53550ce04dc092":"lu7uO"}],"lu7uO":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom-client.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ "use strict";
(function() {
    function findHook(fiber, id) {
        for(fiber = fiber.memoizedState; null !== fiber && 0 < id;)fiber = fiber.next, id--;
        return fiber;
    }
    function copyWithSetImpl(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    }
    function copyWithRename(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) console.warn("copyWithRename() expects paths of the same length");
        else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                console.warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
        }
    }
    function copyWithRenameImpl(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        index + 1 === oldPath.length ? (updated[newPath[index]] = updated[oldKey], isArrayImpl(updated) ? updated.splice(oldKey, 1) : delete updated[oldKey]) : updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    }
    function copyWithDeleteImpl(obj, path, index) {
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) return isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key], updated;
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    }
    function shouldSuspendImpl() {
        return !1;
    }
    function shouldErrorImpl() {
        return null;
    }
    function warnForMissingKey() {}
    function warnInvalidHookAccess() {
        console.error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks");
    }
    function warnInvalidContextAccess() {
        console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    }
    function noop$2() {}
    function setToSortedString(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    }
    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }
    function scheduleRoot(root, element) {
        root.context === emptyContextObject && (updateContainerImpl(root.current, 2, element, root, null, null), flushSyncWork$1());
    }
    function scheduleRefresh(root, update) {
        if (null !== resolveFamily) {
            var staleFamilies = update.staleFamilies;
            update = update.updatedFamilies;
            flushPendingEffects();
            scheduleFibersWithFamiliesRecursively(root.current, update, staleFamilies);
            flushSyncWork$1();
        }
    }
    function setRefreshHandler(handler) {
        resolveFamily = handler;
    }
    function isValidContainer(node) {
        return !(!node || 1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType);
    }
    function getNearestMountedFiber(fiber) {
        var node = fiber, nearestMounted = fiber;
        if (fiber.alternate) for(; node.return;)node = node.return;
        else {
            fiber = node;
            do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return;
            while (fiber);
        }
        return 3 === node.tag ? nearestMounted : null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (13 === fiber.tag) {
            var suspenseState = fiber.memoizedState;
            null === suspenseState && (fiber = fiber.alternate, null !== fiber && (suspenseState = fiber.memoizedState));
            if (null !== suspenseState) return suspenseState.dehydrated;
        }
        return null;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            alternate = getNearestMountedFiber(fiber);
            if (null === alternate) throw Error("Unable to find node on an unmounted component.");
            return alternate !== fiber ? null : fiber;
        }
        for(var a = fiber, b = alternate;;){
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;
            if (null === parentB) {
                b = parentA.return;
                if (null !== b) {
                    a = b;
                    continue;
                }
                break;
            }
            if (parentA.child === parentB.child) {
                for(parentB = parentA.child; parentB;){
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;
            else {
                for(var didFindChild = !1, _child = parentA.child; _child;){
                    if (_child === a) {
                        didFindChild = !0;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for(_child = parentB.child; _child;){
                        if (_child === a) {
                            didFindChild = !0;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
        return a.stateNode.current === a ? fiber : alternate;
    }
    function findCurrentHostFiberImpl(node) {
        var tag = node.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
        for(node = node.child; null !== node;){
            tag = findCurrentHostFiberImpl(node);
            if (null !== tag) return tag;
            node = node.sibling;
        }
        return null;
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getComponentNameFromOwner(owner) {
        return "number" === typeof owner.tag ? getComponentNameFromFiber(owner) : "string" === typeof owner.name ? owner.name : null;
    }
    function getComponentNameFromFiber(fiber) {
        var type = fiber.type;
        switch(fiber.tag){
            case 31:
                return "Activity";
            case 24:
                return "Cache";
            case 9:
                return (type._context.displayName || "Context") + ".Consumer";
            case 10:
                return (type.displayName || "Context") + ".Provider";
            case 18:
                return "DehydratedFragment";
            case 11:
                return fiber = type.render, fiber = fiber.displayName || fiber.name || "", type.displayName || ("" !== fiber ? "ForwardRef(" + fiber + ")" : "ForwardRef");
            case 7:
                return "Fragment";
            case 26:
            case 27:
            case 5:
                return type;
            case 4:
                return "Portal";
            case 3:
                return "Root";
            case 6:
                return "Text";
            case 16:
                return getComponentNameFromType(type);
            case 8:
                return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
            case 22:
                return "Offscreen";
            case 12:
                return "Profiler";
            case 21:
                return "Scope";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 25:
                return "TracingMarker";
            case 1:
            case 0:
            case 14:
            case 15:
                if ("function" === typeof type) return type.displayName || type.name || null;
                if ("string" === typeof type) return type;
                break;
            case 29:
                type = fiber._debugInfo;
                if (null != type) {
                    for(var i = type.length - 1; 0 <= i; i--)if ("string" === typeof type[i].name) return type[i].name;
                }
                if (null !== fiber.return) return getComponentNameFromFiber(fiber.return);
        }
        return null;
    }
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        0 > index$jscomp$0 ? console.error("Unexpected pop.") : (fiber !== fiberStack[index$jscomp$0] && console.error("Unexpected Fiber popped."), cursor.current = valueStack[index$jscomp$0], valueStack[index$jscomp$0] = null, fiberStack[index$jscomp$0] = null, index$jscomp$0--);
    }
    function push(cursor, value, fiber) {
        index$jscomp$0++;
        valueStack[index$jscomp$0] = cursor.current;
        fiberStack[index$jscomp$0] = fiber;
        cursor.current = value;
    }
    function requiredContext(c) {
        null === c && console.error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor, null, fiber);
        var nextRootContext = nextRootInstance.nodeType;
        switch(nextRootContext){
            case 9:
            case 11:
                nextRootContext = 9 === nextRootContext ? "#document" : "#fragment";
                nextRootInstance = (nextRootInstance = nextRootInstance.documentElement) ? (nextRootInstance = nextRootInstance.namespaceURI) ? getOwnHostContext(nextRootInstance) : HostContextNamespaceNone : HostContextNamespaceNone;
                break;
            default:
                if (nextRootContext = nextRootInstance.tagName, nextRootInstance = nextRootInstance.namespaceURI) nextRootInstance = getOwnHostContext(nextRootInstance), nextRootInstance = getChildHostContextProd(nextRootInstance, nextRootContext);
                else switch(nextRootContext){
                    case "svg":
                        nextRootInstance = HostContextNamespaceSvg;
                        break;
                    case "math":
                        nextRootInstance = HostContextNamespaceMath;
                        break;
                    default:
                        nextRootInstance = HostContextNamespaceNone;
                }
        }
        nextRootContext = nextRootContext.toLowerCase();
        nextRootContext = updatedAncestorInfoDev(null, nextRootContext);
        nextRootContext = {
            context: nextRootInstance,
            ancestorInfo: nextRootContext
        };
        pop(contextStackCursor, fiber);
        push(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber, fiber);
        var context = requiredContext(contextStackCursor.current);
        var type = fiber.type;
        var nextContext = getChildHostContextProd(context.context, type);
        type = updatedAncestorInfoDev(context.ancestorInfo, type);
        nextContext = {
            context: nextContext,
            ancestorInfo: type
        };
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));
        hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor, fiber), HostTransitionContext._currentValue = NotPendingTransition);
    }
    function typeName(value) {
        return "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
    }
    function willCoercionThrow(value) {
        try {
            return testStringCoercion(value), !1;
        } catch (e) {
            return !0;
        }
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.", attributeName, typeName(value)), testStringCoercion(value);
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.", propName, typeName(value)), testStringCoercion(value);
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) return console.error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.", typeName(value)), testStringCoercion(value);
    }
    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) return !0;
        if (!hook.supportsFiber) return console.error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools"), !0;
        try {
            rendererID = hook.inject(internals), injectedHook = hook;
        } catch (err) {
            console.error("React instrumentation encountered an error: %s.", err);
        }
        return hook.checkDCE ? !0 : !1;
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        "function" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);
        if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
    }
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function markCommitStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStopped && injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStarted && injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStopped && injectedProfilingHooks.markComponentRenderStopped();
    }
    function markRenderStarted(lanes) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStarted && injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStopped && injectedProfilingHooks.markRenderStopped();
    }
    function markStateUpdateScheduled(fiber, lane) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markStateUpdateScheduled && injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    function clz32Fallback(x) {
        x >>>= 0;
        return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
    }
    function getLabelForLane(lane) {
        if (lane & 1) return "SyncHydrationLane";
        if (lane & 2) return "Sync";
        if (lane & 4) return "InputContinuousHydration";
        if (lane & 8) return "InputContinuous";
        if (lane & 16) return "DefaultHydration";
        if (lane & 32) return "Default";
        if (lane & 128) return "TransitionHydration";
        if (lane & 4194048) return "Transition";
        if (lane & 62914560) return "Retry";
        if (lane & 67108864) return "SelectiveHydration";
        if (lane & 134217728) return "IdleHydration";
        if (lane & 268435456) return "Idle";
        if (lane & 536870912) return "Offscreen";
        if (lane & 1073741824) return "Deferred";
    }
    function getHighestPriorityLanes(lanes) {
        var pendingSyncLanes = lanes & 42;
        if (0 !== pendingSyncLanes) return pendingSyncLanes;
        switch(lanes & -lanes){
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
                return 64;
            case 128:
                return 128;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return lanes & 4194048;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return lanes & 62914560;
            case 67108864:
                return 67108864;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 0;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), lanes;
        }
    }
    function getNextLanes(root, wipLanes, rootHasPendingCommit) {
        var pendingLanes = root.pendingLanes;
        if (0 === pendingLanes) return 0;
        var nextLanes = 0, suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
        root = root.warmLanes;
        var nonIdlePendingLanes = pendingLanes & 134217727;
        0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = nonIdlePendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = pendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));
        return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, rootHasPendingCommit = wipLanes & -wipLanes, suspendedLanes >= rootHasPendingCommit || 32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)) ? wipLanes : nextLanes;
    }
    function checkIfRootIsPrerendering(root, renderLanes) {
        return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case 1:
            case 2:
            case 4:
            case 8:
            case 64:
                return currentTime + 250;
            case 16:
            case 32:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return currentTime + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return -1;
            case 67108864:
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), -1;
        }
    }
    function claimNextTransitionLane() {
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
        return lane;
    }
    function createLaneMap(initial) {
        for(var laneMap = [], i = 0; 31 > i; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated$1(root, updateLane) {
        root.pendingLanes |= updateLane;
        268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
    }
    function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
        var previouslyPendingLanes = root.pendingLanes;
        root.pendingLanes = remainingLanes;
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.warmLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        root.errorRecoveryDisabledLanes &= remainingLanes;
        root.shellSuspendCounter = 0;
        var entanglements = root.entanglements, expirationTimes = root.expirationTimes, hiddenUpdates = root.hiddenUpdates;
        for(remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;){
            var index = 31 - clz32(remainingLanes), lane = 1 << index;
            entanglements[index] = 0;
            expirationTimes[index] = -1;
            var hiddenUpdatesForLane = hiddenUpdates[index];
            if (null !== hiddenUpdatesForLane) for(hiddenUpdates[index] = null, index = 0; index < hiddenUpdatesForLane.length; index++){
                var update = hiddenUpdatesForLane[index];
                null !== update && (update.lane &= -536870913);
            }
            remainingLanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
        0 !== suspendedRetryLanes && 0 === updatedLanes && 0 !== root.tag && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
    }
    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
        root.pendingLanes |= spawnedLane;
        root.suspendedLanes &= ~spawnedLane;
        var spawnedLaneIndex = 31 - clz32(spawnedLane);
        root.entangledLanes |= spawnedLane;
        root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194090;
    }
    function markRootEntangled(root, entangledLanes) {
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        for(root = root.entanglements; rootEntangledLanes;){
            var index = 31 - clz32(rootEntangledLanes), lane = 1 << index;
            lane & entangledLanes | root[index] & entangledLanes && (root[index] |= entangledLanes);
            rootEntangledLanes &= ~lane;
        }
    }
    function getBumpedLaneForHydrationByLane(lane) {
        switch(lane){
            case 2:
                lane = 1;
                break;
            case 8:
                lane = 4;
                break;
            case 32:
                lane = 16;
                break;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                lane = 128;
                break;
            case 268435456:
                lane = 134217728;
                break;
            default:
                lane = 0;
        }
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (isDevToolsPresent) for(root = root.pendingUpdatersLaneMap; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            root[index].add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (isDevToolsPresent) for(var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap, memoizedUpdaters = root.memoizedUpdaters; 0 < lanes;){
            var index = 31 - clz32(lanes);
            root = 1 << index;
            index = pendingUpdatersLaneMap[index];
            0 < index.size && (index.forEach(function(fiber) {
                var alternate = fiber.alternate;
                null !== alternate && memoizedUpdaters.has(alternate) || memoizedUpdaters.add(fiber);
            }), index.clear());
            lanes &= ~root;
        }
    }
    function lanesToEventPriority(lanes) {
        lanes &= -lanes;
        return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes ? 0 !== (lanes & 134217727) ? DefaultEventPriority : IdleEventPriority : ContinuousEventPriority : DiscreteEventPriority;
    }
    function resolveUpdatePriority() {
        var updatePriority = ReactDOMSharedInternals.p;
        if (0 !== updatePriority) return updatePriority;
        updatePriority = window.event;
        return void 0 === updatePriority ? DefaultEventPriority : getEventPriority(updatePriority.type);
    }
    function runWithPriority(priority, fn) {
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            return ReactDOMSharedInternals.p = priority, fn();
        } finally{
            ReactDOMSharedInternals.p = previousPriority;
        }
    }
    function detachDeletedInstance(node) {
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) return targetInst;
        for(var parentNode = targetNode.parentNode; parentNode;){
            if (targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey]) {
                parentNode = targetInst.alternate;
                if (null !== targetInst.child || null !== parentNode && null !== parentNode.child) for(targetNode = getParentSuspenseInstance(targetNode); null !== targetNode;){
                    if (parentNode = targetNode[internalInstanceKey]) return parentNode;
                    targetNode = getParentSuspenseInstance(targetNode);
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    function getInstanceFromNode(node) {
        if (node = node[internalInstanceKey] || node[internalContainerInstanceKey]) {
            var tag = node.tag;
            if (5 === tag || 6 === tag || 13 === tag || 26 === tag || 27 === tag || 3 === tag) return node;
        }
        return null;
    }
    function getNodeFromInstance(inst) {
        var tag = inst.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getResourcesFromRoot(root) {
        var resources = root[internalRootNodeResourcesKey];
        resources || (resources = root[internalRootNodeResourcesKey] = {
            hoistableStyles: new Map(),
            hoistableScripts: new Map()
        });
        return resources;
    }
    function markNodeAsHoistable(node) {
        node[internalHoistableMarker] = !0;
    }
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        registrationNameDependencies[registrationName] && console.error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        "onDoubleClick" === registrationName && (possibleRegistrationNames.ondblclick = registrationName);
        for(registrationName = 0; registrationName < dependencies.length; registrationName++)allNativeEvents.add(dependencies[registrationName]);
    }
    function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || null == props.value || ("select" === tagName ? console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.") : console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."));
        props.onChange || props.readOnly || props.disabled || null == props.checked || console.error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return !0;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) return validatedAttributeNameCache[attributeName] = !0;
        illegalAttributeNameCache[attributeName] = !0;
        console.error("Invalid attribute name: `%s`", attributeName);
        return !1;
    }
    function getValueForAttributeOnCustomComponent(node, name, expected) {
        if (isAttributeNameSafe(name)) {
            if (!node.hasAttribute(name)) {
                switch(typeof expected){
                    case "symbol":
                    case "object":
                        return expected;
                    case "function":
                        return expected;
                    case "boolean":
                        if (!1 === expected) return expected;
                }
                return void 0 === expected ? void 0 : null;
            }
            node = node.getAttribute(name);
            if ("" === node && !0 === expected) return !0;
            checkAttributeStringCoercion(expected, name);
            return node === "" + expected ? expected : node;
        }
    }
    function setValueForAttribute(node, name, value) {
        if (isAttributeNameSafe(name)) {
            if (null === value) node.removeAttribute(name);
            else {
                switch(typeof value){
                    case "undefined":
                    case "function":
                    case "symbol":
                        node.removeAttribute(name);
                        return;
                    case "boolean":
                        var prefix = name.toLowerCase().slice(0, 5);
                        if ("data-" !== prefix && "aria-" !== prefix) {
                            node.removeAttribute(name);
                            return;
                        }
                }
                checkAttributeStringCoercion(value, name);
                node.setAttribute(name, "" + value);
            }
        }
    }
    function setValueForKnownAttribute(node, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttribute(name, "" + value);
        }
    }
    function setValueForNamespacedAttribute(node, namespace, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttributeNS(namespace, name, "" + value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function formatOwnerStack(error) {
        var prevPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        error = error.stack;
        Error.prepareStackTrace = prevPrepareStackTrace;
        error.startsWith("Error: react-stack-top-frame\n") && (error = error.slice(29));
        prevPrepareStackTrace = error.indexOf("\n");
        -1 !== prevPrepareStackTrace && (error = error.slice(prevPrepareStackTrace + 1));
        prevPrepareStackTrace = error.indexOf("react-stack-bottom-frame");
        -1 !== prevPrepareStackTrace && (prevPrepareStackTrace = error.lastIndexOf("\n", prevPrepareStackTrace));
        if (-1 !== prevPrepareStackTrace) error = error.slice(0, prevPrepareStackTrace);
        else return "";
        return error;
    }
    function describeFiber(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return describeBuiltInComponentFrame(fiber.type);
            case 16:
                return describeBuiltInComponentFrame("Lazy");
            case 13:
                return describeBuiltInComponentFrame("Suspense");
            case 19:
                return describeBuiltInComponentFrame("SuspenseList");
            case 0:
            case 15:
                return describeNativeComponentFrame(fiber.type, !1);
            case 11:
                return describeNativeComponentFrame(fiber.type.render, !1);
            case 1:
                return describeNativeComponentFrame(fiber.type, !0);
            case 31:
                return describeBuiltInComponentFrame("Activity");
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            do {
                info += describeFiber(workInProgress);
                var debugInfo = workInProgress._debugInfo;
                if (debugInfo) for(var i = debugInfo.length - 1; 0 <= i; i--){
                    var entry = debugInfo[i];
                    if ("string" === typeof entry.name) {
                        var JSCompiler_temp_const = info, env = entry.env;
                        var JSCompiler_inline_result = describeBuiltInComponentFrame(entry.name + (env ? " [" + env + "]" : ""));
                        info = JSCompiler_temp_const + JSCompiler_inline_result;
                    }
                }
                workInProgress = workInProgress.return;
            }while (workInProgress);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function describeFunctionComponentFrameWithoutLineNumber(fn) {
        return (fn = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(fn) : "";
    }
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (null === current) return null;
        var owner = current._debugOwner;
        return null != owner ? getComponentNameFromOwner(owner) : null;
    }
    function getCurrentFiberStackInDev() {
        if (null === current) return "";
        var workInProgress = current;
        try {
            var info = "";
            6 === workInProgress.tag && (workInProgress = workInProgress.return);
            switch(workInProgress.tag){
                case 26:
                case 27:
                case 5:
                    info += describeBuiltInComponentFrame(workInProgress.type);
                    break;
                case 13:
                    info += describeBuiltInComponentFrame("Suspense");
                    break;
                case 19:
                    info += describeBuiltInComponentFrame("SuspenseList");
                    break;
                case 31:
                    info += describeBuiltInComponentFrame("Activity");
                    break;
                case 30:
                case 0:
                case 15:
                case 1:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type));
                    break;
                case 11:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type.render));
            }
            for(; workInProgress;)if ("number" === typeof workInProgress.tag) {
                var fiber = workInProgress;
                workInProgress = fiber._debugOwner;
                var debugStack = fiber._debugStack;
                workInProgress && debugStack && ("string" !== typeof debugStack && (fiber._debugStack = debugStack = formatOwnerStack(debugStack)), "" !== debugStack && (info += "\n" + debugStack));
            } else if (null != workInProgress.debugStack) {
                var ownerStack = workInProgress.debugStack;
                (workInProgress = workInProgress.owner) && ownerStack && (info += "\n" + formatOwnerStack(ownerStack));
            } else break;
            var JSCompiler_inline_result = info;
        } catch (x) {
            JSCompiler_inline_result = "\nError generating stack: " + x.message + "\n" + x.stack;
        }
        return JSCompiler_inline_result;
    }
    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
        var previousFiber = current;
        setCurrentFiber(fiber);
        try {
            return null !== fiber && fiber._debugTask ? fiber._debugTask.run(callback.bind(null, arg0, arg1, arg2, arg3, arg4)) : callback(arg0, arg1, arg2, arg3, arg4);
        } finally{
            setCurrentFiber(previousFiber);
        }
        throw Error("runWithFiberInDEV should never be called in production. This is a bug in React.");
    }
    function setCurrentFiber(fiber) {
        ReactSharedInternals.getCurrentStack = null === fiber ? null : getCurrentFiberStackInDev;
        isRendering = !1;
        current = fiber;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "bigint":
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                return checkFormFieldValueStringCoercion(value), value;
            default:
                return "";
        }
    }
    function isCheckable(elem) {
        var type = elem.type;
        return (elem = elem.nodeName) && "input" === elem.toLowerCase() && ("checkbox" === type || "radio" === type);
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value", descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField];
        if (!node.hasOwnProperty(valueField) && "undefined" !== typeof descriptor && "function" === typeof descriptor.get && "function" === typeof descriptor.set) {
            var get = descriptor.get, set = descriptor.set;
            Object.defineProperty(node, valueField, {
                configurable: !0,
                get: function() {
                    return get.call(this);
                },
                set: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                    set.call(this, value);
                }
            });
            Object.defineProperty(node, valueField, {
                enumerable: descriptor.enumerable
            });
            return {
                getValue: function() {
                    return currentValue;
                },
                setValue: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                },
                stopTracking: function() {
                    node._valueTracker = null;
                    delete node[valueField];
                }
            };
        }
    }
    function track(node) {
        node._valueTracker || (node._valueTracker = trackValueOnNode(node));
    }
    function updateValueIfChanged(node) {
        if (!node) return !1;
        var tracker = node._valueTracker;
        if (!tracker) return !0;
        var lastValue = tracker.getValue();
        var value = "";
        node && (value = isCheckable(node) ? node.checked ? "true" : "false" : node.value);
        node = value;
        return node !== lastValue ? (tracker.setValue(node), !0) : !1;
    }
    function getActiveElement(doc) {
        doc = doc || ("undefined" !== typeof document ? document : void 0);
        if ("undefined" === typeof doc) return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
        return value.replace(escapeSelectorAttributeValueInsideDoubleQuotesRegex, function(ch) {
            return "\\" + ch.charCodeAt(0).toString(16) + " ";
        });
    }
    function validateInputProps(element, props) {
        void 0 === props.checked || void 0 === props.defaultChecked || didWarnCheckedDefaultChecked || (console.error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnCheckedDefaultChecked = !0);
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue$1 || (console.error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnValueDefaultValue$1 = !0);
    }
    function updateInput(element, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name) {
        element.name = "";
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type ? (checkAttributeStringCoercion(type, "type"), element.type = type) : element.removeAttribute("type");
        if (null != value) {
            if ("number" === type) {
                if (0 === value && "" === element.value || element.value != value) element.value = "" + getToStringValue(value);
            } else element.value !== "" + getToStringValue(value) && (element.value = "" + getToStringValue(value));
        } else "submit" !== type && "reset" !== type || element.removeAttribute("value");
        null != value ? setDefaultValue(element, type, getToStringValue(value)) : null != defaultValue ? setDefaultValue(element, type, getToStringValue(defaultValue)) : null != lastDefaultValue && element.removeAttribute("value");
        null == checked && null != defaultChecked && (element.defaultChecked = !!defaultChecked);
        null != checked && (element.checked = checked && "function" !== typeof checked && "symbol" !== typeof checked);
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name ? (checkAttributeStringCoercion(name, "name"), element.name = "" + getToStringValue(name)) : element.removeAttribute("name");
    }
    function initInput(element, value, defaultValue, checked, defaultChecked, type, name, isHydrating) {
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type && (checkAttributeStringCoercion(type, "type"), element.type = type);
        if (null != value || null != defaultValue) {
            if (!("submit" !== type && "reset" !== type || void 0 !== value && null !== value)) return;
            defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
            value = null != value ? "" + getToStringValue(value) : defaultValue;
            isHydrating || value === element.value || (element.value = value);
            element.defaultValue = value;
        }
        checked = null != checked ? checked : defaultChecked;
        checked = "function" !== typeof checked && "symbol" !== typeof checked && !!checked;
        element.checked = isHydrating ? element.checked : !!checked;
        element.defaultChecked = !!checked;
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name && (checkAttributeStringCoercion(name, "name"), element.name = name);
    }
    function setDefaultValue(node, type, value) {
        "number" === type && getActiveElement(node.ownerDocument) === node || node.defaultValue === "" + value || (node.defaultValue = "" + value);
    }
    function validateOptionProps(element, props) {
        null == props.value && ("object" === typeof props.children && null !== props.children ? React.Children.forEach(props.children, function(child) {
            null == child || "string" === typeof child || "number" === typeof child || "bigint" === typeof child || didWarnInvalidChild || (didWarnInvalidChild = !0, console.error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>."));
        }) : null == props.dangerouslySetInnerHTML || didWarnInvalidInnerHTML || (didWarnInvalidInnerHTML = !0, console.error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")));
        null == props.selected || didWarnSelectedSetOnOption || (console.error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
    }
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        return ownerName ? "\n\nCheck the render method of `" + ownerName + "`." : "";
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        node = node.options;
        if (multiple) {
            multiple = {};
            for(var i = 0; i < propValue.length; i++)multiple["$" + propValue[i]] = !0;
            for(propValue = 0; propValue < node.length; propValue++)i = multiple.hasOwnProperty("$" + node[propValue].value), node[propValue].selected !== i && (node[propValue].selected = i), i && setDefaultSelected && (node[propValue].defaultSelected = !0);
        } else {
            propValue = "" + getToStringValue(propValue);
            multiple = null;
            for(i = 0; i < node.length; i++){
                if (node[i].value === propValue) {
                    node[i].selected = !0;
                    setDefaultSelected && (node[i].defaultSelected = !0);
                    return;
                }
                null !== multiple || node[i].disabled || (multiple = node[i]);
            }
            null !== multiple && (multiple.selected = !0);
        }
    }
    function validateSelectProps(element, props) {
        for(element = 0; element < valuePropNames.length; element++){
            var propName = valuePropNames[element];
            if (null != props[propName]) {
                var propNameIsArray = isArrayImpl(props[propName]);
                props.multiple && !propNameIsArray ? console.error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum()) : !props.multiple && propNameIsArray && console.error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
            }
        }
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || (console.error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components"), didWarnValueDefaultValue = !0);
    }
    function validateTextareaProps(element, props) {
        void 0 === props.value || void 0 === props.defaultValue || didWarnValDefaultVal || (console.error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component"), didWarnValDefaultVal = !0);
        null != props.children && null == props.value && console.error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
    }
    function updateTextarea(element, value, defaultValue) {
        if (null != value && (value = "" + getToStringValue(value), value !== element.value && (element.value = value), null == defaultValue)) {
            element.defaultValue !== value && (element.defaultValue = value);
            return;
        }
        element.defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    }
    function initTextarea(element, value, defaultValue, children) {
        if (null == value) {
            if (null != children) {
                if (null != defaultValue) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArrayImpl(children)) {
                    if (1 < children.length) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            null == defaultValue && (defaultValue = "");
            value = defaultValue;
        }
        defaultValue = getToStringValue(value);
        element.defaultValue = defaultValue;
        children = element.textContent;
        children === defaultValue && "" !== children && null !== children && (element.value = children);
    }
    function findNotableNode(node, indent) {
        return void 0 === node.serverProps && 0 === node.serverTail.length && 1 === node.children.length && 3 < node.distanceFromLeaf && node.distanceFromLeaf > 15 - indent ? findNotableNode(node.children[0], indent) : node;
    }
    function indentation(indent) {
        return "  " + "  ".repeat(indent);
    }
    function added(indent) {
        return "+ " + "  ".repeat(indent);
    }
    function removed(indent) {
        return "- " + "  ".repeat(indent);
    }
    function describeFiberType(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return fiber.type;
            case 16:
                return "Lazy";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 0:
            case 15:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            case 11:
                return fiber = fiber.type.render, fiber.displayName || fiber.name || null;
            case 1:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            default:
                return null;
        }
    }
    function describeTextNode(content, maxLength) {
        return needsEscaping.test(content) ? (content = JSON.stringify(content), content.length > maxLength - 2 ? 8 > maxLength ? '{"..."}' : "{" + content.slice(0, maxLength - 7) + '..."}' : "{" + content + "}") : content.length > maxLength ? 5 > maxLength ? '{"..."}' : content.slice(0, maxLength - 3) + "..." : content;
    }
    function describeTextDiff(clientText, serverProps, indent) {
        var maxLength = 120 - 2 * indent;
        if (null === serverProps) return added(indent) + describeTextNode(clientText, maxLength) + "\n";
        if ("string" === typeof serverProps) {
            for(var firstDiff = 0; firstDiff < serverProps.length && firstDiff < clientText.length && serverProps.charCodeAt(firstDiff) === clientText.charCodeAt(firstDiff); firstDiff++);
            firstDiff > maxLength - 8 && 10 < firstDiff && (clientText = "..." + clientText.slice(firstDiff - 8), serverProps = "..." + serverProps.slice(firstDiff - 8));
            return added(indent) + describeTextNode(clientText, maxLength) + "\n" + removed(indent) + describeTextNode(serverProps, maxLength) + "\n";
        }
        return indentation(indent) + describeTextNode(clientText, maxLength) + "\n";
    }
    function objectName(object) {
        return Object.prototype.toString.call(object).replace(/^\[object (.*)\]$/, function(m, p0) {
            return p0;
        });
    }
    function describeValue(value, maxLength) {
        switch(typeof value){
            case "string":
                return value = JSON.stringify(value), value.length > maxLength ? 5 > maxLength ? '"..."' : value.slice(0, maxLength - 4) + '..."' : value;
            case "object":
                if (null === value) return "null";
                if (isArrayImpl(value)) return "[...]";
                if (value.$$typeof === REACT_ELEMENT_TYPE) return (maxLength = getComponentNameFromType(value.type)) ? "<" + maxLength + ">" : "<...>";
                var name = objectName(value);
                if ("Object" === name) {
                    name = "";
                    maxLength -= 2;
                    for(var propName in value)if (value.hasOwnProperty(propName)) {
                        var jsonPropName = JSON.stringify(propName);
                        jsonPropName !== '"' + propName + '"' && (propName = jsonPropName);
                        maxLength -= propName.length - 2;
                        jsonPropName = describeValue(value[propName], 15 > maxLength ? maxLength : 15);
                        maxLength -= jsonPropName.length;
                        if (0 > maxLength) {
                            name += "" === name ? "..." : ", ...";
                            break;
                        }
                        name += ("" === name ? "" : ",") + propName + ":" + jsonPropName;
                    }
                    return "{" + name + "}";
                }
                return name;
            case "function":
                return (maxLength = value.displayName || value.name) ? "function " + maxLength : "function";
            default:
                return String(value);
        }
    }
    function describePropValue(value, maxLength) {
        return "string" !== typeof value || needsEscaping.test(value) ? "{" + describeValue(value, maxLength - 2) + "}" : value.length > maxLength - 2 ? 5 > maxLength ? '"..."' : '"' + value.slice(0, maxLength - 5) + '..."' : '"' + value + '"';
    }
    function describeExpandedElement(type, props, rowPrefix) {
        var remainingRowLength = 120 - rowPrefix.length - type.length, properties = [], propName;
        for(propName in props)if (props.hasOwnProperty(propName) && "children" !== propName) {
            var propValue = describePropValue(props[propName], 120 - rowPrefix.length - propName.length - 1);
            remainingRowLength -= propName.length + propValue.length + 2;
            properties.push(propName + "=" + propValue);
        }
        return 0 === properties.length ? rowPrefix + "<" + type + ">\n" : 0 < remainingRowLength ? rowPrefix + "<" + type + " " + properties.join(" ") + ">\n" : rowPrefix + "<" + type + "\n" + rowPrefix + "  " + properties.join("\n" + rowPrefix + "  ") + "\n" + rowPrefix + ">\n";
    }
    function describePropertiesDiff(clientObject, serverObject, indent) {
        var properties = "", remainingServerProperties = assign({}, serverObject), propName;
        for(propName in clientObject)if (clientObject.hasOwnProperty(propName)) {
            delete remainingServerProperties[propName];
            var maxLength = 120 - 2 * indent - propName.length - 2, clientPropValue = describeValue(clientObject[propName], maxLength);
            serverObject.hasOwnProperty(propName) ? (maxLength = describeValue(serverObject[propName], maxLength), properties += added(indent) + propName + ": " + clientPropValue + "\n", properties += removed(indent) + propName + ": " + maxLength + "\n") : properties += added(indent) + propName + ": " + clientPropValue + "\n";
        }
        for(var _propName in remainingServerProperties)remainingServerProperties.hasOwnProperty(_propName) && (clientObject = describeValue(remainingServerProperties[_propName], 120 - 2 * indent - _propName.length - 2), properties += removed(indent) + _propName + ": " + clientObject + "\n");
        return properties;
    }
    function describeElementDiff(type, clientProps, serverProps, indent) {
        var content = "", serverPropNames = new Map();
        for(propName$jscomp$0 in serverProps)serverProps.hasOwnProperty(propName$jscomp$0) && serverPropNames.set(propName$jscomp$0.toLowerCase(), propName$jscomp$0);
        if (1 === serverPropNames.size && serverPropNames.has("children")) content += describeExpandedElement(type, clientProps, indentation(indent));
        else {
            for(var _propName2 in clientProps)if (clientProps.hasOwnProperty(_propName2) && "children" !== _propName2) {
                var maxLength$jscomp$0 = 120 - 2 * (indent + 1) - _propName2.length - 1, serverPropName = serverPropNames.get(_propName2.toLowerCase());
                if (void 0 !== serverPropName) {
                    serverPropNames.delete(_propName2.toLowerCase());
                    var propName$jscomp$0 = clientProps[_propName2];
                    serverPropName = serverProps[serverPropName];
                    var clientPropValue = describePropValue(propName$jscomp$0, maxLength$jscomp$0);
                    maxLength$jscomp$0 = describePropValue(serverPropName, maxLength$jscomp$0);
                    "object" === typeof propName$jscomp$0 && null !== propName$jscomp$0 && "object" === typeof serverPropName && null !== serverPropName && "Object" === objectName(propName$jscomp$0) && "Object" === objectName(serverPropName) && (2 < Object.keys(propName$jscomp$0).length || 2 < Object.keys(serverPropName).length || -1 < clientPropValue.indexOf("...") || -1 < maxLength$jscomp$0.indexOf("...")) ? content += indentation(indent + 1) + _propName2 + "={{\n" + describePropertiesDiff(propName$jscomp$0, serverPropName, indent + 2) + indentation(indent + 1) + "}}\n" : (content += added(indent + 1) + _propName2 + "=" + clientPropValue + "\n", content += removed(indent + 1) + _propName2 + "=" + maxLength$jscomp$0 + "\n");
                } else content += indentation(indent + 1) + _propName2 + "=" + describePropValue(clientProps[_propName2], maxLength$jscomp$0) + "\n";
            }
            serverPropNames.forEach(function(propName) {
                if ("children" !== propName) {
                    var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;
                    content += removed(indent + 1) + propName + "=" + describePropValue(serverProps[propName], maxLength) + "\n";
                }
            });
            content = "" === content ? indentation(indent) + "<" + type + ">\n" : indentation(indent) + "<" + type + "\n" + content + indentation(indent) + ">\n";
        }
        type = serverProps.children;
        clientProps = clientProps.children;
        if ("string" === typeof type || "number" === typeof type || "bigint" === typeof type) {
            serverPropNames = "";
            if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) serverPropNames = "" + clientProps;
            content += describeTextDiff(serverPropNames, "" + type, indent + 1);
        } else if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) content = null == type ? content + describeTextDiff("" + clientProps, null, indent + 1) : content + describeTextDiff("" + clientProps, void 0, indent + 1);
        return content;
    }
    function describeSiblingFiber(fiber, indent) {
        var type = describeFiberType(fiber);
        if (null === type) {
            type = "";
            for(fiber = fiber.child; fiber;)type += describeSiblingFiber(fiber, indent), fiber = fiber.sibling;
            return type;
        }
        return indentation(indent) + "<" + type + ">\n";
    }
    function describeNode(node, indent) {
        var skipToNode = findNotableNode(node, indent);
        if (skipToNode !== node && (1 !== node.children.length || node.children[0] !== skipToNode)) return indentation(indent) + "...\n" + describeNode(skipToNode, indent + 1);
        skipToNode = "";
        var debugInfo = node.fiber._debugInfo;
        if (debugInfo) for(var i = 0; i < debugInfo.length; i++){
            var serverComponentName = debugInfo[i].name;
            "string" === typeof serverComponentName && (skipToNode += indentation(indent) + "<" + serverComponentName + ">\n", indent++);
        }
        debugInfo = "";
        i = node.fiber.pendingProps;
        if (6 === node.fiber.tag) debugInfo = describeTextDiff(i, node.serverProps, indent), indent++;
        else if (serverComponentName = describeFiberType(node.fiber), null !== serverComponentName) {
            if (void 0 === node.serverProps) {
                debugInfo = indent;
                var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2, content = "";
                for(propName in i)if (i.hasOwnProperty(propName) && "children" !== propName) {
                    var propValue = describePropValue(i[propName], 15);
                    maxLength -= propName.length + propValue.length + 2;
                    if (0 > maxLength) {
                        content += " ...";
                        break;
                    }
                    content += " " + propName + "=" + propValue;
                }
                debugInfo = indentation(debugInfo) + "<" + serverComponentName + content + ">\n";
                indent++;
            } else null === node.serverProps ? (debugInfo = describeExpandedElement(serverComponentName, i, added(indent)), indent++) : "string" === typeof node.serverProps ? console.error("Should not have matched a non HostText fiber to a Text node. This is a bug in React.") : (debugInfo = describeElementDiff(serverComponentName, i, node.serverProps, indent), indent++);
        }
        var propName = "";
        i = node.fiber.child;
        for(serverComponentName = 0; i && serverComponentName < node.children.length;)maxLength = node.children[serverComponentName], maxLength.fiber === i ? (propName += describeNode(maxLength, indent), serverComponentName++) : propName += describeSiblingFiber(i, indent), i = i.sibling;
        i && 0 < node.children.length && (propName += indentation(indent) + "...\n");
        i = node.serverTail;
        null === node.serverProps && indent--;
        for(node = 0; node < i.length; node++)serverComponentName = i[node], propName = "string" === typeof serverComponentName ? propName + (removed(indent) + describeTextNode(serverComponentName, 120 - 2 * indent) + "\n") : propName + describeExpandedElement(serverComponentName.type, serverComponentName.props, removed(indent));
        return skipToNode + debugInfo + propName;
    }
    function describeDiff(rootNode) {
        try {
            return "\n\n" + describeNode(rootNode, 0);
        } catch (x) {
            return "";
        }
    }
    function describeAncestors(ancestor, child, props) {
        for(var fiber = child, node = null, distanceFromLeaf = 0; fiber;)fiber === ancestor && (distanceFromLeaf = 0), node = {
            fiber: fiber,
            children: null !== node ? [
                node
            ] : [],
            serverProps: fiber === child ? props : fiber === ancestor ? null : void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        }, distanceFromLeaf++, fiber = fiber.return;
        return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
    }
    function updatedAncestorInfoDev(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev), info = {
            tag: tag
        };
        -1 !== inScopeTags.indexOf(tag) && (ancestorInfo.aTagInScope = null, ancestorInfo.buttonTagInScope = null, ancestorInfo.nobrTagInScope = null);
        -1 !== buttonScopeTags.indexOf(tag) && (ancestorInfo.pTagInButtonScope = null);
        -1 !== specialTags.indexOf(tag) && "address" !== tag && "div" !== tag && "p" !== tag && (ancestorInfo.listItemTagAutoclosing = null, ancestorInfo.dlItemTagAutoclosing = null);
        ancestorInfo.current = info;
        "form" === tag && (ancestorInfo.formTag = info);
        "a" === tag && (ancestorInfo.aTagInScope = info);
        "button" === tag && (ancestorInfo.buttonTagInScope = info);
        "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
        "p" === tag && (ancestorInfo.pTagInButtonScope = info);
        "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
        if ("dd" === tag || "dt" === tag) ancestorInfo.dlItemTagAutoclosing = info;
        "#document" === tag || "html" === tag ? ancestorInfo.containerTagInScope = null : ancestorInfo.containerTagInScope || (ancestorInfo.containerTagInScope = info);
        null !== oldInfo || "#document" !== tag && "html" !== tag && "body" !== tag ? !0 === ancestorInfo.implicitRootScope && (ancestorInfo.implicitRootScope = !1) : ancestorInfo.implicitRootScope = !0;
        return ancestorInfo;
    }
    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
        switch(parentTag){
            case "select":
                return "hr" === tag || "option" === tag || "optgroup" === tag || "script" === tag || "template" === tag || "#text" === tag;
            case "optgroup":
                return "option" === tag || "#text" === tag;
            case "option":
                return "#text" === tag;
            case "tr":
                return "th" === tag || "td" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "tbody":
            case "thead":
            case "tfoot":
                return "tr" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "colgroup":
                return "col" === tag || "template" === tag;
            case "table":
                return "caption" === tag || "colgroup" === tag || "tbody" === tag || "tfoot" === tag || "thead" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "head":
                return "base" === tag || "basefont" === tag || "bgsound" === tag || "link" === tag || "meta" === tag || "title" === tag || "noscript" === tag || "noframes" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "html":
                if (implicitRootScope) break;
                return "head" === tag || "body" === tag || "frameset" === tag;
            case "frameset":
                return "frame" === tag;
            case "#document":
                if (!implicitRootScope) return "html" === tag;
        }
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return "h1" !== parentTag && "h2" !== parentTag && "h3" !== parentTag && "h4" !== parentTag && "h5" !== parentTag && "h6" !== parentTag;
            case "rp":
            case "rt":
                return -1 === impliedEndTags.indexOf(parentTag);
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                return null == parentTag;
            case "head":
                return implicitRootScope || null === parentTag;
            case "html":
                return implicitRootScope && "#document" === parentTag || null === parentTag;
            case "body":
                return implicitRootScope && ("#document" === parentTag || "html" === parentTag) || null === parentTag;
        }
        return !0;
    }
    function findInvalidAncestorForTag(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    }
    function findAncestor(parent, tagName) {
        for(; parent;){
            switch(parent.tag){
                case 5:
                case 26:
                case 27:
                    if (parent.type === tagName) return parent;
            }
            parent = parent.return;
        }
        return null;
    }
    function validateDOMNesting(childTag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
        var parentInfo = ancestorInfo.current;
        ancestorInfo = (parentInfo = isTagValidWithParent(childTag, parentInfo && parentInfo.tag, ancestorInfo.implicitRootScope) ? null : parentInfo) ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        ancestorInfo = parentInfo || ancestorInfo;
        if (!ancestorInfo) return !0;
        var ancestorTag = ancestorInfo.tag;
        ancestorInfo = String(!!parentInfo) + "|" + childTag + "|" + ancestorTag;
        if (didWarn[ancestorInfo]) return !1;
        didWarn[ancestorInfo] = !0;
        var ancestor = (ancestorInfo = current) ? findAncestor(ancestorInfo.return, ancestorTag) : null, ancestorDescription = null !== ancestorInfo && null !== ancestor ? describeAncestors(ancestor, ancestorInfo, null) : "", tagDisplayName = "<" + childTag + ">";
        parentInfo ? (parentInfo = "", "table" === ancestorTag && "tr" === childTag && (parentInfo += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), console.error("In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, parentInfo, ancestorDescription)) : console.error("In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, ancestorDescription);
        ancestorInfo && (childTag = ancestorInfo.return, null === ancestor || null === childTag || ancestor === childTag && childTag._debugOwner === ancestorInfo._debugOwner || runWithFiberInDEV(ancestor, function() {
            console.error("<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace.", ancestorTag, tagDisplayName);
        }));
        return !1;
    }
    function validateTextNesting(childText, parentTag, implicitRootScope) {
        if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1)) return !0;
        implicitRootScope = "#text|" + parentTag;
        if (didWarn[implicitRootScope]) return !1;
        didWarn[implicitRootScope] = !0;
        var ancestor = (implicitRootScope = current) ? findAncestor(implicitRootScope, parentTag) : null;
        implicitRootScope = null !== implicitRootScope && null !== ancestor ? describeAncestors(ancestor, implicitRootScope, 6 !== implicitRootScope.tag ? {
            children: null
        } : null) : "";
        /\S/.test(childText) ? console.error("In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s", parentTag, implicitRootScope) : console.error("In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s", parentTag, implicitRootScope);
        return !1;
    }
    function setTextContent(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && 3 === firstChild.nodeType) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    }
    function camelize(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    }
    function setValueForStyle(style, styleName, value) {
        var isCustomProperty = 0 === styleName.indexOf("--");
        isCustomProperty || (-1 < styleName.indexOf("-") ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported style property %s. Did you mean %s?", styleName, camelize(styleName.replace(msPattern, "ms-")))) : badVendoredStyleNamePattern.test(styleName) ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported vendor-prefixed style property %s. Did you mean %s?", styleName, styleName.charAt(0).toUpperCase() + styleName.slice(1))) : !badStyleValueWithSemicolonPattern.test(value) || warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, console.error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', styleName, value.replace(badStyleValueWithSemicolonPattern, ""))), "number" === typeof value && (isNaN(value) ? warnedForNaNValue || (warnedForNaNValue = !0, console.error("`NaN` is an invalid value for the `%s` css style property.", styleName)) : isFinite(value) || warnedForInfinityValue || (warnedForInfinityValue = !0, console.error("`Infinity` is an invalid value for the `%s` css style property.", styleName))));
        null == value || "boolean" === typeof value || "" === value ? isCustomProperty ? style.setProperty(styleName, "") : "float" === styleName ? style.cssFloat = "" : style[styleName] = "" : isCustomProperty ? style.setProperty(styleName, value) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? "float" === styleName ? style.cssFloat = value : (checkCSSPropertyStringCoercion(value, styleName), style[styleName] = ("" + value).trim()) : style[styleName] = value + "px";
    }
    function setValueForStyles(node, styles, prevStyles) {
        if (null != styles && "object" !== typeof styles) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        styles && Object.freeze(styles);
        node = node.style;
        if (null != prevStyles) {
            if (styles) {
                var expandedUpdates = {};
                if (prevStyles) {
                    for(var key in prevStyles)if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key)) for(var longhands = shorthandToLonghand[key] || [
                        key
                    ], i = 0; i < longhands.length; i++)expandedUpdates[longhands[i]] = key;
                }
                for(var _key in styles)if (styles.hasOwnProperty(_key) && (!prevStyles || prevStyles[_key] !== styles[_key])) for(key = shorthandToLonghand[_key] || [
                    _key
                ], longhands = 0; longhands < key.length; longhands++)expandedUpdates[key[longhands]] = _key;
                _key = {};
                for(var key$jscomp$0 in styles)for(key = shorthandToLonghand[key$jscomp$0] || [
                    key$jscomp$0
                ], longhands = 0; longhands < key.length; longhands++)_key[key[longhands]] = key$jscomp$0;
                key$jscomp$0 = {};
                for(var _key2 in expandedUpdates)if (key = expandedUpdates[_key2], (longhands = _key[_key2]) && key !== longhands && (i = key + "," + longhands, !key$jscomp$0[i])) {
                    key$jscomp$0[i] = !0;
                    i = console;
                    var value = styles[key];
                    i.error.call(i, "%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", null == value || "boolean" === typeof value || "" === value ? "Removing" : "Updating", key, longhands);
                }
            }
            for(var styleName in prevStyles)!prevStyles.hasOwnProperty(styleName) || null != styles && styles.hasOwnProperty(styleName) || (0 === styleName.indexOf("--") ? node.setProperty(styleName, "") : "float" === styleName ? node.cssFloat = "" : node[styleName] = "");
            for(var _styleName in styles)_key2 = styles[_styleName], styles.hasOwnProperty(_styleName) && prevStyles[_styleName] !== _key2 && setValueForStyle(node, _styleName, _key2);
        } else for(expandedUpdates in styles)styles.hasOwnProperty(expandedUpdates) && setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);
    }
    function isCustomElement(tagName) {
        if (-1 === tagName.indexOf("-")) return !1;
        switch(tagName){
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0;
        }
    }
    function getAttributeAlias(name) {
        return aliases.get(name) || name;
    }
    function validateProperty$1(tagName, name) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return !0;
        if (rARIACamel$1.test(name)) {
            tagName = "aria-" + name.slice(4).toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return console.error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties$1[name] = !0;
            if (name !== tagName) return console.error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0;
        }
        if (rARIA$1.test(name)) {
            tagName = name.toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return warnedProperties$1[name] = !0, !1;
            name !== tagName && (console.error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0);
        }
        return !0;
    }
    function validateProperties$2(type, props) {
        var invalidProps = [], key;
        for(key in props)validateProperty$1(type, key) || invalidProps.push(key);
        props = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === invalidProps.length ? console.error("Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type) : 1 < invalidProps.length && console.error("Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type);
    }
    function validateProperty(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return !0;
        var lowerCasedName = name.toLowerCase();
        if ("onfocusin" === lowerCasedName || "onfocusout" === lowerCasedName) return console.error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties[name] = !0;
        if ("function" === typeof value && ("form" === tagName && "action" === name || "input" === tagName && "formAction" === name || "button" === tagName && "formAction" === name)) return !0;
        if (null != eventRegistry) {
            tagName = eventRegistry.possibleRegistrationNames;
            if (eventRegistry.registrationNameDependencies.hasOwnProperty(name)) return !0;
            eventRegistry = tagName.hasOwnProperty(lowerCasedName) ? tagName[lowerCasedName] : null;
            if (null != eventRegistry) return console.error("Invalid event handler property `%s`. Did you mean `%s`?", name, eventRegistry), warnedProperties[name] = !0;
            if (EVENT_NAME_REGEX.test(name)) return console.error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties[name] = !0;
        } else if (EVENT_NAME_REGEX.test(name)) return INVALID_EVENT_NAME_REGEX.test(name) && console.error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties[name] = !0;
        if (rARIA.test(name) || rARIACamel.test(name)) return !0;
        if ("innerhtml" === lowerCasedName) return console.error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties[name] = !0;
        if ("aria" === lowerCasedName) return console.error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties[name] = !0;
        if ("is" === lowerCasedName && null !== value && void 0 !== value && "string" !== typeof value) return console.error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties[name] = !0;
        if ("number" === typeof value && isNaN(value)) return console.error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties[name] = !0;
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            if (lowerCasedName = possibleStandardNames[lowerCasedName], lowerCasedName !== name) return console.error("Invalid DOM property `%s`. Did you mean `%s`?", name, lowerCasedName), warnedProperties[name] = !0;
        } else if (name !== lowerCasedName) return console.error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties[name] = !0;
        switch(name){
            case "dangerouslySetInnerHTML":
            case "children":
            case "style":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                return !0;
            case "innerText":
            case "textContent":
                return !0;
        }
        switch(typeof value){
            case "boolean":
                switch(name){
                    case "autoFocus":
                    case "checked":
                    case "multiple":
                    case "muted":
                    case "selected":
                    case "contentEditable":
                    case "spellCheck":
                    case "draggable":
                    case "value":
                    case "autoReverse":
                    case "externalResourcesRequired":
                    case "focusable":
                    case "preserveAlpha":
                    case "allowFullScreen":
                    case "async":
                    case "autoPlay":
                    case "controls":
                    case "default":
                    case "defer":
                    case "disabled":
                    case "disablePictureInPicture":
                    case "disableRemotePlayback":
                    case "formNoValidate":
                    case "hidden":
                    case "loop":
                    case "noModule":
                    case "noValidate":
                    case "open":
                    case "playsInline":
                    case "readOnly":
                    case "required":
                    case "reversed":
                    case "scoped":
                    case "seamless":
                    case "itemScope":
                    case "capture":
                    case "download":
                    case "inert":
                        return !0;
                    default:
                        lowerCasedName = name.toLowerCase().slice(0, 5);
                        if ("data-" === lowerCasedName || "aria-" === lowerCasedName) return !0;
                        value ? console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                        return warnedProperties[name] = !0;
                }
            case "function":
            case "symbol":
                return warnedProperties[name] = !0, !1;
            case "string":
                if ("false" === value || "true" === value) {
                    switch(name){
                        case "checked":
                        case "selected":
                        case "multiple":
                        case "muted":
                        case "allowFullScreen":
                        case "async":
                        case "autoPlay":
                        case "controls":
                        case "default":
                        case "defer":
                        case "disabled":
                        case "disablePictureInPicture":
                        case "disableRemotePlayback":
                        case "formNoValidate":
                        case "hidden":
                        case "loop":
                        case "noModule":
                        case "noValidate":
                        case "open":
                        case "playsInline":
                        case "readOnly":
                        case "required":
                        case "reversed":
                        case "scoped":
                        case "seamless":
                        case "itemScope":
                        case "inert":
                            break;
                        default:
                            return !0;
                    }
                    console.error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, "false" === value ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                    warnedProperties[name] = !0;
                }
        }
        return !0;
    }
    function warnUnknownProperties(type, props, eventRegistry) {
        var unknownProps = [], key;
        for(key in props)validateProperty(type, key, props[key], eventRegistry) || unknownProps.push(key);
        props = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === unknownProps.length ? console.error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type) : 1 < unknownProps.length && console.error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type);
    }
    function sanitizeURL(url) {
        return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    function getEventTarget(nativeEvent) {
        nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
        nativeEvent.correspondingUseElement && (nativeEvent = nativeEvent.correspondingUseElement);
        return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
    }
    function restoreStateOfTarget(target) {
        var internalInstance = getInstanceFromNode(target);
        if (internalInstance && (target = internalInstance.stateNode)) {
            var props = target[internalPropsKey] || null;
            a: switch(target = internalInstance.stateNode, internalInstance.type){
                case "input":
                    updateInput(target, props.value, props.defaultValue, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name);
                    internalInstance = props.name;
                    if ("radio" === props.type && null != internalInstance) {
                        for(props = target; props.parentNode;)props = props.parentNode;
                        checkAttributeStringCoercion(internalInstance, "name");
                        props = props.querySelectorAll('input[name="' + escapeSelectorAttributeValueInsideDoubleQuotes("" + internalInstance) + '"][type="radio"]');
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++){
                            var otherNode = props[internalInstance];
                            if (otherNode !== target && otherNode.form === target.form) {
                                var otherProps = otherNode[internalPropsKey] || null;
                                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                                updateInput(otherNode, otherProps.value, otherProps.defaultValue, otherProps.defaultValue, otherProps.checked, otherProps.defaultChecked, otherProps.type, otherProps.name);
                            }
                        }
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++)otherNode = props[internalInstance], otherNode.form === target.form && updateValueIfChanged(otherNode);
                    }
                    break a;
                case "textarea":
                    updateTextarea(target, props.value, props.defaultValue);
                    break a;
                case "select":
                    internalInstance = props.value, null != internalInstance && updateOptions(target, !!props.multiple, internalInstance, !1);
            }
        }
    }
    function batchedUpdates$1(fn, a, b) {
        if (isInsideEventHandler) return fn(a, b);
        isInsideEventHandler = !0;
        try {
            var JSCompiler_inline_result = fn(a);
            return JSCompiler_inline_result;
        } finally{
            if (isInsideEventHandler = !1, null !== restoreTarget || null !== restoreQueue) {
                if (flushSyncWork$1(), restoreTarget && (a = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(a), fn)) for(a = 0; a < fn.length; a++)restoreStateOfTarget(fn[a]);
            }
        }
    }
    function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (null === stateNode) return null;
        var props = stateNode[internalPropsKey] || null;
        if (null === props) return null;
        stateNode = props[registrationName];
        a: switch(registrationName){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;
            default:
                inst = !1;
        }
        if (inst) return null;
        if (stateNode && "function" !== typeof stateNode) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof stateNode + "` type.");
        return stateNode;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start, startValue = startText, startLength = startValue.length, end, endValue = "value" in root ? root.value : root.textContent, endLength = endValue.length;
        for(start = 0; start < startLength && startValue[start] === endValue[start]; start++);
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++);
        return fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0);
    }
    function getEventCharCode(nativeEvent) {
        var keyCode = nativeEvent.keyCode;
        "charCode" in nativeEvent ? (nativeEvent = nativeEvent.charCode, 0 === nativeEvent && 13 === keyCode && (nativeEvent = 13)) : nativeEvent = keyCode;
        10 === nativeEvent && (nativeEvent = 13);
        return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
    }
    function functionThatReturnsTrue() {
        return !0;
    }
    function functionThatReturnsFalse() {
        return !1;
    }
    function createSyntheticEvent(Interface) {
        function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var propName in Interface)Interface.hasOwnProperty(propName) && (reactName = Interface[propName], this[propName] = reactName ? reactName(nativeEvent) : nativeEvent[propName]);
            this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = !0;
                var event = this.nativeEvent;
                event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = functionThatReturnsTrue);
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = functionThatReturnsTrue);
            },
            persist: function() {},
            isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    function modifierStateGetter(keyArg) {
        var nativeEvent = this.nativeEvent;
        return nativeEvent.getModifierState ? nativeEvent.getModifierState(keyArg) : (keyArg = modifierKeyToProp[keyArg]) ? !!nativeEvent[keyArg] : !1;
    }
    function getEventModifierState() {
        return modifierStateGetter;
    }
    function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
            case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1;
        }
    }
    function getDataFromCustomEvent(nativeEvent) {
        nativeEvent = nativeEvent.detail;
        return "object" === typeof nativeEvent && "data" in nativeEvent ? nativeEvent.data : null;
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                if (nativeEvent.which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = !0;
                return SPACEBAR_CHAR;
            case "textInput":
                return domEventName = nativeEvent.data, domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName;
            default:
                return null;
        }
    }
    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        if (isComposing) return "compositionend" === domEventName || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent) ? (domEventName = getData(), fallbackText = startText = root = null, isComposing = !1, domEventName) : null;
        switch(domEventName){
            case "paste":
                return null;
            case "keypress":
                if (!(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) || nativeEvent.ctrlKey && nativeEvent.altKey) {
                    if (nativeEvent.char && 1 < nativeEvent.char.length) return nativeEvent.char;
                    if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && "ko" !== nativeEvent.locale ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return "input" === nodeName ? !!supportedInputTypes[elem.type] : "textarea" === nodeName ? !0 : !1;
    }
    function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return !1;
        eventNameSuffix = "on" + eventNameSuffix;
        var isSupported = eventNameSuffix in document;
        isSupported || (isSupported = document.createElement("div"), isSupported.setAttribute(eventNameSuffix, "return;"), isSupported = "function" === typeof isSupported[eventNameSuffix]);
        return isSupported;
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [
            target
        ] : restoreTarget = target;
        inst = accumulateTwoPhaseListeners(inst, "onChange");
        0 < inst.length && (nativeEvent = new SyntheticEvent("onChange", "change", null, nativeEvent, target), dispatchQueue.push({
            event: nativeEvent,
            listeners: inst
        }));
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if ("change" === domEventName) return targetInst;
    }
    function stopWatchingForValueChange() {
        activeElement$1 && (activeElement$1.detachEvent("onpropertychange", handlePropertyChange), activeElementInst$1 = activeElement$1 = null);
    }
    function handlePropertyChange(nativeEvent) {
        if ("value" === nativeEvent.propertyName && getInstIfValueChanged(activeElementInst$1)) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst$1, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates$1(runEventInBatch, dispatchQueue);
        }
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        "focusin" === domEventName ? (stopWatchingForValueChange(), activeElement$1 = target, activeElementInst$1 = targetInst, activeElement$1.attachEvent("onpropertychange", handlePropertyChange)) : "focusout" === domEventName && stopWatchingForValueChange();
    }
    function getTargetInstForInputEventPolyfill(domEventName) {
        if ("selectionchange" === domEventName || "keyup" === domEventName || "keydown" === domEventName) return getInstIfValueChanged(activeElementInst$1);
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if ("click" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if ("input" === domEventName || "change" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return !0;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return !1;
        var keysA = Object.keys(objA), keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return !1;
        for(keysB = 0; keysB < keysA.length; keysB++){
            var currentKey = keysA[keysB];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return !1;
        }
        return !0;
    }
    function getLeafNode(node) {
        for(; node && node.firstChild;)node = node.firstChild;
        return node;
    }
    function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        root = 0;
        for(var nodeEnd; node;){
            if (3 === node.nodeType) {
                nodeEnd = root + node.textContent.length;
                if (root <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - root
                };
                root = nodeEnd;
            }
            a: {
                for(; node;){
                    if (node.nextSibling) {
                        node = node.nextSibling;
                        break a;
                    }
                    node = node.parentNode;
                }
                node = void 0;
            }
            node = getLeafNode(node);
        }
    }
    function containsNode(outerNode, innerNode) {
        return outerNode && innerNode ? outerNode === innerNode ? !0 : outerNode && 3 === outerNode.nodeType ? !1 : innerNode && 3 === innerNode.nodeType ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : outerNode.compareDocumentPosition ? !!(outerNode.compareDocumentPosition(innerNode) & 16) : !1 : !1;
    }
    function getActiveElementDeep(containerInfo) {
        containerInfo = null != containerInfo && null != containerInfo.ownerDocument && null != containerInfo.ownerDocument.defaultView ? containerInfo.ownerDocument.defaultView : window;
        for(var element = getActiveElement(containerInfo.document); element instanceof containerInfo.HTMLIFrameElement;){
            try {
                var JSCompiler_inline_result = "string" === typeof element.contentWindow.location.href;
            } catch (err) {
                JSCompiler_inline_result = !1;
            }
            if (JSCompiler_inline_result) containerInfo = element.contentWindow;
            else break;
            element = getActiveElement(containerInfo.document);
        }
        return element;
    }
    function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && ("input" === nodeName && ("text" === elem.type || "search" === elem.type || "tel" === elem.type || "url" === elem.type || "password" === elem.type) || "textarea" === nodeName || "true" === elem.contentEditable);
    }
    function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : 9 === nativeEventTarget.nodeType ? nativeEventTarget : nativeEventTarget.ownerDocument;
        mouseDown || null == activeElement || activeElement !== getActiveElement(doc) || (doc = activeElement, "selectionStart" in doc && hasSelectionCapabilities(doc) ? doc = {
            start: doc.selectionStart,
            end: doc.selectionEnd
        } : (doc = (doc.ownerDocument && doc.ownerDocument.defaultView || window).getSelection(), doc = {
            anchorNode: doc.anchorNode,
            anchorOffset: doc.anchorOffset,
            focusNode: doc.focusNode,
            focusOffset: doc.focusOffset
        }), lastSelection && shallowEqual(lastSelection, doc) || (lastSelection = doc, doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect"), 0 < doc.length && (nativeEvent = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
            event: nativeEvent,
            listeners: doc
        }), nativeEvent.target = activeElement)));
    }
    function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName], styleProp;
        for(styleProp in prefixMap)if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        return eventName;
    }
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function createCapturedValueAtFiber(value, source) {
        if ("object" === typeof value && null !== value) {
            var existing = CapturedStacks.get(value);
            if (void 0 !== existing) return existing;
            source = {
                value: value,
                source: source,
                stack: getStackByFiberInDevAndProd(source)
            };
            CapturedStacks.set(value, source);
            return source;
        }
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    function finishQueueingConcurrentUpdates() {
        for(var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;){
            var fiber = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var queue = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var update = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var lane = concurrentQueues[i];
            concurrentQueues[i++] = null;
            if (null !== queue && null !== update) {
                var pending = queue.pending;
                null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
                queue.pending = update;
            }
            0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
        }
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
        concurrentQueues[concurrentQueuesIndex++] = fiber;
        concurrentQueues[concurrentQueuesIndex++] = queue;
        concurrentQueues[concurrentQueuesIndex++] = update;
        concurrentQueues[concurrentQueuesIndex++] = lane;
        concurrentlyUpdatedLanes |= lane;
        fiber.lanes |= lane;
        fiber = fiber.alternate;
        null !== fiber && (fiber.lanes |= lane);
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        enqueueUpdate$1(fiber, queue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        enqueueUpdate$1(fiber, null, null, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
        sourceFiber.lanes |= lane;
        var alternate = sourceFiber.alternate;
        null !== alternate && (alternate.lanes |= lane);
        for(var isHidden = !1, parent = sourceFiber.return; null !== parent;)parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & OffscreenVisible || (isHidden = !0)), sourceFiber = parent, parent = parent.return;
        return 3 === sourceFiber.tag ? (parent = sourceFiber.stateNode, isHidden && null !== update && (isHidden = 31 - clz32(lane), sourceFiber = parent.hiddenUpdates, alternate = sourceFiber[isHidden], null === alternate ? sourceFiber[isHidden] = [
            update
        ] : alternate.push(update), update.lane = lane | 536870912), parent) : null;
    }
    function getRootForUpdatedFiber(sourceFiber) {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) throw nestedPassiveUpdateCount = nestedUpdateCount = 0, rootWithPassiveNestedUpdates = rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT && (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, console.error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
        null === sourceFiber.alternate && 0 !== (sourceFiber.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        for(var node = sourceFiber, parent = node.return; null !== parent;)null === node.alternate && 0 !== (node.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber), node = parent, parent = node.return;
        return 3 === node.tag ? node.stateNode : null;
    }
    function resolveFunctionForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? type : family.current;
    }
    function resolveForwardRefForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? null !== type && void 0 !== type && "function" === typeof type.render && (family = resolveFunctionForHotReloading(type.render), type.render !== family) ? (family = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: family
        }, void 0 !== type.displayName && (family.displayName = type.displayName), family) : type : family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (null === resolveFamily) return !1;
        var prevType = fiber.elementType;
        element = element.type;
        var needsCompareFamilies = !1, $$typeofNextType = "object" === typeof element && null !== element ? element.$$typeof : null;
        switch(fiber.tag){
            case 1:
                "function" === typeof element && (needsCompareFamilies = !0);
                break;
            case 0:
                "function" === typeof element ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 11:
                $$typeofNextType === REACT_FORWARD_REF_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 14:
            case 15:
                $$typeofNextType === REACT_MEMO_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            default:
                return !1;
        }
        return needsCompareFamilies && (fiber = resolveFamily(prevType), void 0 !== fiber && fiber === resolveFamily(element)) ? !0 : !1;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        null !== resolveFamily && "function" === typeof WeakSet && (null === failedBoundaries && (failedBoundaries = new WeakSet()), failedBoundaries.add(fiber));
    }
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
        switch(tag){
            case 0:
            case 15:
            case 1:
                candidateType = type;
                break;
            case 11:
                candidateType = type.render;
        }
        if (null === resolveFamily) throw Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = !1;
        type = !1;
        null !== candidateType && (candidateType = resolveFamily(candidateType), void 0 !== candidateType && (staleFamilies.has(candidateType) ? type = !0 : updatedFamilies.has(candidateType) && (1 === tag ? type = !0 : needsRender = !0)));
        null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== alternate && failedBoundaries.has(alternate)) && (type = !0);
        type && (fiber._debugNeedsRemount = !0);
        if (type || needsRender) alternate = enqueueConcurrentRenderForLane(fiber, 2), null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);
        null === child || type || scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        null !== sibling && scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.refCleanup = this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.subtreeFlags = this.flags = 0;
        this.deletions = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
        this.actualDuration = -0;
        this.actualStartTime = -1.1;
        this.treeBaseDuration = this.selfBaseDuration = -0;
        this._debugTask = this._debugStack = this._debugOwner = this._debugInfo = null;
        this._debugNeedsRemount = !1;
        this._debugHookTypes = null;
        hasBadMapPolyfill || "function" !== typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugOwner = current._debugOwner, workInProgress._debugStack = current._debugStack, workInProgress._debugTask = current._debugTask, workInProgress._debugHookTypes = current._debugHookTypes, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.actualDuration = -0, workInProgress.actualStartTime = -1.1);
        workInProgress.flags = current.flags & 65011712;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            lanes: pendingProps.lanes,
            firstContext: pendingProps.firstContext,
            _debugThenableState: pendingProps._debugThenableState
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.refCleanup = current.refCleanup;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugInfo = current._debugInfo;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case 0:
            case 15:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 1:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 11:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
        }
        return workInProgress;
    }
    function resetWorkInProgress(workInProgress, renderLanes) {
        workInProgress.flags &= 65011714;
        var current = workInProgress.alternate;
        null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null, workInProgress.selfBaseDuration = 0, workInProgress.treeBaseDuration = 0) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
            lanes: renderLanes.lanes,
            firstContext: renderLanes.firstContext,
            _debugThenableState: renderLanes._debugThenableState
        }, workInProgress.selfBaseDuration = current.selfBaseDuration, workInProgress.treeBaseDuration = current.treeBaseDuration);
        return workInProgress;
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = 0, resolvedType = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1), resolvedType = resolveFunctionForHotReloading(resolvedType);
        else if ("string" === typeof type) fiberTag = getHostContext(), fiberTag = isHostHoistableType(type, pendingProps, fiberTag) ? 26 : "html" === type || "head" === type || "body" === type ? 27 : 5;
        else a: switch(type){
            case REACT_ACTIVITY_TYPE:
                return key = createFiber(31, pendingProps, key, mode), key.elementType = REACT_ACTIVITY_TYPE, key.lanes = lanes, key;
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return type = pendingProps, owner = mode, "string" !== typeof type.id && console.error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof type.id), key = createFiber(12, type, key, owner | ProfileMode), key.elementType = REACT_PROFILER_TYPE, key.lanes = lanes, key.stateNode = {
                    effectDuration: 0,
                    passiveEffectDuration: 0
                }, key;
            case REACT_SUSPENSE_TYPE:
                return key = createFiber(13, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_TYPE, key.lanes = lanes, key;
            case REACT_SUSPENSE_LIST_TYPE:
                return key = createFiber(19, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_LIST_TYPE, key.lanes = lanes, key;
            default:
                if ("object" === typeof type && null !== type) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                    case REACT_CONTEXT_TYPE:
                        fiberTag = 10;
                        break a;
                    case REACT_CONSUMER_TYPE:
                        fiberTag = 9;
                        break a;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break a;
                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;
                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        resolvedType = null;
                        break a;
                }
                resolvedType = "";
                if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) resolvedType += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                null === type ? pendingProps = "null" : isArrayImpl(type) ? pendingProps = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (pendingProps = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", resolvedType = " Did you accidentally export a JSX literal instead of a component?") : pendingProps = typeof type;
                (fiberTag = owner ? getComponentNameFromOwner(owner) : null) && (resolvedType += "\n\nCheck the render method of `" + fiberTag + "`.");
                fiberTag = 29;
                pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (pendingProps + "." + resolvedType));
                resolvedType = null;
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = resolvedType;
        key.lanes = lanes;
        key._debugOwner = owner;
        return key;
    }
    function createFiberFromElement(element, mode, lanes) {
        mode = createFiberFromTypeAndProps(element.type, element.key, element.props, element._owner, mode, lanes);
        mode._debugOwner = element._owner;
        mode._debugStack = element._debugStack;
        mode._debugTask = element._debugTask;
        return mode;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        elements = createFiber(7, elements, key, mode);
        elements.lanes = lanes;
        return elements;
    }
    function createFiberFromText(content, mode, lanes) {
        content = createFiber(6, content, null, mode);
        content.lanes = lanes;
        return content;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.lanes = lanes;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        workInProgress = treeContextOverflow;
        var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
        baseIdWithLeadingBit &= ~(1 << baseLength);
        index += 1;
        var length = 32 - clz32(totalChildren) + baseLength;
        if (30 < length) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
            baseIdWithLeadingBit >>= numberOfOverflowBits;
            baseLength -= numberOfOverflowBits;
            treeContextId = 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit;
            treeContextOverflow = length + workInProgress;
        } else treeContextId = 1 << length | index << baseLength | baseIdWithLeadingBit, treeContextOverflow = workInProgress;
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating();
        null !== workInProgress.return && (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
    }
    function popTreeContext(workInProgress) {
        for(; workInProgress === treeForkProvider;)treeForkProvider = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null, treeForkCount = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null;
        for(; workInProgress === treeContextProvider;)treeContextProvider = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextOverflow = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextId = idStack[--idStackIndex], idStack[idStackIndex] = null;
    }
    function warnIfNotHydrating() {
        isHydrating || console.error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    function buildHydrationDiffNode(fiber, distanceFromLeaf) {
        if (null === fiber.return) {
            if (null === hydrationDiffRootDEV) hydrationDiffRootDEV = {
                fiber: fiber,
                children: [],
                serverProps: void 0,
                serverTail: [],
                distanceFromLeaf: distanceFromLeaf
            };
            else {
                if (hydrationDiffRootDEV.fiber !== fiber) throw Error("Saw multiple hydration diff roots in a pass. This is a bug in React.");
                hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf && (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);
            }
            return hydrationDiffRootDEV;
        }
        var siblings = buildHydrationDiffNode(fiber.return, distanceFromLeaf + 1).children;
        if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber) return siblings = siblings[siblings.length - 1], siblings.distanceFromLeaf > distanceFromLeaf && (siblings.distanceFromLeaf = distanceFromLeaf), siblings;
        distanceFromLeaf = {
            fiber: fiber,
            children: [],
            serverProps: void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        };
        siblings.push(distanceFromLeaf);
        return distanceFromLeaf;
    }
    function warnNonHydratedInstance(fiber, rejectedCandidate) {
        didSuspendOrErrorDEV || (fiber = buildHydrationDiffNode(fiber, 0), fiber.serverProps = null, null !== rejectedCandidate && (rejectedCandidate = describeHydratableInstanceForDevWarnings(rejectedCandidate), fiber.serverTail.push(rejectedCandidate)));
    }
    function throwOnHydrationMismatch(fiber) {
        var diff = "", diffRoot = hydrationDiffRootDEV;
        null !== diffRoot && (hydrationDiffRootDEV = null, diff = describeDiff(diffRoot));
        queueHydrationError(createCapturedValueAtFiber(Error("Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch" + diff), fiber));
        throw HydrationMismatchException;
    }
    function prepareToHydrateHostInstance(fiber) {
        var didHydrate = fiber.stateNode;
        var type = fiber.type, props = fiber.memoizedProps;
        didHydrate[internalInstanceKey] = fiber;
        didHydrate[internalPropsKey] = props;
        validatePropertiesInDevelopment(type, props);
        switch(type){
            case "dialog":
                listenToNonDelegatedEvent("cancel", didHydrate);
                listenToNonDelegatedEvent("close", didHydrate);
                break;
            case "iframe":
            case "object":
            case "embed":
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "video":
            case "audio":
                for(type = 0; type < mediaEventTypes.length; type++)listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);
                break;
            case "source":
                listenToNonDelegatedEvent("error", didHydrate);
                break;
            case "img":
            case "image":
            case "link":
                listenToNonDelegatedEvent("error", didHydrate);
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", didHydrate);
                break;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateInputProps(didHydrate, props);
                initInput(didHydrate, props.value, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name, !0);
                track(didHydrate);
                break;
            case "option":
                validateOptionProps(didHydrate, props);
                break;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateSelectProps(didHydrate, props);
                break;
            case "textarea":
                checkControlledValueProps("textarea", props), listenToNonDelegatedEvent("invalid", didHydrate), validateTextareaProps(didHydrate, props), initTextarea(didHydrate, props.value, props.defaultValue, props.children), track(didHydrate);
        }
        type = props.children;
        "string" !== typeof type && "number" !== typeof type && "bigint" !== typeof type || didHydrate.textContent === "" + type || !0 === props.suppressHydrationWarning || checkForUnmatchedText(didHydrate.textContent, type) ? (null != props.popover && (listenToNonDelegatedEvent("beforetoggle", didHydrate), listenToNonDelegatedEvent("toggle", didHydrate)), null != props.onScroll && listenToNonDelegatedEvent("scroll", didHydrate), null != props.onScrollEnd && listenToNonDelegatedEvent("scrollend", didHydrate), null != props.onClick && (didHydrate.onclick = noop$1), didHydrate = !0) : didHydrate = !1;
        didHydrate || throwOnHydrationMismatch(fiber);
    }
    function popToNextHostParent(fiber) {
        for(hydrationParentFiber = fiber.return; hydrationParentFiber;)switch(hydrationParentFiber.tag){
            case 5:
            case 13:
                rootOrSingletonContext = !1;
                return;
            case 27:
            case 3:
                rootOrSingletonContext = !0;
                return;
            default:
                hydrationParentFiber = hydrationParentFiber.return;
        }
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var tag = fiber.tag, JSCompiler_temp;
        if (JSCompiler_temp = 3 !== tag && 27 !== tag) {
            if (JSCompiler_temp = 5 === tag) JSCompiler_temp = fiber.type, JSCompiler_temp = !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) || shouldSetTextContent(fiber.type, fiber.memoizedProps);
            JSCompiler_temp = !JSCompiler_temp;
        }
        if (JSCompiler_temp && nextHydratableInstance) {
            for(JSCompiler_temp = nextHydratableInstance; JSCompiler_temp;){
                var diffNode = buildHydrationDiffNode(fiber, 0), description = describeHydratableInstanceForDevWarnings(JSCompiler_temp);
                diffNode.serverTail.push(description);
                JSCompiler_temp = "Suspense" === description.type ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp) : getNextHydratable(JSCompiler_temp.nextSibling);
            }
            throwOnHydrationMismatch(fiber);
        }
        popToNextHostParent(fiber);
        if (13 === tag) {
            fiber = fiber.memoizedState;
            fiber = null !== fiber ? fiber.dehydrated : null;
            if (!fiber) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(fiber);
        } else 27 === tag ? (tag = nextHydratableInstance, isSingletonScope(fiber.type) ? (fiber = previousHydratableOnEnteringScopedSingleton, previousHydratableOnEnteringScopedSingleton = null, nextHydratableInstance = fiber) : nextHydratableInstance = tag) : nextHydratableInstance = hydrationParentFiber ? getNextHydratable(fiber.stateNode.nextSibling) : null;
        return !0;
    }
    function resetHydrationState() {
        nextHydratableInstance = hydrationParentFiber = null;
        didSuspendOrErrorDEV = isHydrating = !1;
    }
    function upgradeHydrationErrorsToRecoverable() {
        var queuedErrors = hydrationErrors;
        null !== queuedErrors && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = queuedErrors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, queuedErrors), hydrationErrors = null);
        return queuedErrors;
    }
    function queueHydrationError(error) {
        null === hydrationErrors ? hydrationErrors = [
            error
        ] : hydrationErrors.push(error);
    }
    function emitPendingHydrationWarnings() {
        var diffRoot = hydrationDiffRootDEV;
        if (null !== diffRoot) {
            hydrationDiffRootDEV = null;
            for(var diff = describeDiff(diffRoot); 0 < diffRoot.children.length;)diffRoot = diffRoot.children[0];
            runWithFiberInDEV(diffRoot.fiber, function() {
                console.error("A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s", "https://react.dev/link/hydration-mismatch", diff);
            });
        }
    }
    function resetContextDependencies() {
        lastContextDependency = currentlyRenderingFiber$1 = null;
        isDisallowedContextReadInDEV = !1;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        push(rendererCursorDEV, context._currentRenderer, providerFiber);
        void 0 !== context._currentRenderer && null !== context._currentRenderer && context._currentRenderer !== rendererSigil && console.error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        context._currentValue = valueCursor.current;
        var currentRenderer = rendererCursorDEV.current;
        pop(rendererCursorDEV, providerFiber);
        context._currentRenderer = currentRenderer;
        pop(valueCursor, providerFiber);
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        for(; null !== parent;){
            var alternate = parent.alternate;
            (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
            if (parent === propagationRoot) break;
            parent = parent.return;
        }
        parent !== propagationRoot && console.error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
        var fiber = workInProgress.child;
        null !== fiber && (fiber.return = workInProgress);
        for(; null !== fiber;){
            var list = fiber.dependencies;
            if (null !== list) {
                var nextFiber = fiber.child;
                list = list.firstContext;
                a: for(; null !== list;){
                    var dependency = list;
                    list = fiber;
                    for(var i = 0; i < contexts.length; i++)if (dependency.context === contexts[i]) {
                        list.lanes |= renderLanes;
                        dependency = list.alternate;
                        null !== dependency && (dependency.lanes |= renderLanes);
                        scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
                        forcePropagateEntireTree || (nextFiber = null);
                        break a;
                    }
                    list = dependency.next;
                }
            } else if (18 === fiber.tag) {
                nextFiber = fiber.return;
                if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                nextFiber.lanes |= renderLanes;
                list = nextFiber.alternate;
                null !== list && (list.lanes |= renderLanes);
                scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
                nextFiber = null;
            } else nextFiber = fiber.child;
            if (null !== nextFiber) nextFiber.return = fiber;
            else for(nextFiber = fiber; null !== nextFiber;){
                if (nextFiber === workInProgress) {
                    nextFiber = null;
                    break;
                }
                fiber = nextFiber.sibling;
                if (null !== fiber) {
                    fiber.return = nextFiber.return;
                    nextFiber = fiber;
                    break;
                }
                nextFiber = nextFiber.return;
            }
            fiber = nextFiber;
        }
    }
    function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
        current = null;
        for(var parent = workInProgress, isInsidePropagationBailout = !1; null !== parent;){
            if (!isInsidePropagationBailout) {
                if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
                else if (0 !== (parent.flags & 262144)) break;
            }
            if (10 === parent.tag) {
                var currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent = currentParent.memoizedProps;
                if (null !== currentParent) {
                    var context = parent.type;
                    objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [
                        context
                    ]);
                }
            } else if (parent === hostTransitionProviderCursor.current) {
                currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [
                    HostTransitionContext
                ]);
            }
            parent = parent.return;
        }
        null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
        workInProgress.flags |= 262144;
    }
    function checkIfContextChanged(currentDependencies) {
        for(currentDependencies = currentDependencies.firstContext; null !== currentDependencies;){
            if (!objectIs(currentDependencies.context._currentValue, currentDependencies.memoizedValue)) return !0;
            currentDependencies = currentDependencies.next;
        }
        return !1;
    }
    function prepareToReadContext(workInProgress) {
        currentlyRenderingFiber$1 = workInProgress;
        lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && (workInProgress.firstContext = null);
    }
    function readContext(context) {
        isDisallowedContextReadInDEV && console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        return readContextForConsumer(currentlyRenderingFiber$1, context);
    }
    function readContextDuringReconciliation(consumer, context) {
        null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);
        return readContextForConsumer(consumer, context);
    }
    function readContextForConsumer(consumer, context) {
        var value = context._currentValue;
        context = {
            context: context,
            memoizedValue: value,
            next: null
        };
        if (null === lastContextDependency) {
            if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            lastContextDependency = context;
            consumer.dependencies = {
                lanes: 0,
                firstContext: context,
                _debugThenableState: null
            };
            consumer.flags |= 524288;
        } else lastContextDependency = lastContextDependency.next = context;
        return value;
    }
    function createCache() {
        return {
            controller: new AbortControllerLocal(),
            data: new Map(),
            refCount: 0
        };
    }
    function retainCache(cache) {
        cache.controller.signal.aborted && console.warn("A cache instance was retained after it was already freed. This likely indicates a bug in React.");
        cache.refCount++;
    }
    function releaseCache(cache) {
        cache.refCount--;
        0 > cache.refCount && console.warn("A cache instance was released after it was already freed. This likely indicates a bug in React.");
        0 === cache.refCount && scheduleCallback$2(NormalPriority, function() {
            cache.controller.abort();
        });
    }
    function pushNestedEffectDurations() {
        var prevEffectDuration = profilerEffectDuration;
        profilerEffectDuration = 0;
        return prevEffectDuration;
    }
    function popNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration = prevEffectDuration;
        return elapsedTime;
    }
    function bubbleNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration += prevEffectDuration;
        return elapsedTime;
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now();
        0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);
    }
    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordEffectDuration() {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            profilerStartTime = -1;
            profilerEffectDuration += elapsedTime;
        }
    }
    function startEffectTimer() {
        profilerStartTime = now();
    }
    function transferActualDuration(fiber) {
        for(var child = fiber.child; child;)fiber.actualDuration += child.actualDuration, child = child.sibling;
    }
    function entangleAsyncAction(transition, thenable) {
        if (null === currentEntangledListeners) {
            var entangledListeners = currentEntangledListeners = [];
            currentEntangledPendingCount = 0;
            currentEntangledLane = requestTransitionLane();
            currentEntangledActionThenable = {
                status: "pending",
                value: void 0,
                then: function(resolve) {
                    entangledListeners.push(resolve);
                }
            };
        }
        currentEntangledPendingCount++;
        thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
        return thenable;
    }
    function pingEngtangledActionScope() {
        if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
            null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
            var listeners = currentEntangledListeners;
            currentEntangledListeners = null;
            currentEntangledLane = 0;
            currentEntangledActionThenable = null;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])();
        }
    }
    function chainThenableValue(thenable, result) {
        var listeners = [], thenableWithOverride = {
            status: "pending",
            value: null,
            reason: null,
            then: function(resolve) {
                listeners.push(resolve);
            }
        };
        thenable.then(function() {
            thenableWithOverride.status = "fulfilled";
            thenableWithOverride.value = result;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])(result);
        }, function(error) {
            thenableWithOverride.status = "rejected";
            thenableWithOverride.reason = error;
            for(error = 0; error < listeners.length; error++)(0, listeners[error])(void 0);
        });
        return thenableWithOverride;
    }
    function peekCacheFromPool() {
        var cacheResumedFromPreviousRender = resumedCache.current;
        return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
    }
    function pushTransition(offscreenWorkInProgress, prevCachePool) {
        null === prevCachePool ? push(resumedCache, resumedCache.current, offscreenWorkInProgress) : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);
    }
    function getSuspendedCache() {
        var cacheFromPool = peekCacheFromPool();
        return null === cacheFromPool ? null : {
            parent: CacheContext._currentValue,
            pool: cacheFromPool
        };
    }
    function createThenableState() {
        return {
            didWarnAboutUncachedPromise: !1,
            thenables: []
        };
    }
    function isThenableResolved(thenable) {
        thenable = thenable.status;
        return "fulfilled" === thenable || "rejected" === thenable;
    }
    function noop$3() {}
    function trackUsedThenable(thenableState, thenable, index) {
        null !== ReactSharedInternals.actQueue && (ReactSharedInternals.didUsePromise = !0);
        var trackedThenables = thenableState.thenables;
        index = trackedThenables[index];
        void 0 === index ? trackedThenables.push(thenable) : index !== thenable && (thenableState.didWarnAboutUncachedPromise || (thenableState.didWarnAboutUncachedPromise = !0, console.error("A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.")), thenable.then(noop$3, noop$3), thenable = index);
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
            default:
                if ("string" === typeof thenable.status) thenable.then(noop$3, noop$3);
                else {
                    thenableState = workInProgressRoot;
                    if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
                    thenableState = thenable;
                    thenableState.status = "pending";
                    thenableState.then(function(fulfilledValue) {
                        if ("pending" === thenable.status) {
                            var fulfilledThenable = thenable;
                            fulfilledThenable.status = "fulfilled";
                            fulfilledThenable.value = fulfilledValue;
                        }
                    }, function(error) {
                        if ("pending" === thenable.status) {
                            var rejectedThenable = thenable;
                            rejectedThenable.status = "rejected";
                            rejectedThenable.reason = error;
                        }
                    });
                }
                switch(thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
                }
                suspendedThenable = thenable;
                needsToResetSuspendedThenableDEV = !0;
                throw SuspenseException;
        }
    }
    function getSuspendedThenable() {
        if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
        var thenable = suspendedThenable;
        suspendedThenable = null;
        needsToResetSuspendedThenableDEV = !1;
        return thenable;
    }
    function checkIfUseWrappedInAsyncCatch(rejectedReason) {
        if (rejectedReason === SuspenseException || rejectedReason === SuspenseActionException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
    }
    function initializeUpdateQueue(fiber) {
        fiber.updateQueue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                lanes: 0,
                hiddenCallbacks: null
            },
            callbacks: null
        };
    }
    function cloneUpdateQueue(current, workInProgress) {
        current = current.updateQueue;
        workInProgress.updateQueue === current && (workInProgress.updateQueue = {
            baseState: current.baseState,
            firstBaseUpdate: current.firstBaseUpdate,
            lastBaseUpdate: current.lastBaseUpdate,
            shared: current.shared,
            callbacks: null
        });
    }
    function createUpdate(lane) {
        return {
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (null === updateQueue) return null;
        updateQueue = updateQueue.shared;
        if (currentlyProcessingQueue === updateQueue && !didWarnUpdateInsideUpdate) {
            var componentName = getComponentNameFromFiber(fiber);
            console.error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s", componentName);
            didWarnUpdateInsideUpdate = !0;
        }
        if ((executionContext & RenderContext) !== NoContext) return componentName = updateQueue.pending, null === componentName ? update.next = update : (update.next = componentName.next, componentName.next = update), updateQueue.pending = update, update = getRootForUpdatedFiber(fiber), markUpdateLaneFromFiberToRoot(fiber, null, lane), update;
        enqueueUpdate$1(fiber, updateQueue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function entangleTransitions(root, fiber, lane) {
        fiber = fiber.updateQueue;
        if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194048))) {
            var queueLanes = fiber.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            fiber.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        var queue = workInProgress.updateQueue, current = workInProgress.alternate;
        if (null !== current && (current = current.updateQueue, queue === current)) {
            var newFirst = null, newLast = null;
            queue = queue.firstBaseUpdate;
            if (null !== queue) {
                do {
                    var clone = {
                        lane: queue.lane,
                        tag: queue.tag,
                        payload: queue.payload,
                        callback: null,
                        next: null
                    };
                    null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
                    queue = queue.next;
                }while (null !== queue);
                null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
            } else newFirst = newLast = capturedUpdate;
            queue = {
                baseState: current.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: current.shared,
                callbacks: current.callbacks
            };
            workInProgress.updateQueue = queue;
            return;
        }
        workInProgress = queue.lastBaseUpdate;
        null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function suspendIfUpdateReadFromEntangledAsyncAction() {
        if (didReadFromEntangledAsyncAction) {
            var entangledActionThenable = currentEntangledActionThenable;
            if (null !== entangledActionThenable) throw entangledActionThenable;
        }
    }
    function processUpdateQueue(workInProgress, props, instance$jscomp$0, renderLanes) {
        didReadFromEntangledAsyncAction = !1;
        var queue = workInProgress.updateQueue;
        hasForceUpdate = !1;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate, lastBaseUpdate = queue.lastBaseUpdate, pendingQueue = queue.shared.pending;
        if (null !== pendingQueue) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue, firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate;
            var current = workInProgress.alternate;
            null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
        }
        if (null !== firstBaseUpdate) {
            var newState = queue.baseState;
            lastBaseUpdate = 0;
            current = firstPendingUpdate = lastPendingUpdate = null;
            pendingQueue = firstBaseUpdate;
            do {
                var updateLane = pendingQueue.lane & -536870913, isHiddenUpdate = updateLane !== pendingQueue.lane;
                if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    null !== current && (current = current.next = {
                        lane: 0,
                        tag: pendingQueue.tag,
                        payload: pendingQueue.payload,
                        callback: null,
                        next: null
                    });
                    a: {
                        updateLane = workInProgress;
                        var partialState = pendingQueue;
                        var nextProps = props, instance = instance$jscomp$0;
                        switch(partialState.tag){
                            case ReplaceState:
                                partialState = partialState.payload;
                                if ("function" === typeof partialState) {
                                    isDisallowedContextReadInDEV = !0;
                                    var nextState = partialState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            partialState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                    newState = nextState;
                                    break a;
                                }
                                newState = partialState;
                                break a;
                            case CaptureUpdate:
                                updateLane.flags = updateLane.flags & -65537 | 128;
                            case UpdateState:
                                nextState = partialState.payload;
                                if ("function" === typeof nextState) {
                                    isDisallowedContextReadInDEV = !0;
                                    partialState = nextState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            nextState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                } else partialState = nextState;
                                if (null === partialState || void 0 === partialState) break a;
                                newState = assign({}, newState, partialState);
                                break a;
                            case ForceUpdate:
                                hasForceUpdate = !0;
                        }
                    }
                    updateLane = pendingQueue.callback;
                    null !== updateLane && (workInProgress.flags |= 64, isHiddenUpdate && (workInProgress.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [
                        updateLane
                    ] : isHiddenUpdate.push(updateLane));
                } else isHiddenUpdate = {
                    lane: updateLane,
                    tag: pendingQueue.tag,
                    payload: pendingQueue.payload,
                    callback: pendingQueue.callback,
                    next: null
                }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
                pendingQueue = pendingQueue.next;
                if (null === pendingQueue) {
                    if (pendingQueue = queue.shared.pending, null === pendingQueue) break;
                    else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
                }
            }while (1);
            null === current && (lastPendingUpdate = newState);
            queue.baseState = lastPendingUpdate;
            queue.firstBaseUpdate = firstPendingUpdate;
            queue.lastBaseUpdate = current;
            null === firstBaseUpdate && (queue.shared.lanes = 0);
            workInProgressRootSkippedLanes |= lastBaseUpdate;
            workInProgress.lanes = lastBaseUpdate;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function commitHiddenCallbacks(updateQueue, context) {
        var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;
        if (null !== hiddenCallbacks) for(updateQueue.shared.hiddenCallbacks = null, updateQueue = 0; updateQueue < hiddenCallbacks.length; updateQueue++)callCallback(hiddenCallbacks[updateQueue], context);
    }
    function commitCallbacks(updateQueue, context) {
        var callbacks = updateQueue.callbacks;
        if (null !== callbacks) for(updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++)callCallback(callbacks[updateQueue], context);
    }
    function pushHiddenContext(fiber, context) {
        var prevEntangledRenderLanes = entangledRenderLanes;
        push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, context, fiber);
        entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;
    }
    function reuseHiddenContextOnStack(fiber) {
        push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current, fiber);
    }
    function popHiddenContext(fiber) {
        entangledRenderLanes = prevEntangledRenderLanesCursor.current;
        pop(currentTreeHiddenStackCursor, fiber);
        pop(prevEntangledRenderLanesCursor, fiber);
    }
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        null === hookTypesDev ? hookTypesDev = [
            hookName
        ] : hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (null !== hookTypesDev && (hookTypesUpdateIndexDev++, hookTypesDev[hookTypesUpdateIndexDev] !== hookName)) {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName) && (didWarnAboutMismatchedHooksForComponent.add(componentName), null !== hookTypesDev)) {
                for(var table = "", i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i], newHookName = i === hookTypesUpdateIndexDev ? hookName : oldHookName;
                    for(oldHookName = i + 1 + ". " + oldHookName; 30 > oldHookName.length;)oldHookName += " ";
                    oldHookName += newHookName + "\n";
                    table += oldHookName;
                }
                console.error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function checkDepsAreArrayDev(deps) {
        void 0 === deps || null === deps || isArrayImpl(deps) || console.error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnUseFormStateInDev() {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
        didWarnAboutUseFormState.has(componentName) || (didWarnAboutUseFormState.add(componentName), console.error("ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.", componentName));
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) return !1;
        if (null === prevDeps) return console.error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && console.error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++)if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
        return !0;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber = workInProgress;
        hookTypesDev = null !== current ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        if ("[object AsyncFunction]" === Object.prototype.toString.call(Component) || "[object AsyncGeneratorFunction]" === Object.prototype.toString.call(Component)) nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber), didWarnAboutAsyncClientComponent.has(nextRenderLanes) || (didWarnAboutAsyncClientComponent.add(nextRenderLanes), console.error("%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.", null === nextRenderLanes ? "An unknown Component" : "<" + nextRenderLanes + ">"));
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = 0;
        ReactSharedInternals.H = null !== current && null !== current.memoizedState ? HooksDispatcherOnUpdateInDEV : null !== hookTypesDev ? HooksDispatcherOnMountWithHookTypesInDEV : HooksDispatcherOnMountInDEV;
        shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes = (workInProgress.mode & StrictLegacyMode) !== NoMode;
        var children = callComponentInDEV(Component, props, secondArg);
        shouldDoubleInvokeUserFnsInHooksDEV = !1;
        didScheduleRenderPhaseUpdateDuringThisPass && (children = renderWithHooksAgain(workInProgress, Component, props, secondArg));
        if (nextRenderLanes) {
            setIsStrictModeForDevtools(!0);
            try {
                children = renderWithHooksAgain(workInProgress, Component, props, secondArg);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        finishRenderingHooks(current, workInProgress);
        return children;
    }
    function finishRenderingHooks(current, workInProgress) {
        workInProgress._debugHookTypes = hookTypesDev;
        null === workInProgress.dependencies ? null !== thenableState$1 && (workInProgress.dependencies = {
            lanes: 0,
            firstContext: null,
            _debugThenableState: thenableState$1
        }) : workInProgress.dependencies._debugThenableState = thenableState$1;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
        renderLanes = 0;
        hookTypesDev = currentHookNameInDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        null !== current && (current.flags & 65011712) !== (workInProgress.flags & 65011712) && console.error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = !1;
        thenableIndexCounter$1 = 0;
        thenableState$1 = null;
        if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = !0));
        needsToResetSuspendedThenableDEV ? (needsToResetSuspendedThenableDEV = !1, current = !0) : current = !1;
        current && (workInProgress = getComponentNameFromFiber(workInProgress) || "Unknown", didWarnAboutUseWrappedInTryCatch.has(workInProgress) || didWarnAboutAsyncClientComponent.has(workInProgress) || (didWarnAboutUseWrappedInTryCatch.add(workInProgress), console.error("`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.")));
    }
    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
        currentlyRenderingFiber = workInProgress;
        var numberOfReRenders = 0;
        do {
            didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);
            thenableIndexCounter$1 = 0;
            didScheduleRenderPhaseUpdateDuringThisPass = !1;
            if (numberOfReRenders >= RE_RENDER_LIMIT) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            numberOfReRenders += 1;
            ignorePreviousDependencies = !1;
            workInProgressHook = currentHook = null;
            if (null != workInProgress.updateQueue) {
                var children = workInProgress.updateQueue;
                children.lastEffect = null;
                children.events = null;
                children.stores = null;
                null != children.memoCache && (children.memoCache.index = 0);
            }
            hookTypesUpdateIndexDev = -1;
            ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;
            children = callComponentInDEV(Component, props, secondArg);
        }while (didScheduleRenderPhaseUpdateDuringThisPass);
        return children;
    }
    function TransitionAwareHostComponent() {
        var dispatcher = ReactSharedInternals.H, maybeThenable = dispatcher.useState()[0];
        maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
        dispatcher = dispatcher.useState()[0];
        (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber.flags |= 1024);
        return maybeThenable;
    }
    function checkDidRenderIdHook() {
        var didRenderIdHook = 0 !== localIdCounter;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags = (workInProgress.mode & StrictEffectsMode) !== NoMode ? workInProgress.flags & -402655237 : workInProgress.flags & -2053;
        current.lanes &= ~lanes;
    }
    function resetHooksOnUnwind(workInProgress) {
        if (didScheduleRenderPhaseUpdate) {
            for(workInProgress = workInProgress.memoizedState; null !== workInProgress;){
                var queue = workInProgress.queue;
                null !== queue && (queue.pending = null);
                workInProgress = workInProgress.next;
            }
            didScheduleRenderPhaseUpdate = !1;
        }
        renderLanes = 0;
        hookTypesDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        didScheduleRenderPhaseUpdateDuringThisPass = !1;
        thenableIndexCounter$1 = localIdCounter = 0;
        thenableState$1 = null;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        if (null === currentHook) {
            var nextCurrentHook = currentlyRenderingFiber.alternate;
            nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber.memoizedState : workInProgressHook.next;
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;
        else {
            if (null === nextCurrentHook) {
                if (null === currentlyRenderingFiber.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
                throw Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            nextCurrentHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            events: null,
            stores: null,
            memoCache: null
        };
    }
    function useThenable(thenable) {
        var index = thenableIndexCounter$1;
        thenableIndexCounter$1 += 1;
        null === thenableState$1 && (thenableState$1 = createThenableState());
        thenable = trackUsedThenable(thenableState$1, thenable, index);
        index = currentlyRenderingFiber;
        null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null !== index && null !== index.memoizedState ? HooksDispatcherOnUpdateInDEV : HooksDispatcherOnMountInDEV);
        return thenable;
    }
    function use(usable) {
        if (null !== usable && "object" === typeof usable) {
            if ("function" === typeof usable.then) return useThenable(usable);
            if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
    }
    function useMemoCache(size) {
        var memoCache = null, updateQueue = currentlyRenderingFiber.updateQueue;
        null !== updateQueue && (memoCache = updateQueue.memoCache);
        if (null == memoCache) {
            var current = currentlyRenderingFiber.alternate;
            null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
                data: current.data.map(function(array) {
                    return array.slice();
                }),
                index: 0
            })));
        }
        null == memoCache && (memoCache = {
            data: [],
            index: 0
        });
        null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = updateQueue);
        updateQueue.memoCache = memoCache;
        updateQueue = memoCache.data[memoCache.index];
        if (void 0 === updateQueue || ignorePreviousDependencies) for(updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++)updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
        else updateQueue.length !== size && console.error("Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.", updateQueue.length, size);
        memoCache.index++;
        return updateQueue;
    }
    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        if (void 0 !== init) {
            var initialState = init(initialArg);
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    init(initialArg);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        } else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        reducer = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = reducer;
        reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber, reducer);
        return [
            hook.memoizedState,
            reducer
        ];
    }
    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook();
        return updateReducerImpl(hook, currentHook, reducer);
    }
    function updateReducerImpl(hook, current, reducer) {
        var queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var baseQueue = hook.baseQueue, pendingQueue = queue.pending;
        if (null !== pendingQueue) {
            if (null !== baseQueue) {
                var baseFirst = baseQueue.next;
                baseQueue.next = pendingQueue.next;
                pendingQueue.next = baseFirst;
            }
            current.baseQueue !== baseQueue && console.error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        pendingQueue = hook.baseState;
        if (null === baseQueue) hook.memoizedState = pendingQueue;
        else {
            current = baseQueue.next;
            var newBaseQueueFirst = baseFirst = null, newBaseQueueLast = null, update = current, didReadFromEntangledAsyncAction = !1;
            do {
                var updateLane = update.lane & -536870913;
                if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    var revertLane = update.revertLane;
                    if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
                        lane: 0,
                        revertLane: 0,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    else if ((renderLanes & revertLane) === revertLane) {
                        update = update.next;
                        revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                        continue;
                    } else updateLane = {
                        lane: 0,
                        revertLane: update.revertLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
                    updateLane = update.action;
                    shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
                    pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
                } else revertLane = {
                    lane: updateLane,
                    revertLane: update.revertLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
                update = update.next;
            }while (null !== update && update !== current);
            null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
            if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = !0, didReadFromEntangledAsyncAction && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
            hook.memoizedState = pendingQueue;
            hook.baseState = baseFirst;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = pendingQueue;
        }
        null === baseQueue && (queue.lanes = 0);
        return [
            hook.memoizedState,
            queue.dispatch
        ];
    }
    function rerenderReducer(reducer) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var dispatch = queue.dispatch, lastRenderPhaseUpdate = queue.pending, newState = hook.memoizedState;
        if (null !== lastRenderPhaseUpdate) {
            queue.pending = null;
            var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            do newState = reducer(newState, update.action), update = update.next;
            while (update !== lastRenderPhaseUpdate);
            objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
            hook.memoizedState = newState;
            null === hook.baseQueue && (hook.baseState = newState);
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = mountWorkInProgressHook();
        if (isHydrating) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            var nextSnapshot = getServerSnapshot();
            didWarnUncachedGetSnapshot || nextSnapshot === getServerSnapshot() || (console.error("The result of getServerSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        } else {
            nextSnapshot = getSnapshot();
            didWarnUncachedGetSnapshot || (getServerSnapshot = getSnapshot(), objectIs(nextSnapshot, getServerSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0));
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            0 !== (workInProgressRootRenderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        hook.memoizedState = nextSnapshot;
        getServerSnapshot = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = getServerSnapshot;
        mountEffect(subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe), [
            subscribe
        ]);
        fiber.flags |= 2048;
        pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, getServerSnapshot, nextSnapshot, getSnapshot), null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = updateWorkInProgressHook(), isHydrating$jscomp$0 = isHydrating;
        if (isHydrating$jscomp$0) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            getServerSnapshot = getServerSnapshot();
        } else if (getServerSnapshot = getSnapshot(), !didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            objectIs(getServerSnapshot, cachedSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        if (cachedSnapshot = !objectIs((currentHook || hook).memoizedState, getServerSnapshot)) hook.memoizedState = getServerSnapshot, didReceiveUpdate = !0;
        hook = hook.queue;
        var create = subscribeToStore.bind(null, fiber, hook, subscribe);
        updateEffectImpl(2048, Passive, create, [
            subscribe
        ]);
        if (hook.getSnapshot !== getSnapshot || cachedSnapshot || null !== workInProgressHook && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= 2048;
            pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, hook, getServerSnapshot, getSnapshot), null);
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            isHydrating$jscomp$0 || 0 !== (renderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
        }
        return getServerSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= 16384;
        fiber = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        getSnapshot = currentlyRenderingFiber.updateQueue;
        null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = getSnapshot, getSnapshot.stores = [
            fiber
        ]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [
            fiber
        ] : renderedSnapshot.push(fiber));
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot;
        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        return subscribe(function() {
            checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
        });
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(inst, nextValue);
        } catch (error) {
            return !0;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    }
    function mountStateImpl(initialState) {
        var hook = mountWorkInProgressHook();
        if ("function" === typeof initialState) {
            var initialStateInitializer = initialState;
            initialState = initialStateInitializer();
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    initialStateInitializer();
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        }
        hook.memoizedState = hook.baseState = initialState;
        hook.queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        return hook;
    }
    function mountState(initialState) {
        initialState = mountStateImpl(initialState);
        var queue = initialState.queue, dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);
        queue.dispatch = dispatch;
        return [
            initialState.memoizedState,
            dispatch
        ];
    }
    function mountOptimistic(passthrough) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = hook.baseState = passthrough;
        var queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: null,
            lastRenderedState: null
        };
        hook.queue = queue;
        hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !0, queue);
        queue.dispatch = hook;
        return [
            passthrough,
            hook
        ];
    }
    function updateOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    }
    function updateOptimisticImpl(hook, current, passthrough, reducer) {
        hook.baseState = passthrough;
        return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
    }
    function rerenderOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
        hook.baseState = passthrough;
        return [
            passthrough,
            hook.queue.dispatch
        ];
    }
    function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
        if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
        fiber = actionQueue.action;
        if (null !== fiber) {
            var actionNode = {
                payload: payload,
                action: fiber,
                next: null,
                isTransition: !0,
                status: "pending",
                value: null,
                reason: null,
                listeners: [],
                then: function(listener) {
                    actionNode.listeners.push(listener);
                }
            };
            null !== ReactSharedInternals.T ? setPendingState(!0) : actionNode.isTransition = !1;
            setState(actionNode);
            setPendingState = actionQueue.pending;
            null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
        }
    }
    function runActionStateAction(actionQueue, node) {
        var action = node.action, payload = node.payload, prevState = actionQueue.state;
        if (node.isTransition) {
            var prevTransition = ReactSharedInternals.T, currentTransition = {};
            ReactSharedInternals.T = currentTransition;
            ReactSharedInternals.T._updatedFibers = new Set();
            try {
                var returnValue = action(prevState, payload), onStartTransitionFinish = ReactSharedInternals.S;
                null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
                handleActionReturnValue(actionQueue, node, returnValue);
            } catch (error) {
                onActionError(actionQueue, node, error);
            } finally{
                ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (actionQueue = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < actionQueue && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
            }
        } else try {
            currentTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, currentTransition);
        } catch (error$4) {
            onActionError(actionQueue, node, error$4);
        }
    }
    function handleActionReturnValue(actionQueue, node, returnValue) {
        null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? (returnValue.then(function(nextState) {
            onActionSuccess(actionQueue, node, nextState);
        }, function(error) {
            return onActionError(actionQueue, node, error);
        }), node.isTransition || console.error("An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.")) : onActionSuccess(actionQueue, node, returnValue);
    }
    function onActionSuccess(actionQueue, actionNode, nextState) {
        actionNode.status = "fulfilled";
        actionNode.value = nextState;
        notifyActionListeners(actionNode);
        actionQueue.state = nextState;
        actionNode = actionQueue.pending;
        null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
    }
    function onActionError(actionQueue, actionNode, error) {
        var last = actionQueue.pending;
        actionQueue.pending = null;
        if (null !== last) {
            last = last.next;
            do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next;
            while (actionNode !== last);
        }
        actionQueue.action = null;
    }
    function notifyActionListeners(actionNode) {
        actionNode = actionNode.listeners;
        for(var i = 0; i < actionNode.length; i++)(0, actionNode[i])();
    }
    function actionStateReducer(oldState, newState) {
        return newState;
    }
    function mountActionState(action, initialStateProp) {
        if (isHydrating) {
            var ssrFormState = workInProgressRoot.formState;
            if (null !== ssrFormState) {
                a: {
                    var isMatching = currentlyRenderingFiber;
                    if (isHydrating) {
                        if (nextHydratableInstance) {
                            b: {
                                var markerInstance = nextHydratableInstance;
                                for(var inRootOrSingleton = rootOrSingletonContext; 8 !== markerInstance.nodeType;){
                                    if (!inRootOrSingleton) {
                                        markerInstance = null;
                                        break b;
                                    }
                                    markerInstance = getNextHydratable(markerInstance.nextSibling);
                                    if (null === markerInstance) {
                                        markerInstance = null;
                                        break b;
                                    }
                                }
                                inRootOrSingleton = markerInstance.data;
                                markerInstance = inRootOrSingleton === FORM_STATE_IS_MATCHING || inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING ? markerInstance : null;
                            }
                            if (markerInstance) {
                                nextHydratableInstance = getNextHydratable(markerInstance.nextSibling);
                                isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;
                                break a;
                            }
                        }
                        throwOnHydrationMismatch(isMatching);
                    }
                    isMatching = !1;
                }
                isMatching && (initialStateProp = ssrFormState[0]);
            }
        }
        ssrFormState = mountWorkInProgressHook();
        ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
        isMatching = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: actionStateReducer,
            lastRenderedState: initialStateProp
        };
        ssrFormState.queue = isMatching;
        ssrFormState = dispatchSetState.bind(null, currentlyRenderingFiber, isMatching);
        isMatching.dispatch = ssrFormState;
        isMatching = mountStateImpl(!1);
        inRootOrSingleton = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !1, isMatching.queue);
        isMatching = mountWorkInProgressHook();
        markerInstance = {
            state: initialStateProp,
            dispatch: null,
            action: action,
            pending: null
        };
        isMatching.queue = markerInstance;
        ssrFormState = dispatchActionState.bind(null, currentlyRenderingFiber, markerInstance, inRootOrSingleton, ssrFormState);
        markerInstance.dispatch = ssrFormState;
        isMatching.memoizedState = action;
        return [
            initialStateProp,
            ssrFormState,
            !1
        ];
    }
    function updateActionState(action) {
        var stateHook = updateWorkInProgressHook();
        return updateActionStateImpl(stateHook, currentHook, action);
    }
    function updateActionStateImpl(stateHook, currentStateHook, action) {
        currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
        stateHook = updateReducer(basicStateReducer)[0];
        if ("object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then) try {
            var state = useThenable(currentStateHook);
        } catch (x) {
            if (x === SuspenseException) throw SuspenseActionException;
            throw x;
        }
        else state = currentStateHook;
        currentStateHook = updateWorkInProgressHook();
        var actionQueue = currentStateHook.queue, dispatch = actionQueue.dispatch;
        action !== currentStateHook.memoizedState && (currentlyRenderingFiber.flags |= 2048, pushSimpleEffect(HasEffect | Passive, createEffectInstance(), actionStateActionEffect.bind(null, actionQueue, action), null));
        return [
            state,
            dispatch,
            stateHook
        ];
    }
    function actionStateActionEffect(actionQueue, action) {
        actionQueue.action = action;
    }
    function rerenderActionState(action) {
        var stateHook = updateWorkInProgressHook(), currentStateHook = currentHook;
        if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
        updateWorkInProgressHook();
        stateHook = stateHook.memoizedState;
        currentStateHook = updateWorkInProgressHook();
        var dispatch = currentStateHook.queue.dispatch;
        currentStateHook.memoizedState = action;
        return [
            stateHook,
            dispatch,
            !1
        ];
    }
    function pushSimpleEffect(tag, inst, create, createDeps) {
        tag = {
            tag: tag,
            create: create,
            deps: createDeps,
            inst: inst,
            next: null
        };
        inst = currentlyRenderingFiber.updateQueue;
        null === inst && (inst = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = inst);
        create = inst.lastEffect;
        null === create ? inst.lastEffect = tag.next = tag : (createDeps = create.next, create.next = tag, tag.next = createDeps, inst.lastEffect = tag);
        return tag;
    }
    function createEffectInstance() {
        return {
            destroy: void 0,
            resource: void 0
        };
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        initialValue = {
            current: initialValue
        };
        return hook.memoizedState = initialValue;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
        var hook = mountWorkInProgressHook();
        createDeps = void 0 === createDeps ? null : createDeps;
        currentlyRenderingFiber.flags |= fiberFlags;
        hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, createEffectInstance(), create, createDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var inst = hook.memoizedState.inst;
        null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps) : (currentlyRenderingFiber.flags |= fiberFlags, hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, inst, create, deps));
    }
    function mountEffect(create, createDeps) {
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode ? mountEffectImpl(276826112, Passive, create, createDeps) : mountEffectImpl(8390656, Passive, create, createDeps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) {
            create = create();
            var refCleanup = ref(create);
            return function() {
                "function" === typeof refCleanup ? refCleanup() : ref(null);
            };
        }
        if (null !== ref && void 0 !== ref) return ref.hasOwnProperty("current") || console.error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(ref).join(", ") + "}"), create = create(), ref.current = create, function() {
            ref.current = null;
        };
    }
    function mountImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function updateImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        updateEffectImpl(4, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function mountCallback(callback, deps) {
        mountWorkInProgressHook().memoizedState = [
            callback,
            void 0 === deps ? null : deps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        hook.memoizedState = [
            callback,
            deps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var nextValue = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            nextValue,
            deps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        prevState = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            prevState,
            deps
        ];
        return prevState;
    }
    function mountDeferredValue(value, initialValue) {
        var hook = mountWorkInProgressHook();
        return mountDeferredValueImpl(hook, value, initialValue);
    }
    function updateDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function rerenderDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function mountDeferredValueImpl(hook, value, initialValue) {
        if (void 0 === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
        hook.memoizedState = initialValue;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return initialValue;
    }
    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
        if (objectIs(value, prevValue)) return value;
        if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = !0), hook;
        if (0 === (renderLanes & 42)) return didReceiveUpdate = !0, hook.memoizedState = value;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return prevValue;
    }
    function startTransition(fiber, queue, pendingState, finishedState, callback) {
        var previousPriority = ReactDOMSharedInternals.p;
        ReactDOMSharedInternals.p = 0 !== previousPriority && previousPriority < ContinuousEventPriority ? previousPriority : ContinuousEventPriority;
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        dispatchOptimisticSetState(fiber, !1, queue, pendingState);
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = callback(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
                var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
                dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
            } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
        } catch (error) {
            dispatchSetStateInternal(fiber, queue, {
                then: function() {},
                status: "rejected",
                reason: error
            }, requestUpdateLane(fiber));
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (fiber = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < fiber && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
        }
    }
    function startHostTransition(formFiber, pendingState, action, formData) {
        if (5 !== formFiber.tag) throw Error("Expected the form instance to be a HostComponent. This is a bug in React.");
        var queue = ensureFormComponentIsStateful(formFiber).queue;
        startTransition(formFiber, queue, pendingState, NotPendingTransition, null === action ? noop$2 : function() {
            requestFormReset$1(formFiber);
            return action(formData);
        });
    }
    function ensureFormComponentIsStateful(formFiber) {
        var existingStateHook = formFiber.memoizedState;
        if (null !== existingStateHook) return existingStateHook;
        existingStateHook = {
            memoizedState: NotPendingTransition,
            baseState: NotPendingTransition,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: NotPendingTransition
            },
            next: null
        };
        var initialResetState = {};
        existingStateHook.next = {
            memoizedState: initialResetState,
            baseState: initialResetState,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: initialResetState
            },
            next: null
        };
        formFiber.memoizedState = existingStateHook;
        formFiber = formFiber.alternate;
        null !== formFiber && (formFiber.memoizedState = existingStateHook);
        return existingStateHook;
    }
    function requestFormReset$1(formFiber) {
        null === ReactSharedInternals.T && console.error("requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.");
        var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;
        dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane(formFiber));
    }
    function mountTransition() {
        var stateHook = mountStateImpl(!1);
        stateHook = startTransition.bind(null, currentlyRenderingFiber, stateHook.queue, !0, !1);
        mountWorkInProgressHook().memoizedState = stateHook;
        return [
            !1,
            stateHook
        ];
    }
    function updateTransition() {
        var booleanOrThenable = updateReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function rerenderTransition() {
        var booleanOrThenable = rerenderReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function useHostTransitionStatus() {
        return readContext(HostTransitionContext);
    }
    function mountId() {
        var hook = mountWorkInProgressHook(), identifierPrefix = workInProgressRoot.identifierPrefix;
        if (isHydrating) {
            var treeId = treeContextOverflow;
            var idWithLeadingBit = treeContextId;
            treeId = (idWithLeadingBit & ~(1 << 32 - clz32(idWithLeadingBit) - 1)).toString(32) + treeId;
            identifierPrefix = "\u00ab" + identifierPrefix + "R" + treeId;
            treeId = localIdCounter++;
            0 < treeId && (identifierPrefix += "H" + treeId.toString(32));
            identifierPrefix += "\u00bb";
        } else treeId = globalClientIdCounter++, identifierPrefix = "\u00ab" + identifierPrefix + "r" + treeId.toString(32) + "\u00bb";
        return hook.memoizedState = identifierPrefix;
    }
    function mountRefresh() {
        return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber);
    }
    function refreshCache(fiber, seedKey) {
        for(var provider = fiber.return; null !== provider;){
            switch(provider.tag){
                case 24:
                case 3:
                    var lane = requestUpdateLane(provider);
                    fiber = createUpdate(lane);
                    var root = enqueueUpdate(provider, fiber, lane);
                    null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
                    provider = createCache();
                    null !== seedKey && void 0 !== seedKey && null !== root && console.error("The seed argument is not enabled outside experimental channels.");
                    fiber.payload = {
                        cache: provider
                    };
                    return;
            }
            provider = provider.return;
        }
    }
    function dispatchReducerAction(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        var update = {
            lane: args,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, update) : (update = enqueueConcurrentHookUpdate(fiber, queue, update, args), null !== update && (scheduleUpdateOnFiber(update, fiber, args), entangleTransitionUpdate(update, queue, args)));
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetState(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        dispatchSetStateInternal(fiber, queue, action, args);
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetStateInternal(fiber, queue, action, lane) {
        var update = {
            lane: lane,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) {
                var prevDispatcher = ReactSharedInternals.H;
                ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                    var currentState = queue.lastRenderedState, eagerState = alternate(currentState, action);
                    update.hasEagerState = !0;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), !1;
                } catch (error) {} finally{
                    ReactSharedInternals.H = prevDispatcher;
                }
            }
            action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), !0;
        }
        return !1;
    }
    function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
        null === ReactSharedInternals.T && 0 === currentEntangledLane && console.error("An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.");
        action = {
            lane: 2,
            revertLane: requestTransitionLane(),
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) {
            if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
            console.error("Cannot call startTransition while rendering.");
        } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
        markStateUpdateScheduled(fiber, 2);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber || null !== alternate && alternate === currentlyRenderingFiber;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = !0;
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
    }
    function entangleTransitionUpdate(root, queue, lane) {
        if (0 !== (lane & 4194048)) {
            var queueLanes = queue.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            queue.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function pushDebugInfo(debugInfo) {
        var previousDebugInfo = currentDebugInfo;
        null != debugInfo && (currentDebugInfo = null === previousDebugInfo ? debugInfo : previousDebugInfo.concat(debugInfo));
        return previousDebugInfo;
    }
    function validateFragmentProps(element, fiber, returnFiber) {
        for(var keys = Object.keys(element.props), i = 0; i < keys.length; i++){
            var key = keys[i];
            if ("children" !== key && "key" !== key) {
                null === fiber && (fiber = createFiberFromElement(element, returnFiber.mode, 0), fiber._debugInfo = currentDebugInfo, fiber.return = returnFiber);
                runWithFiberInDEV(fiber, function(erroredKey) {
                    console.error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", erroredKey);
                }, key);
                break;
            }
        }
    }
    function unwrapThenable(thenable) {
        var index = thenableIndexCounter;
        thenableIndexCounter += 1;
        null === thenableState && (thenableState = createThenableState());
        return trackUsedThenable(thenableState, thenable, index);
    }
    function coerceRef(workInProgress, element) {
        element = element.props.ref;
        workInProgress.ref = void 0 !== element ? element : null;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
        returnFiber = Object.prototype.toString.call(newChild);
        throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasFunctionTypeWarning[parentName] || (ownerHasFunctionTypeWarning[parentName] = !0, invalidChild = invalidChild.displayName || invalidChild.name || "Component", 3 === returnFiber.tag ? console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)", invalidChild, invalidChild, invalidChild) : console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>", invalidChild, invalidChild, parentName, invalidChild, parentName));
    }
    function warnOnSymbolType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasSymbolTypeWarning[parentName] || (ownerHasSymbolTypeWarning[parentName] = !0, invalidChild = String(invalidChild), 3 === returnFiber.tag ? console.error("Symbols are not valid as a React child.\n  root.render(%s)", invalidChild) : console.error("Symbols are not valid as a React child.\n  <%s>%s</%s>", parentName, invalidChild, parentName));
    }
    function createChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var deletions = returnFiber.deletions;
                null === deletions ? (returnFiber.deletions = [
                    childToDelete
                ], returnFiber.flags |= 16) : deletions.push(childToDelete);
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for(; null !== currentFirstChild;)deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return null;
        }
        function mapRemainingChildren(currentFirstChild) {
            for(var existingChildren = new Map(); null !== currentFirstChild;)null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            fiber = createWorkInProgress(fiber, pendingProps);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 67108866, lastPlacedIndex) : newIndex;
            newFiber.flags |= 67108866;
            return lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 67108866);
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, textContent);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return current = updateFragment(returnFiber, current, element.props.children, lanes, element.key), validateFragmentProps(element, current, returnFiber), current;
            if (null !== current && (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current._debugOwner = element._owner, current._debugInfo = currentDebugInfo, current;
            current = createFiberFromElement(element, returnFiber.mode, lanes);
            coerceRef(current, element);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, portal.children || []);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, fragment);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function createChild(returnFiber, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugOwner = returnFiber, newChild._debugTask = returnFiber._debugTask, newChild._debugInfo = currentDebugInfo, newChild;
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugInfo = currentDebugInfo, newChild;
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = createChild(returnFiber, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return lanes = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                if ("function" === typeof newChild.then) return _prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = createChild(returnFiber, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? (key = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber) : null;
                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
                    case REACT_LAZY_TYPE:
                        return key = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = updateSlot(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) {
                    if (null !== key) return null;
                    key = pushDebugInfo(newChild._debugInfo);
                    returnFiber = updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                    currentDebugInfo = key;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return key = pushDebugInfo(newChild._debugInfo), returnFiber = updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes), currentDebugInfo = key, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newIdx = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, newIdx, newChild, lanes), currentDebugInfo = existingChildren, returnFiber;
                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo7;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newIdx = existingChildren.get(newIdx) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateFragment(returnFiber, newIdx, newChild, lanes, null), currentDebugInfo = existingChildren, returnFiber;
                if ("function" === typeof newChild.then) return _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo), returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo7, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {
            if ("object" !== typeof child || null === child) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(returnFiber, workInProgress, child);
                    var key = child.key;
                    if ("string" !== typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    runWithFiberInDEV(workInProgress, function() {
                        console.error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    });
                    break;
                case REACT_LAZY_TYPE:
                    child = callLazyInitInDEV(child), warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            for(var knownKeys = null, resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, newChildren[newIdx], knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; newIdx < newChildren.length; newIdx++)oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, newChildren[newIdx], knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++)nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, newChildren[newIdx], knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
            if (null == newChildren) throw Error("An iterable object provided no iterator.");
            for(var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, knownKeys = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, step.value, knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; !step.done; newIdx++, step = newChildren.next())oldFiber = createChild(returnFiber, step.value, lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, step.value, knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next())nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, step.value, knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
            "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (validateFragmentProps(newChild, null, returnFiber), newChild = newChild.props.children);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        a: {
                            for(var key = newChild.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === key) {
                                    key = newChild.type;
                                    if (key === REACT_FRAGMENT_TYPE) {
                                        if (7 === currentFirstChild.tag) {
                                            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                            lanes = useFiber(currentFirstChild, newChild.props.children);
                                            lanes.return = returnFiber;
                                            lanes._debugOwner = newChild._owner;
                                            lanes._debugInfo = currentDebugInfo;
                                            validateFragmentProps(newChild, lanes, returnFiber);
                                            returnFiber = lanes;
                                            break a;
                                        }
                                    } else if (currentFirstChild.elementType === key || isCompatibleFamilyForHotReloading(currentFirstChild, newChild) || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(key) === currentFirstChild.type) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, newChild.props);
                                        coerceRef(lanes, newChild);
                                        lanes.return = returnFiber;
                                        lanes._debugOwner = newChild._owner;
                                        lanes._debugInfo = currentDebugInfo;
                                        returnFiber = lanes;
                                        break a;
                                    }
                                    deleteRemainingChildren(returnFiber, currentFirstChild);
                                    break;
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, validateFragmentProps(newChild, lanes, returnFiber), returnFiber = lanes) : (lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes._debugInfo = currentDebugInfo, returnFiber = lanes);
                        }
                        returnFiber = placeSingleChild(returnFiber);
                        currentDebugInfo = prevDebugInfo;
                        return returnFiber;
                    case REACT_PORTAL_TYPE:
                        a: {
                            prevDebugInfo = newChild;
                            for(newChild = prevDebugInfo.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === newChild) {
                                    if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === prevDebugInfo.containerInfo && currentFirstChild.stateNode.implementation === prevDebugInfo.implementation) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, prevDebugInfo.children || []);
                                        lanes.return = returnFiber;
                                        returnFiber = lanes;
                                        break a;
                                    } else {
                                        deleteRemainingChildren(returnFiber, currentFirstChild);
                                        break;
                                    }
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            lanes = createFiberFromPortal(prevDebugInfo, returnFiber.mode, lanes);
                            lanes.return = returnFiber;
                            returnFiber = lanes;
                        }
                        return placeSingleChild(returnFiber);
                    case REACT_LAZY_TYPE:
                        return prevDebugInfo = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                }
                if (isArrayImpl(newChild)) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (getIteratorFn(newChild)) {
                    prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                    key = getIteratorFn(newChild);
                    if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                    var newChildren = key.call(newChild);
                    if (newChildren === newChild) {
                        if (0 !== returnFiber.tag || "[object GeneratorFunction]" !== Object.prototype.toString.call(returnFiber.type) || "[object Generator]" !== Object.prototype.toString.call(newChildren)) didWarnAboutGenerators || console.error("Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items."), didWarnAboutGenerators = !0;
                    } else newChild.entries !== key || didWarnAboutMaps || (console.error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
                    returnFiber = reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes);
                    currentDebugInfo = prevDebugInfo;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return prevDebugInfo = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, prevDebugInfo), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(prevDebugInfo, returnFiber.mode, lanes), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, returnFiber = lanes), placeSingleChild(returnFiber);
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return function(returnFiber, currentFirstChild, newChild, lanes) {
            var prevDebugInfo = currentDebugInfo;
            currentDebugInfo = null;
            try {
                thenableIndexCounter = 0;
                var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
                thenableState = null;
                return firstChildFiber;
            } catch (x) {
                if (x === SuspenseException || x === SuspenseActionException) throw x;
                var fiber = createFiber(29, x, null, returnFiber.mode);
                fiber.lanes = lanes;
                fiber.return = returnFiber;
                var debugInfo = fiber._debugInfo = currentDebugInfo;
                fiber._debugOwner = returnFiber._debugOwner;
                fiber._debugTask = returnFiber._debugTask;
                if (null != debugInfo) {
                    for(var i = debugInfo.length - 1; 0 <= i; i--)if ("string" === typeof debugInfo[i].stack) {
                        fiber._debugOwner = debugInfo[i];
                        fiber._debugTask = debugInfo[i].debugTask;
                        break;
                    }
                }
                return fiber;
            } finally{
                currentDebugInfo = prevDebugInfo;
            }
        };
    }
    function pushPrimaryTreeSuspenseHandler(handler) {
        var current = handler.alternate;
        push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, handler);
        push(suspenseHandlerStackCursor, handler, handler);
        null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
    }
    function pushOffscreenSuspenseHandler(fiber) {
        if (22 === fiber.tag) {
            if (push(suspenseStackCursor, suspenseStackCursor.current, fiber), push(suspenseHandlerStackCursor, fiber, fiber), null === shellBoundary) {
                var current = fiber.alternate;
                null !== current && null !== current.memoizedState && (shellBoundary = fiber);
            }
        } else reuseSuspenseHandlerOnStack(fiber);
    }
    function reuseSuspenseHandlerOnStack(fiber) {
        push(suspenseStackCursor, suspenseStackCursor.current, fiber);
        push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current, fiber);
    }
    function popSuspenseHandler(fiber) {
        pop(suspenseHandlerStackCursor, fiber);
        shellBoundary === fiber && (shellBoundary = null);
        pop(suspenseStackCursor, fiber);
    }
    function findFirstSuspended(row) {
        for(var node = row; null !== node;){
            if (13 === node.tag) {
                var state = node.memoizedState;
                if (null !== state && (state = state.dehydrated, null === state || state.data === SUSPENSE_PENDING_START_DATA || isSuspenseInstanceFallback(state))) return node;
            } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {
                if (0 !== (node.flags & 128)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) break;
            for(; null === node.sibling;){
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    function warnOnInvalidCallback(callback) {
        if (null !== callback && "function" !== typeof callback) {
            var key = String(callback);
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback));
        }
    }
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState, partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        void 0 === partialState && (ctor = getComponentNameFromType(ctor) || "Component", didWarnAboutUndefinedDerivedState.has(ctor) || (didWarnAboutUndefinedDerivedState.add(ctor), console.error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", ctor)));
        prevState = null === partialState || void 0 === partialState ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = prevState;
        0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = prevState);
    }
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if ("function" === typeof instance.shouldComponentUpdate) {
            oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            void 0 === oldProps && console.error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return oldProps;
        }
        return ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : !0;
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== oldState && (workInProgress = getComponentNameFromFiber(workInProgress) || "Component", didWarnAboutStateAssignmentForComponent.has(workInProgress) || (didWarnAboutStateAssignmentForComponent.add(workInProgress), console.error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", workInProgress)), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
    }
    function resolveClassComponentProps(Component, baseProps) {
        var newProps = baseProps;
        if ("ref" in baseProps) {
            newProps = {};
            for(var propName in baseProps)"ref" !== propName && (newProps[propName] = baseProps[propName]);
        }
        if (Component = Component.defaultProps) {
            newProps === baseProps && (newProps = assign({}, newProps));
            for(var _propName in Component)void 0 === newProps[_propName] && (newProps[_propName] = Component[_propName]);
        }
        return newProps;
    }
    function defaultOnUncaughtError(error) {
        reportGlobalError(error);
        console.warn("%s\n\n%s\n", componentName ? "An error occurred in the <" + componentName + "> component." : "An error occurred in one of your React components.", "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.");
    }
    function defaultOnCaughtError(error) {
        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component." : "The above error occurred in one of your React components.", recreateMessage = "React will try to recreate this component tree from scratch using the error boundary you provided, " + ((errorBoundaryName || "Anonymous") + ".");
        if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
            var JSCompiler_inline_result = error.environmentName;
            error = [
                "%o\n\n%s\n\n%s\n",
                error,
                componentNameMessage,
                recreateMessage
            ].slice(0);
            "string" === typeof error[0] ? error.splice(0, 1, badgeFormat + error[0], badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle) : error.splice(0, 0, badgeFormat, badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle);
            error.unshift(console);
            JSCompiler_inline_result = bind.apply(console.error, error);
            JSCompiler_inline_result();
        } else console.error("%o\n\n%s\n\n%s\n", error, componentNameMessage, recreateMessage);
    }
    function defaultOnRecoverableError(error) {
        reportGlobalError(error);
    }
    function logUncaughtError(root, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = null;
            var error = errorInfo.value;
            if (null !== ReactSharedInternals.actQueue) ReactSharedInternals.thrownErrors.push(error);
            else {
                var onUncaughtError = root.onUncaughtError;
                onUncaughtError(error, {
                    componentStack: errorInfo.stack
                });
            }
        } catch (e$5) {
            setTimeout(function() {
                throw e$5;
            });
        }
    }
    function logCaughtError(root, boundary, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = getComponentNameFromFiber(boundary);
            var onCaughtError = root.onCaughtError;
            onCaughtError(errorInfo.value, {
                componentStack: errorInfo.stack,
                errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
            });
        } catch (e$6) {
            setTimeout(function() {
                throw e$6;
            });
        }
    }
    function createRootErrorUpdate(root, errorInfo, lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        lane.payload = {
            element: null
        };
        lane.callback = function() {
            runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);
        };
        return lane;
    }
    function createClassErrorUpdate(lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        return lane;
    }
    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
            runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([
                this
            ]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
            callComponentDidCatchInDEV(this, errorInfo);
            "function" === typeof getDerivedStateFromError || 0 === (fiber.lanes & 2) && console.error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
        });
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        sourceFiber.flags |= 32768;
        isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);
        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
            returnFiber = sourceFiber.alternate;
            null !== returnFiber && propagateParentContextChanges(returnFiber, sourceFiber, rootRenderLanes, !0);
            isHydrating && (didSuspendOrErrorDEV = !0);
            sourceFiber = suspenseHandlerStackCursor.current;
            if (null !== sourceFiber) {
                switch(sourceFiber.tag){
                    case 13:
                        return null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === sourceFiber.alternate && workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootSuspended), sourceFiber.flags &= -257, sourceFiber.flags |= 65536, sourceFiber.lanes = rootRenderLanes, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? sourceFiber.updateQueue = new Set([
                            value
                        ]) : returnFiber.add(value), attachPingListener(root, value, rootRenderLanes)), !1;
                    case 22:
                        return sourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
                            transitions: null,
                            markerInstances: null,
                            retryQueue: new Set([
                                value
                            ])
                        }, sourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([
                            value
                        ]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), !1;
                }
                throw Error("Unexpected Suspense handler tag (" + sourceFiber.tag + "). This is a bug in React.");
            }
            attachPingListener(root, value, rootRenderLanes);
            renderDidSuspendDelayIfPossible();
            return !1;
        }
        if (isHydrating) return didSuspendOrErrorDEV = !0, returnFiber = suspenseHandlerStackCursor.current, null !== returnFiber ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256), returnFiber.flags |= 65536, returnFiber.lanes = rootRenderLanes, value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.", {
            cause: value
        }), sourceFiber))) : (value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering the entire root.", {
            cause: value
        }), sourceFiber)), root = root.current.alternate, root.flags |= 65536, rootRenderLanes &= -rootRenderLanes, root.lanes |= rootRenderLanes, value = createCapturedValueAtFiber(value, sourceFiber), rootRenderLanes = createRootErrorUpdate(root.stateNode, value, rootRenderLanes), enqueueCapturedUpdate(root, rootRenderLanes), workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored)), !1;
        var error = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
            cause: value
        }), sourceFiber);
        null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [
            error
        ] : workInProgressRootConcurrentErrors.push(error);
        workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored);
        if (null === returnFiber) return !0;
        value = createCapturedValueAtFiber(value, sourceFiber);
        sourceFiber = returnFiber;
        do {
            switch(sourceFiber.tag){
                case 3:
                    return sourceFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, sourceFiber.lanes |= root, root = createRootErrorUpdate(sourceFiber.stateNode, value, root), enqueueCapturedUpdate(sourceFiber, root), !1;
                case 1:
                    if (returnFiber = sourceFiber.type, error = sourceFiber.stateNode, 0 === (sourceFiber.flags & 128) && ("function" === typeof returnFiber.getDerivedStateFromError || null !== error && "function" === typeof error.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(error)))) return sourceFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, sourceFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, sourceFiber, value), enqueueCapturedUpdate(sourceFiber, rootRenderLanes), !1;
            }
            sourceFiber = sourceFiber.return;
        }while (null !== sourceFiber);
        return !1;
    }
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        Component = Component.render;
        var ref = workInProgress.ref;
        if ("ref" in nextProps) {
            var propsWithoutRef = {};
            for(var key in nextProps)"ref" !== key && (propsWithoutRef[key] = nextProps[key]);
        } else propsWithoutRef = nextProps;
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
        key = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && key && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null === current) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && void 0 === type.defaultProps && null === Component.compare) return Component = resolveFunctionForHotReloading(type), workInProgress.tag = 15, workInProgress.type = Component, validateFunctionComponentInDev(workInProgress, type), updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes);
            current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            current.ref = workInProgress.ref;
            current.return = workInProgress;
            return workInProgress.child = current;
        }
        type = current.child;
        if (!checkScheduledUpdateOrContext(current, renderLanes)) {
            var prevProps = type.memoizedProps;
            Component = Component.compare;
            Component = null !== Component ? Component : shallowEqual;
            if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        workInProgress.flags |= 1;
        current = createWorkInProgress(type, nextProps);
        current.ref = workInProgress.ref;
        current.return = workInProgress;
        return workInProgress.child = current;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null !== current) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                if (didReceiveUpdate = !1, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
                else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, nextChildren = nextProps.children, prevState = null !== current ? current.memoizedState : null;
        if ("hidden" === nextProps.mode) {
            if (0 !== (workInProgress.flags & 128)) {
                nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
                if (null !== current) {
                    nextChildren = workInProgress.child = current.child;
                    for(prevState = 0; null !== nextChildren;)prevState = prevState | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
                    workInProgress.childLanes = prevState & ~nextProps;
                } else workInProgress.childLanes = 0, workInProgress.child = null;
                return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
            }
            if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
                baseLanes: 0,
                cachePool: null
            }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(workInProgress), pushOffscreenSuspenseHandler(workInProgress);
            else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
        } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(workInProgress), reuseSuspenseHandlerOnStack(workInProgress));
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
        var JSCompiler_inline_result = peekCacheFromPool();
        JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
            parent: CacheContext._currentValue,
            pool: JSCompiler_inline_result
        };
        workInProgress.memoizedState = {
            baseLanes: nextBaseLanes,
            cachePool: JSCompiler_inline_result
        };
        null !== current && pushTransition(workInProgress, null);
        reuseHiddenContextOnStack(workInProgress);
        pushOffscreenSuspenseHandler(workInProgress);
        null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, !0);
        return null;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 4194816);
        else {
            if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
            if (null === current || current.ref !== ref) workInProgress.flags |= 4194816;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (Component.prototype && "function" === typeof Component.prototype.render) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            didWarnAboutBadClass[componentName] || (console.error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        null === current && (validateFunctionComponentInDev(workInProgress, workInProgress.type), Component.contextTypes && (componentName = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypes[componentName] || (didWarnAboutContextTypes[componentName] = !0, console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)", componentName))));
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        Component = renderWithHooks(current, workInProgress, Component, nextProps, void 0, renderLanes);
        nextProps = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, Component, renderLanes);
        return workInProgress.child;
    }
    function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        workInProgress.updateQueue = null;
        nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
        finishRenderingHooks(current, workInProgress);
        Component = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && Component && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        switch(shouldErrorImpl(workInProgress)){
            case !1:
                var _instance = workInProgress.stateNode, state = new workInProgress.type(workInProgress.memoizedProps, _instance.context).state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case !0:
                workInProgress.flags |= 128;
                workInProgress.flags |= 65536;
                _instance = Error("Simulated error coming from DevTools");
                var lane = renderLanes & -renderLanes;
                workInProgress.lanes |= lane;
                state = workInProgressRoot;
                if (null === state) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                lane = createClassErrorUpdate(lane);
                initializeClassErrorUpdate(lane, state, workInProgress, createCapturedValueAtFiber(_instance, workInProgress));
                enqueueCapturedUpdate(workInProgress, lane);
        }
        prepareToReadContext(workInProgress);
        if (null === workInProgress.stateNode) {
            state = emptyContextObject;
            _instance = Component.contextType;
            "contextType" in Component && null !== _instance && (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) && !didWarnAboutInvalidateContextType.has(Component) && (didWarnAboutInvalidateContextType.add(Component), lane = void 0 === _instance ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : "object" !== typeof _instance ? " However, it is set to a " + typeof _instance + "." : _instance.$$typeof === REACT_CONSUMER_TYPE ? " Did you accidentally pass the Context.Consumer instead?" : " However, it is set to an object with keys {" + Object.keys(_instance).join(", ") + "}.", console.error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(Component) || "Component", lane));
            "object" === typeof _instance && null !== _instance && (state = readContext(_instance));
            _instance = new Component(nextProps, state);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    _instance = new Component(nextProps, state);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            state = workInProgress.memoizedState = null !== _instance.state && void 0 !== _instance.state ? _instance.state : null;
            _instance.updater = classComponentUpdater;
            workInProgress.stateNode = _instance;
            _instance._reactInternals = workInProgress;
            _instance._reactInternalInstance = fakeInternalInstance;
            "function" === typeof Component.getDerivedStateFromProps && null === state && (state = getComponentNameFromType(Component) || "Component", didWarnAboutUninitializedState.has(state) || (didWarnAboutUninitializedState.add(state), console.error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", state, null === _instance.state ? "null" : "undefined", state)));
            if ("function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate) {
                var foundWillUpdateName = lane = state = null;
                "function" === typeof _instance.componentWillMount && !0 !== _instance.componentWillMount.__suppressDeprecationWarning ? state = "componentWillMount" : "function" === typeof _instance.UNSAFE_componentWillMount && (state = "UNSAFE_componentWillMount");
                "function" === typeof _instance.componentWillReceiveProps && !0 !== _instance.componentWillReceiveProps.__suppressDeprecationWarning ? lane = "componentWillReceiveProps" : "function" === typeof _instance.UNSAFE_componentWillReceiveProps && (lane = "UNSAFE_componentWillReceiveProps");
                "function" === typeof _instance.componentWillUpdate && !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning ? foundWillUpdateName = "componentWillUpdate" : "function" === typeof _instance.UNSAFE_componentWillUpdate && (foundWillUpdateName = "UNSAFE_componentWillUpdate");
                if (null !== state || null !== lane || null !== foundWillUpdateName) {
                    _instance = getComponentNameFromType(Component) || "Component";
                    var newApiName = "function" === typeof Component.getDerivedStateFromProps ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                    didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance), console.error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles", _instance, newApiName, null !== state ? "\n  " + state : "", null !== lane ? "\n  " + lane : "", null !== foundWillUpdateName ? "\n  " + foundWillUpdateName : ""));
                }
            }
            _instance = workInProgress.stateNode;
            state = getComponentNameFromType(Component) || "Component";
            _instance.render || (Component.prototype && "function" === typeof Component.prototype.render ? console.error("No `render` method found on the %s instance: did you accidentally return an object from the constructor?", state) : console.error("No `render` method found on the %s instance: you may have forgotten to define `render`.", state));
            !_instance.getInitialState || _instance.getInitialState.isReactClassApproved || _instance.state || console.error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", state);
            _instance.getDefaultProps && !_instance.getDefaultProps.isReactClassApproved && console.error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", state);
            _instance.contextType && console.error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", state);
            Component.childContextTypes && !didWarnAboutChildContextTypes.has(Component) && (didWarnAboutChildContextTypes.add(Component), console.error("%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)", state));
            Component.contextTypes && !didWarnAboutContextTypes$1.has(Component) && (didWarnAboutContextTypes$1.add(Component), console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)", state));
            "function" === typeof _instance.componentShouldUpdate && console.error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", state);
            Component.prototype && Component.prototype.isPureReactComponent && "undefined" !== typeof _instance.shouldComponentUpdate && console.error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(Component) || "A pure component");
            "function" === typeof _instance.componentDidUnmount && console.error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", state);
            "function" === typeof _instance.componentDidReceiveProps && console.error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", state);
            "function" === typeof _instance.componentWillRecieveProps && console.error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", state);
            "function" === typeof _instance.UNSAFE_componentWillRecieveProps && console.error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", state);
            lane = _instance.props !== nextProps;
            void 0 !== _instance.props && lane && console.error("When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", state);
            _instance.defaultProps && console.error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", state, state);
            "function" !== typeof _instance.getSnapshotBeforeUpdate || "function" === typeof _instance.componentDidUpdate || didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) || (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component), console.error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(Component)));
            "function" === typeof _instance.getDerivedStateFromProps && console.error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof _instance.getDerivedStateFromError && console.error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof Component.getSnapshotBeforeUpdate && console.error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", state);
            (lane = _instance.state) && ("object" !== typeof lane || isArrayImpl(lane)) && console.error("%s.state: must be set to an object or null", state);
            "function" === typeof _instance.getChildContext && "object" !== typeof Component.childContextTypes && console.error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", state);
            _instance = workInProgress.stateNode;
            _instance.props = nextProps;
            _instance.state = workInProgress.memoizedState;
            _instance.refs = {};
            initializeUpdateQueue(workInProgress);
            state = Component.contextType;
            _instance.context = "object" === typeof state && null !== state ? readContext(state) : emptyContextObject;
            _instance.state === nextProps && (state = getComponentNameFromType(Component) || "Component", didWarnAboutDirectlyAssigningPropsToState.has(state) || (didWarnAboutDirectlyAssigningPropsToState.add(state), console.error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", state)));
            workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, _instance);
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, _instance);
            _instance.state = workInProgress.memoizedState;
            state = Component.getDerivedStateFromProps;
            "function" === typeof state && (applyDerivedStateFromProps(workInProgress, Component, state, nextProps), _instance.state = workInProgress.memoizedState);
            "function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || (state = _instance.state, "function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount(), state !== _instance.state && (console.error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component"), classComponentUpdater.enqueueReplaceState(_instance, _instance.state, null)), processUpdateQueue(workInProgress, nextProps, _instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), _instance.state = workInProgress.memoizedState);
            "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308);
            (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728);
            _instance = !0;
        } else if (null === current) {
            _instance = workInProgress.stateNode;
            var unresolvedOldProps = workInProgress.memoizedProps;
            lane = resolveClassComponentProps(Component, unresolvedOldProps);
            _instance.props = lane;
            var oldContext = _instance.context;
            foundWillUpdateName = Component.contextType;
            state = emptyContextObject;
            "object" === typeof foundWillUpdateName && null !== foundWillUpdateName && (state = readContext(foundWillUpdateName));
            newApiName = Component.getDerivedStateFromProps;
            foundWillUpdateName = "function" === typeof newApiName || "function" === typeof _instance.getSnapshotBeforeUpdate;
            unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
            foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== state) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, state);
            hasForceUpdate = !1;
            var oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            oldContext = workInProgress.memoizedState;
            unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof newApiName && (applyDerivedStateFromProps(workInProgress, Component, newApiName, nextProps), oldContext = workInProgress.memoizedState), (lane = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, lane, nextProps, oldState, oldContext, state)) ? (foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || ("function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount()), "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728)) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), _instance.props = nextProps, _instance.state = oldContext, _instance.context = state, _instance = lane) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), _instance = !1);
        } else {
            _instance = workInProgress.stateNode;
            cloneUpdateQueue(current, workInProgress);
            state = workInProgress.memoizedProps;
            foundWillUpdateName = resolveClassComponentProps(Component, state);
            _instance.props = foundWillUpdateName;
            newApiName = workInProgress.pendingProps;
            oldState = _instance.context;
            oldContext = Component.contextType;
            lane = emptyContextObject;
            "object" === typeof oldContext && null !== oldContext && (lane = readContext(oldContext));
            unresolvedOldProps = Component.getDerivedStateFromProps;
            (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof _instance.getSnapshotBeforeUpdate) || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (state !== newApiName || oldState !== lane) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, lane);
            hasForceUpdate = !1;
            oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            var newState = workInProgress.memoizedState;
            state !== newApiName || oldState !== newState || hasForceUpdate || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (foundWillUpdateName = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, foundWillUpdateName, nextProps, oldState, newState, lane) || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies)) ? (oldContext || "function" !== typeof _instance.UNSAFE_componentWillUpdate && "function" !== typeof _instance.componentWillUpdate || ("function" === typeof _instance.componentWillUpdate && _instance.componentWillUpdate(nextProps, newState, lane), "function" === typeof _instance.UNSAFE_componentWillUpdate && _instance.UNSAFE_componentWillUpdate(nextProps, newState, lane)), "function" === typeof _instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof _instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), _instance.props = nextProps, _instance.state = newState, _instance.context = lane, _instance = foundWillUpdateName) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), _instance = !1);
        }
        lane = _instance;
        markRef(current, workInProgress);
        state = 0 !== (workInProgress.flags & 128);
        if (lane || state) {
            lane = workInProgress.stateNode;
            setCurrentFiber(workInProgress);
            if (state && "function" !== typeof Component.getDerivedStateFromError) Component = null, profilerStartTime = -1;
            else {
                markComponentRenderStarted(workInProgress);
                Component = callRenderInDEV(lane);
                if (workInProgress.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(!0);
                    try {
                        callRenderInDEV(lane);
                    } finally{
                        setIsStrictModeForDevtools(!1);
                    }
                }
                markComponentRenderStopped();
            }
            workInProgress.flags |= 1;
            null !== current && state ? (workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current, workInProgress, Component, renderLanes);
            workInProgress.memoizedState = lane.state;
            current = workInProgress.child;
        } else current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        renderLanes = workInProgress.stateNode;
        _instance && renderLanes.props !== nextProps && (didWarnAboutReassigningProps || console.error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component"), didWarnAboutReassigningProps = !0);
        return current;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes) {
        resetHydrationState();
        workInProgress.flags |= 256;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        Component && Component.childContextTypes && console.error("childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...", Component.displayName || Component.name || "Component");
        "function" === typeof Component.getDerivedStateFromProps && (workInProgress = getComponentNameFromType(Component) || "Unknown", didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] || (console.error("%s: Function components do not support getDerivedStateFromProps.", workInProgress), didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] = !0));
        "object" === typeof Component.contextType && null !== Component.contextType && (Component = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypeOnFunctionComponent[Component] || (console.error("%s: Function components do not support contextType.", Component), didWarnAboutContextTypeOnFunctionComponent[Component] = !0));
    }
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache()
        };
    }
    function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
        current = null !== current ? current.childLanes & ~renderLanes : 0;
        primaryTreeDidDefer && (current |= workInProgressDeferredLane);
        return current;
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var JSCompiler_object_inline_digest_2451;
        var JSCompiler_object_inline_stack_2452 = workInProgress.pendingProps;
        shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
        var JSCompiler_object_inline_componentStack_2453 = !1;
        var didSuspend = 0 !== (workInProgress.flags & 128);
        (JSCompiler_object_inline_digest_2451 = didSuspend) || (JSCompiler_object_inline_digest_2451 = null !== current && null === current.memoizedState ? !1 : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
        JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_componentStack_2453 = !0, workInProgress.flags &= -129);
        JSCompiler_object_inline_digest_2451 = 0 !== (workInProgress.flags & 32);
        workInProgress.flags &= -33;
        if (null === current) {
            if (isHydrating) {
                JSCompiler_object_inline_componentStack_2453 ? pushPrimaryTreeSuspenseHandler(workInProgress) : reuseSuspenseHandlerOnStack(workInProgress);
                if (isHydrating) {
                    var JSCompiler_object_inline_message_2450 = nextHydratableInstance;
                    var JSCompiler_temp;
                    if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2450)) {
                        c: {
                            var instance = JSCompiler_object_inline_message_2450;
                            for(JSCompiler_temp = rootOrSingletonContext; 8 !== instance.nodeType;){
                                if (!JSCompiler_temp) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                                instance = getNextHydratable(instance.nextSibling);
                                if (null === instance) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                            }
                            JSCompiler_temp = instance;
                        }
                        null !== JSCompiler_temp ? (warnIfNotHydrating(), workInProgress.memoizedState = {
                            dehydrated: JSCompiler_temp,
                            treeContext: null !== treeContextProvider ? {
                                id: treeContextId,
                                overflow: treeContextOverflow
                            } : null,
                            retryLane: 536870912,
                            hydrationErrors: null
                        }, instance = createFiber(18, null, null, NoMode), instance.stateNode = JSCompiler_temp, instance.return = workInProgress, workInProgress.child = instance, hydrationParentFiber = workInProgress, nextHydratableInstance = null, JSCompiler_temp = !0) : JSCompiler_temp = !1;
                        JSCompiler_temp = !JSCompiler_temp;
                    }
                    JSCompiler_temp && (warnNonHydratedInstance(workInProgress, JSCompiler_object_inline_message_2450), throwOnHydrationMismatch(workInProgress));
                }
                JSCompiler_object_inline_message_2450 = workInProgress.memoizedState;
                if (null !== JSCompiler_object_inline_message_2450 && (JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_message_2450.dehydrated, null !== JSCompiler_object_inline_message_2450)) return isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450) ? workInProgress.lanes = 32 : workInProgress.lanes = 536870912, null;
                popSuspenseHandler(workInProgress);
            }
            JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_stack_2452.children;
            JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_stack_2452.fallback;
            if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = workInProgress.mode, JSCompiler_object_inline_message_2450 = mountWorkInProgressOffscreenFiber({
                mode: "hidden",
                children: JSCompiler_object_inline_message_2450
            }, JSCompiler_object_inline_componentStack_2453), JSCompiler_object_inline_stack_2452 = createFiberFromFragment(JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_componentStack_2453, renderLanes, null), JSCompiler_object_inline_message_2450.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_message_2450.sibling = JSCompiler_object_inline_stack_2452, workInProgress.child = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_componentStack_2453.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
            pushPrimaryTreeSuspenseHandler(workInProgress);
            return mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_message_2450);
        }
        var prevState = current.memoizedState;
        if (null !== prevState && (JSCompiler_object_inline_message_2450 = prevState.dehydrated, null !== JSCompiler_object_inline_message_2450)) {
            if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_object_inline_stack_2452 = mountWorkInProgressOffscreenFiber({
                mode: "visible",
                children: JSCompiler_object_inline_stack_2452.children
            }, JSCompiler_object_inline_message_2450), JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, reconcileChildFibers(workInProgress, current.child, null, renderLanes), JSCompiler_object_inline_stack_2452 = workInProgress.child, JSCompiler_object_inline_stack_2452.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_stack_2452.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = JSCompiler_object_inline_componentStack_2453);
            else if (pushPrimaryTreeSuspenseHandler(workInProgress), isHydrating && console.error("We should not be hydrating here. This is a bug in React. Please file a bug."), isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450)) {
                JSCompiler_object_inline_digest_2451 = JSCompiler_object_inline_message_2450.nextSibling && JSCompiler_object_inline_message_2450.nextSibling.dataset;
                if (JSCompiler_object_inline_digest_2451) {
                    JSCompiler_temp = JSCompiler_object_inline_digest_2451.dgst;
                    var message = JSCompiler_object_inline_digest_2451.msg;
                    instance = JSCompiler_object_inline_digest_2451.stck;
                    var componentStack = JSCompiler_object_inline_digest_2451.cstck;
                }
                JSCompiler_object_inline_message_2450 = message;
                JSCompiler_object_inline_digest_2451 = JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = instance;
                JSCompiler_temp = JSCompiler_object_inline_componentStack_2453 = componentStack;
                JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_message_2450 ? Error(JSCompiler_object_inline_message_2450) : Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                JSCompiler_object_inline_componentStack_2453.stack = JSCompiler_object_inline_stack_2452 || "";
                JSCompiler_object_inline_componentStack_2453.digest = JSCompiler_object_inline_digest_2451;
                JSCompiler_object_inline_digest_2451 = void 0 === JSCompiler_temp ? null : JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = {
                    value: JSCompiler_object_inline_componentStack_2453,
                    source: null,
                    stack: JSCompiler_object_inline_digest_2451
                };
                "string" === typeof JSCompiler_object_inline_digest_2451 && CapturedStacks.set(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_stack_2452);
                queueHydrationError(JSCompiler_object_inline_stack_2452);
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, !1), JSCompiler_object_inline_digest_2451 = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_object_inline_digest_2451) {
                JSCompiler_object_inline_digest_2451 = workInProgressRoot;
                if (null !== JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_stack_2452 = renderLanes & -renderLanes, JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & 42) ? 1 : getBumpedLaneForHydrationByLane(JSCompiler_object_inline_stack_2452), JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & (JSCompiler_object_inline_digest_2451.suspendedLanes | renderLanes)) ? 0 : JSCompiler_object_inline_stack_2452, 0 !== JSCompiler_object_inline_stack_2452 && JSCompiler_object_inline_stack_2452 !== prevState.retryLane)) throw prevState.retryLane = JSCompiler_object_inline_stack_2452, enqueueConcurrentRenderForLane(current, JSCompiler_object_inline_stack_2452), scheduleUpdateOnFiber(JSCompiler_object_inline_digest_2451, current, JSCompiler_object_inline_stack_2452), SelectiveHydrationException;
                JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA ? (workInProgress.flags |= 192, workInProgress.child = current.child, workInProgress = null) : (current = prevState.treeContext, nextHydratableInstance = getNextHydratable(JSCompiler_object_inline_message_2450.nextSibling), hydrationParentFiber = workInProgress, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, rootOrSingletonContext = !1, null !== current && (warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextId = current.id, treeContextOverflow = current.overflow, treeContextProvider = workInProgress), workInProgress = mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_stack_2452.children), workInProgress.flags |= 4096);
            return workInProgress;
        }
        if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_temp = current.child, instance = JSCompiler_temp.sibling, JSCompiler_object_inline_stack_2452 = createWorkInProgress(JSCompiler_temp, {
            mode: "hidden",
            children: JSCompiler_object_inline_stack_2452.children
        }), JSCompiler_object_inline_stack_2452.subtreeFlags = JSCompiler_temp.subtreeFlags & 65011712, null !== instance ? JSCompiler_object_inline_componentStack_2453 = createWorkInProgress(instance, JSCompiler_object_inline_componentStack_2453) : (JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2), JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_message_2450 = current.child.memoizedState, null === JSCompiler_object_inline_message_2450 ? JSCompiler_object_inline_message_2450 = mountSuspenseOffscreenState(renderLanes) : (JSCompiler_temp = JSCompiler_object_inline_message_2450.cachePool, null !== JSCompiler_temp ? (instance = CacheContext._currentValue, JSCompiler_temp = JSCompiler_temp.parent !== instance ? {
            parent: instance,
            pool: instance
        } : JSCompiler_temp) : JSCompiler_temp = getSuspendedCache(), JSCompiler_object_inline_message_2450 = {
            baseLanes: JSCompiler_object_inline_message_2450.baseLanes | renderLanes,
            cachePool: JSCompiler_temp
        }), JSCompiler_object_inline_componentStack_2453.memoizedState = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
        pushPrimaryTreeSuspenseHandler(workInProgress);
        renderLanes = current.child;
        current = renderLanes.sibling;
        renderLanes = createWorkInProgress(renderLanes, {
            mode: "visible",
            children: JSCompiler_object_inline_stack_2452.children
        });
        renderLanes.return = workInProgress;
        renderLanes.sibling = null;
        null !== current && (JSCompiler_object_inline_digest_2451 = workInProgress.deletions, null === JSCompiler_object_inline_digest_2451 ? (workInProgress.deletions = [
            current
        ], workInProgress.flags |= 16) : JSCompiler_object_inline_digest_2451.push(current));
        workInProgress.child = renderLanes;
        workInProgress.memoizedState = null;
        return renderLanes;
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
        primaryChildren = mountWorkInProgressOffscreenFiber({
            mode: "visible",
            children: primaryChildren
        }, workInProgress.mode);
        primaryChildren.return = workInProgress;
        return workInProgress.child = primaryChildren;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
        offscreenProps = createFiber(22, offscreenProps, null, mode);
        offscreenProps.lanes = 0;
        offscreenProps.stateNode = {
            _visibility: OffscreenVisible,
            _pendingMarkers: null,
            _retryCache: null,
            _transitions: null
        };
        return offscreenProps;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
        current.flags |= 2;
        workInProgress.memoizedState = null;
        return current;
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes |= renderLanes;
        var alternate = fiber.alternate;
        null !== alternate && (alternate.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArrayImpl(childSlot);
        childSlot = !isAnArray && "function" === typeof getIteratorFn(childSlot);
        return isAnArray || childSlot ? (isAnArray = isAnArray ? "array" : "iterable", console.error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", isAnArray, index, isAnArray), !1) : !0;
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
    }
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, revealOrder = nextProps.revealOrder, tailMode = nextProps.tail;
        nextProps = nextProps.children;
        if (void 0 !== revealOrder && "forwards" !== revealOrder && "backwards" !== revealOrder && "together" !== revealOrder && !didWarnAboutRevealOrder[revealOrder]) {
            if (didWarnAboutRevealOrder[revealOrder] = !0, "string" === typeof revealOrder) switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    console.error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
            }
            else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
        void 0 === tailMode || didWarnAboutTailOptions[tailMode] || ("collapsed" !== tailMode && "hidden" !== tailMode ? (didWarnAboutTailOptions[tailMode] = !0, console.error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode)) : "forwards" !== revealOrder && "backwards" !== revealOrder && (didWarnAboutTailOptions[tailMode] = !0, console.error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode)));
        a: if (("forwards" === revealOrder || "backwards" === revealOrder) && void 0 !== nextProps && null !== nextProps && !1 !== nextProps) {
            if (isArrayImpl(nextProps)) for(var i = 0; i < nextProps.length; i++){
                if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;
            }
            else if (i = getIteratorFn(nextProps), "function" === typeof i) {
                if (i = i.call(nextProps)) for(var step = i.next(), _i = 0; !step.done; step = i.next()){
                    if (!validateSuspenseListNestedChild(step.value, _i)) break a;
                    _i++;
                }
            } else console.error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
        }
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.flags |= 128;
        else {
            if (null !== current && 0 !== (current.flags & 128)) a: for(current = workInProgress.child; null !== current;){
                if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (null !== current.child) {
                    current.child.return = current;
                    current = current.child;
                    continue;
                }
                if (current === workInProgress) break a;
                for(; null === current.sibling;){
                    if (null === current.return || current.return === workInProgress) break a;
                    current = current.return;
                }
                current.sibling.return = current.return;
                current = current.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        switch(revealOrder){
            case "forwards":
                renderLanes = workInProgress.child;
                for(revealOrder = null; null !== renderLanes;)current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
                renderLanes = revealOrder;
                null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
                initSuspenseListRenderState(workInProgress, !1, revealOrder, renderLanes, tailMode);
                break;
            case "backwards":
                renderLanes = null;
                revealOrder = workInProgress.child;
                for(workInProgress.child = null; null !== revealOrder;){
                    current = revealOrder.alternate;
                    if (null !== current && null === findFirstSuspended(current)) {
                        workInProgress.child = revealOrder;
                        break;
                    }
                    current = revealOrder.sibling;
                    revealOrder.sibling = renderLanes;
                    renderLanes = revealOrder;
                    revealOrder = current;
                }
                initSuspenseListRenderState(workInProgress, !0, renderLanes, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, !1, null, null, void 0);
                break;
            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        null !== current && (workInProgress.dependencies = current.dependencies);
        profilerStartTime = -1;
        workInProgressRootSkippedLanes |= workInProgress.lanes;
        if (0 === (renderLanes & workInProgress.childLanes)) {
            if (null !== current) {
                if (propagateParentContextChanges(current, workInProgress, renderLanes, !1), 0 === (renderLanes & workInProgress.childLanes)) return null;
            } else return null;
        }
        if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
        if (null !== workInProgress.child) {
            current = workInProgress.child;
            renderLanes = createWorkInProgress(current, current.pendingProps);
            workInProgress.child = renderLanes;
            for(renderLanes.return = workInProgress; null !== current.sibling;)current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
            renderLanes.sibling = null;
        }
        return workInProgress.child;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        if (0 !== (current.lanes & renderLanes)) return !0;
        current = current.dependencies;
        return null !== current && checkIfContextChanged(current) ? !0 : !1;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case 3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
                resetHydrationState();
                break;
            case 27:
            case 5:
                pushHostContext(workInProgress);
                break;
            case 4:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case 10:
                pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
                break;
            case 12:
                0 !== (renderLanes & workInProgress.childLanes) && (workInProgress.flags |= 4);
                workInProgress.flags |= 2048;
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = -0;
                stateNode.passiveEffectDuration = -0;
                break;
            case 13:
                stateNode = workInProgress.memoizedState;
                if (null !== stateNode) {
                    if (null !== stateNode.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
                    if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
                    pushPrimaryTreeSuspenseHandler(workInProgress);
                    current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                    return null !== current ? current.sibling : null;
                }
                pushPrimaryTreeSuspenseHandler(workInProgress);
                break;
            case 19:
                var didSuspendBefore = 0 !== (current.flags & 128);
                stateNode = 0 !== (renderLanes & workInProgress.childLanes);
                stateNode || (propagateParentContextChanges(current, workInProgress, renderLanes, !1), stateNode = 0 !== (renderLanes & workInProgress.childLanes));
                if (didSuspendBefore) {
                    if (stateNode) return updateSuspenseListComponent(current, workInProgress, renderLanes);
                    workInProgress.flags |= 128;
                }
                didSuspendBefore = workInProgress.memoizedState;
                null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
                push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                if (stateNode) break;
                else return null;
            case 22:
            case 23:
                return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && null !== current) {
            renderLanes = createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes);
            renderLanes._debugStack = workInProgress._debugStack;
            renderLanes._debugTask = workInProgress._debugTask;
            var returnFiber = workInProgress.return;
            if (null === returnFiber) throw Error("Cannot swap the root fiber.");
            current.alternate = null;
            workInProgress.alternate = null;
            renderLanes.index = workInProgress.index;
            renderLanes.sibling = workInProgress.sibling;
            renderLanes.return = workInProgress.return;
            renderLanes.ref = workInProgress.ref;
            renderLanes._debugInfo = workInProgress._debugInfo;
            if (workInProgress === returnFiber.child) returnFiber.child = renderLanes;
            else {
                var prevSibling = returnFiber.child;
                if (null === prevSibling) throw Error("Expected parent to have a child.");
                for(; prevSibling.sibling !== workInProgress;)if (prevSibling = prevSibling.sibling, null === prevSibling) throw Error("Expected to find the previous sibling.");
                prevSibling.sibling = renderLanes;
            }
            workInProgress = returnFiber.deletions;
            null === workInProgress ? (returnFiber.deletions = [
                current
            ], returnFiber.flags |= 16) : workInProgress.push(current);
            renderLanes.flags |= 2;
            return renderLanes;
        }
        if (null !== current) {
            if (current.memoizedProps !== workInProgress.pendingProps || workInProgress.type !== current.type) didReceiveUpdate = !0;
            else {
                if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = !1, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
            }
        } else {
            didReceiveUpdate = !1;
            if (returnFiber = isHydrating) warnIfNotHydrating(), returnFiber = 0 !== (workInProgress.flags & 1048576);
            returnFiber && (returnFiber = workInProgress.index, warnIfNotHydrating(), pushTreeId(workInProgress, treeForkCount, returnFiber));
        }
        workInProgress.lanes = 0;
        switch(workInProgress.tag){
            case 16:
                a: if (returnFiber = workInProgress.pendingProps, current = callLazyInitInDEV(workInProgress.elementType), workInProgress.type = current, "function" === typeof current) shouldConstruct(current) ? (returnFiber = resolveClassComponentProps(current, returnFiber), workInProgress.tag = 1, workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateClassComponent(null, workInProgress, current, returnFiber, renderLanes)) : (workInProgress.tag = 0, validateFunctionComponentInDev(workInProgress, current), workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateFunctionComponent(null, workInProgress, current, returnFiber, renderLanes));
                else {
                    if (void 0 !== current && null !== current) {
                        if (prevSibling = current.$$typeof, prevSibling === REACT_FORWARD_REF_TYPE) {
                            workInProgress.tag = 11;
                            workInProgress.type = current = resolveForwardRefForHotReloading(current);
                            workInProgress = updateForwardRef(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        } else if (prevSibling === REACT_MEMO_TYPE) {
                            workInProgress.tag = 14;
                            workInProgress = updateMemoComponent(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        }
                    }
                    workInProgress = "";
                    null !== current && "object" === typeof current && current.$$typeof === REACT_LAZY_TYPE && (workInProgress = " Did you wrap a component in React.lazy() more than once?");
                    current = getComponentNameFromType(current) || current;
                    throw Error("Element type is invalid. Received a promise that resolves to: " + current + ". Lazy element type must resolve to a class or function." + workInProgress);
                }
                return workInProgress;
            case 0:
                return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 1:
                return returnFiber = workInProgress.type, prevSibling = resolveClassComponentProps(returnFiber, workInProgress.pendingProps), updateClassComponent(current, workInProgress, returnFiber, prevSibling, renderLanes);
            case 3:
                a: {
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                    if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
                    returnFiber = workInProgress.pendingProps;
                    var prevState = workInProgress.memoizedState;
                    prevSibling = prevState.element;
                    cloneUpdateQueue(current, workInProgress);
                    processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
                    var nextState = workInProgress.memoizedState;
                    returnFiber = nextState.cache;
                    pushProvider(workInProgress, CacheContext, returnFiber);
                    returnFiber !== prevState.cache && propagateContextChanges(workInProgress, [
                        CacheContext
                    ], renderLanes, !0);
                    suspendIfUpdateReadFromEntangledAsyncAction();
                    returnFiber = nextState.element;
                    if (prevState.isDehydrated) {
                        if (prevState = {
                            element: returnFiber,
                            isDehydrated: !1,
                            cache: nextState.cache
                        }, workInProgress.updateQueue.baseState = prevState, workInProgress.memoizedState = prevState, workInProgress.flags & 256) {
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else if (returnFiber !== prevSibling) {
                            prevSibling = createCapturedValueAtFiber(Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                            queueHydrationError(prevSibling);
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else {
                            current = workInProgress.stateNode.containerInfo;
                            switch(current.nodeType){
                                case 9:
                                    current = current.body;
                                    break;
                                default:
                                    current = "HTML" === current.nodeName ? current.ownerDocument.body : current;
                            }
                            nextHydratableInstance = getNextHydratable(current.firstChild);
                            hydrationParentFiber = workInProgress;
                            isHydrating = !0;
                            hydrationErrors = null;
                            didSuspendOrErrorDEV = !1;
                            hydrationDiffRootDEV = null;
                            rootOrSingletonContext = !0;
                            current = mountChildFibers(workInProgress, null, returnFiber, renderLanes);
                            for(workInProgress.child = current; current;)current.flags = current.flags & -3 | 4096, current = current.sibling;
                        }
                    } else {
                        resetHydrationState();
                        if (returnFiber === prevSibling) {
                            workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                            break a;
                        }
                        reconcileChildren(current, workInProgress, returnFiber, renderLanes);
                    }
                    workInProgress = workInProgress.child;
                }
                return workInProgress;
            case 26:
                return markRef(current, workInProgress), null === current ? (current = getResource(workInProgress.type, null, workInProgress.pendingProps, null)) ? workInProgress.memoizedState = current : isHydrating || (current = workInProgress.type, renderLanes = workInProgress.pendingProps, returnFiber = requiredContext(rootInstanceStackCursor.current), returnFiber = getOwnerDocumentFromRootContainer(returnFiber).createElement(current), returnFiber[internalInstanceKey] = workInProgress, returnFiber[internalPropsKey] = renderLanes, setInitialProperties(returnFiber, current, renderLanes), markNodeAsHoistable(returnFiber), workInProgress.stateNode = returnFiber) : workInProgress.memoizedState = getResource(workInProgress.type, current.memoizedProps, workInProgress.pendingProps, current.memoizedState), null;
            case 27:
                return pushHostContext(workInProgress), null === current && isHydrating && (returnFiber = requiredContext(rootInstanceStackCursor.current), prevSibling = getHostContext(), returnFiber = workInProgress.stateNode = resolveSingletonInstance(workInProgress.type, workInProgress.pendingProps, returnFiber, prevSibling, !1), didSuspendOrErrorDEV || (prevSibling = diffHydratedProperties(returnFiber, workInProgress.type, workInProgress.pendingProps, prevSibling), null !== prevSibling && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevSibling)), hydrationParentFiber = workInProgress, rootOrSingletonContext = !0, prevSibling = nextHydratableInstance, isSingletonScope(workInProgress.type) ? (previousHydratableOnEnteringScopedSingleton = prevSibling, nextHydratableInstance = getNextHydratable(returnFiber.firstChild)) : nextHydratableInstance = prevSibling), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), markRef(current, workInProgress), null === current && (workInProgress.flags |= 4194304), workInProgress.child;
            case 5:
                return null === current && isHydrating && (prevState = getHostContext(), returnFiber = validateDOMNesting(workInProgress.type, prevState.ancestorInfo), prevSibling = nextHydratableInstance, (nextState = !prevSibling) || (nextState = canHydrateInstance(prevSibling, workInProgress.type, workInProgress.pendingProps, rootOrSingletonContext), null !== nextState ? (workInProgress.stateNode = nextState, didSuspendOrErrorDEV || (prevState = diffHydratedProperties(nextState, workInProgress.type, workInProgress.pendingProps, prevState), null !== prevState && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevState)), hydrationParentFiber = workInProgress, nextHydratableInstance = getNextHydratable(nextState.firstChild), rootOrSingletonContext = !1, prevState = !0) : prevState = !1, nextState = !prevState), nextState && (returnFiber && warnNonHydratedInstance(workInProgress, prevSibling), throwOnHydrationMismatch(workInProgress))), pushHostContext(workInProgress), prevSibling = workInProgress.type, prevState = workInProgress.pendingProps, nextState = null !== current ? current.memoizedProps : null, returnFiber = prevState.children, shouldSetTextContent(prevSibling, prevState) ? returnFiber = null : null !== nextState && shouldSetTextContent(prevSibling, nextState) && (workInProgress.flags |= 32), null !== workInProgress.memoizedState && (prevSibling = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue = prevSibling), markRef(current, workInProgress), reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 6:
                return null === current && isHydrating && (current = workInProgress.pendingProps, renderLanes = getHostContext(), returnFiber = renderLanes.ancestorInfo.current, current = null != returnFiber ? validateTextNesting(current, returnFiber.tag, renderLanes.ancestorInfo.implicitRootScope) : !0, renderLanes = nextHydratableInstance, (returnFiber = !renderLanes) || (returnFiber = canHydrateTextInstance(renderLanes, workInProgress.pendingProps, rootOrSingletonContext), null !== returnFiber ? (workInProgress.stateNode = returnFiber, hydrationParentFiber = workInProgress, nextHydratableInstance = null, returnFiber = !0) : returnFiber = !1, returnFiber = !returnFiber), returnFiber && (current && warnNonHydratedInstance(workInProgress, renderLanes), throwOnHydrationMismatch(workInProgress))), null;
            case 13:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), returnFiber = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, returnFiber, renderLanes) : reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 11:
                return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 7:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
            case 8:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 12:
                return workInProgress.flags |= 4, workInProgress.flags |= 2048, returnFiber = workInProgress.stateNode, returnFiber.effectDuration = -0, returnFiber.passiveEffectDuration = -0, reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 10:
                return returnFiber = workInProgress.type, prevSibling = workInProgress.pendingProps, prevState = prevSibling.value, "value" in prevSibling || hasWarnedAboutUsingNoValuePropOnContextProvider || (hasWarnedAboutUsingNoValuePropOnContextProvider = !0, console.error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?")), pushProvider(workInProgress, returnFiber, prevState), reconcileChildren(current, workInProgress, prevSibling.children, renderLanes), workInProgress.child;
            case 9:
                return prevSibling = workInProgress.type._context, returnFiber = workInProgress.pendingProps.children, "function" !== typeof returnFiber && console.error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), prepareToReadContext(workInProgress), prevSibling = readContext(prevSibling), markComponentRenderStarted(workInProgress), returnFiber = callComponentInDEV(returnFiber, prevSibling, void 0), markComponentRenderStopped(), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 14:
                return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 15:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 19:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case 31:
                return returnFiber = workInProgress.pendingProps, renderLanes = workInProgress.mode, returnFiber = {
                    mode: returnFiber.mode,
                    children: returnFiber.children
                }, null === current ? (current = mountWorkInProgressOffscreenFiber(returnFiber, renderLanes), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current) : (current = createWorkInProgress(current.child, returnFiber), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current), workInProgress;
            case 22:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                return prepareToReadContext(workInProgress), returnFiber = readContext(CacheContext), null === current ? (prevSibling = peekCacheFromPool(), null === prevSibling && (prevSibling = workInProgressRoot, prevState = createCache(), prevSibling.pooledCache = prevState, retainCache(prevState), null !== prevState && (prevSibling.pooledCacheLanes |= renderLanes), prevSibling = prevState), workInProgress.memoizedState = {
                    parent: returnFiber,
                    cache: prevSibling
                }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, prevSibling)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), prevSibling = current.memoizedState, prevState = workInProgress.memoizedState, prevSibling.parent !== returnFiber ? (prevSibling = {
                    parent: returnFiber,
                    cache: returnFiber
                }, workInProgress.memoizedState = prevSibling, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = prevSibling), pushProvider(workInProgress, CacheContext, returnFiber)) : (returnFiber = prevState.cache, pushProvider(workInProgress, CacheContext, returnFiber), returnFiber !== prevSibling.cache && propagateContextChanges(workInProgress, [
                    CacheContext
                ], renderLanes, !0))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 29:
                throw workInProgress.pendingProps;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        workInProgress.flags |= 4;
    }
    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
        if ("stylesheet" !== resource.type || (resource.state.loading & Inserted) !== NotLoaded) workInProgress.flags &= -16777217;
        else if (workInProgress.flags |= 16777216, !preloadResource(resource)) {
            resource = suspenseHandlerStackCursor.current;
            if (null !== resource && ((workInProgressRootRenderLanes & 4194048) === workInProgressRootRenderLanes ? null !== shellBoundary : (workInProgressRootRenderLanes & 62914560) !== workInProgressRootRenderLanes && 0 === (workInProgressRootRenderLanes & 536870912) || resource !== shellBoundary)) throw suspendedThenable = noopSuspenseyCommitThenable, SuspenseyCommitException;
            workInProgress.flags |= 8192;
        }
    }
    function scheduleRetryEffect(workInProgress, retryQueue) {
        null !== retryQueue && (workInProgress.flags |= 4);
        workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
    }
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (!isHydrating) switch(renderState.tailMode){
            case "hidden":
                hasRenderedATailFallback = renderState.tail;
                for(var lastTailNode = null; null !== hasRenderedATailFallback;)null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;
            case "collapsed":
                lastTailNode = renderState.tail;
                for(var _lastTailNode = null; null !== lastTailNode;)null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child, newChildLanes = 0, subtreeFlags = 0;
        if (didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                for(var _treeBaseDuration = completedWork.selfBaseDuration, _child2 = completedWork.child; null !== _child2;)newChildLanes |= _child2.lanes | _child2.childLanes, subtreeFlags |= _child2.subtreeFlags & 65011712, subtreeFlags |= _child2.flags & 65011712, _treeBaseDuration += _child2.treeBaseDuration, _child2 = _child2.sibling;
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712, subtreeFlags |= _treeBaseDuration.flags & 65011712, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        } else if ((completedWork.mode & ProfileMode) !== NoMode) {
            _treeBaseDuration = completedWork.actualDuration;
            _child2 = completedWork.selfBaseDuration;
            for(var child = completedWork.child; null !== child;)newChildLanes |= child.lanes | child.childLanes, subtreeFlags |= child.subtreeFlags, subtreeFlags |= child.flags, _treeBaseDuration += child.actualDuration, _child2 += child.treeBaseDuration, child = child.sibling;
            completedWork.actualDuration = _treeBaseDuration;
            completedWork.treeBaseDuration = _child2;
        } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags, subtreeFlags |= _treeBaseDuration.flags, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        completedWork.subtreeFlags |= subtreeFlags;
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 31:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return bubbleProperties(workInProgress), null;
            case 1:
                return bubbleProperties(workInProgress), null;
            case 3:
                renderLanes = workInProgress.stateNode;
                newProps = null;
                null !== current && (newProps = current.memoizedState.cache);
                workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048);
                popProvider(CacheContext, workInProgress);
                popHostContainer(workInProgress);
                renderLanes.pendingContext && (renderLanes.context = renderLanes.pendingContext, renderLanes.pendingContext = null);
                if (null === current || null === current.child) popHydrationState(workInProgress) ? (emitPendingHydrationWarnings(), markUpdate(workInProgress)) : null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, upgradeHydrationErrorsToRecoverable());
                bubbleProperties(workInProgress);
                return null;
            case 26:
                return renderLanes = workInProgress.memoizedState, null === current ? (markUpdate(workInProgress), null !== renderLanes ? (bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217)) : renderLanes ? renderLanes !== current.memoizedState ? (markUpdate(workInProgress), bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217) : (current.memoizedProps !== newProps && markUpdate(workInProgress), bubbleProperties(workInProgress), workInProgress.flags &= -16777217), null;
            case 27:
                popHostContext(workInProgress);
                renderLanes = requiredContext(rootInstanceStackCursor.current);
                var _type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    current = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostInstance(workInProgress, current) : (current = resolveSingletonInstance(_type, newProps, renderLanes, current, !0), workInProgress.stateNode = current, markUpdate(workInProgress));
                }
                bubbleProperties(workInProgress);
                return null;
            case 5:
                popHostContext(workInProgress);
                renderLanes = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    _type = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, _type);
                    else {
                        current = requiredContext(rootInstanceStackCursor.current);
                        validateDOMNesting(renderLanes, _type.ancestorInfo);
                        _type = _type.context;
                        current = getOwnerDocumentFromRootContainer(current);
                        switch(_type){
                            case HostContextNamespaceSvg:
                                current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                break;
                            case HostContextNamespaceMath:
                                current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                break;
                            default:
                                switch(renderLanes){
                                    case "svg":
                                        current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                        break;
                                    case "math":
                                        current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                        break;
                                    case "script":
                                        current = current.createElement("div");
                                        current.innerHTML = "<script>\x3c/script>";
                                        current = current.removeChild(current.firstChild);
                                        break;
                                    case "select":
                                        current = "string" === typeof newProps.is ? current.createElement("select", {
                                            is: newProps.is
                                        }) : current.createElement("select");
                                        newProps.multiple ? current.multiple = !0 : newProps.size && (current.size = newProps.size);
                                        break;
                                    default:
                                        current = "string" === typeof newProps.is ? current.createElement(renderLanes, {
                                            is: newProps.is
                                        }) : current.createElement(renderLanes), -1 === renderLanes.indexOf("-") && (renderLanes !== renderLanes.toLowerCase() && console.error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", renderLanes), "[object HTMLUnknownElement]" !== Object.prototype.toString.call(current) || hasOwnProperty.call(warnedUnknownTags, renderLanes) || (warnedUnknownTags[renderLanes] = !0, console.error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", renderLanes)));
                                }
                        }
                        current[internalInstanceKey] = workInProgress;
                        current[internalPropsKey] = newProps;
                        a: for(_type = workInProgress.child; null !== _type;){
                            if (5 === _type.tag || 6 === _type.tag) current.appendChild(_type.stateNode);
                            else if (4 !== _type.tag && 27 !== _type.tag && null !== _type.child) {
                                _type.child.return = _type;
                                _type = _type.child;
                                continue;
                            }
                            if (_type === workInProgress) break a;
                            for(; null === _type.sibling;){
                                if (null === _type.return || _type.return === workInProgress) break a;
                                _type = _type.return;
                            }
                            _type.sibling.return = _type.return;
                            _type = _type.sibling;
                        }
                        workInProgress.stateNode = current;
                        a: switch(setInitialProperties(current, renderLanes, newProps), renderLanes){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                current = !!newProps.autoFocus;
                                break a;
                            case "img":
                                current = !0;
                                break a;
                            default:
                                current = !1;
                        }
                        current && markUpdate(workInProgress);
                    }
                }
                bubbleProperties(workInProgress);
                workInProgress.flags &= -16777217;
                return null;
            case 6:
                if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    current = requiredContext(rootInstanceStackCursor.current);
                    renderLanes = getHostContext();
                    if (popHydrationState(workInProgress)) {
                        current = workInProgress.stateNode;
                        renderLanes = workInProgress.memoizedProps;
                        _type = !didSuspendOrErrorDEV;
                        newProps = null;
                        var returnFiber = hydrationParentFiber;
                        if (null !== returnFiber) switch(returnFiber.tag){
                            case 3:
                                _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                                break;
                            case 27:
                            case 5:
                                newProps = returnFiber.memoizedProps, _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                        }
                        current[internalInstanceKey] = workInProgress;
                        current = current.nodeValue === renderLanes || null !== newProps && !0 === newProps.suppressHydrationWarning || checkForUnmatchedText(current.nodeValue, renderLanes) ? !0 : !1;
                        current || throwOnHydrationMismatch(workInProgress);
                    } else _type = renderLanes.ancestorInfo.current, null != _type && validateTextNesting(newProps, _type.tag, renderLanes.ancestorInfo.implicitRootScope), current = getOwnerDocumentFromRootContainer(current).createTextNode(newProps), current[internalInstanceKey] = workInProgress, workInProgress.stateNode = current;
                }
                bubbleProperties(workInProgress);
                return null;
            case 13:
                newProps = workInProgress.memoizedState;
                if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
                    _type = popHydrationState(workInProgress);
                    if (null !== newProps && null !== newProps.dehydrated) {
                        if (null === current) {
                            if (!_type) throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                            _type = workInProgress.memoizedState;
                            _type = null !== _type ? _type.dehydrated : null;
                            if (!_type) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            _type[internalInstanceKey] = workInProgress;
                            bubbleProperties(workInProgress);
                            (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        } else emitPendingHydrationWarnings(), resetHydrationState(), 0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null), workInProgress.flags |= 4, bubbleProperties(workInProgress), (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        _type = !1;
                    } else _type = upgradeHydrationErrorsToRecoverable(), null !== current && null !== current.memoizedState && (current.memoizedState.hydrationErrors = _type), _type = !0;
                    if (!_type) {
                        if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
                        popSuspenseHandler(workInProgress);
                        return null;
                    }
                }
                popSuspenseHandler(workInProgress);
                if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress;
                renderLanes = null !== newProps;
                current = null !== current && null !== current.memoizedState;
                renderLanes && (newProps = workInProgress.child, _type = null, null !== newProps.alternate && null !== newProps.alternate.memoizedState && null !== newProps.alternate.memoizedState.cachePool && (_type = newProps.alternate.memoizedState.cachePool.pool), returnFiber = null, null !== newProps.memoizedState && null !== newProps.memoizedState.cachePool && (returnFiber = newProps.memoizedState.cachePool.pool), returnFiber !== _type && (newProps.flags |= 2048));
                renderLanes !== current && renderLanes && (workInProgress.child.flags |= 8192);
                scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode && renderLanes && (current = workInProgress.child, null !== current && (workInProgress.treeBaseDuration -= current.treeBaseDuration));
                return null;
            case 4:
                return popHostContainer(workInProgress), null === current && listenToAllSupportedEvents(workInProgress.stateNode.containerInfo), bubbleProperties(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), bubbleProperties(workInProgress), null;
            case 19:
                pop(suspenseStackCursor, workInProgress);
                _type = workInProgress.memoizedState;
                if (null === _type) return bubbleProperties(workInProgress), null;
                newProps = 0 !== (workInProgress.flags & 128);
                returnFiber = _type.rendering;
                if (null === returnFiber) {
                    if (newProps) cutOffTailIfNeeded(_type, !1);
                    else {
                        if (workInProgressRootExitStatus !== RootInProgress || null !== current && 0 !== (current.flags & 128)) for(current = workInProgress.child; null !== current;){
                            returnFiber = findFirstSuspended(current);
                            if (null !== returnFiber) {
                                workInProgress.flags |= 128;
                                cutOffTailIfNeeded(_type, !1);
                                current = returnFiber.updateQueue;
                                workInProgress.updateQueue = current;
                                scheduleRetryEffect(workInProgress, current);
                                workInProgress.subtreeFlags = 0;
                                current = renderLanes;
                                for(renderLanes = workInProgress.child; null !== renderLanes;)resetWorkInProgress(renderLanes, current), renderLanes = renderLanes.sibling;
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress);
                                return workInProgress.child;
                            }
                            current = current.sibling;
                        }
                        null !== _type.tail && now$1() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                } else {
                    if (!newProps) {
                        if (current = findFirstSuspended(returnFiber), null !== current) {
                            if (workInProgress.flags |= 128, newProps = !0, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(_type, !0), null === _type.tail && "hidden" === _type.tailMode && !returnFiber.alternate && !isHydrating) return bubbleProperties(workInProgress), null;
                        } else 2 * now$1() - _type.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                    _type.isBackwards ? (returnFiber.sibling = workInProgress.child, workInProgress.child = returnFiber) : (current = _type.last, null !== current ? current.sibling = returnFiber : workInProgress.child = returnFiber, _type.last = returnFiber);
                }
                if (null !== _type.tail) return current = _type.tail, _type.rendering = current, _type.tail = current.sibling, _type.renderingStartTime = now$1(), current.sibling = null, renderLanes = suspenseStackCursor.current, renderLanes = newProps ? renderLanes & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderLanes & SubtreeSuspenseContextMask, push(suspenseStackCursor, renderLanes, workInProgress), current;
                bubbleProperties(workInProgress);
                return null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), renderLanes = workInProgress.updateQueue, null !== renderLanes && scheduleRetryEffect(workInProgress, renderLanes.retryQueue), renderLanes = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (renderLanes = current.memoizedState.cachePool.pool), newProps = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (newProps = workInProgress.memoizedState.cachePool.pool), newProps !== renderLanes && (workInProgress.flags |= 2048), null !== current && pop(resumedCache, workInProgress), null;
            case 24:
                return renderLanes = null, null !== current && (renderLanes = current.memoizedState.cache), workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048), popProvider(CacheContext, workInProgress), bubbleProperties(workInProgress), null;
            case 25:
                return null;
            case 30:
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(current, workInProgress) {
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 1:
                return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 3:
                return popProvider(CacheContext, workInProgress), popHostContainer(workInProgress), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
            case 26:
            case 27:
            case 5:
                return popHostContext(workInProgress), null;
            case 13:
                popSuspenseHandler(workInProgress);
                current = workInProgress.memoizedState;
                if (null !== current && null !== current.dehydrated) {
                    if (null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                current = workInProgress.flags;
                return current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 19:
                return pop(suspenseStackCursor, workInProgress), null;
            case 4:
                return popHostContainer(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), null !== current && pop(resumedCache, workInProgress), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 24:
                return popProvider(CacheContext, workInProgress), null;
            case 25:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork) {
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case 3:
                popProvider(CacheContext, interruptedWork);
                popHostContainer(interruptedWork);
                break;
            case 26:
            case 27:
            case 5:
                popHostContext(interruptedWork);
                break;
            case 4:
                popHostContainer(interruptedWork);
                break;
            case 13:
                popSuspenseHandler(interruptedWork);
                break;
            case 19:
                pop(suspenseStackCursor, interruptedWork);
                break;
            case 10:
                popProvider(interruptedWork.type, interruptedWork);
                break;
            case 22:
            case 23:
                popSuspenseHandler(interruptedWork);
                popHiddenContext(interruptedWork);
                null !== current && pop(resumedCache, interruptedWork);
                break;
            case 24:
                popProvider(CacheContext, interruptedWork);
        }
    }
    function shouldProfile(current) {
        return (current.mode & ProfileMode) !== NoMode;
    }
    function commitHookLayoutEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookLayoutUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitHookEffectListMount(flags, finishedWork) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags && ((flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted && injectedProfilingHooks.markComponentPassiveEffectMountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted && injectedProfilingHooks.markComponentLayoutEffectMountStarted(finishedWork), lastEffect = void 0, (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = runWithFiberInDEV(finishedWork, callCreateInDEV, updateQueue), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped && injectedProfilingHooks.markComponentPassiveEffectMountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped && injectedProfilingHooks.markComponentLayoutEffectMountStopped(), void 0 !== lastEffect && "function" !== typeof lastEffect)) {
                        var hookName = void 0;
                        hookName = 0 !== (updateQueue.tag & Layout) ? "useLayoutEffect" : 0 !== (updateQueue.tag & Insertion) ? "useInsertionEffect" : "useEffect";
                        var addendum = void 0;
                        addendum = null === lastEffect ? " You returned null. If your effect does not require clean up, return undefined (or nothing)." : "function" === typeof lastEffect.then ? "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching" : " You returned: " + lastEffect;
                        runWithFiberInDEV(finishedWork, function(n, a) {
                            console.error("%s must not return anything besides a function, which is used for clean-up.%s", n, a);
                        }, hookName, addendum);
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags) {
                        var inst = updateQueue.inst, destroy = inst.destroy;
                        void 0 !== destroy && (inst.destroy = void 0, (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted && injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted && injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(finishedWork), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = finishedWork, runWithFiberInDEV(lastEffect, callDestroyInDEV, lastEffect, nearestMountedAncestor, destroy), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped && injectedProfilingHooks.markComponentPassiveEffectUnmountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped && injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookPassiveMountEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookPassiveUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitClassCallbacks(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        if (null !== updateQueue) {
            var instance = finishedWork.stateNode;
            finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (instance.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
            try {
                runWithFiberInDEV(finishedWork, commitCallbacks, updateQueue, instance);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }
    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {
        return instance.getSnapshotBeforeUpdate(prevProps, prevState);
    }
    function commitClassSnapshot(finishedWork, current) {
        var prevProps = current.memoizedProps, prevState = current.memoizedState;
        current = finishedWork.stateNode;
        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (current.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), current.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
        try {
            var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
            var snapshot = runWithFiberInDEV(finishedWork, callGetSnapshotBeforeUpdates, current, resolvedPrevProps, prevState);
            prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;
            void 0 !== snapshot || prevProps.has(finishedWork.type) || (prevProps.add(finishedWork.type), runWithFiberInDEV(finishedWork, function() {
                console.error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
            }));
            current.__reactInternalSnapshotBeforeUpdate = snapshot;
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
        instance.state = current.memoizedState;
        shouldProfile(current) ? (startEffectTimer(), runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance), recordEffectDuration()) : runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance);
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            switch(finishedWork.tag){
                case 26:
                case 27:
                case 5:
                    var instanceToUse = finishedWork.stateNode;
                    break;
                case 30:
                    instanceToUse = finishedWork.stateNode;
                    break;
                default:
                    instanceToUse = finishedWork.stateNode;
            }
            if ("function" === typeof ref) {
                if (shouldProfile(finishedWork)) try {
                    startEffectTimer(), finishedWork.refCleanup = ref(instanceToUse);
                } finally{
                    recordEffectDuration();
                }
                else finishedWork.refCleanup = ref(instanceToUse);
            } else "string" === typeof ref ? console.error("String refs are no longer supported.") : ref.hasOwnProperty("current") || console.error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork)), ref.current = instanceToUse;
        }
    }
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            runWithFiberInDEV(current, commitAttachRef, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref, refCleanup = current.refCleanup;
        if (null !== ref) {
            if ("function" === typeof refCleanup) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, refCleanup);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, refCleanup);
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            } finally{
                current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
            }
            else if ("function" === typeof ref) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, ref, null);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, ref, null);
            } catch (error$7) {
                captureCommitPhaseError(current, nearestMountedAncestor, error$7);
            }
            else ref.current = null;
        }
    }
    function commitProfiler(finishedWork, current, commitStartTime, effectDuration) {
        var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onCommit = _finishedWork$memoize.onCommit;
        _finishedWork$memoize = _finishedWork$memoize.onRender;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize && _finishedWork$memoize(id, current, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitStartTime);
        "function" === typeof onCommit && onCommit(finishedWork.memoizedProps.id, current, effectDuration, commitStartTime);
    }
    function commitProfilerPostCommitImpl(finishedWork, current, commitStartTime, passiveEffectDuration) {
        var _finishedWork$memoize2 = finishedWork.memoizedProps;
        finishedWork = _finishedWork$memoize2.id;
        _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize2 && _finishedWork$memoize2(finishedWork, current, passiveEffectDuration, commitStartTime);
    }
    function commitHostMount(finishedWork) {
        var type = finishedWork.type, props = finishedWork.memoizedProps, instance = finishedWork.stateNode;
        try {
            runWithFiberInDEV(finishedWork, commitMount, instance, type, props, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHostUpdate(finishedWork, newProps, oldProps) {
        try {
            runWithFiberInDEV(finishedWork, commitUpdate, finishedWork.stateNode, finishedWork.type, oldProps, newProps, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function isHostParent(fiber) {
        return 5 === fiber.tag || 3 === fiber.tag || 26 === fiber.tag || 27 === fiber.tag && isSingletonScope(fiber.type) || 4 === fiber.tag;
    }
    function getHostSibling(fiber) {
        a: for(;;){
            for(; null === fiber.sibling;){
                if (null === fiber.return || isHostParent(fiber.return)) return null;
                fiber = fiber.return;
            }
            fiber.sibling.return = fiber.return;
            for(fiber = fiber.sibling; 5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;){
                if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
                if (fiber.flags & 2) continue a;
                if (null === fiber.child || 4 === fiber.tag) continue a;
                else fiber.child.return = fiber, fiber = fiber.child;
            }
            if (!(fiber.flags & 2)) return fiber.stateNode;
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? (9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent).insertBefore(node, before) : (before = 9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent, before.appendChild(node), parent = parent._reactRootContainer, null !== parent && void 0 !== parent || null !== before.onclick || (before.onclick = noop$1));
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode, before = null), node = node.child, null !== node)) for(insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling;
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? parent.insertBefore(node, before) : parent.appendChild(node);
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode), node = node.child, null !== node)) for(insertOrAppendPlacementNode(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
    }
    function commitPlacement(finishedWork) {
        for(var hostParentFiber, parentFiber = finishedWork.return; null !== parentFiber;){
            if (isHostParent(parentFiber)) {
                hostParentFiber = parentFiber;
                break;
            }
            parentFiber = parentFiber.return;
        }
        if (null == hostParentFiber) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        switch(hostParentFiber.tag){
            case 27:
                hostParentFiber = hostParentFiber.stateNode;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, parentFiber, hostParentFiber);
                break;
            case 5:
                parentFiber = hostParentFiber.stateNode;
                hostParentFiber.flags & 32 && (resetTextContent(parentFiber), hostParentFiber.flags &= -33);
                hostParentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, hostParentFiber, parentFiber);
                break;
            case 3:
            case 4:
                hostParentFiber = hostParentFiber.stateNode.containerInfo;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, parentFiber, hostParentFiber);
                break;
            default:
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitHostSingletonAcquisition(finishedWork) {
        var singleton = finishedWork.stateNode, props = finishedWork.memoizedProps;
        try {
            runWithFiberInDEV(finishedWork, acquireSingletonInstance, finishedWork.type, props, singleton, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitBeforeMutationEffects(root, firstChild) {
        root = root.containerInfo;
        eventsEnabled = _enabled;
        root = getActiveElementDeep(root);
        if (hasSelectionCapabilities(root)) {
            if ("selectionStart" in root) var JSCompiler_temp = {
                start: root.selectionStart,
                end: root.selectionEnd
            };
            else a: {
                JSCompiler_temp = (JSCompiler_temp = root.ownerDocument) && JSCompiler_temp.defaultView || window;
                var selection = JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
                if (selection && 0 !== selection.rangeCount) {
                    JSCompiler_temp = selection.anchorNode;
                    var anchorOffset = selection.anchorOffset, focusNode = selection.focusNode;
                    selection = selection.focusOffset;
                    try {
                        JSCompiler_temp.nodeType, focusNode.nodeType;
                    } catch (e$2) {
                        JSCompiler_temp = null;
                        break a;
                    }
                    var length = 0, start = -1, end = -1, indexWithinAnchor = 0, indexWithinFocus = 0, node = root, parentNode = null;
                    b: for(;;){
                        for(var next;;){
                            node !== JSCompiler_temp || 0 !== anchorOffset && 3 !== node.nodeType || (start = length + anchorOffset);
                            node !== focusNode || 0 !== selection && 3 !== node.nodeType || (end = length + selection);
                            3 === node.nodeType && (length += node.nodeValue.length);
                            if (null === (next = node.firstChild)) break;
                            parentNode = node;
                            node = next;
                        }
                        for(;;){
                            if (node === root) break b;
                            parentNode === JSCompiler_temp && ++indexWithinAnchor === anchorOffset && (start = length);
                            parentNode === focusNode && ++indexWithinFocus === selection && (end = length);
                            if (null !== (next = node.nextSibling)) break;
                            node = parentNode;
                            parentNode = node.parentNode;
                        }
                        node = next;
                    }
                    JSCompiler_temp = -1 === start || -1 === end ? null : {
                        start: start,
                        end: end
                    };
                } else JSCompiler_temp = null;
            }
            JSCompiler_temp = JSCompiler_temp || {
                start: 0,
                end: 0
            };
        } else JSCompiler_temp = null;
        selectionInformation = {
            focusedElem: root,
            selectionRange: JSCompiler_temp
        };
        _enabled = !1;
        for(nextEffect = firstChild; null !== nextEffect;)if (firstChild = nextEffect, root = firstChild.child, 0 !== (firstChild.subtreeFlags & 1024) && null !== root) root.return = firstChild, nextEffect = root;
        else for(; null !== nextEffect;){
            root = firstChild = nextEffect;
            JSCompiler_temp = root.alternate;
            anchorOffset = root.flags;
            switch(root.tag){
                case 0:
                    break;
                case 11:
                case 15:
                    break;
                case 1:
                    0 !== (anchorOffset & 1024) && null !== JSCompiler_temp && commitClassSnapshot(root, JSCompiler_temp);
                    break;
                case 3:
                    if (0 !== (anchorOffset & 1024)) {
                        if (root = root.stateNode.containerInfo, JSCompiler_temp = root.nodeType, 9 === JSCompiler_temp) clearContainerSparingly(root);
                        else if (1 === JSCompiler_temp) switch(root.nodeName){
                            case "HEAD":
                            case "HTML":
                            case "BODY":
                                clearContainerSparingly(root);
                                break;
                            default:
                                root.textContent = "";
                        }
                    }
                    break;
                case 5:
                case 26:
                case 27:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    if (0 !== (anchorOffset & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            root = firstChild.sibling;
            if (null !== root) {
                root.return = firstChild.return;
                nextEffect = root;
                break;
            }
            nextEffect = firstChild.return;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitHookLayoutEffects(finishedWork, Layout | HasEffect);
                break;
            case 1:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 4) {
                    if (finishedRoot = finishedWork.stateNode, null === current) finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot);
                    else {
                        var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
                        current = current.memoizedState;
                        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
                        shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
                    }
                }
                flags & 64 && commitClassCallbacks(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 3:
                current = pushNestedEffectDurations();
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
                    prevProps = null;
                    if (null !== finishedWork.child) switch(finishedWork.child.tag){
                        case 27:
                        case 5:
                            prevProps = finishedWork.child.stateNode;
                            break;
                        case 1:
                            prevProps = finishedWork.child.stateNode;
                    }
                    try {
                        runWithFiberInDEV(finishedWork, commitCallbacks, flags, prevProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                finishedRoot.effectDuration += popNestedEffectDurations(current);
                break;
            case 27:
                null === current && flags & 4 && commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                null === current && flags & 4 && commitHostMount(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, finishedRoot.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                break;
            case 13:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                flags & 64 && (finishedRoot = finishedWork.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot && (finishedWork = retryDehydratedSuspenseBoundary.bind(null, finishedWork), registerSuspenseInstanceRetry(finishedRoot, finishedWork))));
                break;
            case 22:
                flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
                if (!flags) {
                    current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
                    prevProps = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeIsHidden = flags;
                    (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    offscreenSubtreeIsHidden = prevProps;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                }
                break;
            case 30:
                break;
            default:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        }
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null;
        5 === fiber.tag && (alternate = fiber.stateNode, null !== alternate && detachDeletedInstance(alternate));
        fiber.stateNode = null;
        fiber._debugOwner = null;
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null;
        fiber.updateQueue = null;
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        for(parent = parent.child; null !== parent;)commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
            injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        switch(deletedFiber.tag){
            case 26:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                deletedFiber.memoizedState ? deletedFiber.memoizedState.count-- : deletedFiber.stateNode && (deletedFiber = deletedFiber.stateNode, deletedFiber.parentNode.removeChild(deletedFiber));
                break;
            case 27:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var prevHostParent = hostParent, prevHostParentIsContainer = hostParentIsContainer;
                isSingletonScope(deletedFiber.type) && (hostParent = deletedFiber.stateNode, hostParentIsContainer = !1);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                runWithFiberInDEV(deletedFiber, releaseSingletonInstance, deletedFiber.stateNode);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 5:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
            case 6:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (null !== hostParent) {
                    if (hostParentIsContainer) try {
                        runWithFiberInDEV(deletedFiber, removeChildFromContainer, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                    else try {
                        runWithFiberInDEV(deletedFiber, removeChild, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                }
                break;
            case 18:
                null !== hostParent && (hostParentIsContainer ? (finishedRoot = hostParent, clearSuspenseBoundary(9 === finishedRoot.nodeType ? finishedRoot.body : "HTML" === finishedRoot.nodeName ? finishedRoot.ownerDocument.body : finishedRoot, deletedFiber.stateNode), retryIfBlockedOn(finishedRoot)) : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
                break;
            case 4:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = !0;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                offscreenSubtreeWasHidden || commitHookEffectListUnmount(Insertion, deletedFiber, nearestMountedAncestor);
                offscreenSubtreeWasHidden || commitHookLayoutUnmountEffects(deletedFiber, nearestMountedAncestor, Layout);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 1:
                offscreenSubtreeWasHidden || (safelyDetachRef(deletedFiber, nearestMountedAncestor), prevHostParent = deletedFiber.stateNode, "function" === typeof prevHostParent.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, prevHostParent));
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 21:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 22:
                offscreenSubtreeWasHidden = (prevHostParent = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevHostParent;
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        if (null === finishedWork.memoizedState && (finishedRoot = finishedWork.alternate, null !== finishedRoot && (finishedRoot = finishedRoot.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot)))) try {
            runWithFiberInDEV(finishedWork, commitHydratedSuspenseInstance, finishedRoot);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function getRetryCache(finishedWork) {
        switch(finishedWork.tag){
            case 13:
            case 19:
                var retryCache = finishedWork.stateNode;
                null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
                return retryCache;
            case 22:
                return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
            default:
                throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
        }
    }
    function attachSuspenseRetryListeners(finishedWork, wakeables) {
        var retryCache = getRetryCache(finishedWork);
        wakeables.forEach(function(wakeable) {
            var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
            if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                if (isDevToolsPresent) {
                    if (null !== inProgressLanes && null !== inProgressRoot) restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                }
                wakeable.then(retry, retry);
            }
        });
    }
    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
        var deletions = parentFiber.deletions;
        if (null !== deletions) for(var i = 0; i < deletions.length; i++){
            var root = root$jscomp$0, returnFiber = parentFiber, deletedFiber = deletions[i], parent = returnFiber;
            a: for(; null !== parent;){
                switch(parent.tag){
                    case 27:
                        if (isSingletonScope(parent.type)) {
                            hostParent = parent.stateNode;
                            hostParentIsContainer = !1;
                            break a;
                        }
                        break;
                    case 5:
                        hostParent = parent.stateNode;
                        hostParentIsContainer = !1;
                        break a;
                    case 3:
                    case 4:
                        hostParent = parent.stateNode.containerInfo;
                        hostParentIsContainer = !0;
                        break a;
                }
                parent = parent.return;
            }
            if (null === hostParent) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = !1;
            root = deletedFiber;
            returnFiber = root.alternate;
            null !== returnFiber && (returnFiber.return = null);
            root.return = null;
        }
        if (parentFiber.subtreeFlags & 13878) for(parentFiber = parentFiber.child; null !== parentFiber;)commitMutationEffectsOnFiber(parentFiber, root$jscomp$0), parentFiber = parentFiber.sibling;
    }
    function commitMutationEffectsOnFiber(finishedWork, root) {
        var current = finishedWork.alternate, flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return), commitHookEffectListMount(Insertion | HasEffect, finishedWork), commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout | HasEffect));
                break;
            case 1:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags && (current = finishedWork.shared.hiddenCallbacks, finishedWork.shared.hiddenCallbacks = null === current ? flags : current.concat(flags))));
                break;
            case 26:
                var hoistableRoot = currentHoistableRoot;
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (flags & 4) {
                    if (root = null !== current ? current.memoizedState : null, flags = finishedWork.memoizedState, null === current) {
                        if (null === flags) {
                            if (null === finishedWork.stateNode) {
                                a: {
                                    flags = finishedWork.type;
                                    current = finishedWork.memoizedProps;
                                    root = hoistableRoot.ownerDocument || hoistableRoot;
                                    b: switch(flags){
                                        case "title":
                                            hoistableRoot = root.getElementsByTagName("title")[0];
                                            if (!hoistableRoot || hoistableRoot[internalHoistableMarker] || hoistableRoot[internalInstanceKey] || hoistableRoot.namespaceURI === SVG_NAMESPACE || hoistableRoot.hasAttribute("itemprop")) hoistableRoot = root.createElement(flags), root.head.insertBefore(hoistableRoot, root.querySelector("head > title"));
                                            setInitialProperties(hoistableRoot, flags, current);
                                            hoistableRoot[internalInstanceKey] = finishedWork;
                                            markNodeAsHoistable(hoistableRoot);
                                            flags = hoistableRoot;
                                            break a;
                                        case "link":
                                            var maybeNodes = getHydratableHoistableCache("link", "href", root).get(flags + (current.href || ""));
                                            if (maybeNodes) {
                                                for(var i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], hoistableRoot.getAttribute("href") === (null == current.href || "" === current.href ? null : current.href) && hoistableRoot.getAttribute("rel") === (null == current.rel ? null : current.rel) && hoistableRoot.getAttribute("title") === (null == current.title ? null : current.title) && hoistableRoot.getAttribute("crossorigin") === (null == current.crossOrigin ? null : current.crossOrigin)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        case "meta":
                                            if (maybeNodes = getHydratableHoistableCache("meta", "content", root).get(flags + (current.content || ""))) {
                                                for(i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], checkAttributeStringCoercion(current.content, "content"), hoistableRoot.getAttribute("content") === (null == current.content ? null : "" + current.content) && hoistableRoot.getAttribute("name") === (null == current.name ? null : current.name) && hoistableRoot.getAttribute("property") === (null == current.property ? null : current.property) && hoistableRoot.getAttribute("http-equiv") === (null == current.httpEquiv ? null : current.httpEquiv) && hoistableRoot.getAttribute("charset") === (null == current.charSet ? null : current.charSet)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        default:
                                            throw Error('getNodesForType encountered a type it did not expect: "' + flags + '". This is a bug in React.');
                                    }
                                    hoistableRoot[internalInstanceKey] = finishedWork;
                                    markNodeAsHoistable(hoistableRoot);
                                    flags = hoistableRoot;
                                }
                                finishedWork.stateNode = flags;
                            } else mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode);
                        } else finishedWork.stateNode = acquireResource(hoistableRoot, flags, finishedWork.memoizedProps);
                    } else root !== flags ? (null === root ? null !== current.stateNode && (current = current.stateNode, current.parentNode.removeChild(current)) : root.count--, null === flags ? mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode) : acquireResource(hoistableRoot, flags, finishedWork.memoizedProps)) : null === flags && null !== finishedWork.stateNode && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                }
                break;
            case 27:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                null !== current && flags & 4 && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                break;
            case 5:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (finishedWork.flags & 32) {
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, resetTextContent, root);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                flags & 4 && null != finishedWork.stateNode && (root = finishedWork.memoizedProps, commitHostUpdate(finishedWork, root, null !== current ? current.memoizedProps : root));
                flags & 1024 && (needsFormReset = !0, "form" !== finishedWork.type && console.error("Unexpected host component type. Expected a form. This is a bug in React."));
                break;
            case 6:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & 4) {
                    if (null === finishedWork.stateNode) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    flags = finishedWork.memoizedProps;
                    current = null !== current ? current.memoizedProps : flags;
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitTextUpdate, root, current, flags);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                break;
            case 3:
                hoistableRoot = pushNestedEffectDurations();
                tagCaches = null;
                maybeNodes = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(root.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                currentHoistableRoot = maybeNodes;
                commitReconciliationEffects(finishedWork);
                if (flags & 4 && null !== current && current.memoizedState.isDehydrated) try {
                    runWithFiberInDEV(finishedWork, commitHydratedContainer, root.containerInfo);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
                needsFormReset && (needsFormReset = !1, recursivelyResetForms(finishedWork));
                root.effectDuration += popNestedEffectDurations(hoistableRoot);
                break;
            case 4:
                flags = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(finishedWork.stateNode.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                currentHoistableRoot = flags;
                break;
            case 12:
                flags = pushNestedEffectDurations();
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.stateNode.effectDuration += bubbleNestedEffectDurations(flags);
                break;
            case 13:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.child.flags & 8192 && null !== finishedWork.memoizedState !== (null !== current && null !== current.memoizedState) && (globalMostRecentFallbackTime = now$1());
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 22:
                hoistableRoot = null !== finishedWork.memoizedState;
                var wasHidden = null !== current && null !== current.memoizedState, prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden, prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
                recursivelyTraverseMutationEffects(root, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                commitReconciliationEffects(finishedWork);
                if (flags & 8192) a: for(root = finishedWork.stateNode, root._visibility = hoistableRoot ? root._visibility & ~OffscreenVisible : root._visibility | OffscreenVisible, hoistableRoot && (null === current || wasHidden || offscreenSubtreeIsHidden || offscreenSubtreeWasHidden || recursivelyTraverseDisappearLayoutEffects(finishedWork)), current = null, root = finishedWork;;){
                    if (5 === root.tag || 26 === root.tag) {
                        if (null === current) {
                            wasHidden = current = root;
                            try {
                                maybeNodes = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideInstance, maybeNodes) : runWithFiberInDEV(wasHidden, unhideInstance, wasHidden.stateNode, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if (6 === root.tag) {
                        if (null === current) {
                            wasHidden = root;
                            try {
                                i = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideTextInstance, i) : runWithFiberInDEV(wasHidden, unhideTextInstance, i, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if ((22 !== root.tag && 23 !== root.tag || null === root.memoizedState || root === finishedWork) && null !== root.child) {
                        root.child.return = root;
                        root = root.child;
                        continue;
                    }
                    if (root === finishedWork) break a;
                    for(; null === root.sibling;){
                        if (null === root.return || root.return === finishedWork) break a;
                        current === root && (current = null);
                        root = root.return;
                    }
                    current === root && (current = null);
                    root.sibling.return = root.return;
                    root = root.sibling;
                }
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (current = flags.retryQueue, null !== current && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, current))));
                break;
            case 19:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 30:
                break;
            case 21:
                break;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
        }
    }
    function commitReconciliationEffects(finishedWork) {
        var flags = finishedWork.flags;
        if (flags & 2) {
            try {
                runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
            finishedWork.flags &= -3;
        }
        flags & 4096 && (finishedWork.flags &= -4097);
    }
    function recursivelyResetForms(parentFiber) {
        if (parentFiber.subtreeFlags & 1024) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var fiber = parentFiber;
            recursivelyResetForms(fiber);
            5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyTraverseLayoutEffects(root, parentFiber) {
        if (parentFiber.subtreeFlags & 8772) for(parentFiber = parentFiber.child; null !== parentFiber;)commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
    }
    function disappearLayoutEffects(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 1:
                safelyDetachRef(finishedWork, finishedWork.return);
                var instance = finishedWork.stateNode;
                "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 27:
                runWithFiberInDEV(finishedWork, releaseSingletonInstance, finishedWork.stateNode);
            case 26:
            case 5:
                safelyDetachRef(finishedWork, finishedWork.return);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 30:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            default:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
        for(parentFiber = parentFiber.child; null !== parentFiber;)disappearLayoutEffects(parentFiber), parentFiber = parentFiber.sibling;
    }
    function reappearLayoutEffects(finishedRoot, current, finishedWork, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                commitHookLayoutEffects(finishedWork, Layout);
                break;
            case 1:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                current = finishedWork.stateNode;
                "function" === typeof current.componentDidMount && runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, current);
                current = finishedWork.updateQueue;
                if (null !== current) {
                    finishedRoot = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitHiddenCallbacks, current, finishedRoot);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 27:
                commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && null === current && flags & 4 && commitHostMount(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (includeWorkInProgressEffects && flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                    includeWorkInProgressEffects = finishedWork.stateNode;
                    includeWorkInProgressEffects.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, includeWorkInProgressEffects.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                break;
            case 13:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 30:
                break;
            default:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseReappearLayoutEffects(finishedRoot, parentFiber, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reappearLayoutEffects(finishedRoot, parentFiber.alternate, parentFiber, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function commitOffscreenPassiveMountEffects(current, finishedWork) {
        var previousCache = null;
        null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
        current = null;
        null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
        current !== previousCache && (null != current && retainCache(current), null != previousCache && releaseCache(previousCache));
    }
    function commitCachePassiveMountEffect(current, finishedWork) {
        current = null;
        null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
        finishedWork = finishedWork.memoizedState.cache;
        finishedWork !== current && (retainCache(finishedWork), null != current && releaseCache(current));
    }
    function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);
                break;
            case 1:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && (committedLanes = null, null !== finishedWork.alternate && (committedLanes = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== committedLanes && (retainCache(finishedWork), null != committedLanes && releaseCache(committedLanes)));
                finishedRoot.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                if (flags & 2048) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.passiveEffectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfilerPostCommitImpl, finishedWork, finishedWork.alternate, commitStartTime, finishedRoot.passiveEffectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 13:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 23:
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                var _current = finishedWork.alternate;
                null !== finishedWork.memoizedState ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (prevEffectDuration._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
                flags & 2048 && commitOffscreenPassiveMountEffects(_current, finishedWork);
                break;
            case 24:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        }
    }
    function recursivelyTraverseReconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function reconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                commitHookPassiveMountEffects(finishedWork, Passive);
                break;
            case 23:
                break;
            case 22:
                var _instance2 = finishedWork.stateNode;
                null !== finishedWork.memoizedState ? _instance2._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_instance2._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
                includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                break;
            case 24:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var finishedRoot = finishedRoot$jscomp$0, finishedWork = parentFiber, flags = finishedWork.flags;
            switch(finishedWork.tag){
                case 22:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                    break;
                case 24:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                    break;
                default:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
            }
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyAccumulateSuspenseyCommit(parentFiber) {
        if (parentFiber.subtreeFlags & suspenseyCommitFlag) for(parentFiber = parentFiber.child; null !== parentFiber;)accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function accumulateSuspenseyCommitOnFiber(fiber) {
        switch(fiber.tag){
            case 26:
                recursivelyAccumulateSuspenseyCommit(fiber);
                fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && suspendResource(currentHoistableRoot, fiber.memoizedState, fiber.memoizedProps);
                break;
            case 5:
                recursivelyAccumulateSuspenseyCommit(fiber);
                break;
            case 3:
            case 4:
                var previousHoistableRoot = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);
                recursivelyAccumulateSuspenseyCommit(fiber);
                currentHoistableRoot = previousHoistableRoot;
                break;
            case 22:
                null === fiber.memoizedState && (previousHoistableRoot = fiber.alternate, null !== previousHoistableRoot && null !== previousHoistableRoot.memoizedState ? (previousHoistableRoot = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = previousHoistableRoot) : recursivelyAccumulateSuspenseyCommit(fiber));
                break;
            default:
                recursivelyAccumulateSuspenseyCommit(fiber);
        }
    }
    function detachAlternateSiblings(parentFiber) {
        var previousFiber = parentFiber.alternate;
        if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
            previousFiber.child = null;
            do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber;
            while (null !== parentFiber);
        }
    }
    function recursivelyTraversePassiveUnmountEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.flags & 2048 && commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive | HasEffect);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += bubbleNestedEffectDurations(prevEffectDuration);
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                null !== finishedWork.memoizedState && prevEffectDuration._visibility & OffscreenPassiveEffectsConnected && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (prevEffectDuration._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
                break;
            default:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        for(parentFiber = parentFiber.child; null !== parentFiber;)disconnectPassiveEffect(parentFiber), parentFiber = parentFiber.sibling;
    }
    function disconnectPassiveEffect(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive);
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
                break;
            case 22:
                var instance = finishedWork.stateNode;
                instance._visibility & OffscreenPassiveEffectsConnected && (instance._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork));
                break;
            default:
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        for(; null !== nextEffect;){
            var fiber = nextEffect, current = fiber;
            switch(current.tag){
                case 0:
                case 11:
                case 15:
                    commitHookPassiveUnmountEffects(current, nearestMountedAncestor, Passive);
                    break;
                case 23:
                case 22:
                    null !== current.memoizedState && null !== current.memoizedState.cachePool && (current = current.memoizedState.cachePool.pool, null != current && retainCache(current));
                    break;
                case 24:
                    releaseCache(current.memoizedState.cache);
            }
            current = fiber.child;
            if (null !== current) current.return = fiber, nextEffect = current;
            else a: for(fiber = deletedSubtreeRoot; null !== nextEffect;){
                current = nextEffect;
                var sibling = current.sibling, returnFiber = current.return;
                detachFiberAfterEffects(current);
                if (current === fiber) {
                    nextEffect = null;
                    break a;
                }
                if (null !== sibling) {
                    sibling.return = returnFiber;
                    nextEffect = sibling;
                    break a;
                }
                nextEffect = returnFiber;
            }
        }
    }
    function onCommitRoot() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = "undefined" !== typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;
        isReactActEnvironmentGlobal || null === ReactSharedInternals.actQueue || console.error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    function requestUpdateLane(fiber) {
        if ((executionContext & RenderContext) !== NoContext && 0 !== workInProgressRootRenderLanes) return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
        var transition = ReactSharedInternals.T;
        return null !== transition ? (transition._updatedFibers || (transition._updatedFibers = new Set()), transition._updatedFibers.add(fiber), fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane()) : resolveUpdatePriority();
    }
    function requestDeferredLane() {
        0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 === (workInProgressRootRenderLanes & 536870912) || isHydrating ? claimNextTransitionLane() : 536870912);
        var suspenseHandler = suspenseHandlerStackCursor.current;
        null !== suspenseHandler && (suspenseHandler.flags |= 32);
        return workInProgressDeferredLane;
    }
    function scheduleUpdateOnFiber(root, fiber, lane) {
        isRunningInsertionEffect && console.error("useInsertionEffect must not schedule updates.");
        isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);
        if (root === workInProgressRoot && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
        markRootUpdated$1(root, lane);
        if (0 !== (executionContext & RenderContext) && root === workInProgressRoot) {
            if (isRendering) switch(fiber.tag){
                case 0:
                case 11:
                case 15:
                    root = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                    didWarnAboutUpdateInRenderForAnotherComponent.has(root) || (didWarnAboutUpdateInRenderForAnotherComponent.add(root), fiber = getComponentNameFromFiber(fiber) || "Unknown", console.error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render", fiber, root, root));
                    break;
                case 1:
                    didWarnAboutUpdateInRender || (console.error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), didWarnAboutUpdateInRender = !0);
            }
        } else isDevToolsPresent && addFiberToLanesMap(root, fiber, lane), warnIfUpdatesNotWrappedWithActDEV(fiber), root === workInProgressRoot && ((executionContext & RenderContext) === NoContext && (workInProgressRootInterleavedUpdatedLanes |= lane), workInProgressRootExitStatus === RootSuspendedWithDelay && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1)), ensureRootIsScheduled(root);
    }
    function performWorkOnRoot(root, lanes, forceSync) {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        var shouldTimeSlice = !forceSync && 0 === (lanes & 124) && 0 === (lanes & root.expiredLanes) || checkIfRootIsPrerendering(root, lanes), exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes, !0), renderWasConcurrent = shouldTimeSlice;
        do {
            if (exitStatus === RootInProgress) {
                workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root, lanes, 0, !1);
                break;
            } else {
                forceSync = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
                    exitStatus = renderRootSync(root, lanes, !1);
                    renderWasConcurrent = !1;
                    continue;
                }
                if (exitStatus === RootErrored) {
                    renderWasConcurrent = lanes;
                    if (root.errorRecoveryDisabledLanes & renderWasConcurrent) var errorRetryLanes = 0;
                    else errorRetryLanes = root.pendingLanes & -536870913, errorRetryLanes = 0 !== errorRetryLanes ? errorRetryLanes : errorRetryLanes & 536870912 ? 536870912 : 0;
                    if (0 !== errorRetryLanes) {
                        lanes = errorRetryLanes;
                        a: {
                            exitStatus = root;
                            var errorRetryLanes$jscomp$0 = errorRetryLanes;
                            errorRetryLanes = workInProgressRootConcurrentErrors;
                            var wasRootDehydrated = exitStatus.current.memoizedState.isDehydrated;
                            wasRootDehydrated && (prepareFreshStack(exitStatus, errorRetryLanes$jscomp$0).flags |= 256);
                            errorRetryLanes$jscomp$0 = renderRootSync(exitStatus, errorRetryLanes$jscomp$0, !1);
                            if (errorRetryLanes$jscomp$0 !== RootErrored) {
                                if (workInProgressRootDidAttachPingListener && !wasRootDehydrated) {
                                    exitStatus.errorRecoveryDisabledLanes |= renderWasConcurrent;
                                    workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                                    exitStatus = RootSuspendedWithDelay;
                                    break a;
                                }
                                exitStatus = workInProgressRootRecoverableErrors;
                                workInProgressRootRecoverableErrors = errorRetryLanes;
                                null !== exitStatus && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = exitStatus : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, exitStatus));
                            }
                            exitStatus = errorRetryLanes$jscomp$0;
                        }
                        renderWasConcurrent = !1;
                        if (exitStatus !== RootErrored) continue;
                    }
                }
                if (exitStatus === RootFatalErrored) {
                    prepareFreshStack(root, 0);
                    markRootSuspended(root, lanes, 0, !0);
                    break;
                }
                a: {
                    shouldTimeSlice = root;
                    switch(exitStatus){
                        case RootInProgress:
                        case RootFatalErrored:
                            throw Error("Root did not complete. This is a bug in React.");
                        case RootSuspendedWithDelay:
                            if ((lanes & 4194048) !== lanes) break;
                        case RootSuspendedAtTheShell:
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            break a;
                        case RootErrored:
                            workInProgressRootRecoverableErrors = null;
                            break;
                        case RootSuspended:
                        case RootCompleted:
                            break;
                        default:
                            throw Error("Unknown root exit status.");
                    }
                    if (null !== ReactSharedInternals.actQueue) commitRoot(shouldTimeSlice, forceSync, lanes, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes);
                    else {
                        if ((lanes & 62914560) === lanes && (renderWasConcurrent = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1(), 10 < renderWasConcurrent)) {
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;
                            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, THROTTLED_COMMIT, renderStartTime, 0), renderWasConcurrent);
                            break a;
                        }
                        commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, IMMEDIATE_COMMIT, renderStartTime, 0);
                    }
                }
            }
            break;
        }while (1);
        ensureRootIsScheduled(root);
    }
    function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, exitStatus, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
        root.timeoutHandle = noTimeout;
        suspendedCommitReason = finishedWork.subtreeFlags;
        if (suspendedCommitReason & 8192 || 16785408 === (suspendedCommitReason & 16785408)) {
            if (suspendedState = {
                stylesheets: null,
                count: 0,
                unsuspend: noop
            }, accumulateSuspenseyCommitOnFiber(finishedWork), suspendedCommitReason = waitForCommitToBeReady(), null !== suspendedCommitReason) {
                root.cancelPendingCommit = suspendedCommitReason(commitRoot.bind(null, root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, exitStatus, SUSPENDED_COMMIT, completedRenderStartTime, completedRenderEndTime));
                markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);
                return;
            }
        }
        commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        for(var node = finishedWork;;){
            var tag = node.tag;
            if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for(var i = 0; i < tag.length; i++){
                var check = tag[i], getSnapshot = check.getSnapshot;
                check = check.value;
                try {
                    if (!objectIs(getSnapshot(), check)) return !1;
                } catch (error) {
                    return !1;
                }
            }
            tag = node.child;
            if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;
            else {
                if (node === finishedWork) break;
                for(; null === node.sibling;){
                    if (null === node.return || node.return === finishedWork) return !0;
                    node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
            }
        }
        return !0;
    }
    function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
        suspendedLanes &= ~workInProgressRootPingedLanes;
        suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes;
        didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
        didAttemptEntireTree = root.expirationTimes;
        for(var lanes = suspendedLanes; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            didAttemptEntireTree[index] = -1;
            lanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
    }
    function flushSyncWork$1() {
        return (executionContext & (RenderContext | CommitContext)) === NoContext ? (flushSyncWorkAcrossRoots_impl(0, !1), !1) : !0;
    }
    function resetWorkInProgressStack() {
        if (null !== workInProgress) {
            if (workInProgressSuspendedReason === NotSuspended) var interruptedWork = workInProgress.return;
            else interruptedWork = workInProgress, resetContextDependencies(), resetHooksOnUnwind(interruptedWork), thenableState = null, thenableIndexCounter = 0, interruptedWork = workInProgress;
            for(; null !== interruptedWork;)unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
            workInProgress = null;
        }
    }
    function prepareFreshStack(root, lanes) {
        var timeoutHandle = root.timeoutHandle;
        timeoutHandle !== noTimeout && (root.timeoutHandle = noTimeout, cancelTimeout(timeoutHandle));
        timeoutHandle = root.cancelPendingCommit;
        null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
        resetWorkInProgressStack();
        workInProgressRoot = root;
        workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = lanes;
        workInProgressSuspendedReason = NotSuspended;
        workInProgressThrownValue = null;
        workInProgressRootDidSkipSuspendedSiblings = !1;
        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        workInProgressRootDidAttachPingListener = !1;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = 0;
        workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
        workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
        0 !== (lanes & 8) && (lanes |= lanes & 32);
        var allEntangledLanes = root.entangledLanes;
        if (0 !== allEntangledLanes) for(root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;){
            var index = 31 - clz32(allEntangledLanes), lane = 1 << index;
            lanes |= root[index];
            allEntangledLanes &= ~lane;
        }
        entangledRenderLanes = lanes;
        finishQueueingConcurrentUpdates();
        lanes = getCurrentTime();
        1e3 < lanes - lastResetTime && (ReactSharedInternals.recentlyCreatedOwnerStacks = 0, lastResetTime = lanes);
        ReactStrictModeWarnings.discardPendingWarnings();
        return timeoutHandle;
    }
    function handleThrow(root, thrownValue) {
        currentlyRenderingFiber = null;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        ReactSharedInternals.getCurrentStack = null;
        isRendering = !1;
        current = null;
        thrownValue === SuspenseException || thrownValue === SuspenseActionException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnImmediate) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnInstance) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? SuspendedOnHydration : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? SuspendedOnDeprecatedThrowPromise : SuspendedOnError;
        workInProgressThrownValue = thrownValue;
        var erroredWork = workInProgress;
        if (null === erroredWork) workInProgressRootExitStatus = RootFatalErrored, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        else switch(erroredWork.mode & ProfileMode && stopProfilerTimerIfRunningAndRecordDuration(erroredWork), markComponentRenderStopped(), workInProgressSuspendedReason){
            case SuspendedOnError:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentErrored && injectedProfilingHooks.markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                break;
            case SuspendedOnData:
            case SuspendedOnAction:
            case SuspendedOnImmediate:
            case SuspendedOnDeprecatedThrowPromise:
            case SuspendedAndReadyToContinue:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentSuspended && injectedProfilingHooks.markComponentSuspended(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
    }
    function pushDispatcher() {
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
    }
    function pushAsyncDispatcher() {
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        return prevAsyncDispatcher;
    }
    function renderDidSuspendDelayIfPossible() {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
        workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194048) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = !0);
        0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
    }
    function renderRootSync(root, lanes, shouldYieldForPrerendering) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        lanes = !1;
        memoizedUpdaters = workInProgressRootExitStatus;
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) {
                var unitOfWork = workInProgress, thrownValue = workInProgressThrownValue;
                switch(workInProgressSuspendedReason){
                    case SuspendedOnHydration:
                        resetWorkInProgressStack();
                        memoizedUpdaters = RootSuspendedAtTheShell;
                        break a;
                    case SuspendedOnImmediate:
                    case SuspendedOnData:
                    case SuspendedOnAction:
                    case SuspendedOnDeprecatedThrowPromise:
                        null === suspenseHandlerStackCursor.current && (lanes = !0);
                        var reason = workInProgressSuspendedReason;
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                        if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
                            memoizedUpdaters = RootInProgress;
                            break a;
                        }
                        break;
                    default:
                        reason = workInProgressSuspendedReason, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                }
            }
            workLoopSync();
            memoizedUpdaters = workInProgressRootExitStatus;
            break;
        } catch (thrownValue$8) {
            handleThrow(root, thrownValue$8);
        }
        while (1);
        lanes && root.shellSuspendCounter++;
        resetContextDependencies();
        executionContext = prevExecutionContext;
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        markRenderStopped();
        null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
        return memoizedUpdaters;
    }
    function workLoopSync() {
        for(; null !== workInProgress;)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;
            prepareFreshStack(root, lanes);
        } else workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        markRenderStarted(lanes);
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) b: switch(lanes = workInProgress, memoizedUpdaters = workInProgressThrownValue, workInProgressSuspendedReason){
                case SuspendedOnError:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnError);
                    break;
                case SuspendedOnData:
                case SuspendedOnAction:
                    if (isThenableResolved(memoizedUpdaters)) {
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        replaySuspendedUnitOfWork(lanes);
                        break;
                    }
                    lanes = function() {
                        workInProgressSuspendedReason !== SuspendedOnData && workInProgressSuspendedReason !== SuspendedOnAction || workInProgressRoot !== root || (workInProgressSuspendedReason = SuspendedAndReadyToContinue);
                        ensureRootIsScheduled(root);
                    };
                    memoizedUpdaters.then(lanes, lanes);
                    break a;
                case SuspendedOnImmediate:
                    workInProgressSuspendedReason = SuspendedAndReadyToContinue;
                    break a;
                case SuspendedOnInstance:
                    workInProgressSuspendedReason = SuspendedOnInstanceAndReadyToContinue;
                    break a;
                case SuspendedAndReadyToContinue:
                    isThenableResolved(memoizedUpdaters) ? (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedAndReadyToContinue));
                    break;
                case SuspendedOnInstanceAndReadyToContinue:
                    var resource = null;
                    switch(workInProgress.tag){
                        case 26:
                            resource = workInProgress.memoizedState;
                        case 5:
                        case 27:
                            var hostFiber = workInProgress;
                            if (resource ? preloadResource(resource) : 1) {
                                workInProgressSuspendedReason = NotSuspended;
                                workInProgressThrownValue = null;
                                var sibling = hostFiber.sibling;
                                if (null !== sibling) workInProgress = sibling;
                                else {
                                    var returnFiber = hostFiber.return;
                                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                                }
                                break b;
                            }
                            break;
                        default:
                            console.error("Unexpected type of fiber triggered a suspensey commit. This is a bug in React.");
                    }
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnInstanceAndReadyToContinue);
                    break;
                case SuspendedOnDeprecatedThrowPromise:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnDeprecatedThrowPromise);
                    break;
                case SuspendedOnHydration:
                    resetWorkInProgressStack();
                    workInProgressRootExitStatus = RootSuspendedAtTheShell;
                    break a;
                default:
                    throw Error("Unexpected SuspendedReason. This is a bug in React.");
            }
            null !== ReactSharedInternals.actQueue ? workLoopSync() : workLoopConcurrentByScheduler();
            break;
        } catch (thrownValue$9) {
            handleThrow(root, thrownValue$9);
        }
        while (1);
        resetContextDependencies();
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        executionContext = prevExecutionContext;
        if (null !== workInProgress) return null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderYielded && injectedProfilingHooks.markRenderYielded(), RootInProgress;
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = 0;
        finishQueueingConcurrentUpdates();
        return workInProgressRootExitStatus;
    }
    function workLoopConcurrentByScheduler() {
        for(; null !== workInProgress && !shouldYield();)performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        var current = unitOfWork.alternate;
        (unitOfWork.mode & ProfileMode) !== NoMode ? (startProfilerTimer(unitOfWork), current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes), stopProfilerTimerIfRunningAndRecordDuration(unitOfWork)) : current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === current ? completeUnitOfWork(unitOfWork) : workInProgress = current;
    }
    function replaySuspendedUnitOfWork(unitOfWork) {
        var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
    }
    function replayBeginWork(unitOfWork) {
        var current = unitOfWork.alternate, isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;
        isProfilingMode && startProfilerTimer(unitOfWork);
        switch(unitOfWork.tag){
            case 15:
            case 0:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type, void 0, workInProgressRootRenderLanes);
                break;
            case 11:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type.render, unitOfWork.ref, workInProgressRootRenderLanes);
                break;
            case 5:
                resetHooksOnUnwind(unitOfWork);
            default:
                unwindInterruptedWork(current, unitOfWork), unitOfWork = workInProgress = resetWorkInProgress(unitOfWork, entangledRenderLanes), current = beginWork(current, unitOfWork, entangledRenderLanes);
        }
        isProfilingMode && stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);
        return current;
    }
    function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
        resetContextDependencies();
        resetHooksOnUnwind(unitOfWork);
        thenableState = null;
        thenableIndexCounter = 0;
        var returnFiber = unitOfWork.return;
        try {
            if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
                workInProgressRootExitStatus = RootFatalErrored;
                logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
                workInProgress = null;
                return;
            }
        } catch (error) {
            if (null !== returnFiber) throw workInProgress = returnFiber, error;
            workInProgressRootExitStatus = RootFatalErrored;
            logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
            workInProgress = null;
            return;
        }
        if (unitOfWork.flags & 32768) {
            if (isHydrating || suspendedReason === SuspendedOnError) root = !0;
            else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = !1;
            else if (workInProgressRootDidSkipSuspendedSiblings = root = !0, suspendedReason === SuspendedOnData || suspendedReason === SuspendedOnAction || suspendedReason === SuspendedOnImmediate || suspendedReason === SuspendedOnDeprecatedThrowPromise) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
            unwindUnitOfWork(unitOfWork, root);
        } else completeUnitOfWork(unitOfWork);
    }
    function completeUnitOfWork(unitOfWork) {
        var completedWork = unitOfWork;
        do {
            if (0 !== (completedWork.flags & 32768)) {
                unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
                return;
            }
            var current = completedWork.alternate;
            unitOfWork = completedWork.return;
            startProfilerTimer(completedWork);
            current = runWithFiberInDEV(completedWork, completeWork, current, completedWork, entangledRenderLanes);
            (completedWork.mode & ProfileMode) !== NoMode && stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);
            if (null !== current) {
                workInProgress = current;
                return;
            }
            completedWork = completedWork.sibling;
            if (null !== completedWork) {
                workInProgress = completedWork;
                return;
            }
            workInProgress = completedWork = unitOfWork;
        }while (null !== completedWork);
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootCompleted);
    }
    function unwindUnitOfWork(unitOfWork, skipSiblings) {
        do {
            var next = unwindWork(unitOfWork.alternate, unitOfWork);
            if (null !== next) {
                next.flags &= 32767;
                workInProgress = next;
                return;
            }
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);
                next = unitOfWork.actualDuration;
                for(var child = unitOfWork.child; null !== child;)next += child.actualDuration, child = child.sibling;
                unitOfWork.actualDuration = next;
            }
            next = unitOfWork.return;
            null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
            if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
                workInProgress = unitOfWork;
                return;
            }
            workInProgress = unitOfWork = next;
        }while (null !== unitOfWork);
        workInProgressRootExitStatus = RootSuspendedAtTheShell;
        workInProgress = null;
    }
    function commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes) {
        root.cancelPendingCommit = null;
        do flushPendingEffects();
        while (pendingEffectsStatus !== NO_PENDING_EFFECTS);
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStarted && injectedProfilingHooks.markCommitStarted(lanes);
        if (null === finishedWork) markCommitStopped();
        else {
            0 === lanes && console.error("finishedLanes should not be empty during a commit. This is a bug in React.");
            if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
            didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
            markRootFinished(root, lanes, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
            root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
            pendingFinishedWork = finishedWork;
            pendingEffectsRoot = root;
            pendingEffectsLanes = lanes;
            pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
            pendingPassiveTransitions = transitions;
            pendingRecoverableErrors = recoverableErrors;
            0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256) ? (root.callbackNode = null, root.callbackPriority = 0, scheduleCallback$1(NormalPriority$1, function() {
                flushPassiveEffects(!0);
                return null;
            })) : (root.callbackNode = null, root.callbackPriority = 0);
            commitStartTime = now();
            recoverableErrors = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
                recoverableErrors = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                transitions = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                spawnedLane = executionContext;
                executionContext |= CommitContext;
                try {
                    commitBeforeMutationEffects(root, finishedWork, lanes);
                } finally{
                    executionContext = spawnedLane, ReactDOMSharedInternals.p = transitions, ReactSharedInternals.T = recoverableErrors;
                }
            }
            pendingEffectsStatus = PENDING_MUTATION_PHASE;
            flushMutationEffects();
            flushLayoutEffects();
            flushSpawnedWork();
        }
    }
    function flushMutationEffects() {
        if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {
                rootMutationHasEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    inProgressLanes = lanes;
                    inProgressRoot = root;
                    commitMutationEffectsOnFiber(finishedWork, root);
                    inProgressRoot = inProgressLanes = null;
                    lanes = selectionInformation;
                    var curFocusedElem = getActiveElementDeep(root.containerInfo), priorFocusedElem = lanes.focusedElem, priorSelectionRange = lanes.selectionRange;
                    if (curFocusedElem !== priorFocusedElem && priorFocusedElem && priorFocusedElem.ownerDocument && containsNode(priorFocusedElem.ownerDocument.documentElement, priorFocusedElem)) {
                        if (null !== priorSelectionRange && hasSelectionCapabilities(priorFocusedElem)) {
                            var start = priorSelectionRange.start, end = priorSelectionRange.end;
                            void 0 === end && (end = start);
                            if ("selectionStart" in priorFocusedElem) priorFocusedElem.selectionStart = start, priorFocusedElem.selectionEnd = Math.min(end, priorFocusedElem.value.length);
                            else {
                                var doc = priorFocusedElem.ownerDocument || document, win = doc && doc.defaultView || window;
                                if (win.getSelection) {
                                    var selection = win.getSelection(), length = priorFocusedElem.textContent.length, start$jscomp$0 = Math.min(priorSelectionRange.start, length), end$jscomp$0 = void 0 === priorSelectionRange.end ? start$jscomp$0 : Math.min(priorSelectionRange.end, length);
                                    !selection.extend && start$jscomp$0 > end$jscomp$0 && (curFocusedElem = end$jscomp$0, end$jscomp$0 = start$jscomp$0, start$jscomp$0 = curFocusedElem);
                                    var startMarker = getNodeForCharacterOffset(priorFocusedElem, start$jscomp$0), endMarker = getNodeForCharacterOffset(priorFocusedElem, end$jscomp$0);
                                    if (startMarker && endMarker && (1 !== selection.rangeCount || selection.anchorNode !== startMarker.node || selection.anchorOffset !== startMarker.offset || selection.focusNode !== endMarker.node || selection.focusOffset !== endMarker.offset)) {
                                        var range = doc.createRange();
                                        range.setStart(startMarker.node, startMarker.offset);
                                        selection.removeAllRanges();
                                        start$jscomp$0 > end$jscomp$0 ? (selection.addRange(range), selection.extend(endMarker.node, endMarker.offset)) : (range.setEnd(endMarker.node, endMarker.offset), selection.addRange(range));
                                    }
                                }
                            }
                        }
                        doc = [];
                        for(selection = priorFocusedElem; selection = selection.parentNode;)1 === selection.nodeType && doc.push({
                            element: selection,
                            left: selection.scrollLeft,
                            top: selection.scrollTop
                        });
                        "function" === typeof priorFocusedElem.focus && priorFocusedElem.focus();
                        for(priorFocusedElem = 0; priorFocusedElem < doc.length; priorFocusedElem++){
                            var info = doc[priorFocusedElem];
                            info.element.scrollLeft = info.left;
                            info.element.scrollTop = info.top;
                        }
                    }
                    _enabled = !!eventsEnabled;
                    selectionInformation = eventsEnabled = null;
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootMutationHasEffect;
                }
            }
            root.current = finishedWork;
            pendingEffectsStatus = PENDING_LAYOUT_PHASE;
        }
    }
    function flushLayoutEffects() {
        if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);
            if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {
                rootHasLayoutEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStarted && injectedProfilingHooks.markLayoutEffectsStarted(lanes), inProgressLanes = lanes, inProgressRoot = root, commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork), inProgressRoot = inProgressLanes = null, null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStopped && injectedProfilingHooks.markLayoutEffectsStopped();
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootHasLayoutEffect;
                }
            }
            pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;
        }
    }
    function flushSpawnedWork() {
        if (pendingEffectsStatus === PENDING_SPAWNED_WORK || pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            requestPaint();
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, recoverableErrors = pendingRecoverableErrors, rootDidHavePassiveEffects = 0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256);
            rootDidHavePassiveEffects ? pendingEffectsStatus = PENDING_PASSIVE_PHASE : (pendingEffectsStatus = NO_PENDING_EFFECTS, pendingFinishedWork = pendingEffectsRoot = null, releaseRootPooledCache(root, root.pendingLanes), nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null);
            var remainingLanes = root.pendingLanes;
            0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
            rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root);
            rootDidHavePassiveEffects = lanesToEventPriority(lanes);
            finishedWork = finishedWork.stateNode;
            if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
                var didError = 128 === (finishedWork.current.flags & 128);
                switch(rootDidHavePassiveEffects){
                    case DiscreteEventPriority:
                        var schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority$1;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority$1;
                }
                injectedHook.onCommitFiberRoot(rendererID, finishedWork, schedulerPriority, didError);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            isDevToolsPresent && root.memoizedUpdaters.clear();
            onCommitRoot();
            if (null !== recoverableErrors) {
                didError = ReactSharedInternals.T;
                schedulerPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                ReactSharedInternals.T = null;
                try {
                    var onRecoverableError = root.onRecoverableError;
                    for(finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++){
                        var recoverableError = recoverableErrors[finishedWork], errorInfo = makeErrorInfo(recoverableError.stack);
                        runWithFiberInDEV(recoverableError.source, onRecoverableError, recoverableError.value, errorInfo);
                    }
                } finally{
                    ReactSharedInternals.T = didError, ReactDOMSharedInternals.p = schedulerPriority;
                }
            }
            0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
            ensureRootIsScheduled(root);
            remainingLanes = root.pendingLanes;
            0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42) ? (nestedUpdateScheduled = !0, root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root)) : nestedUpdateCount = 0;
            flushSyncWorkAcrossRoots_impl(0, !1);
            markCommitStopped();
        }
    }
    function makeErrorInfo(componentStack) {
        componentStack = {
            componentStack: componentStack
        };
        Object.defineProperty(componentStack, "digest", {
            get: function() {
                console.error('You are accessing "digest" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.');
            }
        });
        return componentStack;
    }
    function releaseRootPooledCache(root, remainingLanes) {
        0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
    }
    function flushPendingEffects(wasDelayedCommit) {
        flushMutationEffects();
        flushLayoutEffects();
        flushSpawnedWork();
        return flushPassiveEffects(wasDelayedCommit);
    }
    function flushPassiveEffects() {
        if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;
        var root = pendingEffectsRoot, remainingLanes = pendingEffectsRemainingLanes;
        pendingEffectsRemainingLanes = 0;
        var renderPriority = lanesToEventPriority(pendingEffectsLanes), priority = 0 === DefaultEventPriority || DefaultEventPriority > renderPriority ? DefaultEventPriority : renderPriority;
        renderPriority = ReactSharedInternals.T;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = priority;
            ReactSharedInternals.T = null;
            priority = pendingPassiveTransitions;
            pendingPassiveTransitions = null;
            var root$jscomp$0 = pendingEffectsRoot, lanes = pendingEffectsLanes;
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            pendingFinishedWork = pendingEffectsRoot = null;
            pendingEffectsLanes = 0;
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Cannot flush passive effects while already rendering.");
            isFlushingPassiveEffects = !0;
            didScheduleUpdateDuringPassiveEffects = !1;
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStarted && injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            commitPassiveUnmountOnFiber(root$jscomp$0.current);
            commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, priority);
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStopped && injectedProfilingHooks.markPassiveEffectsStopped();
            commitDoubleInvokeEffectsInDEV(root$jscomp$0);
            executionContext = prevExecutionContext;
            flushSyncWorkAcrossRoots_impl(0, !1);
            didScheduleUpdateDuringPassiveEffects ? root$jscomp$0 === rootWithPassiveNestedUpdates ? nestedPassiveUpdateCount++ : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = root$jscomp$0) : nestedPassiveUpdateCount = 0;
            didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;
            if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
                injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            var stateNode = root$jscomp$0.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
            return !0;
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = renderPriority, releaseRootPooledCache(root, remainingLanes);
        }
    }
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
        rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
        null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
        isRunningInsertionEffect = !1;
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        else {
            for(; null !== nearestMountedAncestor;){
                if (3 === nearestMountedAncestor.tag) {
                    captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
                    return;
                }
                if (1 === nearestMountedAncestor.tag) {
                    var instance = nearestMountedAncestor.stateNode;
                    if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
                        error = createClassErrorUpdate(2);
                        instance = enqueueUpdate(nearestMountedAncestor, error, 2);
                        null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
                        return;
                    }
                }
                nearestMountedAncestor = nearestMountedAncestor.return;
            }
            console.error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error);
        }
    }
    function attachPingListener(root, wakeable, lanes) {
        var pingCache = root.pingCache;
        if (null === pingCache) {
            pingCache = root.pingCache = new PossiblyWeakMap();
            var threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else threadIDs = pingCache.get(wakeable), void 0 === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
        threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = !0, threadIDs.add(lanes), pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes), isDevToolsPresent && restorePendingUpdaters(root, lanes), wakeable.then(pingCache, pingCache));
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(wakeable);
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
        root.warmLanes &= ~pingedLanes;
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && console.error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act");
        workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? (executionContext & RenderContext) === NoContext && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
        ensureRootIsScheduled(root);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        0 === retryLane && (retryLane = claimNextRetryLane());
        boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState, retryLane = 0;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = 0;
        switch(boundaryFiber.tag){
            case 13:
                var retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                null !== suspenseState && (retryLane = suspenseState.retryLane);
                break;
            case 19:
                retryCache = boundaryFiber.stateNode;
                break;
            case 22:
                retryCache = boundaryFiber.stateNode._retryCache;
                break;
            default:
                throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        null !== retryCache && retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(root$jscomp$0, parentFiber, isInStrictMode) {
        if (0 !== (parentFiber.subtreeFlags & 67117056)) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var root = root$jscomp$0, fiber = parentFiber, isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;
            isStrictModeFiber = isInStrictMode || isStrictModeFiber;
            22 !== fiber.tag ? fiber.flags & 67108864 ? isStrictModeFiber && runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber, (fiber.mode & NoStrictPassiveEffectsMode) === NoMode) : recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, fiber, isStrictModeFiber) : null === fiber.memoizedState && (isStrictModeFiber && fiber.flags & 8192 ? runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber) : fiber.subtreeFlags & 67108864 && runWithFiberInDEV(fiber, recursivelyTraverseAndDoubleInvokeEffectsInDEV, root, fiber, isStrictModeFiber));
            parentFiber = parentFiber.sibling;
        }
    }
    function doubleInvokeEffectsOnFiber(root, fiber) {
        var shouldDoubleInvokePassiveEffects = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;
        setIsStrictModeForDevtools(!0);
        try {
            disappearLayoutEffects(fiber), shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber), reappearLayoutEffects(root, fiber.alternate, fiber, !1), shouldDoubleInvokePassiveEffects && reconnectPassiveEffects(root, fiber, 0, null, !1, 0);
        } finally{
            setIsStrictModeForDevtools(!1);
        }
    }
    function commitDoubleInvokeEffectsInDEV(root) {
        var doubleInvokeEffects = !0;
        root.current.mode & (StrictLegacyMode | StrictEffectsMode) || (doubleInvokeEffects = !1);
        recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, root.current, doubleInvokeEffects);
    }
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) === NoContext) {
            var tag = fiber.tag;
            if (3 === tag || 1 === tag || 0 === tag || 11 === tag || 14 === tag || 15 === tag) {
                tag = getComponentNameFromFiber(fiber) || "ReactComponent";
                if (null !== didWarnStateUpdateForNotYetMountedComponent) {
                    if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;
                    didWarnStateUpdateForNotYetMountedComponent.add(tag);
                } else didWarnStateUpdateForNotYetMountedComponent = new Set([
                    tag
                ]);
                runWithFiberInDEV(fiber, function() {
                    console.error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
                });
            }
        }
    }
    function restorePendingUpdaters(root, lanes) {
        isDevToolsPresent && root.memoizedUpdaters.forEach(function(schedulingFiber) {
            addFiberToLanesMap(root, schedulingFiber, lanes);
        });
    }
    function scheduleCallback$1(priorityLevel, callback) {
        var actQueue = ReactSharedInternals.actQueue;
        return null !== actQueue ? (actQueue.push(callback), fakeActCallbackNode$1) : scheduleCallback$3(priorityLevel, callback);
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && runWithFiberInDEV(fiber, function() {
            console.error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
        });
    }
    function ensureRootIsScheduled(root) {
        root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
        mightHavePendingSyncWork = !0;
        null !== ReactSharedInternals.actQueue ? didScheduleMicrotask_act || (didScheduleMicrotask_act = !0, scheduleImmediateRootScheduleTask()) : didScheduleMicrotask || (didScheduleMicrotask = !0, scheduleImmediateRootScheduleTask());
    }
    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
        if (!isFlushingWork && mightHavePendingSyncWork) {
            isFlushingWork = !0;
            do {
                var didPerformSomeWork = !1;
                for(var root = firstScheduledRoot; null !== root;){
                    if (!onlyLegacy) {
                        if (0 !== syncTransitionLanes) {
                            var pendingLanes = root.pendingLanes;
                            if (0 === pendingLanes) var nextLanes = 0;
                            else {
                                var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
                                nextLanes = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
                                nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                                nextLanes = nextLanes & 201326741 ? nextLanes & 201326741 | 1 : nextLanes ? nextLanes | 2 : 0;
                            }
                            0 !== nextLanes && (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                        } else nextLanes = workInProgressRootRenderLanes, nextLanes = getNextLanes(root, root === workInProgressRoot ? nextLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout), 0 === (nextLanes & 3) || checkIfRootIsPrerendering(root, nextLanes) || (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                    }
                    root = root.next;
                }
            }while (didPerformSomeWork);
            isFlushingWork = !1;
        }
    }
    function processRootScheduleInImmediateTask() {
        processRootScheduleInMicrotask();
    }
    function processRootScheduleInMicrotask() {
        mightHavePendingSyncWork = didScheduleMicrotask_act = didScheduleMicrotask = !1;
        var syncTransitionLanes = 0;
        0 !== currentEventTransitionLane && (shouldAttemptEagerTransition() && (syncTransitionLanes = currentEventTransitionLane), currentEventTransitionLane = 0);
        for(var currentTime = now$1(), prev = null, root = firstScheduledRoot; null !== root;){
            var next = root.next, nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
            if (0 === nextLanes) root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev);
            else if (prev = root, 0 !== syncTransitionLanes || 0 !== (nextLanes & 3)) mightHavePendingSyncWork = !0;
            root = next;
        }
        flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
    }
    function scheduleTaskForRootDuringMicrotask(root, currentTime) {
        for(var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index, expirationTime = expirationTimes[index];
            if (-1 === expirationTime) {
                if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else expirationTime <= currentTime && (root.expiredLanes |= lane);
            lanes &= ~lane;
        }
        currentTime = workInProgressRoot;
        suspendedLanes = workInProgressRootRenderLanes;
        suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        pingedLanes = root.callbackNode;
        if (0 === suspendedLanes || root === currentTime && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) return null !== pingedLanes && cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
        if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
            currentTime = suspendedLanes & -suspendedLanes;
            if (currentTime !== root.callbackPriority || null !== ReactSharedInternals.actQueue && pingedLanes !== fakeActCallbackNode) cancelCallback(pingedLanes);
            else return currentTime;
            switch(lanesToEventPriority(suspendedLanes)){
                case DiscreteEventPriority:
                case ContinuousEventPriority:
                    suspendedLanes = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    suspendedLanes = NormalPriority$1;
                    break;
                case IdleEventPriority:
                    suspendedLanes = IdlePriority;
                    break;
                default:
                    suspendedLanes = NormalPriority$1;
            }
            pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
            null !== ReactSharedInternals.actQueue ? (ReactSharedInternals.actQueue.push(pingedLanes), suspendedLanes = fakeActCallbackNode) : suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);
            root.callbackPriority = currentTime;
            root.callbackNode = suspendedLanes;
            return currentTime;
        }
        null !== pingedLanes && cancelCallback(pingedLanes);
        root.callbackPriority = 2;
        root.callbackNode = null;
        return 2;
    }
    function performWorkOnRootViaSchedulerTask(root, didTimeout) {
        nestedUpdateScheduled = currentUpdateIsNested = !1;
        if (pendingEffectsStatus !== NO_PENDING_EFFECTS && pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return root.callbackNode = null, root.callbackPriority = 0, null;
        var originalCallbackNode = root.callbackNode;
        if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode) return null;
        var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
        workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
        performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
        scheduleTaskForRootDuringMicrotask(root, now$1());
        return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
    }
    function performSyncWorkOnRoot(root, lanes) {
        if (flushPendingEffects()) return null;
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = !1;
        performWorkOnRoot(root, lanes, !0);
    }
    function cancelCallback(callbackNode) {
        callbackNode !== fakeActCallbackNode && null !== callbackNode && cancelCallback$1(callbackNode);
    }
    function scheduleImmediateRootScheduleTask() {
        null !== ReactSharedInternals.actQueue && ReactSharedInternals.actQueue.push(function() {
            processRootScheduleInMicrotask();
            return null;
        });
        scheduleMicrotask(function() {
            (executionContext & (RenderContext | CommitContext)) !== NoContext ? scheduleCallback$3(ImmediatePriority, processRootScheduleInImmediateTask) : processRootScheduleInMicrotask();
        });
    }
    function requestTransitionLane() {
        0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
        return currentEventTransitionLane;
    }
    function coerceFormActionProp(actionProp) {
        if (null == actionProp || "symbol" === typeof actionProp || "boolean" === typeof actionProp) return null;
        if ("function" === typeof actionProp) return actionProp;
        checkAttributeStringCoercion(actionProp, "action");
        return sanitizeURL("" + actionProp);
    }
    function createFormDataWithSubmitter(form, submitter) {
        var temp = submitter.ownerDocument.createElement("input");
        temp.name = submitter.name;
        temp.value = submitter.value;
        form.id && temp.setAttribute("form", form.id);
        submitter.parentNode.insertBefore(temp, submitter);
        form = new FormData(form);
        temp.parentNode.removeChild(temp);
        return form;
    }
    function extractEvents$1(dispatchQueue, domEventName, maybeTargetInst, nativeEvent, nativeEventTarget) {
        if ("submit" === domEventName && maybeTargetInst && maybeTargetInst.stateNode === nativeEventTarget) {
            var action = coerceFormActionProp((nativeEventTarget[internalPropsKey] || null).action), submitter = nativeEvent.submitter;
            submitter && (domEventName = (domEventName = submitter[internalPropsKey] || null) ? coerceFormActionProp(domEventName.formAction) : submitter.getAttribute("formAction"), null !== domEventName && (action = domEventName, submitter = null));
            var event = new SyntheticEvent("action", "action", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: [
                    {
                        instance: null,
                        listener: function() {
                            if (nativeEvent.defaultPrevented) {
                                if (0 !== currentEventTransitionLane) {
                                    var formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                        pending: !0,
                                        data: formData,
                                        method: nativeEventTarget.method,
                                        action: action
                                    };
                                    Object.freeze(pendingState);
                                    startHostTransition(maybeTargetInst, pendingState, null, formData);
                                }
                            } else "function" === typeof action && (event.preventDefault(), formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                pending: !0,
                                data: formData,
                                method: nativeEventTarget.method,
                                action: action
                            }, Object.freeze(pendingState), startHostTransition(maybeTargetInst, pendingState, action, formData));
                        },
                        currentTarget: nativeEventTarget
                    }
                ]
            });
        }
    }
    function executeDispatch(event, listener, currentTarget) {
        event.currentTarget = currentTarget;
        try {
            listener(event);
        } catch (error) {
            reportGlobalError(error);
        }
        event.currentTarget = null;
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        eventSystemFlags = 0 !== (eventSystemFlags & 4);
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i];
            a: {
                var previousInstance = void 0, event = _dispatchQueue$i.event;
                _dispatchQueue$i = _dispatchQueue$i.listeners;
                if (eventSystemFlags) for(var i$jscomp$0 = _dispatchQueue$i.length - 1; 0 <= i$jscomp$0; i$jscomp$0--){
                    var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
                else for(i$jscomp$0 = 0; i$jscomp$0 < _dispatchQueue$i.length; i$jscomp$0++){
                    _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
                    instance = _dispatchListeners$i.instance;
                    currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
            }
        }
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        nonDelegatedEvents.has(domEventName) || console.error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var listenerSet = targetElement[internalEventHandlersKey];
        void 0 === listenerSet && (listenerSet = targetElement[internalEventHandlersKey] = new Set());
        var listenerSetKey = domEventName + "__bubble";
        listenerSet.has(listenerSetKey) || (addTrappedEventListener(targetElement, domEventName, 2, !1), listenerSet.add(listenerSetKey));
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener && console.error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        isCapturePhaseListener && (eventSystemFlags |= 4);
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    }
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = !0;
            allNativeEvents.forEach(function(domEventName) {
                "selectionchange" !== domEventName && (nonDelegatedEvents.has(domEventName) || listenToNativeEvent(domEventName, !1, rootContainerElement), listenToNativeEvent(domEventName, !0, rootContainerElement));
            });
            var ownerDocument = 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
            null === ownerDocument || ownerDocument[listeningMarker] || (ownerDocument[listeningMarker] = !0, listenToNativeEvent("selectionchange", !1, ownerDocument));
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener) {
        switch(getEventPriority(domEventName)){
            case DiscreteEventPriority:
                var listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            default:
                listenerWrapper = dispatchEvent;
        }
        eventSystemFlags = listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        listenerWrapper = void 0;
        !passiveBrowserEventsSupported || "touchstart" !== domEventName && "touchmove" !== domEventName && "wheel" !== domEventName || (listenerWrapper = !0);
        isCapturePhaseListener ? void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            capture: !0,
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !0) : void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst$jscomp$0, targetContainer) {
        var ancestorInst = targetInst$jscomp$0;
        if (0 === (eventSystemFlags & 1) && 0 === (eventSystemFlags & 2) && null !== targetInst$jscomp$0) a: for(;;){
            if (null === targetInst$jscomp$0) return;
            var nodeTag = targetInst$jscomp$0.tag;
            if (3 === nodeTag || 4 === nodeTag) {
                var container = targetInst$jscomp$0.stateNode.containerInfo;
                if (container === targetContainer) break;
                if (4 === nodeTag) for(nodeTag = targetInst$jscomp$0.return; null !== nodeTag;){
                    var grandTag = nodeTag.tag;
                    if ((3 === grandTag || 4 === grandTag) && nodeTag.stateNode.containerInfo === targetContainer) return;
                    nodeTag = nodeTag.return;
                }
                for(; null !== container;){
                    nodeTag = getClosestInstanceFromNode(container);
                    if (null === nodeTag) return;
                    grandTag = nodeTag.tag;
                    if (5 === grandTag || 6 === grandTag || 26 === grandTag || 27 === grandTag) {
                        targetInst$jscomp$0 = ancestorInst = nodeTag;
                        continue a;
                    }
                    container = container.parentNode;
                }
            }
            targetInst$jscomp$0 = targetInst$jscomp$0.return;
        }
        batchedUpdates$1(function() {
            var targetInst = ancestorInst, nativeEventTarget = getEventTarget(nativeEvent), dispatchQueue = [];
            a: {
                var reactName = topLevelEventsToReactNames.get(domEventName);
                if (void 0 !== reactName) {
                    var SyntheticEventCtor = SyntheticEvent, reactEventType = domEventName;
                    switch(domEventName){
                        case "keypress":
                            if (0 === getEventCharCode(nativeEvent)) break a;
                        case "keydown":
                        case "keyup":
                            SyntheticEventCtor = SyntheticKeyboardEvent;
                            break;
                        case "focusin":
                            reactEventType = "focus";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "focusout":
                            reactEventType = "blur";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "beforeblur":
                        case "afterblur":
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "click":
                            if (2 === nativeEvent.button) break a;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            SyntheticEventCtor = SyntheticMouseEvent;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            SyntheticEventCtor = SyntheticDragEvent;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            SyntheticEventCtor = SyntheticTouchEvent;
                            break;
                        case ANIMATION_END:
                        case ANIMATION_ITERATION:
                        case ANIMATION_START:
                            SyntheticEventCtor = SyntheticAnimationEvent;
                            break;
                        case TRANSITION_END:
                            SyntheticEventCtor = SyntheticTransitionEvent;
                            break;
                        case "scroll":
                        case "scrollend":
                            SyntheticEventCtor = SyntheticUIEvent;
                            break;
                        case "wheel":
                            SyntheticEventCtor = SyntheticWheelEvent;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            SyntheticEventCtor = SyntheticClipboardEvent;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            SyntheticEventCtor = SyntheticPointerEvent;
                            break;
                        case "toggle":
                        case "beforetoggle":
                            SyntheticEventCtor = SyntheticToggleEvent;
                    }
                    var inCapturePhase = 0 !== (eventSystemFlags & 4), accumulateTargetOnly = !inCapturePhase && ("scroll" === domEventName || "scrollend" === domEventName), reactEventName = inCapturePhase ? null !== reactName ? reactName + "Capture" : null : reactName;
                    inCapturePhase = [];
                    for(var instance = targetInst, lastHostComponent; null !== instance;){
                        var _instance2 = instance;
                        lastHostComponent = _instance2.stateNode;
                        _instance2 = _instance2.tag;
                        5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2 || null === lastHostComponent || null === reactEventName || (_instance2 = getListener(instance, reactEventName), null != _instance2 && inCapturePhase.push(createDispatchListener(instance, _instance2, lastHostComponent)));
                        if (accumulateTargetOnly) break;
                        instance = instance.return;
                    }
                    0 < inCapturePhase.length && (reactName = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                        event: reactName,
                        listeners: inCapturePhase
                    }));
                }
            }
            if (0 === (eventSystemFlags & 7)) {
                a: {
                    reactName = "mouseover" === domEventName || "pointerover" === domEventName;
                    SyntheticEventCtor = "mouseout" === domEventName || "pointerout" === domEventName;
                    if (reactName && nativeEvent !== currentReplayingEvent && (reactEventType = nativeEvent.relatedTarget || nativeEvent.fromElement) && (getClosestInstanceFromNode(reactEventType) || reactEventType[internalContainerInstanceKey])) break a;
                    if (SyntheticEventCtor || reactName) {
                        reactName = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget : (reactName = nativeEventTarget.ownerDocument) ? reactName.defaultView || reactName.parentWindow : window;
                        if (SyntheticEventCtor) {
                            if (reactEventType = nativeEvent.relatedTarget || nativeEvent.toElement, SyntheticEventCtor = targetInst, reactEventType = reactEventType ? getClosestInstanceFromNode(reactEventType) : null, null !== reactEventType && (accumulateTargetOnly = getNearestMountedFiber(reactEventType), inCapturePhase = reactEventType.tag, reactEventType !== accumulateTargetOnly || 5 !== inCapturePhase && 27 !== inCapturePhase && 6 !== inCapturePhase)) reactEventType = null;
                        } else SyntheticEventCtor = null, reactEventType = targetInst;
                        if (SyntheticEventCtor !== reactEventType) {
                            inCapturePhase = SyntheticMouseEvent;
                            _instance2 = "onMouseLeave";
                            reactEventName = "onMouseEnter";
                            instance = "mouse";
                            if ("pointerout" === domEventName || "pointerover" === domEventName) inCapturePhase = SyntheticPointerEvent, _instance2 = "onPointerLeave", reactEventName = "onPointerEnter", instance = "pointer";
                            accumulateTargetOnly = null == SyntheticEventCtor ? reactName : getNodeFromInstance(SyntheticEventCtor);
                            lastHostComponent = null == reactEventType ? reactName : getNodeFromInstance(reactEventType);
                            reactName = new inCapturePhase(_instance2, instance + "leave", SyntheticEventCtor, nativeEvent, nativeEventTarget);
                            reactName.target = accumulateTargetOnly;
                            reactName.relatedTarget = lastHostComponent;
                            _instance2 = null;
                            getClosestInstanceFromNode(nativeEventTarget) === targetInst && (inCapturePhase = new inCapturePhase(reactEventName, instance + "enter", reactEventType, nativeEvent, nativeEventTarget), inCapturePhase.target = lastHostComponent, inCapturePhase.relatedTarget = accumulateTargetOnly, _instance2 = inCapturePhase);
                            accumulateTargetOnly = _instance2;
                            if (SyntheticEventCtor && reactEventType) b: {
                                inCapturePhase = SyntheticEventCtor;
                                reactEventName = reactEventType;
                                instance = 0;
                                for(lastHostComponent = inCapturePhase; lastHostComponent; lastHostComponent = getParent(lastHostComponent))instance++;
                                lastHostComponent = 0;
                                for(_instance2 = reactEventName; _instance2; _instance2 = getParent(_instance2))lastHostComponent++;
                                for(; 0 < instance - lastHostComponent;)inCapturePhase = getParent(inCapturePhase), instance--;
                                for(; 0 < lastHostComponent - instance;)reactEventName = getParent(reactEventName), lastHostComponent--;
                                for(; instance--;){
                                    if (inCapturePhase === reactEventName || null !== reactEventName && inCapturePhase === reactEventName.alternate) break b;
                                    inCapturePhase = getParent(inCapturePhase);
                                    reactEventName = getParent(reactEventName);
                                }
                                inCapturePhase = null;
                            }
                            else inCapturePhase = null;
                            null !== SyntheticEventCtor && accumulateEnterLeaveListenersForEvent(dispatchQueue, reactName, SyntheticEventCtor, inCapturePhase, !1);
                            null !== reactEventType && null !== accumulateTargetOnly && accumulateEnterLeaveListenersForEvent(dispatchQueue, accumulateTargetOnly, reactEventType, inCapturePhase, !0);
                        }
                    }
                }
                a: {
                    reactName = targetInst ? getNodeFromInstance(targetInst) : window;
                    SyntheticEventCtor = reactName.nodeName && reactName.nodeName.toLowerCase();
                    if ("select" === SyntheticEventCtor || "input" === SyntheticEventCtor && "file" === reactName.type) var getTargetInstFunc = getTargetInstForChangeEvent;
                    else if (isTextInputElement(reactName)) {
                        if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                        else {
                            getTargetInstFunc = getTargetInstForInputEventPolyfill;
                            var handleEventFunc = handleEventsForInputEventPolyfill;
                        }
                    } else SyntheticEventCtor = reactName.nodeName, !SyntheticEventCtor || "input" !== SyntheticEventCtor.toLowerCase() || "checkbox" !== reactName.type && "radio" !== reactName.type ? targetInst && isCustomElement(targetInst.elementType) && (getTargetInstFunc = getTargetInstForChangeEvent) : getTargetInstFunc = getTargetInstForClickEvent;
                    if (getTargetInstFunc && (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))) {
                        createAndAccumulateChangeEvent(dispatchQueue, getTargetInstFunc, nativeEvent, nativeEventTarget);
                        break a;
                    }
                    handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);
                    "focusout" === domEventName && targetInst && "number" === reactName.type && null != targetInst.memoizedProps.value && setDefaultValue(reactName, "number", reactName.value);
                }
                handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;
                switch(domEventName){
                    case "focusin":
                        if (isTextInputElement(handleEventFunc) || "true" === handleEventFunc.contentEditable) activeElement = handleEventFunc, activeElementInst = targetInst, lastSelection = null;
                        break;
                    case "focusout":
                        lastSelection = activeElementInst = activeElement = null;
                        break;
                    case "mousedown":
                        mouseDown = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        mouseDown = !1;
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                        break;
                    case "selectionchange":
                        if (skipSelectionChangeEvent) break;
                    case "keydown":
                    case "keyup":
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                }
                var fallbackData;
                if (canUseCompositionEvent) b: {
                    switch(domEventName){
                        case "compositionstart":
                            var eventType = "onCompositionStart";
                            break b;
                        case "compositionend":
                            eventType = "onCompositionEnd";
                            break b;
                        case "compositionupdate":
                            eventType = "onCompositionUpdate";
                            break b;
                    }
                    eventType = void 0;
                }
                else isComposing ? isFallbackCompositionEnd(domEventName, nativeEvent) && (eventType = "onCompositionEnd") : "keydown" === domEventName && nativeEvent.keyCode === START_KEYCODE && (eventType = "onCompositionStart");
                eventType && (useFallbackCompositionData && "ko" !== nativeEvent.locale && (isComposing || "onCompositionStart" !== eventType ? "onCompositionEnd" === eventType && isComposing && (fallbackData = getData()) : (root = nativeEventTarget, startText = "value" in root ? root.value : root.textContent, isComposing = !0)), handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType), 0 < handleEventFunc.length && (eventType = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: eventType,
                    listeners: handleEventFunc
                }), fallbackData ? eventType.data = fallbackData : (fallbackData = getDataFromCustomEvent(nativeEvent), null !== fallbackData && (eventType.data = fallbackData))));
                if (fallbackData = canUseTextInputEvent ? getNativeBeforeInputChars(domEventName, nativeEvent) : getFallbackBeforeInputChars(domEventName, nativeEvent)) eventType = accumulateTwoPhaseListeners(targetInst, "onBeforeInput"), 0 < eventType.length && (handleEventFunc = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: handleEventFunc,
                    listeners: eventType
                }), handleEventFunc.data = fallbackData);
                extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
            processDispatchQueue(dispatchQueue, eventSystemFlags);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        for(var captureName = reactName + "Capture", listeners = []; null !== targetFiber;){
            var _instance3 = targetFiber, stateNode = _instance3.stateNode;
            _instance3 = _instance3.tag;
            5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3 || null === stateNode || (_instance3 = getListener(targetFiber, captureName), null != _instance3 && listeners.unshift(createDispatchListener(targetFiber, _instance3, stateNode)), _instance3 = getListener(targetFiber, reactName), null != _instance3 && listeners.push(createDispatchListener(targetFiber, _instance3, stateNode)));
            if (3 === targetFiber.tag) return listeners;
            targetFiber = targetFiber.return;
        }
        return [];
    }
    function getParent(inst) {
        if (null === inst) return null;
        do inst = inst.return;
        while (inst && 5 !== inst.tag && 27 !== inst.tag);
        return inst ? inst : null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        for(var registrationName = event._reactName, listeners = []; null !== target && target !== common;){
            var _instance4 = target, alternate = _instance4.alternate, stateNode = _instance4.stateNode;
            _instance4 = _instance4.tag;
            if (null !== alternate && alternate === common) break;
            5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4 || null === stateNode || (alternate = stateNode, inCapturePhase ? (stateNode = getListener(target, registrationName), null != stateNode && listeners.unshift(createDispatchListener(target, stateNode, alternate))) : inCapturePhase || (stateNode = getListener(target, registrationName), null != stateNode && listeners.push(createDispatchListener(target, stateNode, alternate))));
            target = target.return;
        }
        0 !== listeners.length && dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    }
    function validatePropertiesInDevelopment(type, props) {
        validateProperties$2(type, props);
        "input" !== type && "textarea" !== type && "select" !== type || null == props || null !== props.value || didWarnValueNull || (didWarnValueNull = !0, "select" === type && props.multiple ? console.error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : console.error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        var eventRegistry = {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        };
        isCustomElement(type) || "string" === typeof props.is || warnUnknownProperties(type, props, eventRegistry);
        props.contentEditable && !props.suppressContentEditableWarning && null != props.children && console.error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
    }
    function warnForPropDifference(propName, serverValue, clientValue, serverDifferences) {
        serverValue !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(serverValue) !== clientValue && (serverDifferences[propName] = serverValue));
    }
    function warnForExtraAttributes(domElement, attributeNames, serverDifferences) {
        attributeNames.forEach(function(attributeName) {
            serverDifferences[getPropNameFromAttributeName(attributeName)] = "style" === attributeName ? getStylesObjectFromElement(domElement) : domElement.getAttribute(attributeName);
        });
    }
    function warnForInvalidEventListener(registrationName, listener) {
        !1 === listener ? console.error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName) : console.error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }
    function normalizeHTML(parent, html) {
        parent = parent.namespaceURI === MATH_NAMESPACE || parent.namespaceURI === SVG_NAMESPACE ? parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName) : parent.ownerDocument.createElement(parent.tagName);
        parent.innerHTML = html;
        return parent.innerHTML;
    }
    function normalizeMarkupForTextOrAttribute(markup) {
        willCoercionThrow(markup) && (console.error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.", typeName(markup)), testStringCoercion(markup));
        return ("string" === typeof markup ? markup : "" + markup).replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText) {
        clientText = normalizeMarkupForTextOrAttribute(clientText);
        return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;
    }
    function noop$1() {}
    function setProp(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "children":
                if ("string" === typeof value) validateTextNesting(value, tag, !1), "body" === tag || "textarea" === tag && "" === value || setTextContent(domElement, value);
                else if ("number" === typeof value || "bigint" === typeof value) validateTextNesting("" + value, tag, !1), "body" !== tag && setTextContent(domElement, "" + value);
                break;
            case "className":
                setValueForKnownAttribute(domElement, "class", value);
                break;
            case "tabIndex":
                setValueForKnownAttribute(domElement, "tabindex", value);
                break;
            case "dir":
            case "role":
            case "viewBox":
            case "width":
            case "height":
                setValueForKnownAttribute(domElement, key, value);
                break;
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "data":
                if ("object" !== tag) {
                    setValueForKnownAttribute(domElement, "data", value);
                    break;
                }
            case "src":
            case "href":
                if ("" === value && ("a" !== tag || "href" !== key)) {
                    "src" === key ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key);
                    domElement.removeAttribute(key);
                    break;
                }
                if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "action":
            case "formAction":
                null != value && ("form" === tag ? "formAction" === key ? console.error("You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.") : "function" === typeof value && (null == props.encType && null == props.method || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.")), null == props.target || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window."))) : "input" === tag || "button" === tag ? "action" === key ? console.error("You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.") : "input" !== tag || "submit" === props.type || "image" === props.type || didWarnFormActionType ? "button" !== tag || null == props.type || "submit" === props.type || didWarnFormActionType ? "function" === typeof value && (null == props.name || didWarnFormActionName || (didWarnFormActionName = !0, console.error('Cannot specify a "name" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.')), null == props.formEncType && null == props.formMethod || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.")), null == props.formTarget || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window."))) : (didWarnFormActionType = !0, console.error('A button can only specify a formAction along with type="submit" or no type.')) : (didWarnFormActionType = !0, console.error('An input can only specify a formAction along with type="submit" or type="image".')) : "action" === key ? console.error("You can only pass the action prop to <form>.") : console.error("You can only pass the formAction prop to <input> or <button>."));
                if ("function" === typeof value) {
                    domElement.setAttribute(key, "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");
                    break;
                } else "function" === typeof prevValue && ("formAction" === key ? ("input" !== tag && setProp(domElement, tag, "name", props.name, props, null), setProp(domElement, tag, "formEncType", props.formEncType, props, null), setProp(domElement, tag, "formMethod", props.formMethod, props, null), setProp(domElement, tag, "formTarget", props.formTarget, props, null)) : (setProp(domElement, tag, "encType", props.encType, props, null), setProp(domElement, tag, "method", props.method, props, null), setProp(domElement, tag, "target", props.target, props, null)));
                if (null == value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "multiple":
                domElement.multiple = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "muted":
                domElement.muted = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                break;
            case "autoFocus":
                break;
            case "xlinkHref":
                if (null == value || "function" === typeof value || "boolean" === typeof value || "symbol" === typeof value) {
                    domElement.removeAttribute("xlink:href");
                    break;
                }
                checkAttributeStringCoercion(value, key);
                key = sanitizeURL("" + value);
                domElement.setAttributeNS(xlinkNamespace, "xlink:href", key);
                break;
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
                null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, "" + value)) : domElement.removeAttribute(key);
                break;
            case "inert":
                "" !== value || didWarnForNewBooleanPropsWithEmptyValue[key] || (didWarnForNewBooleanPropsWithEmptyValue[key] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", key));
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
                value && "function" !== typeof value && "symbol" !== typeof value ? domElement.setAttribute(key, "") : domElement.removeAttribute(key);
                break;
            case "capture":
            case "download":
                !0 === value ? domElement.setAttribute(key, "") : !1 !== value && null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "cols":
            case "rows":
            case "size":
            case "span":
                null != value && "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "rowSpan":
            case "start":
                null == value || "function" === typeof value || "symbol" === typeof value || isNaN(value) ? domElement.removeAttribute(key) : (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value));
                break;
            case "popover":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                setValueForAttribute(domElement, "popover", value);
                break;
            case "xlinkActuate":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:actuate", value);
                break;
            case "xlinkArcrole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:arcrole", value);
                break;
            case "xlinkRole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:role", value);
                break;
            case "xlinkShow":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:show", value);
                break;
            case "xlinkTitle":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:title", value);
                break;
            case "xlinkType":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:type", value);
                break;
            case "xmlBase":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:base", value);
                break;
            case "xmlLang":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:lang", value);
                break;
            case "xmlSpace":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:space", value);
                break;
            case "is":
                null != prevValue && console.error('Cannot update the "is" prop after it has been initialized.');
                setValueForAttribute(domElement, "is", value);
                break;
            case "innerText":
            case "textContent":
                break;
            case "popoverTarget":
                didWarnPopoverTargetObject || null == value || "object" !== typeof value || (didWarnPopoverTargetObject = !0, console.error("The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.", value));
            default:
                !(2 < key.length) || "o" !== key[0] && "O" !== key[0] || "n" !== key[1] && "N" !== key[1] ? (key = getAttributeAlias(key), setValueForAttribute(domElement, key, value)) : registrationNameDependencies.hasOwnProperty(key) && null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
        }
    }
    function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "children":
                "string" === typeof value ? setTextContent(domElement, value) : ("number" === typeof value || "bigint" === typeof value) && setTextContent(domElement, "" + value);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "innerHTML":
            case "ref":
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                if (registrationNameDependencies.hasOwnProperty(key)) null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
                else a: {
                    if ("o" === key[0] && "n" === key[1] && (props = key.endsWith("Capture"), tag = key.slice(2, props ? key.length - 7 : void 0), prevValue = domElement[internalPropsKey] || null, prevValue = null != prevValue ? prevValue[key] : null, "function" === typeof prevValue && domElement.removeEventListener(tag, prevValue, props), "function" === typeof value)) {
                        "function" !== typeof prevValue && null !== prevValue && (key in domElement ? domElement[key] = null : domElement.hasAttribute(key) && domElement.removeAttribute(key));
                        domElement.addEventListener(tag, value, props);
                        break a;
                    }
                    key in domElement ? domElement[key] = value : !0 === value ? domElement.setAttribute(key, "") : setValueForAttribute(domElement, key, value);
                }
        }
    }
    function setInitialProperties(domElement, tag, props) {
        validatePropertiesInDevelopment(tag, props);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "img":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                var hasSrc = !1, hasSrcSet = !1, propKey;
                for(propKey in props)if (props.hasOwnProperty(propKey)) {
                    var propValue = props[propKey];
                    if (null != propValue) switch(propKey){
                        case "src":
                            hasSrc = !0;
                            break;
                        case "srcSet":
                            hasSrcSet = !0;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        default:
                            setProp(domElement, tag, propKey, propValue, props, null);
                    }
                }
                hasSrcSet && setProp(domElement, tag, "srcSet", props.srcSet, props, null);
                hasSrc && setProp(domElement, tag, "src", props.src, props, null);
                return;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", domElement);
                var defaultValue = propKey = propValue = hasSrcSet = null, checked = null, defaultChecked = null;
                for(hasSrc in props)if (props.hasOwnProperty(hasSrc)) {
                    var _propValue = props[hasSrc];
                    if (null != _propValue) switch(hasSrc){
                        case "name":
                            hasSrcSet = _propValue;
                            break;
                        case "type":
                            propValue = _propValue;
                            break;
                        case "checked":
                            checked = _propValue;
                            break;
                        case "defaultChecked":
                            defaultChecked = _propValue;
                            break;
                        case "value":
                            propKey = _propValue;
                            break;
                        case "defaultValue":
                            defaultValue = _propValue;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != _propValue) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            setProp(domElement, tag, hasSrc, _propValue, props, null);
                    }
                }
                validateInputProps(domElement, props);
                initInput(domElement, propKey, defaultValue, checked, defaultChecked, propValue, hasSrcSet, !1);
                track(domElement);
                return;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", domElement);
                hasSrc = propValue = propKey = null;
                for(hasSrcSet in props)if (props.hasOwnProperty(hasSrcSet) && (defaultValue = props[hasSrcSet], null != defaultValue)) switch(hasSrcSet){
                    case "value":
                        propKey = defaultValue;
                        break;
                    case "defaultValue":
                        propValue = defaultValue;
                        break;
                    case "multiple":
                        hasSrc = defaultValue;
                    default:
                        setProp(domElement, tag, hasSrcSet, defaultValue, props, null);
                }
                validateSelectProps(domElement, props);
                tag = propKey;
                props = propValue;
                domElement.multiple = !!hasSrc;
                null != tag ? updateOptions(domElement, !!hasSrc, tag, !1) : null != props && updateOptions(domElement, !!hasSrc, props, !0);
                return;
            case "textarea":
                checkControlledValueProps("textarea", props);
                listenToNonDelegatedEvent("invalid", domElement);
                propKey = hasSrcSet = hasSrc = null;
                for(propValue in props)if (props.hasOwnProperty(propValue) && (defaultValue = props[propValue], null != defaultValue)) switch(propValue){
                    case "value":
                        hasSrc = defaultValue;
                        break;
                    case "defaultValue":
                        hasSrcSet = defaultValue;
                        break;
                    case "children":
                        propKey = defaultValue;
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != defaultValue) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        setProp(domElement, tag, propValue, defaultValue, props, null);
                }
                validateTextareaProps(domElement, props);
                initTextarea(domElement, hasSrc, hasSrcSet, propKey);
                track(domElement);
                return;
            case "option":
                validateOptionProps(domElement, props);
                for(checked in props)if (props.hasOwnProperty(checked) && (hasSrc = props[checked], null != hasSrc)) switch(checked){
                    case "selected":
                        domElement.selected = hasSrc && "function" !== typeof hasSrc && "symbol" !== typeof hasSrc;
                        break;
                    default:
                        setProp(domElement, tag, checked, hasSrc, props, null);
                }
                return;
            case "dialog":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                for(hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
                break;
            case "image":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "embed":
            case "source":
            case "link":
                listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement);
            case "area":
            case "base":
            case "br":
            case "col":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "track":
            case "wbr":
            case "menuitem":
                for(defaultChecked in props)if (props.hasOwnProperty(defaultChecked) && (hasSrc = props[defaultChecked], null != hasSrc)) switch(defaultChecked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                    default:
                        setProp(domElement, tag, defaultChecked, hasSrc, props, null);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(_propValue in props)props.hasOwnProperty(_propValue) && (hasSrc = props[_propValue], void 0 !== hasSrc && setPropOnCustomElement(domElement, tag, _propValue, hasSrc, props, void 0));
                    return;
                }
        }
        for(defaultValue in props)props.hasOwnProperty(defaultValue) && (hasSrc = props[defaultValue], null != hasSrc && setProp(domElement, tag, defaultValue, hasSrc, props, null));
    }
    function updateProperties(domElement, tag, lastProps, nextProps) {
        validatePropertiesInDevelopment(tag, nextProps);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "input":
                var name = null, type = null, value = null, defaultValue = null, lastDefaultValue = null, checked = null, defaultChecked = null;
                for(propKey in lastProps){
                    var lastProp = lastProps[propKey];
                    if (lastProps.hasOwnProperty(propKey) && null != lastProp) switch(propKey){
                        case "checked":
                            break;
                        case "value":
                            break;
                        case "defaultValue":
                            lastDefaultValue = lastProp;
                        default:
                            nextProps.hasOwnProperty(propKey) || setProp(domElement, tag, propKey, null, nextProps, lastProp);
                    }
                }
                for(var _propKey8 in nextProps){
                    var propKey = nextProps[_propKey8];
                    lastProp = lastProps[_propKey8];
                    if (nextProps.hasOwnProperty(_propKey8) && (null != propKey || null != lastProp)) switch(_propKey8){
                        case "type":
                            type = propKey;
                            break;
                        case "name":
                            name = propKey;
                            break;
                        case "checked":
                            checked = propKey;
                            break;
                        case "defaultChecked":
                            defaultChecked = propKey;
                            break;
                        case "value":
                            value = propKey;
                            break;
                        case "defaultValue":
                            defaultValue = propKey;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != propKey) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            propKey !== lastProp && setProp(domElement, tag, _propKey8, propKey, nextProps, lastProp);
                    }
                }
                tag = "checkbox" === lastProps.type || "radio" === lastProps.type ? null != lastProps.checked : null != lastProps.value;
                nextProps = "checkbox" === nextProps.type || "radio" === nextProps.type ? null != nextProps.checked : null != nextProps.value;
                tag || !nextProps || didWarnUncontrolledToControlled || (console.error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnUncontrolledToControlled = !0);
                !tag || nextProps || didWarnControlledToUncontrolled || (console.error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnControlledToUncontrolled = !0);
                updateInput(domElement, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name);
                return;
            case "select":
                propKey = value = defaultValue = _propKey8 = null;
                for(type in lastProps)if (lastDefaultValue = lastProps[type], lastProps.hasOwnProperty(type) && null != lastDefaultValue) switch(type){
                    case "value":
                        break;
                    case "multiple":
                        propKey = lastDefaultValue;
                    default:
                        nextProps.hasOwnProperty(type) || setProp(domElement, tag, type, null, nextProps, lastDefaultValue);
                }
                for(name in nextProps)if (type = nextProps[name], lastDefaultValue = lastProps[name], nextProps.hasOwnProperty(name) && (null != type || null != lastDefaultValue)) switch(name){
                    case "value":
                        _propKey8 = type;
                        break;
                    case "defaultValue":
                        defaultValue = type;
                        break;
                    case "multiple":
                        value = type;
                    default:
                        type !== lastDefaultValue && setProp(domElement, tag, name, type, nextProps, lastDefaultValue);
                }
                nextProps = defaultValue;
                tag = value;
                lastProps = propKey;
                null != _propKey8 ? updateOptions(domElement, !!tag, _propKey8, !1) : !!lastProps !== !!tag && (null != nextProps ? updateOptions(domElement, !!tag, nextProps, !0) : updateOptions(domElement, !!tag, tag ? [] : "", !1));
                return;
            case "textarea":
                propKey = _propKey8 = null;
                for(defaultValue in lastProps)if (name = lastProps[defaultValue], lastProps.hasOwnProperty(defaultValue) && null != name && !nextProps.hasOwnProperty(defaultValue)) switch(defaultValue){
                    case "value":
                        break;
                    case "children":
                        break;
                    default:
                        setProp(domElement, tag, defaultValue, null, nextProps, name);
                }
                for(value in nextProps)if (name = nextProps[value], type = lastProps[value], nextProps.hasOwnProperty(value) && (null != name || null != type)) switch(value){
                    case "value":
                        _propKey8 = name;
                        break;
                    case "defaultValue":
                        propKey = name;
                        break;
                    case "children":
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != name) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        name !== type && setProp(domElement, tag, value, name, nextProps, type);
                }
                updateTextarea(domElement, _propKey8, propKey);
                return;
            case "option":
                for(var _propKey13 in lastProps)if (_propKey8 = lastProps[_propKey13], lastProps.hasOwnProperty(_propKey13) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey13)) switch(_propKey13){
                    case "selected":
                        domElement.selected = !1;
                        break;
                    default:
                        setProp(domElement, tag, _propKey13, null, nextProps, _propKey8);
                }
                for(lastDefaultValue in nextProps)if (_propKey8 = nextProps[lastDefaultValue], propKey = lastProps[lastDefaultValue], nextProps.hasOwnProperty(lastDefaultValue) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(lastDefaultValue){
                    case "selected":
                        domElement.selected = _propKey8 && "function" !== typeof _propKey8 && "symbol" !== typeof _propKey8;
                        break;
                    default:
                        setProp(domElement, tag, lastDefaultValue, _propKey8, nextProps, propKey);
                }
                return;
            case "img":
            case "link":
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
            case "menuitem":
                for(var _propKey15 in lastProps)_propKey8 = lastProps[_propKey15], lastProps.hasOwnProperty(_propKey15) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey15) && setProp(domElement, tag, _propKey15, null, nextProps, _propKey8);
                for(checked in nextProps)if (_propKey8 = nextProps[checked], propKey = lastProps[checked], nextProps.hasOwnProperty(checked) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(checked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        if (null != _propKey8) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        break;
                    default:
                        setProp(domElement, tag, checked, _propKey8, nextProps, propKey);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(var _propKey17 in lastProps)_propKey8 = lastProps[_propKey17], lastProps.hasOwnProperty(_propKey17) && void 0 !== _propKey8 && !nextProps.hasOwnProperty(_propKey17) && setPropOnCustomElement(domElement, tag, _propKey17, void 0, nextProps, _propKey8);
                    for(defaultChecked in nextProps)_propKey8 = nextProps[defaultChecked], propKey = lastProps[defaultChecked], !nextProps.hasOwnProperty(defaultChecked) || _propKey8 === propKey || void 0 === _propKey8 && void 0 === propKey || setPropOnCustomElement(domElement, tag, defaultChecked, _propKey8, nextProps, propKey);
                    return;
                }
        }
        for(var _propKey19 in lastProps)_propKey8 = lastProps[_propKey19], lastProps.hasOwnProperty(_propKey19) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey19) && setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);
        for(lastProp in nextProps)_propKey8 = nextProps[lastProp], propKey = lastProps[lastProp], !nextProps.hasOwnProperty(lastProp) || _propKey8 === propKey || null == _propKey8 && null == propKey || setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);
    }
    function getPropNameFromAttributeName(attrName) {
        switch(attrName){
            case "class":
                return "className";
            case "for":
                return "htmlFor";
            default:
                return attrName;
        }
    }
    function getStylesObjectFromElement(domElement) {
        var serverValueInObjectForm = {};
        domElement = domElement.style;
        for(var i = 0; i < domElement.length; i++){
            var styleName = domElement[i];
            serverValueInObjectForm[styleName] = domElement.getPropertyValue(styleName);
        }
        return serverValueInObjectForm;
    }
    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {
        if (null != value$jscomp$0 && "object" !== typeof value$jscomp$0) console.error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        else {
            var clientValue;
            var delimiter = clientValue = "", styleName;
            for(styleName in value$jscomp$0)if (value$jscomp$0.hasOwnProperty(styleName)) {
                var value = value$jscomp$0[styleName];
                null != value && "boolean" !== typeof value && "" !== value && (0 === styleName.indexOf("--") ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName + ":" + ("" + value).trim()) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + ("" + value).trim()) : clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + value + "px", delimiter = ";");
            }
            clientValue = clientValue || null;
            value$jscomp$0 = domElement.getAttribute("style");
            value$jscomp$0 !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue && (serverDifferences.style = getStylesObjectFromElement(domElement)));
        }
    }
    function hydrateAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) {
            switch(typeof value){
                case "function":
                case "symbol":
                    return;
            }
            if (!value) return;
        } else switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanishAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (checkAttributeStringCoercion(value, attributeName), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateNumericAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
            default:
                if (isNaN(value)) return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (!isNaN(value) && (checkAttributeStringCoercion(value, propKey), domElement === "" + value)) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateSanitizedAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), attributeName = sanitizeURL("" + value), domElement === attributeName) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function diffHydratedProperties(domElement, tag, props, hostContext) {
        for(var serverDifferences = {}, extraAttributes = new Set(), attributes = domElement.attributes, i = 0; i < attributes.length; i++)switch(attributes[i].name.toLowerCase()){
            case "value":
                break;
            case "checked":
                break;
            case "selected":
                break;
            default:
                extraAttributes.add(attributes[i].name);
        }
        if (isCustomElement(tag)) {
            for(var propKey in props)if (props.hasOwnProperty(propKey)) {
                var value = props[propKey];
                if (null != value) {
                    if (registrationNameDependencies.hasOwnProperty(propKey)) "function" !== typeof value && warnForInvalidEventListener(propKey, value);
                    else if (!0 !== props.suppressHydrationWarning) switch(propKey){
                        case "children":
                            "string" !== typeof value && "number" !== typeof value || warnForPropDifference("children", domElement.textContent, value, serverDifferences);
                            continue;
                        case "suppressContentEditableWarning":
                        case "suppressHydrationWarning":
                        case "defaultValue":
                        case "defaultChecked":
                        case "innerHTML":
                        case "ref":
                            continue;
                        case "dangerouslySetInnerHTML":
                            attributes = domElement.innerHTML;
                            value = value ? value.__html : void 0;
                            null != value && (value = normalizeHTML(domElement, value), warnForPropDifference(propKey, attributes, value, serverDifferences));
                            continue;
                        case "style":
                            extraAttributes.delete(propKey);
                            diffHydratedStyles(domElement, value, serverDifferences);
                            continue;
                        case "offsetParent":
                        case "offsetTop":
                        case "offsetLeft":
                        case "offsetWidth":
                        case "offsetHeight":
                        case "isContentEditable":
                        case "outerText":
                        case "outerHTML":
                            extraAttributes.delete(propKey.toLowerCase());
                            console.error("Assignment to read-only property will result in a no-op: `%s`", propKey);
                            continue;
                        case "className":
                            extraAttributes.delete("class");
                            attributes = getValueForAttributeOnCustomComponent(domElement, "class", value);
                            warnForPropDifference("className", attributes, value, serverDifferences);
                            continue;
                        default:
                            hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(propKey.toLowerCase()) : extraAttributes.delete(propKey), attributes = getValueForAttributeOnCustomComponent(domElement, propKey, value), warnForPropDifference(propKey, attributes, value, serverDifferences);
                    }
                }
            }
        } else for(value in props)if (props.hasOwnProperty(value) && (propKey = props[value], null != propKey)) {
            if (registrationNameDependencies.hasOwnProperty(value)) "function" !== typeof propKey && warnForInvalidEventListener(value, propKey);
            else if (!0 !== props.suppressHydrationWarning) switch(value){
                case "children":
                    "string" !== typeof propKey && "number" !== typeof propKey || warnForPropDifference("children", domElement.textContent, propKey, serverDifferences);
                    continue;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                case "value":
                case "checked":
                case "selected":
                case "defaultValue":
                case "defaultChecked":
                case "innerHTML":
                case "ref":
                    continue;
                case "dangerouslySetInnerHTML":
                    attributes = domElement.innerHTML;
                    propKey = propKey ? propKey.__html : void 0;
                    null != propKey && (propKey = normalizeHTML(domElement, propKey), attributes !== propKey && (serverDifferences[value] = {
                        __html: attributes
                    }));
                    continue;
                case "className":
                    hydrateAttribute(domElement, value, "class", propKey, extraAttributes, serverDifferences);
                    continue;
                case "tabIndex":
                    hydrateAttribute(domElement, value, "tabindex", propKey, extraAttributes, serverDifferences);
                    continue;
                case "style":
                    extraAttributes.delete(value);
                    diffHydratedStyles(domElement, propKey, serverDifferences);
                    continue;
                case "multiple":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.multiple, propKey, serverDifferences);
                    continue;
                case "muted":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.muted, propKey, serverDifferences);
                    continue;
                case "autoFocus":
                    extraAttributes.delete("autofocus");
                    warnForPropDifference(value, domElement.autofocus, propKey, serverDifferences);
                    continue;
                case "data":
                    if ("object" !== tag) {
                        extraAttributes.delete(value);
                        attributes = domElement.getAttribute("data");
                        warnForPropDifference(value, attributes, propKey, serverDifferences);
                        continue;
                    }
                case "src":
                case "href":
                    if (!("" !== propKey || "a" === tag && "href" === value || "object" === tag && "data" === value)) {
                        "src" === value ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "action":
                case "formAction":
                    attributes = domElement.getAttribute(value);
                    if ("function" === typeof propKey) {
                        extraAttributes.delete(value.toLowerCase());
                        "formAction" === value ? (extraAttributes.delete("name"), extraAttributes.delete("formenctype"), extraAttributes.delete("formmethod"), extraAttributes.delete("formtarget")) : (extraAttributes.delete("enctype"), extraAttributes.delete("method"), extraAttributes.delete("target"));
                        continue;
                    } else if (attributes === EXPECTED_FORM_ACTION_URL) {
                        extraAttributes.delete(value.toLowerCase());
                        warnForPropDifference(value, "function", propKey, serverDifferences);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkHref":
                    hydrateSanitizedAttribute(domElement, value, "xlink:href", propKey, extraAttributes, serverDifferences);
                    continue;
                case "contentEditable":
                    hydrateBooleanishAttribute(domElement, value, "contenteditable", propKey, extraAttributes, serverDifferences);
                    continue;
                case "spellCheck":
                    hydrateBooleanishAttribute(domElement, value, "spellcheck", propKey, extraAttributes, serverDifferences);
                    continue;
                case "draggable":
                case "autoReverse":
                case "externalResourcesRequired":
                case "focusable":
                case "preserveAlpha":
                    hydrateBooleanishAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "allowFullScreen":
                case "async":
                case "autoPlay":
                case "controls":
                case "default":
                case "defer":
                case "disabled":
                case "disablePictureInPicture":
                case "disableRemotePlayback":
                case "formNoValidate":
                case "hidden":
                case "loop":
                case "noModule":
                case "noValidate":
                case "open":
                case "playsInline":
                case "readOnly":
                case "required":
                case "reversed":
                case "scoped":
                case "seamless":
                case "itemScope":
                    hydrateBooleanAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "capture":
                case "download":
                    a: {
                        i = domElement;
                        var attributeName = attributes = value, serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                                break a;
                            default:
                                if (!1 === propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                                break;
                            case "boolean":
                                if (!0 === propKey && "" === i) break a;
                                break;
                            default:
                                if (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "cols":
                case "rows":
                case "size":
                case "span":
                    a: {
                        i = domElement;
                        attributeName = attributes = value;
                        serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                            case "boolean":
                                break a;
                            default:
                                if (isNaN(propKey) || 1 > propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                            case "boolean":
                                break;
                            default:
                                if (!(isNaN(propKey) || 1 > propKey) && (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey)) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "rowSpan":
                    hydrateNumericAttribute(domElement, value, "rowspan", propKey, extraAttributes, serverDifferences);
                    continue;
                case "start":
                    hydrateNumericAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "xHeight":
                    hydrateAttribute(domElement, value, "x-height", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkActuate":
                    hydrateAttribute(domElement, value, "xlink:actuate", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkArcrole":
                    hydrateAttribute(domElement, value, "xlink:arcrole", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkRole":
                    hydrateAttribute(domElement, value, "xlink:role", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkShow":
                    hydrateAttribute(domElement, value, "xlink:show", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkTitle":
                    hydrateAttribute(domElement, value, "xlink:title", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkType":
                    hydrateAttribute(domElement, value, "xlink:type", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlBase":
                    hydrateAttribute(domElement, value, "xml:base", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlLang":
                    hydrateAttribute(domElement, value, "xml:lang", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlSpace":
                    hydrateAttribute(domElement, value, "xml:space", propKey, extraAttributes, serverDifferences);
                    continue;
                case "inert":
                    "" !== propKey || didWarnForNewBooleanPropsWithEmptyValue[value] || (didWarnForNewBooleanPropsWithEmptyValue[value] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", value));
                    hydrateBooleanAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                default:
                    if (!(2 < value.length) || "o" !== value[0] && "O" !== value[0] || "n" !== value[1] && "N" !== value[1]) {
                        i = getAttributeAlias(value);
                        attributes = !1;
                        hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(i.toLowerCase()) : (attributeName = value.toLowerCase(), attributeName = possibleStandardNames.hasOwnProperty(attributeName) ? possibleStandardNames[attributeName] || null : null, null !== attributeName && attributeName !== value && (attributes = !0, extraAttributes.delete(attributeName)), extraAttributes.delete(i));
                        a: if (attributeName = domElement, serverDifferences$jscomp$0 = i, i = propKey, isAttributeNameSafe(serverDifferences$jscomp$0)) {
                            if (attributeName.hasAttribute(serverDifferences$jscomp$0)) attributeName = attributeName.getAttribute(serverDifferences$jscomp$0), checkAttributeStringCoercion(i, serverDifferences$jscomp$0), i = attributeName === "" + i ? i : attributeName;
                            else {
                                switch(typeof i){
                                    case "function":
                                    case "symbol":
                                        break a;
                                    case "boolean":
                                        if (attributeName = serverDifferences$jscomp$0.toLowerCase().slice(0, 5), "data-" !== attributeName && "aria-" !== attributeName) break a;
                                }
                                i = void 0 === i ? void 0 : null;
                            }
                        } else i = void 0;
                        attributes || warnForPropDifference(value, i, propKey, serverDifferences);
                    }
            }
        }
        0 < extraAttributes.size && !0 !== props.suppressHydrationWarning && warnForExtraAttributes(domElement, extraAttributes, serverDifferences);
        return 0 === Object.keys(serverDifferences).length ? null : serverDifferences;
    }
    function propNamesListJoin(list, combinator) {
        switch(list.length){
            case 0:
                return "";
            case 1:
                return list[0];
            case 2:
                return list[0] + " " + combinator + " " + list[1];
            default:
                return list.slice(0, -1).join(", ") + ", " + combinator + " " + list[list.length - 1];
        }
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function getOwnHostContext(namespaceURI) {
        switch(namespaceURI){
            case SVG_NAMESPACE:
                return HostContextNamespaceSvg;
            case MATH_NAMESPACE:
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
    }
    function getChildHostContextProd(parentNamespace, type) {
        if (parentNamespace === HostContextNamespaceNone) switch(type){
            case "svg":
                return HostContextNamespaceSvg;
            case "math":
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
        return parentNamespace === HostContextNamespaceSvg && "foreignObject" === type ? HostContextNamespaceNone : parentNamespace;
    }
    function shouldSetTextContent(type, props) {
        return "textarea" === type || "noscript" === type || "string" === typeof props.children || "number" === typeof props.children || "bigint" === typeof props.children || "object" === typeof props.dangerouslySetInnerHTML && null !== props.dangerouslySetInnerHTML && null != props.dangerouslySetInnerHTML.__html;
    }
    function shouldAttemptEagerTransition() {
        var event = window.event;
        if (event && "popstate" === event.type) {
            if (event === currentPopstateTransitionEvent) return !1;
            currentPopstateTransitionEvent = event;
            return !0;
        }
        currentPopstateTransitionEvent = null;
        return !1;
    }
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    }
    function commitMount(domElement, type, newProps) {
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                newProps.autoFocus && domElement.focus();
                break;
            case "img":
                newProps.src ? domElement.src = newProps.src : newProps.srcSet && (domElement.srcset = newProps.srcSet);
        }
    }
    function commitUpdate(domElement, type, oldProps, newProps) {
        updateProperties(domElement, type, oldProps, newProps);
        domElement[internalPropsKey] = newProps;
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function isSingletonScope(type) {
        return "head" === type;
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        (9 === container.nodeType ? container.body : "HTML" === container.nodeName ? container.ownerDocument.body : container).removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance, possiblePreambleContribution = 0, depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && 8 === nextNode.nodeType) {
                if (node = nextNode.data, node === SUSPENSE_END_DATA) {
                    if (0 < possiblePreambleContribution && 8 > possiblePreambleContribution) {
                        node = possiblePreambleContribution;
                        var ownerDocument = parentInstance.ownerDocument;
                        node & PREAMBLE_CONTRIBUTION_HTML && releaseSingletonInstance(ownerDocument.documentElement);
                        node & PREAMBLE_CONTRIBUTION_BODY && releaseSingletonInstance(ownerDocument.body);
                        if (node & PREAMBLE_CONTRIBUTION_HEAD) for(node = ownerDocument.head, releaseSingletonInstance(node), ownerDocument = node.firstChild; ownerDocument;){
                            var nextNode$jscomp$0 = ownerDocument.nextSibling, nodeName = ownerDocument.nodeName;
                            ownerDocument[internalHoistableMarker] || "SCRIPT" === nodeName || "STYLE" === nodeName || "LINK" === nodeName && "stylesheet" === ownerDocument.rel.toLowerCase() || node.removeChild(ownerDocument);
                            ownerDocument = nextNode$jscomp$0;
                        }
                    }
                    if (0 === depth) {
                        parentInstance.removeChild(nextNode);
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    }
                    depth--;
                } else node === SUSPENSE_START_DATA || node === SUSPENSE_PENDING_START_DATA || node === SUSPENSE_FALLBACK_START_DATA ? depth++ : possiblePreambleContribution = node.charCodeAt(0) - 48;
            } else possiblePreambleContribution = 0;
            node = nextNode;
        }while (node);
        retryIfBlockedOn(suspenseInstance);
    }
    function hideInstance(instance) {
        instance = instance.style;
        "function" === typeof instance.setProperty ? instance.setProperty("display", "none", "important") : instance.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        props = props[STYLE];
        props = void 0 !== props && null !== props && props.hasOwnProperty("display") ? props.display : null;
        instance.style.display = null == props || "boolean" === typeof props ? "" : ("" + props).trim();
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainerSparingly(container) {
        var nextNode = container.firstChild;
        nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
        for(; nextNode;){
            var node = nextNode;
            nextNode = nextNode.nextSibling;
            switch(node.nodeName){
                case "HTML":
                case "HEAD":
                case "BODY":
                    clearContainerSparingly(node);
                    detachDeletedInstance(node);
                    continue;
                case "SCRIPT":
                case "STYLE":
                    continue;
                case "LINK":
                    if ("stylesheet" === node.rel.toLowerCase()) continue;
            }
            container.removeChild(node);
        }
    }
    function canHydrateInstance(instance, type, props, inRootOrSingleton) {
        for(; 1 === instance.nodeType;){
            var anyProps = props;
            if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
                if (!inRootOrSingleton && ("INPUT" !== instance.nodeName || "hidden" !== instance.type)) break;
            } else if (!inRootOrSingleton) {
                if ("input" === type && "hidden" === instance.type) {
                    checkAttributeStringCoercion(anyProps.name, "name");
                    var name = null == anyProps.name ? null : "" + anyProps.name;
                    if ("hidden" === anyProps.type && instance.getAttribute("name") === name) return instance;
                } else return instance;
            } else if (!instance[internalHoistableMarker]) switch(type){
                case "meta":
                    if (!instance.hasAttribute("itemprop")) break;
                    return instance;
                case "link":
                    name = instance.getAttribute("rel");
                    if ("stylesheet" === name && instance.hasAttribute("data-precedence")) break;
                    else if (name !== anyProps.rel || instance.getAttribute("href") !== (null == anyProps.href || "" === anyProps.href ? null : anyProps.href) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) || instance.getAttribute("title") !== (null == anyProps.title ? null : anyProps.title)) break;
                    return instance;
                case "style":
                    if (instance.hasAttribute("data-precedence")) break;
                    return instance;
                case "script":
                    name = instance.getAttribute("src");
                    if ((name !== (null == anyProps.src ? null : anyProps.src) || instance.getAttribute("type") !== (null == anyProps.type ? null : anyProps.type) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) && name && instance.hasAttribute("async") && !instance.hasAttribute("itemprop")) break;
                    return instance;
                default:
                    return instance;
            }
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) break;
        }
        return null;
    }
    function canHydrateTextInstance(instance, text, inRootOrSingleton) {
        if ("" === text) return null;
        for(; 3 !== instance.nodeType;){
            if ((1 !== instance.nodeType || "INPUT" !== instance.nodeName || "hidden" !== instance.type) && !inRootOrSingleton) return null;
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) return null;
        }
        return instance;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA || instance.data === SUSPENSE_PENDING_START_DATA && instance.ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        var ownerDocument = instance.ownerDocument;
        if (instance.data !== SUSPENSE_PENDING_START_DATA || ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE) callback();
        else {
            var listener = function() {
                callback();
                ownerDocument.removeEventListener("DOMContentLoaded", listener);
            };
            ownerDocument.addEventListener("DOMContentLoaded", listener);
            instance._reactRetry = listener;
        }
    }
    function getNextHydratable(node) {
        for(; null != node; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (1 === nodeType || 3 === nodeType) break;
            if (8 === nodeType) {
                nodeType = node.data;
                if (nodeType === SUSPENSE_START_DATA || nodeType === SUSPENSE_FALLBACK_START_DATA || nodeType === SUSPENSE_PENDING_START_DATA || nodeType === FORM_STATE_IS_MATCHING || nodeType === FORM_STATE_IS_NOT_MATCHING) break;
                if (nodeType === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function describeHydratableInstanceForDevWarnings(instance) {
        if (1 === instance.nodeType) {
            for(var JSCompiler_temp_const = instance.nodeName.toLowerCase(), serverDifferences = {}, attributes = instance.attributes, i = 0; i < attributes.length; i++){
                var attr = attributes[i];
                serverDifferences[getPropNameFromAttributeName(attr.name)] = "style" === attr.name.toLowerCase() ? getStylesObjectFromElement(instance) : attr.value;
            }
            return {
                type: JSCompiler_temp_const,
                props: serverDifferences
            };
        }
        return 8 === instance.nodeType ? {
            type: "Suspense",
            props: {}
        } : instance.nodeValue;
    }
    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {
        return null === parentProps || !0 !== parentProps[SUPPRESS_HYDRATION_WARNING] ? (textInstance.nodeValue === text ? textInstance = null : (text = normalizeMarkupForTextOrAttribute(text), textInstance = normalizeMarkupForTextOrAttribute(textInstance.nodeValue) === text ? null : textInstance.nodeValue), textInstance) : null;
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        suspenseInstance = suspenseInstance.nextSibling;
        for(var depth = 0; suspenseInstance;){
            if (8 === suspenseInstance.nodeType) {
                var data = suspenseInstance.data;
                if (data === SUSPENSE_END_DATA) {
                    if (0 === depth) return getNextHydratable(suspenseInstance.nextSibling);
                    depth--;
                } else data !== SUSPENSE_START_DATA && data !== SUSPENSE_FALLBACK_START_DATA && data !== SUSPENSE_PENDING_START_DATA || depth++;
            }
            suspenseInstance = suspenseInstance.nextSibling;
        }
        return null;
    }
    function getParentSuspenseInstance(targetInstance) {
        targetInstance = targetInstance.previousSibling;
        for(var depth = 0; targetInstance;){
            if (8 === targetInstance.nodeType) {
                var data = targetInstance.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (0 === depth) return targetInstance;
                    depth--;
                } else data === SUSPENSE_END_DATA && depth++;
            }
            targetInstance = targetInstance.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        retryIfBlockedOn(suspenseInstance);
    }
    function resolveSingletonInstance(type, props, rootContainerInstance, hostContext, validateDOMNestingDev) {
        validateDOMNestingDev && validateDOMNesting(type, hostContext.ancestorInfo);
        props = getOwnerDocumentFromRootContainer(rootContainerInstance);
        switch(type){
            case "html":
                type = props.documentElement;
                if (!type) throw Error("React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "head":
                type = props.head;
                if (!type) throw Error("React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "body":
                type = props.body;
                if (!type) throw Error("React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            default:
                throw Error("resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
    }
    function acquireSingletonInstance(type, props, instance, internalInstanceHandle) {
        if (!instance[internalContainerInstanceKey] && getInstanceFromNode(instance)) {
            var tagName = instance.tagName.toLowerCase();
            console.error("You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.", tagName, tagName, tagName);
        }
        switch(type){
            case "html":
            case "head":
            case "body":
                break;
            default:
                console.error("acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
        for(tagName = instance.attributes; tagName.length;)instance.removeAttributeNode(tagName[0]);
        setInitialProperties(instance, type, props);
        instance[internalInstanceKey] = internalInstanceHandle;
        instance[internalPropsKey] = props;
    }
    function releaseSingletonInstance(instance) {
        for(var attributes = instance.attributes; attributes.length;)instance.removeAttributeNode(attributes[0]);
        detachDeletedInstance(instance);
    }
    function getHoistableRoot(container) {
        return "function" === typeof container.getRootNode ? container.getRootNode() : 9 === container.nodeType ? container : container.ownerDocument;
    }
    function preconnectAs(rel, href, crossOrigin) {
        var ownerDocument = globalDocument;
        if (ownerDocument && "string" === typeof href && href) {
            var limitedEscapedHref = escapeSelectorAttributeValueInsideDoubleQuotes(href);
            limitedEscapedHref = 'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
            "string" === typeof crossOrigin && (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
            preconnectsSet.has(limitedEscapedHref) || (preconnectsSet.add(limitedEscapedHref), rel = {
                rel: rel,
                crossOrigin: crossOrigin,
                href: href
            }, null === ownerDocument.querySelector(limitedEscapedHref) && (href = ownerDocument.createElement("link"), setInitialProperties(href, "link", rel), markNodeAsHoistable(href), ownerDocument.head.appendChild(href)));
        }
    }
    function getResource(type, currentProps, pendingProps, currentResource) {
        var resourceRoot = (resourceRoot = rootInstanceStackCursor.current) ? getHoistableRoot(resourceRoot) : null;
        if (!resourceRoot) throw Error('"resourceRoot" was expected to exist. This is a bug in React.');
        switch(type){
            case "meta":
            case "title":
                return null;
            case "style":
                return "string" === typeof pendingProps.precedence && "string" === typeof pendingProps.href ? (pendingProps = getStyleKey(pendingProps.href), currentProps = getResourcesFromRoot(resourceRoot).hoistableStyles, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "style",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            case "link":
                if ("stylesheet" === pendingProps.rel && "string" === typeof pendingProps.href && "string" === typeof pendingProps.precedence) {
                    type = getStyleKey(pendingProps.href);
                    var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles, _resource = _styles.get(type);
                    if (!_resource && (resourceRoot = resourceRoot.ownerDocument || resourceRoot, _resource = {
                        type: "stylesheet",
                        instance: null,
                        count: 0,
                        state: {
                            loading: NotLoaded,
                            preload: null
                        }
                    }, _styles.set(type, _resource), (_styles = resourceRoot.querySelector(getStylesheetSelectorFromKey(type))) && !_styles._p && (_resource.instance = _styles, _resource.state.loading = Loaded | Inserted), !preloadPropsMap.has(type))) {
                        var preloadProps = {
                            rel: "preload",
                            as: "style",
                            href: pendingProps.href,
                            crossOrigin: pendingProps.crossOrigin,
                            integrity: pendingProps.integrity,
                            media: pendingProps.media,
                            hrefLang: pendingProps.hrefLang,
                            referrerPolicy: pendingProps.referrerPolicy
                        };
                        preloadPropsMap.set(type, preloadProps);
                        _styles || preloadStylesheet(resourceRoot, type, preloadProps, _resource.state);
                    }
                    if (currentProps && null === currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                    return _resource;
                }
                if (currentProps && null !== currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                return null;
            case "script":
                return currentProps = pendingProps.async, pendingProps = pendingProps.src, "string" === typeof pendingProps && currentProps && "function" !== typeof currentProps && "symbol" !== typeof currentProps ? (pendingProps = getScriptKey(pendingProps), currentProps = getResourcesFromRoot(resourceRoot).hoistableScripts, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            default:
                throw Error('getResource encountered a type it did not expect: "' + type + '". this is a bug in React.');
        }
    }
    function describeLinkForResourceErrorDEV(props) {
        var describedProps = 0, description = "<link";
        "string" === typeof props.rel ? (describedProps++, description += ' rel="' + props.rel + '"') : hasOwnProperty.call(props, "rel") && (describedProps++, description += ' rel="' + (null === props.rel ? "null" : "invalid type " + typeof props.rel) + '"');
        "string" === typeof props.href ? (describedProps++, description += ' href="' + props.href + '"') : hasOwnProperty.call(props, "href") && (describedProps++, description += ' href="' + (null === props.href ? "null" : "invalid type " + typeof props.href) + '"');
        "string" === typeof props.precedence ? (describedProps++, description += ' precedence="' + props.precedence + '"') : hasOwnProperty.call(props, "precedence") && (describedProps++, description += " precedence={" + (null === props.precedence ? "null" : "invalid type " + typeof props.precedence) + "}");
        Object.getOwnPropertyNames(props).length > describedProps && (description += " ...");
        return description + " />";
    }
    function getStyleKey(href) {
        return 'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"';
    }
    function getStylesheetSelectorFromKey(key) {
        return 'link[rel="stylesheet"][' + key + "]";
    }
    function stylesheetPropsFromRawProps(rawProps) {
        return assign({}, rawProps, {
            "data-precedence": rawProps.precedence,
            precedence: null
        });
    }
    function preloadStylesheet(ownerDocument, key, preloadProps, state) {
        ownerDocument.querySelector('link[rel="preload"][as="style"][' + key + "]") ? state.loading = Loaded : (key = ownerDocument.createElement("link"), state.preload = key, key.addEventListener("load", function() {
            return state.loading |= Loaded;
        }), key.addEventListener("error", function() {
            return state.loading |= Errored;
        }), setInitialProperties(key, "link", preloadProps), markNodeAsHoistable(key), ownerDocument.head.appendChild(key));
    }
    function getScriptKey(src) {
        return '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]';
    }
    function getScriptSelectorFromKey(key) {
        return "script[async]" + key;
    }
    function acquireResource(hoistableRoot, resource, props) {
        resource.count++;
        if (null === resource.instance) switch(resource.type){
            case "style":
                var instance = hoistableRoot.querySelector('style[data-href~="' + escapeSelectorAttributeValueInsideDoubleQuotes(props.href) + '"]');
                if (instance) return resource.instance = instance, markNodeAsHoistable(instance), instance;
                var styleProps = assign({}, props, {
                    "data-href": props.href,
                    "data-precedence": props.precedence,
                    href: null,
                    precedence: null
                });
                instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("style");
                markNodeAsHoistable(instance);
                setInitialProperties(instance, "style", styleProps);
                insertStylesheet(instance, props.precedence, hoistableRoot);
                return resource.instance = instance;
            case "stylesheet":
                styleProps = getStyleKey(props.href);
                var _instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(styleProps));
                if (_instance) return resource.state.loading |= Inserted, resource.instance = _instance, markNodeAsHoistable(_instance), _instance;
                instance = stylesheetPropsFromRawProps(props);
                (styleProps = preloadPropsMap.get(styleProps)) && adoptPreloadPropsForStylesheet(instance, styleProps);
                _instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("link");
                markNodeAsHoistable(_instance);
                var linkInstance = _instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(_instance, "link", instance);
                resource.state.loading |= Inserted;
                insertStylesheet(_instance, props.precedence, hoistableRoot);
                return resource.instance = _instance;
            case "script":
                _instance = getScriptKey(props.src);
                if (styleProps = hoistableRoot.querySelector(getScriptSelectorFromKey(_instance))) return resource.instance = styleProps, markNodeAsHoistable(styleProps), styleProps;
                instance = props;
                if (styleProps = preloadPropsMap.get(_instance)) instance = assign({}, props), adoptPreloadPropsForScript(instance, styleProps);
                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
                styleProps = hoistableRoot.createElement("script");
                markNodeAsHoistable(styleProps);
                setInitialProperties(styleProps, "link", instance);
                hoistableRoot.head.appendChild(styleProps);
                return resource.instance = styleProps;
            case "void":
                return null;
            default:
                throw Error('acquireResource encountered a resource type it did not expect: "' + resource.type + '". this is a bug in React.');
        }
        else "stylesheet" === resource.type && (resource.state.loading & Inserted) === NotLoaded && (instance = resource.instance, resource.state.loading |= Inserted, insertStylesheet(instance, props.precedence, hoistableRoot));
        return resource.instance;
    }
    function insertStylesheet(instance, precedence, root) {
        for(var nodes = root.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'), last = nodes.length ? nodes[nodes.length - 1] : null, prior = last, i = 0; i < nodes.length; i++){
            var node = nodes[i];
            if (node.dataset.precedence === precedence) prior = node;
            else if (prior !== last) break;
        }
        prior ? prior.parentNode.insertBefore(instance, prior.nextSibling) : (precedence = 9 === root.nodeType ? root.head : root, precedence.insertBefore(instance, precedence.firstChild));
    }
    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
        null == stylesheetProps.crossOrigin && (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
        null == stylesheetProps.referrerPolicy && (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
        null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);
    }
    function adoptPreloadPropsForScript(scriptProps, preloadProps) {
        null == scriptProps.crossOrigin && (scriptProps.crossOrigin = preloadProps.crossOrigin);
        null == scriptProps.referrerPolicy && (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
        null == scriptProps.integrity && (scriptProps.integrity = preloadProps.integrity);
    }
    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
        if (null === tagCaches) {
            var cache = new Map();
            var caches = tagCaches = new Map();
            caches.set(ownerDocument, cache);
        } else caches = tagCaches, cache = caches.get(ownerDocument), cache || (cache = new Map(), caches.set(ownerDocument, cache));
        if (cache.has(type)) return cache;
        cache.set(type, null);
        ownerDocument = ownerDocument.getElementsByTagName(type);
        for(caches = 0; caches < ownerDocument.length; caches++){
            var node = ownerDocument[caches];
            if (!(node[internalHoistableMarker] || node[internalInstanceKey] || "link" === type && "stylesheet" === node.getAttribute("rel")) && node.namespaceURI !== SVG_NAMESPACE) {
                var nodeKey = node.getAttribute(keyAttribute) || "";
                nodeKey = type + nodeKey;
                var existing = cache.get(nodeKey);
                existing ? existing.push(node) : cache.set(nodeKey, [
                    node
                ]);
            }
        }
        return cache;
    }
    function mountHoistable(hoistableRoot, type, instance) {
        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
        hoistableRoot.head.insertBefore(instance, "title" === type ? hoistableRoot.querySelector("head > title") : null);
    }
    function isHostHoistableType(type, props, hostContext) {
        var outsideHostContainerContext = !hostContext.ancestorInfo.containerTagInScope;
        if (hostContext.context === HostContextNamespaceSvg || null != props.itemProp) return !outsideHostContainerContext || null == props.itemProp || "meta" !== type && "title" !== type && "style" !== type && "link" !== type && "script" !== type || console.error("Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.", type, type), !1;
        switch(type){
            case "meta":
            case "title":
                return !0;
            case "style":
                if ("string" !== typeof props.precedence || "string" !== typeof props.href || "" === props.href) {
                    outsideHostContainerContext && console.error('Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel="stylesheet" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence="default"` and `href="some unique resource identifier"`.');
                    break;
                }
                return !0;
            case "link":
                if ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href || props.onLoad || props.onError) {
                    if ("stylesheet" === props.rel && "string" === typeof props.precedence) {
                        type = props.href;
                        var onError = props.onError, disabled = props.disabled;
                        hostContext = [];
                        props.onLoad && hostContext.push("`onLoad`");
                        onError && hostContext.push("`onError`");
                        null != disabled && hostContext.push("`disabled`");
                        onError = propNamesListJoin(hostContext, "and");
                        onError += 1 === hostContext.length ? " prop" : " props";
                        disabled = 1 === hostContext.length ? "an " + onError : "the " + onError;
                        hostContext.length && console.error('React encountered a <link rel="stylesheet" href="%s" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.', type, disabled, onError);
                    }
                    outsideHostContainerContext && ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href ? console.error("Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag") : (props.onError || props.onLoad) && console.error("Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."));
                    break;
                }
                switch(props.rel){
                    case "stylesheet":
                        return type = props.precedence, props = props.disabled, "string" !== typeof type && outsideHostContainerContext && console.error('Cannot render a <link rel="stylesheet" /> outside the main document without knowing its precedence. Consider adding precedence="default" or moving it into the root <head> tag.'), "string" === typeof type && null == props;
                    default:
                        return !0;
                }
            case "script":
                type = props.async && "function" !== typeof props.async && "symbol" !== typeof props.async;
                if (!type || props.onLoad || props.onError || !props.src || "string" !== typeof props.src) {
                    outsideHostContainerContext && (type ? props.onLoad || props.onError ? console.error("Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.") : console.error("Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.") : console.error('Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async="" or moving it into the root <head> tag.'));
                    break;
                }
                return !0;
            case "noscript":
            case "template":
                outsideHostContainerContext && console.error("Cannot render <%s> outside the main document. Try moving it into the root <head> tag.", type);
        }
        return !1;
    }
    function preloadResource(resource) {
        return "stylesheet" === resource.type && (resource.state.loading & Settled) === NotLoaded ? !1 : !0;
    }
    function noop() {}
    function suspendResource(hoistableRoot, resource, props) {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        if ("stylesheet" === resource.type && ("string" !== typeof props.media || !1 !== matchMedia(props.media).matches) && (resource.state.loading & Inserted) === NotLoaded) {
            if (null === resource.instance) {
                var key = getStyleKey(props.href), instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(key));
                if (instance) {
                    hoistableRoot = instance._p;
                    null !== hoistableRoot && "object" === typeof hoistableRoot && "function" === typeof hoistableRoot.then && (state.count++, state = onUnsuspend.bind(state), hoistableRoot.then(state, state));
                    resource.state.loading |= Inserted;
                    resource.instance = instance;
                    markNodeAsHoistable(instance);
                    return;
                }
                instance = hoistableRoot.ownerDocument || hoistableRoot;
                props = stylesheetPropsFromRawProps(props);
                (key = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(props, key);
                instance = instance.createElement("link");
                markNodeAsHoistable(instance);
                var linkInstance = instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(instance, "link", props);
                resource.instance = instance;
            }
            null === state.stylesheets && (state.stylesheets = new Map());
            state.stylesheets.set(resource, hoistableRoot);
            (hoistableRoot = resource.state.preload) && (resource.state.loading & Settled) === NotLoaded && (state.count++, resource = onUnsuspend.bind(state), hoistableRoot.addEventListener("load", resource), hoistableRoot.addEventListener("error", resource));
        }
    }
    function waitForCommitToBeReady() {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        state.stylesheets && 0 === state.count && insertSuspendedStylesheets(state, state.stylesheets);
        return 0 < state.count ? function(commit) {
            var stylesheetTimer = setTimeout(function() {
                state.stylesheets && insertSuspendedStylesheets(state, state.stylesheets);
                if (state.unsuspend) {
                    var unsuspend = state.unsuspend;
                    state.unsuspend = null;
                    unsuspend();
                }
            }, 6e4);
            state.unsuspend = commit;
            return function() {
                state.unsuspend = null;
                clearTimeout(stylesheetTimer);
            };
        } : null;
    }
    function onUnsuspend() {
        this.count--;
        if (0 === this.count) {
            if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);
            else if (this.unsuspend) {
                var unsuspend = this.unsuspend;
                this.unsuspend = null;
                unsuspend();
            }
        }
    }
    function insertSuspendedStylesheets(state, resources) {
        state.stylesheets = null;
        null !== state.unsuspend && (state.count++, precedencesByRoot = new Map(), resources.forEach(insertStylesheetIntoRoot, state), precedencesByRoot = null, onUnsuspend.call(state));
    }
    function insertStylesheetIntoRoot(root, resource) {
        if (!(resource.state.loading & Inserted)) {
            var precedences = precedencesByRoot.get(root);
            if (precedences) var last = precedences.get(LAST_PRECEDENCE);
            else {
                precedences = new Map();
                precedencesByRoot.set(root, precedences);
                for(var nodes = root.querySelectorAll("link[data-precedence],style[data-precedence]"), i = 0; i < nodes.length; i++){
                    var node = nodes[i];
                    if ("LINK" === node.nodeName || "not all" !== node.getAttribute("media")) precedences.set(node.dataset.precedence, node), last = node;
                }
                last && precedences.set(LAST_PRECEDENCE, last);
            }
            nodes = resource.instance;
            node = nodes.getAttribute("data-precedence");
            i = precedences.get(node) || last;
            i === last && precedences.set(LAST_PRECEDENCE, nodes);
            precedences.set(node, nodes);
            this.count++;
            last = onUnsuspend.bind(this);
            nodes.addEventListener("load", last);
            nodes.addEventListener("error", last);
            i ? i.parentNode.insertBefore(nodes, i.nextSibling) : (root = 9 === root.nodeType ? root.head : root, root.insertBefore(nodes, root.firstChild));
            resource.state.loading |= Inserted;
        }
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
        this.tag = 1;
        this.containerInfo = containerInfo;
        this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = noTimeout;
        this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
        this.callbackPriority = 0;
        this.expirationTimes = createLaneMap(-1);
        this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = createLaneMap(0);
        this.hiddenUpdates = createLaneMap(null);
        this.identifierPrefix = identifierPrefix;
        this.onUncaughtError = onUncaughtError;
        this.onCaughtError = onCaughtError;
        this.onRecoverableError = onRecoverableError;
        this.pooledCache = null;
        this.pooledCacheLanes = 0;
        this.formState = formState;
        this.incompleteTransitions = new Map();
        this.passiveEffectDuration = this.effectDuration = -0;
        this.memoizedUpdaters = new Set();
        containerInfo = this.pendingUpdatersLaneMap = [];
        for(tag = 0; 31 > tag; tag++)containerInfo.push(new Set());
        this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState) {
        containerInfo = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState);
        tag = ConcurrentMode;
        !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);
        isDevToolsPresent && (tag |= ProfileMode);
        isStrictMode = createFiber(3, null, null, tag);
        containerInfo.current = isStrictMode;
        isStrictMode.stateNode = containerInfo;
        tag = createCache();
        retainCache(tag);
        containerInfo.pooledCache = tag;
        retainCache(tag);
        isStrictMode.memoizedState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: tag
        };
        initializeUpdateQueue(isStrictMode);
        return containerInfo;
    }
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        parentComponent = emptyContextObject;
        return parentComponent;
    }
    function updateContainerImpl(rootFiber, lane, element, container, parentComponent, callback) {
        if (injectedHook && "function" === typeof injectedHook.onScheduleFiberRoot) try {
            injectedHook.onScheduleFiberRoot(rendererID, container, element);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderScheduled && injectedProfilingHooks.markRenderScheduled(lane);
        parentComponent = getContextForSubtree(parentComponent);
        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        isRendering && null !== current && !didWarnAboutNestedUpdates && (didWarnAboutNestedUpdates = !0, console.error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown"));
        container = createUpdate(lane);
        container.payload = {
            element: element
        };
        callback = void 0 === callback ? null : callback;
        null !== callback && ("function" !== typeof callback && console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback), container.callback = callback);
        element = enqueueUpdate(rootFiber, container, lane);
        null !== element && (scheduleUpdateOnFiber(element, rootFiber, lane), entangleTransitions(element, rootFiber, lane));
    }
    function markRetryLaneImpl(fiber, retryLane) {
        fiber = fiber.memoizedState;
        if (null !== fiber && null !== fiber.dehydrated) {
            var a = fiber.retryLane;
            fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
        }
    }
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
    }
    function attemptContinuousHydration(fiber) {
        if (13 === fiber.tag) {
            var root = enqueueConcurrentRenderForLane(fiber, 67108864);
            null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
            markRetryLaneIfNotHydrated(fiber, 67108864);
        }
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function getLaneLabelMap() {
        for(var map = new Map(), lane = 1, index = 0; 31 > index; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = DiscreteEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = ContinuousEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (_enabled) {
            var blockedOn = findInstanceBlockingEvent(nativeEvent);
            if (null === blockedOn) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), clearIfContinuousEvent(domEventName, nativeEvent);
            else if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) nativeEvent.stopPropagation();
            else if (clearIfContinuousEvent(domEventName, nativeEvent), eventSystemFlags & 4 && -1 < discreteReplayableEvents.indexOf(domEventName)) {
                for(; null !== blockedOn;){
                    var fiber = getInstanceFromNode(blockedOn);
                    if (null !== fiber) switch(fiber.tag){
                        case 3:
                            fiber = fiber.stateNode;
                            if (fiber.current.memoizedState.isDehydrated) {
                                var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                                if (0 !== lanes) {
                                    var root = fiber;
                                    root.pendingLanes |= 2;
                                    for(root.entangledLanes |= 2; lanes;){
                                        var lane = 1 << 31 - clz32(lanes);
                                        root.entanglements[1] |= lane;
                                        lanes &= ~lane;
                                    }
                                    ensureRootIsScheduled(fiber);
                                    (executionContext & (RenderContext | CommitContext)) === NoContext && (workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS, flushSyncWorkAcrossRoots_impl(0, !1));
                                }
                            }
                            break;
                        case 13:
                            root = enqueueConcurrentRenderForLane(fiber, 2), null !== root && scheduleUpdateOnFiber(root, fiber, 2), flushSyncWork$1(), markRetryLaneIfNotHydrated(fiber, 2);
                    }
                    fiber = findInstanceBlockingEvent(nativeEvent);
                    null === fiber && dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                    if (fiber === blockedOn) break;
                    blockedOn = fiber;
                }
                null !== blockedOn && nativeEvent.stopPropagation();
            } else dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
    }
    function findInstanceBlockingEvent(nativeEvent) {
        nativeEvent = getEventTarget(nativeEvent);
        return findInstanceBlockingTarget(nativeEvent);
    }
    function findInstanceBlockingTarget(targetNode) {
        return_targetInst = null;
        targetNode = getClosestInstanceFromNode(targetNode);
        if (null !== targetNode) {
            var nearestMounted = getNearestMountedFiber(targetNode);
            if (null === nearestMounted) targetNode = null;
            else {
                var tag = nearestMounted.tag;
                if (13 === tag) {
                    targetNode = getSuspenseInstanceFromFiber(nearestMounted);
                    if (null !== targetNode) return targetNode;
                    targetNode = null;
                } else if (3 === tag) {
                    if (nearestMounted.stateNode.current.memoizedState.isDehydrated) return 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    targetNode = null;
                } else nearestMounted !== targetNode && (targetNode = null);
            }
        }
        return_targetInst = targetNode;
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            case "beforetoggle":
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "toggle":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                switch(getCurrentPriorityLevel()){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority$1:
                    case LowPriority:
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                queuedPointers.delete(nativeEvent.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                queuedPointerCaptures.delete(nativeEvent.pointerId);
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (null === existingQueuedEvent || existingQueuedEvent.nativeEvent !== nativeEvent) return existingQueuedEvent = {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        }, null !== blockedOn && (blockedOn = getInstanceFromNode(blockedOn), null !== blockedOn && attemptContinuousHydration(blockedOn)), existingQueuedEvent;
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        blockedOn = existingQueuedEvent.targetContainers;
        null !== targetContainer && -1 === blockedOn.indexOf(targetContainer) && blockedOn.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        switch(domEventName){
            case "focusin":
                return queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "dragenter":
                return queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "mouseover":
                return queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "pointerover":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent));
                return !0;
            case "gotpointercapture":
                return pointerId = nativeEvent.pointerId, queuedPointerCaptures.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)), !0;
        }
        return !1;
    }
    function attemptExplicitHydrationTarget(queuedTarget) {
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (null !== targetInst) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (null !== nearestMounted) {
                if (targetInst = nearestMounted.tag, 13 === targetInst) {
                    if (targetInst = getSuspenseInstanceFromFiber(nearestMounted), null !== targetInst) {
                        queuedTarget.blockedOn = targetInst;
                        runWithPriority(queuedTarget.priority, function() {
                            if (13 === nearestMounted.tag) {
                                var lane = requestUpdateLane(nearestMounted);
                                lane = getBumpedLaneForHydrationByLane(lane);
                                var root = enqueueConcurrentRenderForLane(nearestMounted, lane);
                                null !== root && scheduleUpdateOnFiber(root, nearestMounted, lane);
                                markRetryLaneIfNotHydrated(nearestMounted, lane);
                            }
                        });
                        return;
                    }
                } else if (3 === targetInst && nearestMounted.stateNode.current.memoizedState.isDehydrated) {
                    queuedTarget.blockedOn = 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (null !== queuedEvent.blockedOn) return !1;
        for(var targetContainers = queuedEvent.targetContainers; 0 < targetContainers.length;){
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
            if (null === nextBlockedOn) {
                nextBlockedOn = queuedEvent.nativeEvent;
                var nativeEventClone = new nextBlockedOn.constructor(nextBlockedOn.type, nextBlockedOn), event = nativeEventClone;
                null !== currentReplayingEvent && console.error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = event;
                nextBlockedOn.target.dispatchEvent(nativeEventClone);
                null === currentReplayingEvent && console.error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = null;
            } else return targetContainers = getInstanceFromNode(nextBlockedOn), null !== targetContainers && attemptContinuousHydration(targetContainers), queuedEvent.blockedOn = nextBlockedOn, !1;
            targetContainers.shift();
        }
        return !0;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = !1;
        null !== queuedFocus && attemptReplayContinuousQueuedEvent(queuedFocus) && (queuedFocus = null);
        null !== queuedDrag && attemptReplayContinuousQueuedEvent(queuedDrag) && (queuedDrag = null);
        null !== queuedMouse && attemptReplayContinuousQueuedEvent(queuedMouse) && (queuedMouse = null);
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null, hasScheduledReplayAttempt || (hasScheduledReplayAttempt = !0, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents)));
    }
    function scheduleReplayQueueIfNeeded(formReplayingQueue) {
        lastScheduledReplayQueue !== formReplayingQueue && (lastScheduledReplayQueue = formReplayingQueue, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, function() {
            lastScheduledReplayQueue === formReplayingQueue && (lastScheduledReplayQueue = null);
            for(var i = 0; i < formReplayingQueue.length; i += 3){
                var form = formReplayingQueue[i], submitterOrAction = formReplayingQueue[i + 1], formData = formReplayingQueue[i + 2];
                if ("function" !== typeof submitterOrAction) {
                    if (null === findInstanceBlockingTarget(submitterOrAction || form)) continue;
                    else break;
                }
                var formInst = getInstanceFromNode(form);
                null !== formInst && (formReplayingQueue.splice(i, 3), i -= 3, form = {
                    pending: !0,
                    data: formData,
                    method: form.method,
                    action: submitterOrAction
                }, Object.freeze(form), startHostTransition(formInst, form, submitterOrAction, formData));
            }
        }));
    }
    function retryIfBlockedOn(unblocked) {
        function unblock(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        }
        null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var i = 0; i < queuedExplicitHydrationTargets.length; i++){
            var queuedTarget = queuedExplicitHydrationTargets[i];
            queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
        }
        for(; 0 < queuedExplicitHydrationTargets.length && (i = queuedExplicitHydrationTargets[0], null === i.blockedOn);)attemptExplicitHydrationTarget(i), null === i.blockedOn && queuedExplicitHydrationTargets.shift();
        i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
        if (null != i) for(queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3){
            var form = i[queuedTarget], submitterOrAction = i[queuedTarget + 1], formProps = form[internalPropsKey] || null;
            if ("function" === typeof submitterOrAction) formProps || scheduleReplayQueueIfNeeded(i);
            else if (formProps) {
                var action = null;
                if (submitterOrAction && submitterOrAction.hasAttribute("formAction")) {
                    if (form = submitterOrAction, formProps = submitterOrAction[internalPropsKey] || null) action = formProps.formAction;
                    else {
                        if (null !== findInstanceBlockingTarget(form)) continue;
                    }
                } else action = formProps.action;
                "function" === typeof action ? i[queuedTarget + 1] = action : (i.splice(queuedTarget, 3), queuedTarget -= 3);
                scheduleReplayQueueIfNeeded(i);
            }
        }
    }
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function warnIfReactDOMContainerInDEV(container) {
        container[internalContainerInstanceKey] && (container._reactRootContainer ? console.error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : console.error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var Scheduler = require("c31f9b99c1e288cf"), React = require("c4c4bc2113e5c77f"), ReactDOM = require("772d609564cfd8f6"), assign = Object.assign, REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.tracing_marker");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, ReactDOMSharedInternals = ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, NotPending = Object.freeze({
        pending: !1,
        data: null,
        method: null,
        action: null
    }), valueStack = [];
    var fiberStack = [];
    var index$jscomp$0 = -1, contextStackCursor = createCursor(null), contextFiberStackCursor = createCursor(null), rootInstanceStackCursor = createCursor(null), hostTransitionProviderCursor = createCursor(null), hasOwnProperty = Object.prototype.hasOwnProperty, scheduleCallback$3 = Scheduler.unstable_scheduleCallback, cancelCallback$1 = Scheduler.unstable_cancelCallback, shouldYield = Scheduler.unstable_shouldYield, requestPaint = Scheduler.unstable_requestPaint, now$1 = Scheduler.unstable_now, getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, ImmediatePriority = Scheduler.unstable_ImmediatePriority, UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, NormalPriority$1 = Scheduler.unstable_NormalPriority, LowPriority = Scheduler.unstable_LowPriority, IdlePriority = Scheduler.unstable_IdlePriority, log$1 = Scheduler.log, unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue, rendererID = null, injectedHook = null, injectedProfilingHooks = null, hasLoggedError = !1, isDevToolsPresent = "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__, clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2, nextTransitionLane = 256, nextRetryLane = 4194304, DiscreteEventPriority = 2, ContinuousEventPriority = 8, DefaultEventPriority = 32, IdleEventPriority = 268435456, randomKey = Math.random().toString(36).slice(2), internalInstanceKey = "__reactFiber$" + randomKey, internalPropsKey = "__reactProps$" + randomKey, internalContainerInstanceKey = "__reactContainer$" + randomKey, internalEventHandlersKey = "__reactEvents$" + randomKey, internalEventHandlerListenersKey = "__reactListeners$" + randomKey, internalEventHandlesSetKey = "__reactHandles$" + randomKey, internalRootNodeResourcesKey = "__reactResources$" + randomKey, internalHoistableMarker = "__reactMarker$" + randomKey, allNativeEvents = new Set(), registrationNameDependencies = {}, possibleRegistrationNames = {}, hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
    }, VALID_ATTRIBUTE_NAME_REGEX = RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {}, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var current = null, isRendering = !1, escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g, didWarnValueDefaultValue$1 = !1, didWarnCheckedDefaultChecked = !1, didWarnSelectedSetOnOption = !1, didWarnInvalidChild = !1, didWarnInvalidInnerHTML = !1;
    var didWarnValueDefaultValue = !1;
    var valuePropNames = [
        "value",
        "defaultValue"
    ], didWarnValDefaultVal = !1, needsEscaping = /["'&<>\n\t]|^\s|\s$/, specialTags = "address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp".split(" "), inScopeTags = "applet caption html table td th marquee object template foreignObject desc title".split(" "), buttonScopeTags = inScopeTags.concat([
        "button"
    ]), impliedEndTags = "dd dt li option optgroup p rp rt".split(" "), emptyAncestorInfoDev = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null,
        containerTagInScope: null,
        implicitRootScope: !1
    }, didWarn = {}, shorthandToLonghand = {
        animation: "animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction".split(" "),
        background: "backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize".split(" "),
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: "borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth".split(" "),
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: "fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight".split(" "),
        fontVariant: "fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition".split(" "),
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: "gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows".split(" "),
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: "maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize".split(" "),
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    }, uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/, badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, unitlessNumbers = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")), MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML", SVG_NAMESPACE = "http://www.w3.org/2000/svg", aliases = new Map([
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ],
        [
            "crossOrigin",
            "crossorigin"
        ],
        [
            "accentHeight",
            "accent-height"
        ],
        [
            "alignmentBaseline",
            "alignment-baseline"
        ],
        [
            "arabicForm",
            "arabic-form"
        ],
        [
            "baselineShift",
            "baseline-shift"
        ],
        [
            "capHeight",
            "cap-height"
        ],
        [
            "clipPath",
            "clip-path"
        ],
        [
            "clipRule",
            "clip-rule"
        ],
        [
            "colorInterpolation",
            "color-interpolation"
        ],
        [
            "colorInterpolationFilters",
            "color-interpolation-filters"
        ],
        [
            "colorProfile",
            "color-profile"
        ],
        [
            "colorRendering",
            "color-rendering"
        ],
        [
            "dominantBaseline",
            "dominant-baseline"
        ],
        [
            "enableBackground",
            "enable-background"
        ],
        [
            "fillOpacity",
            "fill-opacity"
        ],
        [
            "fillRule",
            "fill-rule"
        ],
        [
            "floodColor",
            "flood-color"
        ],
        [
            "floodOpacity",
            "flood-opacity"
        ],
        [
            "fontFamily",
            "font-family"
        ],
        [
            "fontSize",
            "font-size"
        ],
        [
            "fontSizeAdjust",
            "font-size-adjust"
        ],
        [
            "fontStretch",
            "font-stretch"
        ],
        [
            "fontStyle",
            "font-style"
        ],
        [
            "fontVariant",
            "font-variant"
        ],
        [
            "fontWeight",
            "font-weight"
        ],
        [
            "glyphName",
            "glyph-name"
        ],
        [
            "glyphOrientationHorizontal",
            "glyph-orientation-horizontal"
        ],
        [
            "glyphOrientationVertical",
            "glyph-orientation-vertical"
        ],
        [
            "horizAdvX",
            "horiz-adv-x"
        ],
        [
            "horizOriginX",
            "horiz-origin-x"
        ],
        [
            "imageRendering",
            "image-rendering"
        ],
        [
            "letterSpacing",
            "letter-spacing"
        ],
        [
            "lightingColor",
            "lighting-color"
        ],
        [
            "markerEnd",
            "marker-end"
        ],
        [
            "markerMid",
            "marker-mid"
        ],
        [
            "markerStart",
            "marker-start"
        ],
        [
            "overlinePosition",
            "overline-position"
        ],
        [
            "overlineThickness",
            "overline-thickness"
        ],
        [
            "paintOrder",
            "paint-order"
        ],
        [
            "panose-1",
            "panose-1"
        ],
        [
            "pointerEvents",
            "pointer-events"
        ],
        [
            "renderingIntent",
            "rendering-intent"
        ],
        [
            "shapeRendering",
            "shape-rendering"
        ],
        [
            "stopColor",
            "stop-color"
        ],
        [
            "stopOpacity",
            "stop-opacity"
        ],
        [
            "strikethroughPosition",
            "strikethrough-position"
        ],
        [
            "strikethroughThickness",
            "strikethrough-thickness"
        ],
        [
            "strokeDasharray",
            "stroke-dasharray"
        ],
        [
            "strokeDashoffset",
            "stroke-dashoffset"
        ],
        [
            "strokeLinecap",
            "stroke-linecap"
        ],
        [
            "strokeLinejoin",
            "stroke-linejoin"
        ],
        [
            "strokeMiterlimit",
            "stroke-miterlimit"
        ],
        [
            "strokeOpacity",
            "stroke-opacity"
        ],
        [
            "strokeWidth",
            "stroke-width"
        ],
        [
            "textAnchor",
            "text-anchor"
        ],
        [
            "textDecoration",
            "text-decoration"
        ],
        [
            "textRendering",
            "text-rendering"
        ],
        [
            "transformOrigin",
            "transform-origin"
        ],
        [
            "underlinePosition",
            "underline-position"
        ],
        [
            "underlineThickness",
            "underline-thickness"
        ],
        [
            "unicodeBidi",
            "unicode-bidi"
        ],
        [
            "unicodeRange",
            "unicode-range"
        ],
        [
            "unitsPerEm",
            "units-per-em"
        ],
        [
            "vAlphabetic",
            "v-alphabetic"
        ],
        [
            "vHanging",
            "v-hanging"
        ],
        [
            "vIdeographic",
            "v-ideographic"
        ],
        [
            "vMathematical",
            "v-mathematical"
        ],
        [
            "vectorEffect",
            "vector-effect"
        ],
        [
            "vertAdvY",
            "vert-adv-y"
        ],
        [
            "vertOriginX",
            "vert-origin-x"
        ],
        [
            "vertOriginY",
            "vert-origin-y"
        ],
        [
            "wordSpacing",
            "word-spacing"
        ],
        [
            "writingMode",
            "writing-mode"
        ],
        [
            "xmlnsXlink",
            "xmlns:xlink"
        ],
        [
            "xHeight",
            "x-height"
        ]
    ]), possibleStandardNames = {
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        fetchpriority: "fetchPriority",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        inert: "inert",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        popover: "popover",
        popovertarget: "popoverTarget",
        popovertargetaction: "popoverTargetAction",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        transformorigin: "transformOrigin",
        "transform-origin": "transformOrigin",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    }, ariaProperties = {
        "aria-current": 0,
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    }, warnedProperties$1 = {}, rARIA$1 = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel$1 = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), didWarnValueNull = !1, warnedProperties = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i, currentReplayingEvent = null, restoreTarget = null, restoreQueue = null, isInsideEventHandler = !1, canUseDOM = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), passiveBrowserEventsSupported = !1;
    if (canUseDOM) try {
        var options$jscomp$0 = {};
        Object.defineProperty(options$jscomp$0, "passive", {
            get: function() {
                passiveBrowserEventsSupported = !0;
            }
        });
        window.addEventListener("test", options$jscomp$0, options$jscomp$0);
        window.removeEventListener("test", options$jscomp$0, options$jscomp$0);
    } catch (e) {
        passiveBrowserEventsSupported = !1;
    }
    var root = null, startText = null, fallbackText = null, EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    }, SyntheticEvent = createSyntheticEvent(EventInterface), UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    }), SyntheticUIEvent = createSyntheticEvent(UIEventInterface), lastMovementX, lastMovementY, lastMouseEvent, MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            return void 0 === event.relatedTarget ? event.fromElement === event.srcElement ? event.toElement : event.fromElement : event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            event !== lastMouseEvent && (lastMouseEvent && "mousemove" === event.type ? (lastMovementX = event.screenX - lastMouseEvent.screenX, lastMovementY = event.screenY - lastMouseEvent.screenY) : lastMovementY = lastMovementX = 0, lastMouseEvent = event);
            return lastMovementX;
        },
        movementY: function(event) {
            return "movementY" in event ? event.movementY : lastMovementY;
        }
    }), SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface), DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    }), SyntheticDragEvent = createSyntheticEvent(DragEventInterface), FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    }), SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface), AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface), ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    }), SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface), CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    }), SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface), SyntheticInputEvent = SyntheticCompositionEvent, normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }, translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }, modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }, KeyboardEventInterface = assign({}, UIEventInterface, {
        key: function(nativeEvent) {
            if (nativeEvent.key) {
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if ("Unidentified" !== key) return key;
            }
            return "keypress" === nativeEvent.type ? (nativeEvent = getEventCharCode(nativeEvent), 13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent)) : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type ? translateToKey[nativeEvent.keyCode] || "Unidentified" : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        charCode: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : 0;
        },
        keyCode: function(event) {
            return "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        },
        which: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        }
    }), SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface), PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    }), SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface), TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    }), SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface), TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface), WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
    }), SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface), ToggleEventInterface = assign({}, EventInterface, {
        newState: 0,
        oldState: 0
    }), SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface), END_KEYCODES = [
        9,
        13,
        27,
        32
    ], START_KEYCODE = 229, canUseCompositionEvent = canUseDOM && "CompositionEvent" in window, documentMode = null;
    canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode, useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && 8 < documentMode && 11 >= documentMode), SPACEBAR_CODE = 32, SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE), hasSpaceKeypress = !1, isComposing = !1, supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    }, activeElement$1 = null, activeElementInst$1 = null, isInputEventSupported = !1;
    canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || 9 < document.documentMode));
    var objectIs = "function" === typeof Object.is ? Object.is : is, skipSelectionChangeEvent = canUseDOM && "documentMode" in document && 11 >= document.documentMode, activeElement = null, activeElementInst = null, lastSelection = null, mouseDown = !1, vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionrun: makePrefixMap("Transition", "TransitionRun"),
        transitionstart: makePrefixMap("Transition", "TransitionStart"),
        transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    }, prefixedEventNames = {}, style = {};
    canUseDOM && (style = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition);
    var ANIMATION_END = getVendorPrefixedEventName("animationend"), ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"), ANIMATION_START = getVendorPrefixedEventName("animationstart"), TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"), TRANSITION_START = getVendorPrefixedEventName("transitionstart"), TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"), TRANSITION_END = getVendorPrefixedEventName("transitionend"), topLevelEventsToReactNames = new Map(), simpleEventPluginEvents = "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    simpleEventPluginEvents.push("scrollEnd");
    var CapturedStacks = new WeakMap(), OffscreenVisible = 1, OffscreenPassiveEffectsConnected = 2, concurrentQueues = [], concurrentQueuesIndex = 0, concurrentlyUpdatedLanes = 0, emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var resolveFamily = null, failedBoundaries = null, NoMode = 0, ConcurrentMode = 1, ProfileMode = 2, StrictLegacyMode = 8, StrictEffectsMode = 16, NoStrictPassiveEffectsMode = 64;
    var hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    } catch (e$3) {
        hasBadMapPolyfill = !0;
    }
    var forkStack = [], forkStackIndex = 0, treeForkProvider = null, treeForkCount = 0, idStack = [], idStackIndex = 0, treeContextProvider = null, treeContextId = 1, treeContextOverflow = "", hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, hydrationErrors = null, rootOrSingletonContext = !1, HydrationMismatchException = Error("Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), lastResetTime = 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        var getCurrentTime = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        getCurrentTime = function() {
            return localDate.now();
        };
    }
    var valueCursor = createCursor(null);
    var rendererCursorDEV = createCursor(null);
    var rendererSigil = {};
    var currentlyRenderingFiber$1 = null, lastContextDependency = null, isDisallowedContextReadInDEV = !1, AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function() {
        var listeners = [], signal = this.signal = {
            aborted: !1,
            addEventListener: function(type, listener) {
                listeners.push(listener);
            }
        };
        this.abort = function() {
            signal.aborted = !0;
            listeners.forEach(function(listener) {
                return listener();
            });
        };
    }, scheduleCallback$2 = Scheduler.unstable_scheduleCallback, NormalPriority = Scheduler.unstable_NormalPriority, CacheContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Consumer: null,
        Provider: null,
        _currentValue: null,
        _currentValue2: null,
        _threadCount: 0,
        _currentRenderer: null,
        _currentRenderer2: null
    }, now = Scheduler.unstable_now, renderStartTime = -0, commitStartTime = -0, profilerStartTime = -1.1, profilerEffectDuration = -0, currentUpdateIsNested = !1, nestedUpdateScheduled = !1, currentEntangledListeners = null, currentEntangledPendingCount = 0, currentEntangledLane = 0, currentEntangledActionThenable = null, prevOnStartTransitionFinish = ReactSharedInternals.S;
    ReactSharedInternals.S = function(transition, returnValue) {
        "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
        null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
    };
    var resumedCache = createCursor(null), ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function() {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function() {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    }, pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        didWarnAboutUnsafeLifecycles.has(fiber.type) || ("function" === typeof instance.componentWillMount && !0 !== instance.componentWillMount.__suppressDeprecationWarning && pendingComponentWillMountWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillMount && pendingUNSAFE_ComponentWillMountWarnings.push(fiber), "function" === typeof instance.componentWillReceiveProps && !0 !== instance.componentWillReceiveProps.__suppressDeprecationWarning && pendingComponentWillReceivePropsWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillReceiveProps && pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber), "function" === typeof instance.componentWillUpdate && !0 !== instance.componentWillUpdate.__suppressDeprecationWarning && pendingComponentWillUpdateWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillUpdate && pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        var componentWillMountUniqueNames = new Set();
        0 < pendingComponentWillMountWarnings.length && (pendingComponentWillMountWarnings.forEach(function(fiber) {
            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillMountWarnings = []);
        var UNSAFE_componentWillMountUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillMountWarnings.length && (pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillMountWarnings = []);
        var componentWillReceivePropsUniqueNames = new Set();
        0 < pendingComponentWillReceivePropsWarnings.length && (pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillReceivePropsWarnings = []);
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length && (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillReceivePropsWarnings = []);
        var componentWillUpdateUniqueNames = new Set();
        0 < pendingComponentWillUpdateWarnings.length && (pendingComponentWillUpdateWarnings.forEach(function(fiber) {
            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillUpdateWarnings = []);
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillUpdateWarnings.length && (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillUpdateWarnings = []);
        if (0 < UNSAFE_componentWillMountUniqueNames.size) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            console.error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        0 < UNSAFE_componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames), console.error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s", sortedNames));
        0 < UNSAFE_componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillUpdateUniqueNames), console.error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillMountUniqueNames.size && (sortedNames = setToSortedString(componentWillMountUniqueNames), console.warn("componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(componentWillReceivePropsUniqueNames), console.warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(componentWillUpdateUniqueNames), console.warn("componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
    };
    var pendingLegacyContextWarning = new Map(), didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = null;
        for(var node = fiber; null !== node;)node.mode & StrictLegacyMode && (strictRoot = node), node = node.return;
        null === strictRoot ? console.error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.") : !didWarnAboutLegacyContext.has(fiber.type) && (node = pendingLegacyContextWarning.get(strictRoot), null != fiber.type.contextTypes || null != fiber.type.childContextTypes || null !== instance && "function" === typeof instance.getChildContext) && (void 0 === node && (node = [], pendingLegacyContextWarning.set(strictRoot, node)), node.push(fiber));
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray) {
            if (0 !== fiberArray.length) {
                var firstFiber = fiberArray[0], uniqueNames = new Set();
                fiberArray.forEach(function(fiber) {
                    uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                    didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                runWithFiberInDEV(firstFiber, function() {
                    console.error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context", sortedNames);
                });
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."), SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), SuspenseActionException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary."), noopSuspenseyCommitThenable = {
        then: function() {
            console.error('Internal React error: A listener was unexpectedly attached to a "noop" thenable. This is a bug in React. Please file an issue.');
        }
    }, suspendedThenable = null, needsToResetSuspendedThenableDEV = !1, NoFlags = 0, HasEffect = 1, Insertion = 2, Layout = 4, Passive = 8, UpdateState = 0, ReplaceState = 1, ForceUpdate = 2, CaptureUpdate = 3, hasForceUpdate = !1;
    var didWarnUpdateInsideUpdate = !1;
    var currentlyProcessingQueue = null;
    var didReadFromEntangledAsyncAction = !1, currentTreeHiddenStackCursor = createCursor(null), prevEntangledRenderLanesCursor = createCursor(0), didWarnUncachedGetSnapshot;
    var didWarnAboutMismatchedHooksForComponent = new Set();
    var didWarnAboutUseWrappedInTryCatch = new Set();
    var didWarnAboutAsyncClientComponent = new Set();
    var didWarnAboutUseFormState = new Set();
    var renderLanes = 0, currentlyRenderingFiber = null, currentHook = null, workInProgressHook = null, didScheduleRenderPhaseUpdate = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, shouldDoubleInvokeUserFnsInHooksDEV = !1, localIdCounter = 0, thenableIndexCounter$1 = 0, thenableState$1 = null, globalClientIdCounter = 0, RE_RENDER_LIMIT = 25, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = !1, ContextOnlyDispatcher = {
        readContext: readContext,
        use: use,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        useHostTransitionStatus: throwInvalidHookError,
        useFormState: throwInvalidHookError,
        useActionState: throwInvalidHookError,
        useOptimistic: throwInvalidHookError,
        useMemoCache: throwInvalidHookError,
        useCacheRefresh: throwInvalidHookError
    }, HooksDispatcherOnMountInDEV = null, HooksDispatcherOnMountWithHookTypesInDEV = null, HooksDispatcherOnUpdateInDEV = null, HooksDispatcherOnRerenderInDEV = null, InvalidNestedHooksDispatcherOnMountInDEV = null, InvalidNestedHooksDispatcherOnUpdateInDEV = null, InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(createDeps);
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            mountHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return mountActionState(action, initialState);
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    var callComponent = {
        "react-stack-bottom-frame": function(Component, props, secondArg) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return Component(props, secondArg);
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callComponentInDEV = callComponent["react-stack-bottom-frame"].bind(callComponent), callRender = {
        "react-stack-bottom-frame": function(instance) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return instance.render();
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callRenderInDEV = callRender["react-stack-bottom-frame"].bind(callRender), callComponentDidMount = {
        "react-stack-bottom-frame": function(finishedWork, instance) {
            try {
                instance.componentDidMount();
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidMountInDEV = callComponentDidMount["react-stack-bottom-frame"].bind(callComponentDidMount), callComponentDidUpdate = {
        "react-stack-bottom-frame": function(finishedWork, instance, prevProps, prevState, snapshot) {
            try {
                instance.componentDidUpdate(prevProps, prevState, snapshot);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidUpdateInDEV = callComponentDidUpdate["react-stack-bottom-frame"].bind(callComponentDidUpdate), callComponentDidCatch = {
        "react-stack-bottom-frame": function(instance, errorInfo) {
            var stack = errorInfo.stack;
            instance.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        }
    }, callComponentDidCatchInDEV = callComponentDidCatch["react-stack-bottom-frame"].bind(callComponentDidCatch), callComponentWillUnmount = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, instance) {
            try {
                instance.componentWillUnmount();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callComponentWillUnmountInDEV = callComponentWillUnmount["react-stack-bottom-frame"].bind(callComponentWillUnmount), callCreate = {
        "react-stack-bottom-frame": function(effect) {
            null != effect.resourceKind && console.error("Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s", effect.resourceKind);
            var create = effect.create;
            effect = effect.inst;
            create = create();
            return effect.destroy = create;
        }
    }, callCreateInDEV = callCreate["react-stack-bottom-frame"].bind(callCreate), callDestroy = {
        "react-stack-bottom-frame": function(current, nearestMountedAncestor, destroy) {
            try {
                destroy();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callDestroyInDEV = callDestroy["react-stack-bottom-frame"].bind(callDestroy), callLazyInit = {
        "react-stack-bottom-frame": function(lazy) {
            var init = lazy._init;
            return init(lazy._payload);
        }
    }, callLazyInitInDEV = callLazyInit["react-stack-bottom-frame"].bind(callLazyInit), thenableState = null, thenableIndexCounter = 0, currentDebugInfo = null, didWarnAboutMaps;
    var didWarnAboutGenerators = didWarnAboutMaps = !1;
    var ownerHasKeyUseWarning = {};
    var ownerHasFunctionTypeWarning = {};
    var ownerHasSymbolTypeWarning = {};
    warnForMissingKey = function(returnFiber, workInProgress, child) {
        if (null !== child && "object" === typeof child && child._store && (!child._store.validated && null == child.key || 2 === child._store.validated)) {
            if ("object" !== typeof child._store) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            child._store.validated = 1;
            var componentName = getComponentNameFromFiber(returnFiber), componentKey = componentName || "null";
            if (!ownerHasKeyUseWarning[componentKey]) {
                ownerHasKeyUseWarning[componentKey] = !0;
                child = child._owner;
                returnFiber = returnFiber._debugOwner;
                var currentComponentErrorInfo = "";
                returnFiber && "number" === typeof returnFiber.tag && (componentKey = getComponentNameFromFiber(returnFiber)) && (currentComponentErrorInfo = "\n\nCheck the render method of `" + componentKey + "`.");
                currentComponentErrorInfo || componentName && (currentComponentErrorInfo = "\n\nCheck the top-level render call using <" + componentName + ">.");
                var childOwnerAppendix = "";
                null != child && returnFiber !== child && (componentName = null, "number" === typeof child.tag ? componentName = getComponentNameFromFiber(child) : "string" === typeof child.name && (componentName = child.name), componentName && (childOwnerAppendix = " It was passed a child from " + componentName + "."));
                runWithFiberInDEV(workInProgress, function() {
                    console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwnerAppendix);
                });
            }
        }
    };
    var reconcileChildFibers = createChildReconciler(!0), mountChildFibers = createChildReconciler(!1), suspenseHandlerStackCursor = createCursor(null), shellBoundary = null, SubtreeSuspenseContextMask = 1, ForceSuspenseFallback = 2, suspenseStackCursor = createCursor(0), fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent = new Set();
    var didWarnAboutUninitializedState = new Set();
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    var didWarnAboutDirectlyAssigningPropsToState = new Set();
    var didWarnAboutUndefinedDerivedState = new Set();
    var didWarnAboutContextTypes$1 = new Set();
    var didWarnAboutChildContextTypes = new Set();
    var didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    Object.freeze(fakeInternalInstance);
    var classComponentUpdater = {
        enqueueSetState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ReplaceState;
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ForceUpdate;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            callback = enqueueUpdate(inst, update, lane);
            null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markForceUpdateScheduled && injectedProfilingHooks.markForceUpdateScheduled(inst, lane);
        }
    }, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, componentName = null, errorBoundaryName = null, SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."), didReceiveUpdate = !1;
    var didWarnAboutBadClass = {};
    var didWarnAboutContextTypeOnFunctionComponent = {};
    var didWarnAboutContextTypes = {};
    var didWarnAboutGetDerivedStateOnFunctionComponent = {};
    var didWarnAboutReassigningProps = !1;
    var didWarnAboutRevealOrder = {};
    var didWarnAboutTailOptions = {};
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0,
        hydrationErrors: null
    }, hasWarnedAboutUsingNoValuePropOnContextProvider = !1, didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var offscreenSubtreeIsHidden = !1, offscreenSubtreeWasHidden = !1, needsFormReset = !1, PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set, nextEffect = null, inProgressLanes = null, inProgressRoot = null, hostParent = null, hostParentIsContainer = !1, currentHoistableRoot = null, suspenseyCommitFlag = 8192, DefaultAsyncDispatcher = {
        getCacheForType: function(resourceType) {
            var cache = readContext(CacheContext), cacheForType = cache.data.get(resourceType);
            void 0 === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
            return cacheForType;
        },
        getOwner: function() {
            return current;
        }
    };
    if ("function" === typeof Symbol && Symbol.for) {
        var symbolFor = Symbol.for;
        symbolFor("selector.component");
        symbolFor("selector.has_pseudo_class");
        symbolFor("selector.role");
        symbolFor("selector.test_id");
        symbolFor("selector.text");
    }
    var commitHooks = [], PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, NoContext = 0, RenderContext = 2, CommitContext = 4, RootInProgress = 0, RootFatalErrored = 1, RootErrored = 2, RootSuspended = 3, RootSuspendedWithDelay = 4, RootSuspendedAtTheShell = 6, RootCompleted = 5, executionContext = NoContext, workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = 0, NotSuspended = 0, SuspendedOnError = 1, SuspendedOnData = 2, SuspendedOnImmediate = 3, SuspendedOnInstance = 4, SuspendedOnInstanceAndReadyToContinue = 5, SuspendedOnDeprecatedThrowPromise = 6, SuspendedAndReadyToContinue = 7, SuspendedOnHydration = 8, SuspendedOnAction = 9, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, workInProgressRootDidSkipSuspendedSiblings = !1, workInProgressRootIsPrerendering = !1, workInProgressRootDidAttachPingListener = !1, entangledRenderLanes = 0, workInProgressRootExitStatus = RootInProgress, workInProgressRootSkippedLanes = 0, workInProgressRootInterleavedUpdatedLanes = 0, workInProgressRootPingedLanes = 0, workInProgressDeferredLane = 0, workInProgressSuspendedRetryLanes = 0, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, workInProgressRootDidIncludeRecursiveRenderUpdate = !1, globalMostRecentFallbackTime = 0, FALLBACK_THROTTLE_MS = 300, workInProgressRootRenderTargetTime = Infinity, RENDER_TIMEOUT_MS = 500, workInProgressTransitions = null, legacyErrorBoundariesThatAlreadyFailed = null, IMMEDIATE_COMMIT = 0, SUSPENDED_COMMIT = 1, THROTTLED_COMMIT = 2, NO_PENDING_EFFECTS = 0, PENDING_MUTATION_PHASE = 1, PENDING_LAYOUT_PHASE = 2, PENDING_AFTER_MUTATION_PHASE = 3, PENDING_SPAWNED_WORK = 4, PENDING_PASSIVE_PHASE = 5, pendingEffectsStatus = 0, pendingEffectsRoot = null, pendingFinishedWork = null, pendingEffectsLanes = 0, pendingEffectsRemainingLanes = 0, pendingPassiveTransitions = null, pendingRecoverableErrors = null, NESTED_UPDATE_LIMIT = 50, nestedUpdateCount = 0, rootWithNestedUpdates = null, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, NESTED_PASSIVE_UPDATE_LIMIT = 50, nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, isRunningInsertionEffect = !1, didWarnStateUpdateForNotYetMountedComponent = null, didWarnAboutUpdateInRender = !1;
    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    var fakeActCallbackNode$1 = {}, firstScheduledRoot = null, lastScheduledRoot = null, didScheduleMicrotask = !1, didScheduleMicrotask_act = !1, mightHavePendingSyncWork = !1, isFlushingWork = !1, currentEventTransitionLane = 0, fakeActCallbackNode = {};
    (function() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i], domEventName = eventName.toLowerCase();
            eventName = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + eventName);
        }
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
        registerSimpleEvent(TRANSITION_START, "onTransitionStart");
        registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    })();
    registerDirectEvent("onMouseEnter", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onMouseLeave", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onPointerEnter", [
        "pointerout",
        "pointerover"
    ]);
    registerDirectEvent("onPointerLeave", [
        "pointerout",
        "pointerover"
    ]);
    registerTwoPhaseEvent("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    registerTwoPhaseEvent("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    registerTwoPhaseEvent("onBeforeInput", [
        "compositionend",
        "keypress",
        "textInput",
        "paste"
    ]);
    registerTwoPhaseEvent("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var mediaEventTypes = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), nonDelegatedEvents = new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(mediaEventTypes)), listeningMarker = "_reactListening" + Math.random().toString(36).slice(2), didWarnControlledToUncontrolled = !1, didWarnUncontrolledToControlled = !1, didWarnFormActionType = !1, didWarnFormActionName = !1, didWarnFormActionTarget = !1, didWarnFormActionMethod = !1, didWarnPopoverTargetObject = !1;
    var didWarnForNewBooleanPropsWithEmptyValue = {};
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g, NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g, xlinkNamespace = "http://www.w3.org/1999/xlink", xmlNamespace = "http://www.w3.org/XML/1998/namespace", EXPECTED_FORM_ACTION_URL = "javascript:throw new Error('React form unexpectedly submitted.')", SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning", SUSPENSE_START_DATA = "$", SUSPENSE_END_DATA = "/$", SUSPENSE_PENDING_START_DATA = "$?", SUSPENSE_FALLBACK_START_DATA = "$!", PREAMBLE_CONTRIBUTION_HTML = 1, PREAMBLE_CONTRIBUTION_BODY = 2, PREAMBLE_CONTRIBUTION_HEAD = 4, FORM_STATE_IS_MATCHING = "F!", FORM_STATE_IS_NOT_MATCHING = "F", DOCUMENT_READY_STATE_COMPLETE = "complete", STYLE = "style", HostContextNamespaceNone = 0, HostContextNamespaceSvg = 1, HostContextNamespaceMath = 2, eventsEnabled = null, selectionInformation = null, warnedUnknownTags = {
        dialog: !0,
        webview: !0
    }, currentPopstateTransitionEvent = null, scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0, cancelTimeout = "function" === typeof clearTimeout ? clearTimeout : void 0, noTimeout = -1, localPromise = "function" === typeof Promise ? Promise : void 0, scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof localPromise ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout, previousHydratableOnEnteringScopedSingleton = null, NotLoaded = 0, Loaded = 1, Errored = 2, Settled = 3, Inserted = 4, preloadPropsMap = new Map(), preconnectsSet = new Set(), previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
        f: function() {
            var previousWasRendering = previousDispatcher.f(), wasRendering = flushSyncWork$1();
            return previousWasRendering || wasRendering;
        },
        r: function(form) {
            var formInst = getInstanceFromNode(form);
            null !== formInst && 5 === formInst.tag && "form" === formInst.type ? requestFormReset$1(formInst) : previousDispatcher.r(form);
        },
        D: function(href) {
            previousDispatcher.D(href);
            preconnectAs("dns-prefetch", href, null);
        },
        C: function(href, crossOrigin) {
            previousDispatcher.C(href, crossOrigin);
            preconnectAs("preconnect", href, crossOrigin);
        },
        L: function(href, as, options) {
            previousDispatcher.L(href, as, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href && as) {
                var preloadSelector = 'link[rel="preload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"]';
                "image" === as ? options && options.imageSrcSet ? (preloadSelector += '[imagesrcset="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSrcSet) + '"]', "string" === typeof options.imageSizes && (preloadSelector += '[imagesizes="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSizes) + '"]')) : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]' : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]';
                var key = preloadSelector;
                switch(as){
                    case "style":
                        key = getStyleKey(href);
                        break;
                    case "script":
                        key = getScriptKey(href);
                }
                preloadPropsMap.has(key) || (href = assign({
                    rel: "preload",
                    href: "image" === as && options && options.imageSrcSet ? void 0 : href,
                    as: as
                }, options), preloadPropsMap.set(key, href), null !== ownerDocument.querySelector(preloadSelector) || "style" === as && ownerDocument.querySelector(getStylesheetSelectorFromKey(key)) || "script" === as && ownerDocument.querySelector(getScriptSelectorFromKey(key)) || (as = ownerDocument.createElement("link"), setInitialProperties(as, "link", href), markNodeAsHoistable(as), ownerDocument.head.appendChild(as)));
            }
        },
        m: function(href, options) {
            previousDispatcher.m(href, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var as = options && "string" === typeof options.as ? options.as : "script", preloadSelector = 'link[rel="modulepreload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"][href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]', key = preloadSelector;
                switch(as){
                    case "audioworklet":
                    case "paintworklet":
                    case "serviceworker":
                    case "sharedworker":
                    case "worker":
                    case "script":
                        key = getScriptKey(href);
                }
                if (!preloadPropsMap.has(key) && (href = assign({
                    rel: "modulepreload",
                    href: href
                }, options), preloadPropsMap.set(key, href), null === ownerDocument.querySelector(preloadSelector))) {
                    switch(as){
                        case "audioworklet":
                        case "paintworklet":
                        case "serviceworker":
                        case "sharedworker":
                        case "worker":
                        case "script":
                            if (ownerDocument.querySelector(getScriptSelectorFromKey(key))) return;
                    }
                    as = ownerDocument.createElement("link");
                    setInitialProperties(as, "link", href);
                    markNodeAsHoistable(as);
                    ownerDocument.head.appendChild(as);
                }
            }
        },
        X: function(src, options) {
            previousDispatcher.X(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        },
        S: function(href, precedence, options) {
            previousDispatcher.S(href, precedence, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var styles = getResourcesFromRoot(ownerDocument).hoistableStyles, key = getStyleKey(href);
                precedence = precedence || "default";
                var resource = styles.get(key);
                if (!resource) {
                    var state = {
                        loading: NotLoaded,
                        preload: null
                    };
                    if (resource = ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) state.loading = Loaded | Inserted;
                    else {
                        href = assign({
                            rel: "stylesheet",
                            href: href,
                            "data-precedence": precedence
                        }, options);
                        (options = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(href, options);
                        var link = resource = ownerDocument.createElement("link");
                        markNodeAsHoistable(link);
                        setInitialProperties(link, "link", href);
                        link._p = new Promise(function(resolve, reject) {
                            link.onload = resolve;
                            link.onerror = reject;
                        });
                        link.addEventListener("load", function() {
                            state.loading |= Loaded;
                        });
                        link.addEventListener("error", function() {
                            state.loading |= Errored;
                        });
                        state.loading |= Inserted;
                        insertStylesheet(resource, precedence, ownerDocument);
                    }
                    resource = {
                        type: "stylesheet",
                        instance: resource,
                        count: 1,
                        state: state
                    };
                    styles.set(key, resource);
                }
            }
        },
        M: function(src, options) {
            previousDispatcher.M(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0,
                    type: "module"
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        }
    };
    var globalDocument = "undefined" === typeof document ? null : document, tagCaches = null, suspendedState = null, LAST_PRECEDENCE = null, precedencesByRoot = null, NotPendingTransition = NotPending, HostTransitionContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Provider: null,
        Consumer: null,
        _currentValue: NotPendingTransition,
        _currentValue2: NotPendingTransition,
        _threadCount: 0
    }, badgeFormat = "%c%s%c ", badgeStyle = "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px", resetStyle = "", pad = " ", bind = Function.prototype.bind;
    var didWarnAboutNestedUpdates = !1;
    var overrideHookState = null, overrideHookStateDeletePath = null, overrideHookStateRenamePath = null, overrideProps = null, overridePropsDeletePath = null, overridePropsRenamePath = null, scheduleUpdate = null, setErrorHandler = null, setSuspenseHandler = null;
    overrideHookState = function(fiber, id, path, value) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithSetImpl(id.memoizedState, path, 0, value), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithDeleteImpl(id.memoizedState, path, 0), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        id = findHook(fiber, id);
        null !== id && (oldPath = copyWithRename(id.memoizedState, oldPath, newPath), id.memoizedState = oldPath, id.baseState = oldPath, fiber.memoizedProps = assign({}, fiber.memoizedProps), oldPath = enqueueConcurrentRenderForLane(fiber, 2), null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));
    };
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        oldPath = enqueueConcurrentRenderForLane(fiber, 2);
        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    var _enabled = !0, return_targetInst = null, hasScheduledReplayAttempt = !1, queuedFocus = null, queuedDrag = null, queuedMouse = null, queuedPointers = new Map(), queuedPointerCaptures = new Map(), queuedExplicitHydrationTargets = [], discreteReplayableEvents = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" "), lastScheduledReplayQueue = null;
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (null === root) throw Error("Cannot update an unmounted root.");
        var args = arguments;
        "function" === typeof args[1] ? console.error("does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : isValidContainer(args[1]) ? console.error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : "undefined" !== typeof args[1] && console.error("You passed a second argument to root.render(...) but it only accepts one argument.");
        args = children;
        var current = root.current, lane = requestUpdateLane(current);
        updateContainerImpl(current, lane, args, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        var args = arguments;
        "function" === typeof args[0] && console.error("does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        args = this._internalRoot;
        if (null !== args) {
            this._internalRoot = null;
            var container = args.containerInfo;
            (executionContext & (RenderContext | CommitContext)) !== NoContext && console.error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            updateContainerImpl(args.current, 2, null, args, null, null);
            flushSyncWork$1();
            container[internalContainerInstanceKey] = null;
        }
    };
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function(target) {
        if (target) {
            var updatePriority = resolveUpdatePriority();
            target = {
                blockedOn: null,
                target: target,
                priority: updatePriority
            };
            for(var i = 0; i < queuedExplicitHydrationTargets.length && 0 !== updatePriority && updatePriority < queuedExplicitHydrationTargets[i].priority; i++);
            queuedExplicitHydrationTargets.splice(i, 0, target);
            0 === i && attemptExplicitHydrationTarget(target);
        }
    };
    (function() {
        var isomorphicReactPackageVersion = React.version;
        if ("19.1.0" !== isomorphicReactPackageVersion) throw Error('Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.1.0\nLearn more: https://react.dev/warnings/version-mismatch"));
    })();
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills");
    ReactDOMSharedInternals.findDOMNode = function(componentOrElement) {
        var fiber = componentOrElement._reactInternals;
        if (void 0 === fiber) {
            if ("function" === typeof componentOrElement.render) throw Error("Unable to find node on an unmounted component.");
            componentOrElement = Object.keys(componentOrElement).join(",");
            throw Error("Argument appears to not be a ReactComponent. Keys: " + componentOrElement);
        }
        componentOrElement = findCurrentFiberUsingSlowPath(fiber);
        componentOrElement = null !== componentOrElement ? findCurrentHostFiberImpl(componentOrElement) : null;
        componentOrElement = null === componentOrElement ? null : componentOrElement.stateNode;
        return componentOrElement;
    };
    if (!function() {
        var internals = {
            bundleType: 1,
            version: "19.1.0",
            rendererPackageName: "react-dom",
            currentDispatcherRef: ReactSharedInternals,
            reconcilerVersion: "19.1.0"
        };
        internals.overrideHookState = overrideHookState;
        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;
        internals.overrideProps = overrideProps;
        internals.overridePropsDeletePath = overridePropsDeletePath;
        internals.overridePropsRenamePath = overridePropsRenamePath;
        internals.scheduleUpdate = scheduleUpdate;
        internals.setErrorHandler = setErrorHandler;
        internals.setSuspenseHandler = setSuspenseHandler;
        internals.scheduleRefresh = scheduleRefresh;
        internals.scheduleRoot = scheduleRoot;
        internals.setRefreshHandler = setRefreshHandler;
        internals.getCurrentFiber = getCurrentFiberForDevTools;
        internals.getLaneLabelMap = getLaneLabelMap;
        internals.injectProfilingHooks = injectProfilingHooks;
        return injectInternals(internals);
    }() && canUseDOM && window.top === window.self && (-1 < navigator.userAgent.indexOf("Chrome") && -1 === navigator.userAgent.indexOf("Edge") || -1 < navigator.userAgent.indexOf("Firefox"))) {
        var protocol = window.location.protocol;
        /^(https?|file):$/.test(protocol) && console.info("%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools" + ("file:" === protocol ? "\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq" : ""), "font-weight:bold");
    }
    exports.createRoot = function(container, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null;
        null !== options && void 0 !== options && (options.hydrate ? console.warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : "object" === typeof options && null !== options && options.$$typeof === REACT_ELEMENT_TYPE && console.error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"), !0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks));
        options = createFiberRoot(container, 1, !1, null, null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, null);
        container[internalContainerInstanceKey] = options.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMRoot(options);
    };
    exports.hydrateRoot = function(container, initialChildren, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        void 0 === initialChildren && console.error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null, formState = null;
        null !== options && void 0 !== options && (!0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks), void 0 !== options.formState && (formState = options.formState));
        initialChildren = createFiberRoot(container, 1, !0, initialChildren, null != options ? options : null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState);
        initialChildren.context = getContextForSubtree(null);
        options = initialChildren.current;
        isStrictMode = requestUpdateLane(options);
        isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);
        identifierPrefix = createUpdate(isStrictMode);
        identifierPrefix.callback = null;
        enqueueUpdate(options, identifierPrefix, isStrictMode);
        options = isStrictMode;
        initialChildren.current.lanes = options;
        markRootUpdated$1(initialChildren, options);
        ensureRootIsScheduled(initialChildren);
        container[internalContainerInstanceKey] = initialChildren.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMHydrationRoot(initialChildren);
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"c31f9b99c1e288cf":"4OQ2m","c4c4bc2113e5c77f":"jMk1U","772d609564cfd8f6":"i4X7T"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function performWorkUntilDeadline() {
        needsPaint = !1;
        if (isMessageLoopRunning) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasMoreWork = !0;
            try {
                a: {
                    isHostCallbackScheduled = !1;
                    isHostTimeoutScheduled && (isHostTimeoutScheduled = !1, localClearTimeout(taskTimeoutID), taskTimeoutID = -1);
                    isPerformingWork = !0;
                    var previousPriorityLevel = currentPriorityLevel;
                    try {
                        b: {
                            advanceTimers(currentTime);
                            for(currentTask = peek(taskQueue); null !== currentTask && !(currentTask.expirationTime > currentTime && shouldYieldToHost());){
                                var callback = currentTask.callback;
                                if ("function" === typeof callback) {
                                    currentTask.callback = null;
                                    currentPriorityLevel = currentTask.priorityLevel;
                                    var continuationCallback = callback(currentTask.expirationTime <= currentTime);
                                    currentTime = exports.unstable_now();
                                    if ("function" === typeof continuationCallback) {
                                        currentTask.callback = continuationCallback;
                                        advanceTimers(currentTime);
                                        hasMoreWork = !0;
                                        break b;
                                    }
                                    currentTask === peek(taskQueue) && pop(taskQueue);
                                    advanceTimers(currentTime);
                                } else pop(taskQueue);
                                currentTask = peek(taskQueue);
                            }
                            if (null !== currentTask) hasMoreWork = !0;
                            else {
                                var firstTimer = peek(timerQueue);
                                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                hasMoreWork = !1;
                            }
                        }
                        break a;
                    } finally{
                        currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = !1;
                    }
                    hasMoreWork = void 0;
                }
            } finally{
                hasMoreWork ? schedulePerformWorkUntilDeadline() : isMessageLoopRunning = !1;
            }
        }
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        a: for(; 0 < index;){
            var parentIndex = index - 1 >>> 1, parent = heap[parentIndex];
            if (0 < compare(parent, node)) heap[parentIndex] = node, heap[index] = parent, index = parentIndex;
            else break a;
        }
    }
    function peek(heap) {
        return 0 === heap.length ? null : heap[0];
    }
    function pop(heap) {
        if (0 === heap.length) return null;
        var first = heap[0], last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            a: for(var index = 0, length = heap.length, halfLength = length >>> 1; index < halfLength;){
                var leftIndex = 2 * (index + 1) - 1, left = heap[leftIndex], rightIndex = leftIndex + 1, right = heap[rightIndex];
                if (0 > compare(left, last)) rightIndex < length && 0 > compare(right, left) ? (heap[index] = right, heap[rightIndex] = last, index = rightIndex) : (heap[index] = left, heap[leftIndex] = last, index = leftIndex);
                else if (rightIndex < length && 0 > compare(right, last)) heap[index] = right, heap[rightIndex] = last, index = rightIndex;
                else break a;
            }
        }
        return first;
    }
    function compare(a, b) {
        var diff = a.sortIndex - b.sortIndex;
        return 0 !== diff ? diff : a.id - b.id;
    }
    function advanceTimers(currentTime) {
        for(var timer = peek(timerQueue); null !== timer;){
            if (null === timer.callback) pop(timerQueue);
            else if (timer.startTime <= currentTime) pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);
            else break;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = !1;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (null !== peek(taskQueue)) isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline());
            else {
                var firstTimer = peek(timerQueue);
                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function shouldYieldToHost() {
        return needsPaint ? !0 : exports.unstable_now() - startTime < frameInterval ? !1 : !0;
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    exports.unstable_now = void 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date, initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    var taskQueue = [], timerQueue = [], taskIdCounter = 1, currentTask = null, currentPriorityLevel = 3, isPerformingWork = !1, isHostCallbackScheduled = !1, isHostTimeoutScheduled = !1, needsPaint = !1, localSetTimeout = "function" === typeof setTimeout ? setTimeout : null, localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null, localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null, isMessageLoopRunning = !1, taskTimeoutID = -1, frameInterval = 5, startTime = -1;
    if ("function" === typeof localSetImmediate) var schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if ("undefined" !== typeof MessageChannel) {
        var channel = new MessageChannel(), port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(task) {
        task.callback = null;
    };
    exports.unstable_forceFrameRate = function(fps) {
        0 > fps || 125 < fps ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
        return currentPriorityLevel;
    };
    exports.unstable_next = function(eventHandler) {
        switch(currentPriorityLevel){
            case 1:
            case 2:
            case 3:
                var priorityLevel = 3;
                break;
            default:
                priorityLevel = currentPriorityLevel;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_requestPaint = function() {
        needsPaint = !0;
    };
    exports.unstable_runWithPriority = function(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                priorityLevel = 3;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_scheduleCallback = function(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        "object" === typeof options && null !== options ? (options = options.delay, options = "number" === typeof options && 0 < options ? currentTime + options : currentTime) : options = currentTime;
        switch(priorityLevel){
            case 1:
                var timeout = -1;
                break;
            case 2:
                timeout = 250;
                break;
            case 5:
                timeout = 1073741823;
                break;
            case 4:
                timeout = 1e4;
                break;
            default:
                timeout = 5e3;
        }
        timeout = options + timeout;
        priorityLevel = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: options,
            expirationTime: timeout,
            sortIndex: -1
        };
        options > currentTime ? (priorityLevel.sortIndex = options, push(timerQueue, priorityLevel), null === peek(taskQueue) && priorityLevel === peek(timerQueue) && (isHostTimeoutScheduled ? (localClearTimeout(taskTimeoutID), taskTimeoutID = -1) : isHostTimeoutScheduled = !0, requestHostTimeout(handleTimeout, options - currentTime))) : (priorityLevel.sortIndex = timeout, push(taskQueue, priorityLevel), isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline())));
        return priorityLevel;
    };
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = function(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function noop() {}
    function testStringCoercion(value) {
        return "" + value;
    }
    function createPortal$1(children, containerInfo, implementation) {
        var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        try {
            testStringCoercion(key);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        JSCompiler_inline_result && (console.error("The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", "function" === typeof Symbol && Symbol.toStringTag && key[Symbol.toStringTag] || key.constructor.name || "Object"), testStringCoercion(key));
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    function getCrossOriginStringAs(as, input) {
        if ("font" === as) return "";
        if ("string" === typeof input) return "use-credentials" === input ? input : "";
    }
    function getValueDescriptorExpectingObjectForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : 'something with type "' + typeof thing + '"';
    }
    function getValueDescriptorExpectingEnumForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : "string" === typeof thing ? JSON.stringify(thing) : "number" === typeof thing ? "`" + thing + "`" : 'something with type "' + typeof thing + '"';
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("6f0162e9ab224cd4"), Internals = {
        d: {
            f: noop,
            r: function() {
                throw Error("Invalid form element. requestFormReset must be passed a form that was rendered by React.");
            },
            D: noop,
            C: noop,
            L: noop,
            m: noop,
            X: noop,
            S: noop,
            M: noop
        },
        p: 0,
        findDOMNode: null
    }, REACT_PORTAL_TYPE = Symbol.for("react.portal"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;
    exports.createPortal = function(children, container) {
        var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!container || 1 !== container.nodeType && 9 !== container.nodeType && 11 !== container.nodeType) throw Error("Target container is not a DOM element.");
        return createPortal$1(children, container, null, key);
    };
    exports.flushSync = function(fn) {
        var previousTransition = ReactSharedInternals.T, previousUpdatePriority = Internals.p;
        try {
            if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();
        } finally{
            ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f() && console.error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        }
    };
    exports.preconnect = function(href, options) {
        "string" === typeof href && href ? null != options && "object" !== typeof options ? console.error("ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.", getValueDescriptorExpectingEnumForWarning(options)) : null != options && "string" !== typeof options.crossOrigin && console.error("ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.", getValueDescriptorExpectingObjectForWarning(options.crossOrigin)) : console.error("ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        "string" === typeof href && (options ? (options = options.crossOrigin, options = "string" === typeof options ? "use-credentials" === options ? options : "" : void 0) : options = null, Internals.d.C(href, options));
    };
    exports.prefetchDNS = function(href) {
        if ("string" !== typeof href || !href) console.error("ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        else if (1 < arguments.length) {
            var options = arguments[1];
            "object" === typeof options && options.hasOwnProperty("crossOrigin") ? console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options)) : console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options));
        }
        "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function(href, options) {
        "string" === typeof href && href ? null == options || "object" !== typeof options ? console.error("ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.", getValueDescriptorExpectingEnumForWarning(options)) : "style" !== options.as && "script" !== options.as && console.error('ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are "style" and "script".', getValueDescriptorExpectingEnumForWarning(options.as)) : console.error("ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        if ("string" === typeof href && options && "string" === typeof options.as) {
            var as = options.as, crossOrigin = getCrossOriginStringAs(as, options.crossOrigin), integrity = "string" === typeof options.integrity ? options.integrity : void 0, fetchPriority = "string" === typeof options.fetchPriority ? options.fetchPriority : void 0;
            "style" === as ? Internals.d.S(href, "string" === typeof options.precedence ? options.precedence : void 0, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority
            }) : "script" === as && Internals.d.X(href, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
        }
    };
    exports.preinitModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "script" !== options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingEnumForWarning(options.as) + ".");
        if (encountered) console.error("ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s", encountered);
        else switch(encountered = options && "string" === typeof options.as ? options.as : "script", encountered){
            case "script":
                break;
            default:
                encountered = getValueDescriptorExpectingEnumForWarning(encountered), console.error('ReactDOM.preinitModule(): Currently the only supported "as" type for this function is "script" but received "%s" instead. This warning was generated for `href` "%s". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)', encountered, href);
        }
        if ("string" === typeof href) {
            if ("object" === typeof options && null !== options) {
                if (null == options.as || "script" === options.as) encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.M(href, {
                    crossOrigin: encountered,
                    integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                    nonce: "string" === typeof options.nonce ? options.nonce : void 0
                });
            } else null == options && Internals.d.M(href);
        }
    };
    exports.preload = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        null == options || "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : "string" === typeof options.as && options.as || (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel="preload" as="..." />` tag.%s', encountered);
        if ("string" === typeof href && "object" === typeof options && null !== options && "string" === typeof options.as) {
            encountered = options.as;
            var crossOrigin = getCrossOriginStringAs(encountered, options.crossOrigin);
            Internals.d.L(href, encountered, {
                crossOrigin: crossOrigin,
                integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0,
                type: "string" === typeof options.type ? options.type : void 0,
                fetchPriority: "string" === typeof options.fetchPriority ? options.fetchPriority : void 0,
                referrerPolicy: "string" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,
                imageSrcSet: "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
                imageSizes: "string" === typeof options.imageSizes ? options.imageSizes : void 0,
                media: "string" === typeof options.media ? options.media : void 0
            });
        }
    };
    exports.preloadModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "string" !== typeof options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel="modulepreload" as="..." />` tag.%s', encountered);
        "string" === typeof href && (options ? (encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.m(href, {
            as: "string" === typeof options.as && "script" !== options.as ? options.as : void 0,
            crossOrigin: encountered,
            integrity: "string" === typeof options.integrity ? options.integrity : void 0
        })) : Internals.d.m(href));
    };
    exports.requestFormReset = function(form) {
        Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function(fn, a) {
        return fn(a);
    };
    exports.useFormState = function(action, initialState, permalink) {
        return resolveDispatcher().useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function() {
        return resolveDispatcher().useHostTransitionStatus();
    };
    exports.version = "19.1.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"6f0162e9ab224cd4":"jMk1U"}],"gj00L":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c08c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c08c.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c08c.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _openingAnimation = require("../../Components/OpeningAnimation/OpeningAnimation");
var _openingAnimationDefault = parcelHelpers.interopDefault(_openingAnimation);
var _loadedHome = require("./LoadedHome");
var _loadedHomeDefault = parcelHelpers.interopDefault(_loadedHome);
var _profile = require("../Profile/Profile");
var _profileDefault = parcelHelpers.interopDefault(_profile);
var _s = $RefreshSig$();
const Home = ()=>{
    _s();
    const { isLoading, isSignedUp, userData, completeLoading } = (0, _appContext.useAppContext)();
    (0, _react.useEffect)(()=>{
        completeLoading();
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-lvw h-lvh",
        children: [
            isLoading && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _openingAnimationDefault.default), {}, void 0, false, {
                fileName: "src/Pages/Home/Home.js",
                lineNumber: 16,
                columnNumber: 21
            }, undefined),
            !isLoading && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    !isSignedUp && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _profileDefault.default), {
                        shimmer: true
                    }, void 0, false, {
                        fileName: "src/Pages/Home/Home.js",
                        lineNumber: 20,
                        columnNumber: 27
                    }, undefined),
                    isSignedUp && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _loadedHomeDefault.default), {
                        userData: userData
                    }, void 0, false, {
                        fileName: "src/Pages/Home/Home.js",
                        lineNumber: 22,
                        columnNumber: 26
                    }, undefined)
                ]
            }, void 0, true)
        ]
    }, void 0, true, {
        fileName: "src/Pages/Home/Home.js",
        lineNumber: 15,
        columnNumber: 5
    }, undefined);
};
_s(Home, "E/KUECd3A45QtetKh/K9KfdoW4Y=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = Home;
exports.default = Home;
var _c;
$RefreshReg$(_c, "Home");

  $parcel$ReactRefreshHelpers$c08c.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","../../Components/OpeningAnimation/OpeningAnimation":"epmQR","./LoadedHome":"8ANAX","../Profile/Profile":"1tmvP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"iTmt5":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$ab59 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$ab59.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$ab59.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppProvider", ()=>AppProvider);
parcelHelpers.export(exports, "useAppContext", ()=>useAppContext);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _s = $RefreshSig$(), _s1 = $RefreshSig$();
const AppContext = /*#__PURE__*/ (0, _react.createContext)();
const AppProvider = ({ children })=>{
    _s();
    const initialIncomeTransactions = [
        {
            id: "4",
            TransactionType: "Income",
            Amount: "300",
            Entity: "Gift",
            Category: "Family",
            Date: "2025-05-04",
            Time: "20:15"
        },
        {
            id: "3",
            TransactionType: "Income",
            Amount: "500",
            Entity: "Investment Return",
            Category: "Investments",
            Date: "2025-05-03",
            Time: "11:45"
        },
        {
            id: "2",
            TransactionType: "Income",
            Amount: "250",
            Entity: "Freelance Project",
            Category: "Side Hustle",
            Date: "2025-05-02",
            Time: "15:30"
        },
        {
            id: "1",
            TransactionType: "Income",
            Amount: "1000",
            Entity: "Salary",
            Category: "Job",
            Date: "2025-05-01",
            Time: "09:00"
        }
    ];
    const initialExpenseTransactions = [
        {
            id: "1",
            TransactionType: "Expense",
            Amount: "50",
            Entity: "Groceries",
            Category: "Food",
            Date: "2025-05-04",
            Time: "10:15"
        },
        {
            id: "2",
            TransactionType: "Expense",
            Amount: "120",
            Entity: "Restaurant",
            Category: "Food",
            Date: "2025-05-04",
            Time: "19:30"
        },
        {
            id: "3",
            TransactionType: "Expense",
            Amount: "200",
            Entity: "Shopping",
            Category: "Clothing",
            Date: "2025-05-03",
            Time: "14:00"
        },
        {
            id: "4",
            TransactionType: "Expense",
            Amount: "75",
            Entity: "Taxi",
            Category: "Transport",
            Date: "2025-05-03",
            Time: "22:10"
        },
        {
            id: "5",
            TransactionType: "Expense",
            Amount: "30",
            Entity: "Coffee",
            Category: "Food",
            Date: "2025-05-02",
            Time: "08:45"
        },
        {
            id: "6",
            TransactionType: "Expense",
            Amount: "400",
            Entity: "Electronics",
            Category: "Gadgets",
            Date: "2025-05-02",
            Time: "17:20"
        },
        {
            id: "7",
            TransactionType: "Expense",
            Amount: "60",
            Entity: "Books",
            Category: "Education",
            Date: "2025-05-01",
            Time: "11:30"
        },
        {
            id: "8",
            TransactionType: "Expense",
            Amount: "90",
            Entity: "Gas",
            Category: "Transport",
            Date: "2025-05-01",
            Time: "15:50"
        },
        {
            id: "9",
            TransactionType: "Expense",
            Amount: "35",
            Entity: "Snacks",
            Category: "Food",
            Date: "2025-05-01",
            Time: "20:25"
        },
        {
            id: "10",
            TransactionType: "Expense",
            Amount: "100",
            Entity: "Medical",
            Category: "Health",
            Date: "2025-05-01",
            Time: "09:10"
        }
    ];
    const initialInvestmentTransactions = [
        {
            id: "1",
            TransactionType: "Investment",
            Amount: "500",
            Entity: "Stocks",
            Category: "Equity",
            Date: "2025-05-04",
            Time: "10:00"
        },
        {
            id: "2",
            TransactionType: "Investment",
            Amount: "300",
            Entity: "Mutual Fund",
            Category: "Debt",
            Date: "2025-05-04",
            Time: "16:30"
        },
        {
            id: "3",
            TransactionType: "Investment",
            Amount: "200",
            Entity: "Gold",
            Category: "Commodities",
            Date: "2025-05-03",
            Time: "12:45"
        },
        {
            id: "4",
            TransactionType: "Investment",
            Amount: "150",
            Entity: "Crypto",
            Category: "Digital",
            Date: "2025-05-03",
            Time: "21:10"
        },
        {
            id: "5",
            TransactionType: "Investment",
            Amount: "400",
            Entity: "Fixed Deposit",
            Category: "Savings",
            Date: "2025-05-02",
            Time: "09:30"
        },
        {
            id: "6",
            TransactionType: "Investment",
            Amount: "350",
            Entity: "Real Estate Fund",
            Category: "Property",
            Date: "2025-05-02",
            Time: "18:20"
        },
        {
            id: "7",
            TransactionType: "Investment",
            Amount: "250",
            Entity: "Pension Fund",
            Category: "Retirement",
            Date: "2025-05-01",
            Time: "11:00"
        },
        {
            id: "8",
            TransactionType: "Investment",
            Amount: "600",
            Entity: "Savings Account",
            Category: "Savings",
            Date: "2025-05-01",
            Time: "14:45"
        },
        {
            id: "9",
            TransactionType: "Investment",
            Amount: "100",
            Entity: "ETF",
            Category: "Equity",
            Date: "2025-05-01",
            Time: "17:30"
        },
        {
            id: "10",
            TransactionType: "Investment",
            Amount: "450",
            Entity: "Bonds",
            Category: "Debt",
            Date: "2025-05-01",
            Time: "20:15"
        }
    ];
    const calculateTotalAmount = (transactions)=>{
        return transactions.reduce((total, transaction)=>{
            return total + Number(transaction.Amount);
        }, 0);
    };
    const getAllTransactions = (income, expense, investment)=>{
        const allTransactions = [
            ...income.map((t)=>({
                    ...t
                })),
            ...expense.map((t)=>({
                    ...t
                })),
            ...investment.map((t)=>({
                    ...t
                }))
        ];
        allTransactions.sort((a, b)=>{
            const dateA = new Date(`${a.Date}T${a.Time}`);
            const dateB = new Date(`${b.Date}T${b.Time}`);
            return dateB - dateA;
        });
        return allTransactions;
    };
    const loadFromLocalStorage = (key, initialData)=>{
        try {
            const storedData = localStorage.getItem(key);
            return storedData ? JSON.parse(storedData) : initialData;
        } catch (error) {
            console.error(`Error loading ${key} from localStorage:`, error);
            return initialData;
        }
    };
    const [isLoading, setIsLoading] = (0, _react.useState)(true);
    const [isSignedUp, setIsSignedUp] = (0, _react.useState)(loadFromLocalStorage("isSignedUp", false));
    const [incomeTransactions, setIncomeTransactions] = (0, _react.useState)(loadFromLocalStorage("incomeTransactions", initialIncomeTransactions));
    const [expenseTransactions, setExpenseTransactions] = (0, _react.useState)(loadFromLocalStorage("expenseTransactions", initialExpenseTransactions));
    const [investmentTransactions, setInvestmentTransactions] = (0, _react.useState)(loadFromLocalStorage("investmentTransactions", initialInvestmentTransactions));
    const loadedTotalIncome = calculateTotalAmount(incomeTransactions);
    const loadedTotalExpense = calculateTotalAmount(expenseTransactions);
    const loadedTotalInvestment = calculateTotalAmount(investmentTransactions);
    const [formData, setFormData] = (0, _react.useState)(loadFromLocalStorage("formData", {
        Name: "",
        Email: "",
        Age: "",
        Designation: "",
        CurrentBalance: loadedTotalIncome - loadedTotalExpense + loadedTotalInvestment,
        Income: "",
        TotalIncome: loadedTotalIncome,
        TotalExpense: loadedTotalExpense,
        TotalInvestment: loadedTotalInvestment
    }));
    const [isEdit, setIsEdit] = (0, _react.useState)(loadFromLocalStorage("isEdit", false));
    const [transactions, setTransactions] = (0, _react.useState)(getAllTransactions(incomeTransactions, expenseTransactions, investmentTransactions));
    (0, _react.useEffect)(()=>{
        localStorage.setItem("isSignedUp", JSON.stringify(isSignedUp));
    }, [
        isSignedUp
    ]);
    (0, _react.useEffect)(()=>{
        localStorage.setItem("formData", JSON.stringify(formData));
    }, [
        formData
    ]);
    (0, _react.useEffect)(()=>{
        localStorage.setItem("isEdit", JSON.stringify(isEdit));
    }, [
        isEdit
    ]);
    (0, _react.useEffect)(()=>{
        localStorage.setItem("incomeTransactions", JSON.stringify(incomeTransactions));
        setTransactions(getAllTransactions(incomeTransactions, expenseTransactions, investmentTransactions));
    }, [
        incomeTransactions
    ]);
    (0, _react.useEffect)(()=>{
        localStorage.setItem("expenseTransactions", JSON.stringify(expenseTransactions));
        setTransactions(getAllTransactions(incomeTransactions, expenseTransactions, investmentTransactions));
    }, [
        expenseTransactions
    ]);
    (0, _react.useEffect)(()=>{
        localStorage.setItem("investmentTransactions", JSON.stringify(investmentTransactions));
        setTransactions(getAllTransactions(incomeTransactions, expenseTransactions, investmentTransactions));
    }, [
        investmentTransactions
    ]);
    const updateFormData = (fieldName, value)=>{
        setFormData((prev)=>({
                ...prev,
                [fieldName]: value
            }));
    };
    const handleSignUp = ()=>{
        setIsSignedUp(true);
        setIsEdit(true);
    };
    const completeLoading = ()=>{
        const timer = setTimeout(()=>{
            setIsLoading(false);
        }, 3000);
        return ()=>clearTimeout(timer);
    };
    const currentDate = ()=>{
        const now = new Date();
        return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, "0")}-${String(now.getDate()).padStart(2, "0")}`;
    };
    const currentTime = ()=>{
        const now = new Date();
        return `${String(now.getHours()).padStart(2, "0")}:${String(now.getMinutes()).padStart(2, "0")}`;
    };
    const [incomeFormData, setIncomeFormData] = (0, _react.useState)({
        TransactionType: "Income",
        Amount: "",
        Entity: "",
        Category: "",
        Date: currentDate(),
        Time: currentTime()
    });
    const updateIncomeFormData = (fieldName, value)=>{
        setIncomeFormData((prev)=>({
                ...prev,
                [fieldName]: value
            }));
    };
    const addIncomeTransaction = (transaction)=>{
        const newTransaction = {
            id: Date.now().toString(),
            ...transaction
        };
        setIncomeTransactions((prev)=>[
                newTransaction,
                ...prev
            ]);
        updateFormData("CurrentBalance", formData.CurrentBalance + Number(transaction.Amount));
        updateFormData("TotalIncome", formData.TotalIncome + Number(transaction.Amount));
        addTransaction(newTransaction);
    };
    const [expenseFormData, setExpenseFormData] = (0, _react.useState)({
        TransactionType: "Expense",
        Amount: "",
        Entity: "",
        Category: "",
        Date: currentDate(),
        Time: currentTime()
    });
    const updateExpenseFormData = (fieldName, value)=>{
        setExpenseFormData((prev)=>({
                ...prev,
                [fieldName]: value
            }));
    };
    const addExpenseTransaction = (transaction)=>{
        const newTransaction = {
            id: Date.now().toString(),
            ...transaction
        };
        setExpenseTransactions((prev)=>[
                newTransaction,
                ...prev
            ]);
        updateFormData("CurrentBalance", formData.CurrentBalance - Number(transaction.Amount));
        updateFormData("TotalExpense", formData.TotalExpense + Number(transaction.Amount));
        addTransaction(newTransaction);
    };
    const [investmentFormData, setInvestmentFormData] = (0, _react.useState)({
        TransactionType: "Investment",
        Amount: "",
        Entity: "",
        Category: "",
        Date: currentDate(),
        Time: currentTime()
    });
    const updateInvestmentFormData = (fieldName, value)=>{
        setInvestmentFormData((prev)=>({
                ...prev,
                [fieldName]: value
            }));
    };
    const addInvestmentTransaction = (transaction)=>{
        const newTransaction = {
            id: Date.now().toString(),
            ...transaction
        };
        setInvestmentTransactions((prev)=>[
                newTransaction,
                ...prev
            ]);
        updateFormData("TotalInvestment", formData.TotalInvestment + Number(transaction.Amount));
        addTransaction(newTransaction);
    };
    const addTransaction = (transaction)=>{
        const newTransaction = {
            ...transaction
        };
        setTransactions((prev)=>{
            const updatedTransactions = [
                newTransaction,
                ...prev
            ];
            return updatedTransactions.sort((a, b)=>{
                const dateA = new Date(`${a.Date}T${a.Time}`);
                const dateB = new Date(`${b.Date}T${b.Time}`);
                return dateB - dateA;
            });
        });
    };
    const totalData = [
        formData["TotalIncome"],
        formData["TotalInvestment"],
        formData["TotalExpense"]
    ];
    const resetAppData = ()=>{
        localStorage.clear();
        setIsSignedUp(false);
        setIsEdit(false);
        const initialTotalIncome = calculateTotalAmount(initialIncomeTransactions);
        const initialTotalExpense = calculateTotalAmount(initialExpenseTransactions);
        const initialTotalInvestment = calculateTotalAmount(initialInvestmentTransactions);
        setFormData({
            Name: "",
            Email: "",
            Age: "",
            Designation: "",
            CurrentBalance: initialTotalIncome - initialTotalExpense + initialTotalInvestment,
            Income: "",
            TotalIncome: initialTotalIncome,
            TotalExpense: initialTotalExpense,
            TotalInvestment: initialTotalInvestment
        });
        setIncomeTransactions(initialIncomeTransactions);
        setExpenseTransactions(initialExpenseTransactions);
        setInvestmentTransactions(initialInvestmentTransactions);
        setTransactions(getAllTransactions(initialIncomeTransactions, initialExpenseTransactions, initialInvestmentTransactions));
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(AppContext.Provider, {
        value: {
            isLoading,
            isSignedUp,
            formData,
            isEdit,
            updateFormData,
            completeLoading,
            handleSignUp,
            setIsEdit,
            incomeFormData,
            updateIncomeFormData,
            addIncomeTransaction,
            incomeTransactions,
            setIncomeTransactions,
            expenseFormData,
            updateExpenseFormData,
            addExpenseTransaction,
            expenseTransactions,
            setExpenseTransactions,
            investmentFormData,
            updateInvestmentFormData,
            addInvestmentTransaction,
            investmentTransactions,
            setInvestmentTransactions,
            transactions,
            addTransaction,
            setTransactions,
            totalData,
            resetAppData
        },
        children: children
    }, void 0, false, {
        fileName: "src/Context/AppContext.js",
        lineNumber: 571,
        columnNumber: 5
    }, undefined);
};
_s(AppProvider, "y0DlkRhx6qOir+rCuFrYBA0IqVA=");
_c = AppProvider;
const useAppContext = ()=>{
    _s1();
    return (0, _react.useContext)(AppContext);
};
_s1(useAppContext, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");
var _c;
$RefreshReg$(_c, "AppProvider");

  $parcel$ReactRefreshHelpers$ab59.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$t, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$v = [], $b6c7f0288a15c619$var$y = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$d = Array.isArray;
function $b6c7f0288a15c619$var$w(n, l) {
    for(var t in l)n[t] = l[t];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, t, u) {
    var i, r, o, e = {};
    for(o in t)"key" == o ? i = t[o] : "ref" == o ? r = t[o] : e[o] = t[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : u), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)void 0 === e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, u, i, r, o) {
    var e = {
        type: n,
        props: u,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$t : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var t; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) return t.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, t;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) {
            n.__e = n.__c.base = t.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r !== $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, t, u, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (u = void 0, o = (r = (t = n).__v).__e, f = [], c = [], t.__P && ((u = $b6c7f0288a15c619$var$w({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(u), $b6c7f0288a15c619$var$O(t.__P, u, r, t.__n, t.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), u.__v = r.__v, u.__.__k[u.__i] = u, $b6c7f0288a15c619$var$z(f, u, c), u.__e != o && $b6c7f0288a15c619$var$C(u)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, t, u, i, r, o, e, f, c, s) {
    var a, h, y, d, w, g, _ = u && u.__k || $b6c7f0288a15c619$var$v, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(t, l, _, f, m), a = 0; a < m; a++)null != (y = t.__k[a]) && (h = -1 === y.__i ? $b6c7f0288a15c619$var$p : _[y.__i] || $b6c7f0288a15c619$var$p, y.__i = a, g = $b6c7f0288a15c619$var$O(n, y, h, i, r, o, e, f, c, s), d = y.__e, y.ref && h.ref != y.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, y), s.push(y.ref, y.__c || d, y)), null == w && null != d && (w = d), 4 & y.__u || h.__k === y.__k ? f = $b6c7f0288a15c619$var$A(y, f, n) : "function" == typeof y.type && void 0 !== g ? f = g : d && (f = d.nextSibling), y.__u &= -7);
    return t.__e = w, f;
}
function $b6c7f0288a15c619$var$P(n, l, t, u, i) {
    var r, o, e, f, c, s = t.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$d(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : void 0 === o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 !== (c = o.__i = $b6c7f0288a15c619$var$L(o, t, f, a)) && (a--, (e = t[c]) && (e.__u |= 2)), null == e || null === e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = t[r]) && 0 == (2 & e.__u) && (e.__e == u && (u = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return u;
}
function $b6c7f0288a15c619$var$A(n, l, t) {
    var u, i;
    if ("function" == typeof n.type) {
        for(u = n.__k, i = 0; u && i < u.length; i++)u[i] && (u[i].__ = n, l = $b6c7f0288a15c619$var$A(u[i], l, t));
        return l;
    }
    n.__e != l && (l && n.type && !t.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), t.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$d(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, t, u) {
    var i, r, o = n.key, e = n.type, f = l[t];
    if (null === f && null == n.key || f && o == f.key && e === f.type && 0 == (2 & f.__u)) return t;
    if (u > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = t - 1, r = t + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e === f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e === f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, t) {
    "-" == l[0] ? n.setProperty(l, null == t ? "" : t) : n[l] = null == t ? "" : "number" != typeof t || $b6c7f0288a15c619$var$y.test(l) ? t : t + "px";
}
function $b6c7f0288a15c619$var$j(n, l, t, u, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof t) n.style.cssText = t;
        else {
            if ("string" == typeof u && (n.style.cssText = u = ""), u) for(l in u)t && l in t || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (t) for(l in t)u && t[l] === u[l] || $b6c7f0288a15c619$var$T(n.style, l, t[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = t, t ? u ? t.t = u.t : (t.t = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == t ? "" : t;
            break n;
        } catch (n) {}
        "function" == typeof t || (null == t || !1 === t && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == t ? "" : t));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(t) {
        if (this.l) {
            var u = this.l[t.type + n];
            if (null == t.u) t.u = $b6c7f0288a15c619$var$c++;
            else if (t.u < u.t) return;
            return u($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(t) : t);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, t, u, i, r, o, e, f, c, s) {
    var a, h, p, v, y, _, m, b, S, C, M, $, P, A, H, L, T, j = t.type;
    if (void 0 !== t.constructor) return null;
    128 & u.__u && (c = !!(32 & u.__u), o = [
        f = t.__e = u.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(t);
    n: if ("function" == typeof j) try {
        if (b = t.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, u.__c ? m = (h = t.__c = u.__c).__ = h.__E : (S ? t.__c = h = new j(b, M) : (t.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$w({}, h.__s)), $b6c7f0288a15c619$var$w(h.__s, j.getDerivedStateFromProps(b, h.__s))), v = h.props, y = h.state, h.__v = t, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== v && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && (null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || t.__v == u.__v)) {
                for(t.__v != u.__v && (h.props = b, h.state = h.__s, h.__d = !1), t.__e = u.__e, t.__k = u.__k, t.__k.some(function(n) {
                    n && (n.__ = t);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(v, y, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(t), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(t), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$w($b6c7f0288a15c619$var$w({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(v, y)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$d(L) ? L : [
            L
        ], t, u, i, r, o, e, f, c, s), h.base = t.__e, t.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (t.__v = null, c || null != o) {
            if (n.then) {
                for(t.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, t.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else t.__e = u.__e, t.__k = u.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t, u);
    }
    else null == o && t.__v == u.__v ? (t.__k = u.__k, t.__e = u.__e) : f = t.__e = $b6c7f0288a15c619$var$V(u.__e, t, u, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(t), 128 & t.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, t, u) {
    for(var i = 0; i < u.length; i++)$b6c7f0288a15c619$var$q(u[i], u[++i], u[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(t, n), n.some(function(t) {
        try {
            n = t.__h, t.__h = [], n.some(function(n) {
                n.call(t);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n ? n : $b6c7f0288a15c619$var$d(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$w({}, n);
}
function $b6c7f0288a15c619$var$V(t, u, i, r, o, e, f, c, s) {
    var a, h, v, y, w, _, m, b = i.props, k = u.props, x = u.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((w = e[a]) && "setAttribute" in w == !!x && (x ? w.localName == x : 3 == w.nodeType)) {
            t = w, e[a] = null;
            break;
        }
    }
    if (null == t) {
        if (null == x) return document.createTextNode(k);
        t = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(u, e), c = !1), e = null;
    }
    if (null === x) b === k || c && t.data === k || (t.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(t.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < t.attributes.length; a++)b[(w = t.attributes[a]).name] = w.value;
        for(a in b)if (w = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) v = w;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(t, a, null, w, o);
        }
        for(a in k)w = k[a], "children" == a ? y = w : "dangerouslySetInnerHTML" == a ? h = w : "value" == a ? _ = w : "checked" == a ? m = w : c && "function" != typeof w || b[a] === w || $b6c7f0288a15c619$var$j(t, a, w, b[a], o);
        if (h) c || v && (h.__html === v.__html || h.__html === t.innerHTML) || (t.innerHTML = h.__html), u.__k = [];
        else if (v && (t.innerHTML = ""), $b6c7f0288a15c619$var$I("template" === u.type ? t.content : t, $b6c7f0288a15c619$var$d(y) ? y : [
            y
        ], u, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? t.removeAttribute("value") : void 0 !== _ && (_ !== t[a] || "progress" == x && !_ || "option" == x && _ !== b[a]) && $b6c7f0288a15c619$var$j(t, a, _, b[a], o), a = "checked", void 0 !== m && m !== t[a] && $b6c7f0288a15c619$var$j(t, a, m, b[a], o));
    }
    return t;
}
function $b6c7f0288a15c619$var$q(n, t, u) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == t || (n.__u = n(t));
        } else n.current = t;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
    }
}
function $b6c7f0288a15c619$var$B(n, t, u) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || $b6c7f0288a15c619$var$q(i, null, t)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], t, u || "function" != typeof n.type);
    u || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, t) {
    return this.constructor(n, t);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(t, u, i) {
    var r, o, e, f;
    u == document && (u = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(t, u), o = (r = "function" == typeof i) ? null : i && i.__k || u.__k, e = [], f = [], $b6c7f0288a15c619$var$O(u, t = (!r && i || u).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        t
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, u.namespaceURI, !r && i ? [
        i
    ] : o ? null : u.firstChild ? $b6c7f0288a15c619$var$n.call(u.childNodes) : null, e, !r && i ? i : o ? o.__e : u.firstChild, r, f), $b6c7f0288a15c619$var$z(e, t, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, t, u) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$w({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), t)"key" == o ? i = t[o] : "ref" == o ? r = t[o] : f[o] = void 0 === t[o] && void 0 !== e ? e[o] : t[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : u), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var t, u;
        return this.getChildContext || (t = new Set, (u = {})[l.__c] = this, this.getChildContext = function() {
            return u;
        }, this.componentWillUnmount = function() {
            t = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value !== n.value && t.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            t.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                t && t.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$v.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, t, u) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, u || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$t = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var t;
    t = null != this.__s && this.__s !== this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$w({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$w({}, t), this.props)), n && $b6c7f0288a15c619$var$w(t, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"epmQR":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$4007 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$4007.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$4007.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _openingAnimationmWebMp4 = require("../../../public/media/videos/OpeningAnimationmWeb.mp4");
var _openingAnimationmWebMp4Default = parcelHelpers.interopDefault(_openingAnimationmWebMp4);
var _openingAnimationWebMp4 = require("../../../public/media/videos/OpeningAnimationWeb.mp4");
var _openingAnimationWebMp4Default = parcelHelpers.interopDefault(_openingAnimationWebMp4);
var _s = $RefreshSig$();
const OpeningAnimation = ({ showContent })=>{
    _s();
    const [isMobile, setIsMobile] = (0, _react.useState)(true);
    (0, _react.useEffect)(()=>{
        const checkScreenSize = ()=>{
            setIsMobile(window.innerWidth < 768);
        };
        checkScreenSize();
        window.addEventListener("resize", checkScreenSize);
        // why cleanup???
        return ()=>window.removeEventListener("resize", checkScreenSize);
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "h-full w-full",
        style: {
            display: showContent ? "none" : "block"
        },
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
            src: isMobile ? (0, _openingAnimationmWebMp4Default.default) : (0, _openingAnimationWebMp4Default.default),
            autoPlay: true,
            muted: true,
            className: "object-cover h-full w-full"
        }, void 0, false, {
            fileName: "src/Components/OpeningAnimation/OpeningAnimation.js",
            lineNumber: 26,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/Components/OpeningAnimation/OpeningAnimation.js",
        lineNumber: 22,
        columnNumber: 5
    }, undefined);
};
_s(OpeningAnimation, "MlmSG3uSWWvVgZvDg0SD4XH58F4=");
_c = OpeningAnimation;
exports.default = OpeningAnimation;
var _c;
$RefreshReg$(_c, "OpeningAnimation");

  $parcel$ReactRefreshHelpers$4007.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../../public/media/videos/OpeningAnimationmWeb.mp4":"29oN3","../../../public/media/videos/OpeningAnimationWeb.mp4":"bKhpp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"29oN3":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("OpeningAnimationmWeb.e2d9678f.mp4") + "?" + Date.now();

},{}],"bKhpp":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("OpeningAnimationWeb.4a22fe9d.mp4") + "?" + Date.now();

},{}],"8ANAX":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$5fea = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$5fea.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$5fea.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _header = require("../../Components/Header/Header");
var _headerDefault = parcelHelpers.interopDefault(_header);
var _mainCard = require("../../Components/MainCard/MainCard");
var _mainCardDefault = parcelHelpers.interopDefault(_mainCard);
var _quickActions = require("../../Components/QuickActions/QuickActions");
var _quickActionsDefault = parcelHelpers.interopDefault(_quickActions);
var _recentTransactions = require("../../Components/RecentTransactions/RecentTransactions");
var _recentTransactionsDefault = parcelHelpers.interopDefault(_recentTransactions);
var _allTransactions = require("../../Components/AllTransactions/AllTransactions");
var _allTransactionsDefault = parcelHelpers.interopDefault(_allTransactions);
var _addIcome = require("../../Components/AddIcome/AddIcome");
var _addIcomeDefault = parcelHelpers.interopDefault(_addIcome);
var _addInvestment = require("../../Components/AddSaving/AddInvestment");
var _addInvestmentDefault = parcelHelpers.interopDefault(_addInvestment);
var _addExpense = require("../../Components/AddExpense/AddExpense");
var _addExpenseDefault = parcelHelpers.interopDefault(_addExpense);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const LoadedHome = ()=>{
    _s();
    const { transactions } = (0, _appContext.useAppContext)();
    const [allTransactions, setAllTransactions] = (0, _react.useState)(false);
    const [addIncome, setAddIcome] = (0, _react.useState)(false);
    const [addInvestment, setAddInvestment] = (0, _react.useState)(false);
    const [addExpense, setAddExpense] = (0, _react.useState)(false);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerDefault.default), {}, void 0, false, {
                fileName: "src/Pages/Home/LoadedHome.js",
                lineNumber: 21,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full h-full flex flex-col md:flex-row gap-4 md:gap-10 relative md:mt-6 md:px-40",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col gap-4 md:gap-8 md:w-[50%]",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _mainCardDefault.default), {}, void 0, false, {
                                fileName: "src/Pages/Home/LoadedHome.js",
                                lineNumber: 25,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _quickActionsDefault.default), {
                                setAddIcome: setAddIcome,
                                setAddInvestment: setAddInvestment,
                                setAddExpense: setAddExpense
                            }, void 0, false, {
                                fileName: "src/Pages/Home/LoadedHome.js",
                                lineNumber: 26,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "md:w-[50%]",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recentTransactionsDefault.default), {
                            setAllTransactions: setAllTransactions,
                            renderList: transactions,
                            webLength: 7
                        }, void 0, false, {
                            fileName: "src/Pages/Home/LoadedHome.js",
                            lineNumber: 33,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 32,
                        columnNumber: 9
                    }, undefined),
                    allTransactions && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _allTransactionsDefault.default), {
                        setAllTransactions: setAllTransactions,
                        renderList: transactions
                    }, void 0, false, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined),
                    addIncome && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addIcomeDefault.default), {
                        setAddIcome: setAddIcome
                    }, void 0, false, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 45,
                        columnNumber: 23
                    }, undefined),
                    addInvestment && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addInvestmentDefault.default), {
                        setAddInvestment: setAddInvestment
                    }, void 0, false, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 46,
                        columnNumber: 27
                    }, undefined),
                    addExpense && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addExpenseDefault.default), {
                        setAddExpense: setAddExpense
                    }, void 0, false, {
                        fileName: "src/Pages/Home/LoadedHome.js",
                        lineNumber: 47,
                        columnNumber: 24
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Home/LoadedHome.js",
                lineNumber: 23,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true);
};
_s(LoadedHome, "Joy0dmUQOV6a6oGuCO0hzzUS9mw=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = LoadedHome;
exports.default = LoadedHome;
var _c;
$RefreshReg$(_c, "LoadedHome");

  $parcel$ReactRefreshHelpers$5fea.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Components/Header/Header":"dhsjN","../../Components/MainCard/MainCard":"duKYb","../../Components/QuickActions/QuickActions":"5MArW","../../Components/RecentTransactions/RecentTransactions":"5P0C6","../../Components/AllTransactions/AllTransactions":"3P15P","../../Components/AddIcome/AddIcome":"jfTUS","../../Components/AddSaving/AddInvestment":"lAPBj","../../Components/AddExpense/AddExpense":"kcs4K","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dhsjN":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$f515 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$f515.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$f515.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// why url: works?
var _userProfilePic1Png = require("url:../../../public/media/images/UserProfilePic1.png");
var _userProfilePic1PngDefault = parcelHelpers.interopDefault(_userProfilePic1Png);
var _reactRouter = require("react-router");
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const Header = ()=>{
    _s();
    const { formData } = (0, _appContext.useAppContext)();
    const [notificationCount, setNotificationCount] = (0, _react.useState)(0);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex items-center justify-between pt-4 sticky top-0 bg-white z-10 py-4 w-full px-2 md:px-40 opacity-90 md:pt-6",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-center gap-3",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/Profile",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            src: (0, _userProfilePic1PngDefault.default),
                            className: "w-8 h-8 rounded-full"
                        }, void 0, false, {
                            fileName: "src/Components/Header/Header.js",
                            lineNumber: 14,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Components/Header/Header.js",
                        lineNumber: 13,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "font-bold text-xl",
                                children: [
                                    "Hello, ",
                                    formData.Name
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/Header/Header.js",
                                lineNumber: 17,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-xs -mt-1",
                                children: "Welcome Back!"
                            }, void 0, false, {
                                fileName: "src/Components/Header/Header.js",
                                lineNumber: 18,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/Header/Header.js",
                        lineNumber: 16,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/Header/Header.js",
                lineNumber: 12,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-center gap-1",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/Notifications",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "w-8 h-8 border rounded-full flex items-center justify-center mr-2 hidden",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                    className: "bi bi-bell mt-1"
                                }, void 0, false, {
                                    fileName: "src/Components/Header/Header.js",
                                    lineNumber: 24,
                                    columnNumber: 13
                                }, undefined),
                                notificationCount > 0 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "bg-[#0171ff] top-3 right-5 w-4 h-4 absolute rounded-full text-[10px] font-bold text-white flex items-center justify-center pt-[2px]",
                                    children: notificationCount
                                }, void 0, false, {
                                    fileName: "src/Components/Header/Header.js",
                                    lineNumber: 26,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/Header/Header.js",
                            lineNumber: 23,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Components/Header/Header.js",
                        lineNumber: 22,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/Dashboard",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "w-8 h-8 border rounded-full flex items-center justify-center",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "bi bi-pie-chart-fill text-[#0171ff] mt-1"
                            }, void 0, false, {
                                fileName: "src/Components/Header/Header.js",
                                lineNumber: 35,
                                columnNumber: 13
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/Components/Header/Header.js",
                            lineNumber: 34,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Components/Header/Header.js",
                        lineNumber: 33,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/Header/Header.js",
                lineNumber: 21,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/Header/Header.js",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_s(Header, "m52ZEnv/MOnZJHdfyA4kORa2U3Y=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = Header;
exports.default = Header;
var _c;
$RefreshReg$(_c, "Header");

  $parcel$ReactRefreshHelpers$f515.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","url:../../../public/media/images/UserProfilePic1.png":"dqvpE","react-router":"2jawN","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dqvpE":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("UserProfilePic1.4ed72bad.png") + "?" + Date.now();

},{}],"2jawN":[function(require,module,exports,__globalThis) {
/**
 * react-router v7.5.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Await", ()=>(0, _chunkAYJ5UCUIMjs.Await));
parcelHelpers.export(exports, "BrowserRouter", ()=>(0, _chunkAYJ5UCUIMjs.BrowserRouter));
parcelHelpers.export(exports, "Form", ()=>(0, _chunkAYJ5UCUIMjs.Form));
parcelHelpers.export(exports, "HashRouter", ()=>(0, _chunkAYJ5UCUIMjs.HashRouter));
parcelHelpers.export(exports, "IDLE_BLOCKER", ()=>(0, _chunkAYJ5UCUIMjs.IDLE_BLOCKER));
parcelHelpers.export(exports, "IDLE_FETCHER", ()=>(0, _chunkAYJ5UCUIMjs.IDLE_FETCHER));
parcelHelpers.export(exports, "IDLE_NAVIGATION", ()=>(0, _chunkAYJ5UCUIMjs.IDLE_NAVIGATION));
parcelHelpers.export(exports, "Link", ()=>(0, _chunkAYJ5UCUIMjs.Link));
parcelHelpers.export(exports, "Links", ()=>(0, _chunkAYJ5UCUIMjs.Links));
parcelHelpers.export(exports, "MemoryRouter", ()=>(0, _chunkAYJ5UCUIMjs.MemoryRouter));
parcelHelpers.export(exports, "Meta", ()=>(0, _chunkAYJ5UCUIMjs.Meta));
parcelHelpers.export(exports, "NavLink", ()=>(0, _chunkAYJ5UCUIMjs.NavLink));
parcelHelpers.export(exports, "Navigate", ()=>(0, _chunkAYJ5UCUIMjs.Navigate));
parcelHelpers.export(exports, "NavigationType", ()=>(0, _chunkAYJ5UCUIMjs.Action));
parcelHelpers.export(exports, "Outlet", ()=>(0, _chunkAYJ5UCUIMjs.Outlet));
parcelHelpers.export(exports, "PrefetchPageLinks", ()=>(0, _chunkAYJ5UCUIMjs.PrefetchPageLinks));
parcelHelpers.export(exports, "Route", ()=>(0, _chunkAYJ5UCUIMjs.Route));
parcelHelpers.export(exports, "Router", ()=>(0, _chunkAYJ5UCUIMjs.Router));
parcelHelpers.export(exports, "RouterProvider", ()=>(0, _chunkAYJ5UCUIMjs.RouterProvider));
parcelHelpers.export(exports, "Routes", ()=>(0, _chunkAYJ5UCUIMjs.Routes));
parcelHelpers.export(exports, "Scripts", ()=>(0, _chunkAYJ5UCUIMjs.Scripts));
parcelHelpers.export(exports, "ScrollRestoration", ()=>(0, _chunkAYJ5UCUIMjs.ScrollRestoration));
parcelHelpers.export(exports, "ServerRouter", ()=>(0, _chunkAYJ5UCUIMjs.ServerRouter));
parcelHelpers.export(exports, "StaticRouter", ()=>(0, _chunkAYJ5UCUIMjs.StaticRouter));
parcelHelpers.export(exports, "StaticRouterProvider", ()=>(0, _chunkAYJ5UCUIMjs.StaticRouterProvider));
parcelHelpers.export(exports, "UNSAFE_DataRouterContext", ()=>(0, _chunkAYJ5UCUIMjs.DataRouterContext));
parcelHelpers.export(exports, "UNSAFE_DataRouterStateContext", ()=>(0, _chunkAYJ5UCUIMjs.DataRouterStateContext));
parcelHelpers.export(exports, "UNSAFE_ErrorResponseImpl", ()=>(0, _chunkAYJ5UCUIMjs.ErrorResponseImpl));
parcelHelpers.export(exports, "UNSAFE_FetchersContext", ()=>(0, _chunkAYJ5UCUIMjs.FetchersContext));
parcelHelpers.export(exports, "UNSAFE_FrameworkContext", ()=>(0, _chunkAYJ5UCUIMjs.FrameworkContext));
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>(0, _chunkAYJ5UCUIMjs.LocationContext));
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>(0, _chunkAYJ5UCUIMjs.NavigationContext));
parcelHelpers.export(exports, "UNSAFE_RemixErrorBoundary", ()=>(0, _chunkAYJ5UCUIMjs.RemixErrorBoundary));
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>(0, _chunkAYJ5UCUIMjs.RouteContext));
parcelHelpers.export(exports, "UNSAFE_ServerMode", ()=>(0, _chunkAYJ5UCUIMjs.ServerMode));
parcelHelpers.export(exports, "UNSAFE_SingleFetchRedirectSymbol", ()=>(0, _chunkAYJ5UCUIMjs.SingleFetchRedirectSymbol));
parcelHelpers.export(exports, "UNSAFE_ViewTransitionContext", ()=>(0, _chunkAYJ5UCUIMjs.ViewTransitionContext));
parcelHelpers.export(exports, "UNSAFE_createBrowserHistory", ()=>(0, _chunkAYJ5UCUIMjs.createBrowserHistory));
parcelHelpers.export(exports, "UNSAFE_createClientRoutes", ()=>(0, _chunkAYJ5UCUIMjs.createClientRoutes));
parcelHelpers.export(exports, "UNSAFE_createClientRoutesWithHMRRevalidationOptOut", ()=>(0, _chunkAYJ5UCUIMjs.createClientRoutesWithHMRRevalidationOptOut));
parcelHelpers.export(exports, "UNSAFE_createRouter", ()=>(0, _chunkAYJ5UCUIMjs.createRouter));
parcelHelpers.export(exports, "UNSAFE_decodeViaTurboStream", ()=>(0, _chunkAYJ5UCUIMjs.decodeViaTurboStream));
parcelHelpers.export(exports, "UNSAFE_deserializeErrors", ()=>(0, _chunkAYJ5UCUIMjs.deserializeErrors));
parcelHelpers.export(exports, "UNSAFE_getHydrationData", ()=>(0, _chunkAYJ5UCUIMjs.getHydrationData));
parcelHelpers.export(exports, "UNSAFE_getPatchRoutesOnNavigationFunction", ()=>(0, _chunkAYJ5UCUIMjs.getPatchRoutesOnNavigationFunction));
parcelHelpers.export(exports, "UNSAFE_getTurboStreamSingleFetchDataStrategy", ()=>(0, _chunkAYJ5UCUIMjs.getTurboStreamSingleFetchDataStrategy));
parcelHelpers.export(exports, "UNSAFE_hydrationRouteProperties", ()=>(0, _chunkAYJ5UCUIMjs.hydrationRouteProperties));
parcelHelpers.export(exports, "UNSAFE_invariant", ()=>(0, _chunkAYJ5UCUIMjs.invariant));
parcelHelpers.export(exports, "UNSAFE_mapRouteProperties", ()=>(0, _chunkAYJ5UCUIMjs.mapRouteProperties));
parcelHelpers.export(exports, "UNSAFE_shouldHydrateRouteLoader", ()=>(0, _chunkAYJ5UCUIMjs.shouldHydrateRouteLoader));
parcelHelpers.export(exports, "UNSAFE_useFogOFWarDiscovery", ()=>(0, _chunkAYJ5UCUIMjs.useFogOFWarDiscovery));
parcelHelpers.export(exports, "UNSAFE_useScrollRestoration", ()=>(0, _chunkAYJ5UCUIMjs.useScrollRestoration));
parcelHelpers.export(exports, "createBrowserRouter", ()=>(0, _chunkAYJ5UCUIMjs.createBrowserRouter));
parcelHelpers.export(exports, "createCookie", ()=>(0, _chunkAYJ5UCUIMjs.createCookie));
parcelHelpers.export(exports, "createCookieSessionStorage", ()=>(0, _chunkAYJ5UCUIMjs.createCookieSessionStorage));
parcelHelpers.export(exports, "createHashRouter", ()=>(0, _chunkAYJ5UCUIMjs.createHashRouter));
parcelHelpers.export(exports, "createMemoryRouter", ()=>(0, _chunkAYJ5UCUIMjs.createMemoryRouter));
parcelHelpers.export(exports, "createMemorySessionStorage", ()=>(0, _chunkAYJ5UCUIMjs.createMemorySessionStorage));
parcelHelpers.export(exports, "createPath", ()=>(0, _chunkAYJ5UCUIMjs.createPath));
parcelHelpers.export(exports, "createRequestHandler", ()=>(0, _chunkAYJ5UCUIMjs.createRequestHandler));
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>(0, _chunkAYJ5UCUIMjs.createRoutesFromChildren));
parcelHelpers.export(exports, "createRoutesFromElements", ()=>(0, _chunkAYJ5UCUIMjs.createRoutesFromElements));
parcelHelpers.export(exports, "createRoutesStub", ()=>(0, _chunkAYJ5UCUIMjs.createRoutesStub));
parcelHelpers.export(exports, "createSearchParams", ()=>(0, _chunkAYJ5UCUIMjs.createSearchParams));
parcelHelpers.export(exports, "createSession", ()=>(0, _chunkAYJ5UCUIMjs.createSession));
parcelHelpers.export(exports, "createSessionStorage", ()=>(0, _chunkAYJ5UCUIMjs.createSessionStorage));
parcelHelpers.export(exports, "createStaticHandler", ()=>(0, _chunkAYJ5UCUIMjs.createStaticHandler));
parcelHelpers.export(exports, "createStaticRouter", ()=>(0, _chunkAYJ5UCUIMjs.createStaticRouter));
parcelHelpers.export(exports, "data", ()=>(0, _chunkAYJ5UCUIMjs.data));
parcelHelpers.export(exports, "generatePath", ()=>(0, _chunkAYJ5UCUIMjs.generatePath));
parcelHelpers.export(exports, "href", ()=>(0, _chunkAYJ5UCUIMjs.href));
parcelHelpers.export(exports, "isCookie", ()=>(0, _chunkAYJ5UCUIMjs.isCookie));
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>(0, _chunkAYJ5UCUIMjs.isRouteErrorResponse));
parcelHelpers.export(exports, "isSession", ()=>(0, _chunkAYJ5UCUIMjs.isSession));
parcelHelpers.export(exports, "matchPath", ()=>(0, _chunkAYJ5UCUIMjs.matchPath));
parcelHelpers.export(exports, "matchRoutes", ()=>(0, _chunkAYJ5UCUIMjs.matchRoutes));
parcelHelpers.export(exports, "parsePath", ()=>(0, _chunkAYJ5UCUIMjs.parsePath));
parcelHelpers.export(exports, "redirect", ()=>(0, _chunkAYJ5UCUIMjs.redirect));
parcelHelpers.export(exports, "redirectDocument", ()=>(0, _chunkAYJ5UCUIMjs.redirectDocument));
parcelHelpers.export(exports, "renderMatches", ()=>(0, _chunkAYJ5UCUIMjs.renderMatches));
parcelHelpers.export(exports, "replace", ()=>(0, _chunkAYJ5UCUIMjs.replace));
parcelHelpers.export(exports, "resolvePath", ()=>(0, _chunkAYJ5UCUIMjs.resolvePath));
parcelHelpers.export(exports, "unstable_HistoryRouter", ()=>(0, _chunkAYJ5UCUIMjs.HistoryRouter));
parcelHelpers.export(exports, "unstable_RouterContextProvider", ()=>(0, _chunkAYJ5UCUIMjs.unstable_RouterContextProvider));
parcelHelpers.export(exports, "unstable_createContext", ()=>(0, _chunkAYJ5UCUIMjs.unstable_createContext));
parcelHelpers.export(exports, "unstable_setDevServerHooks", ()=>(0, _chunkAYJ5UCUIMjs.setDevServerHooks));
parcelHelpers.export(exports, "unstable_usePrompt", ()=>(0, _chunkAYJ5UCUIMjs.usePrompt));
parcelHelpers.export(exports, "useActionData", ()=>(0, _chunkAYJ5UCUIMjs.useActionData));
parcelHelpers.export(exports, "useAsyncError", ()=>(0, _chunkAYJ5UCUIMjs.useAsyncError));
parcelHelpers.export(exports, "useAsyncValue", ()=>(0, _chunkAYJ5UCUIMjs.useAsyncValue));
parcelHelpers.export(exports, "useBeforeUnload", ()=>(0, _chunkAYJ5UCUIMjs.useBeforeUnload));
parcelHelpers.export(exports, "useBlocker", ()=>(0, _chunkAYJ5UCUIMjs.useBlocker));
parcelHelpers.export(exports, "useFetcher", ()=>(0, _chunkAYJ5UCUIMjs.useFetcher));
parcelHelpers.export(exports, "useFetchers", ()=>(0, _chunkAYJ5UCUIMjs.useFetchers));
parcelHelpers.export(exports, "useFormAction", ()=>(0, _chunkAYJ5UCUIMjs.useFormAction));
parcelHelpers.export(exports, "useHref", ()=>(0, _chunkAYJ5UCUIMjs.useHref));
parcelHelpers.export(exports, "useInRouterContext", ()=>(0, _chunkAYJ5UCUIMjs.useInRouterContext));
parcelHelpers.export(exports, "useLinkClickHandler", ()=>(0, _chunkAYJ5UCUIMjs.useLinkClickHandler));
parcelHelpers.export(exports, "useLoaderData", ()=>(0, _chunkAYJ5UCUIMjs.useLoaderData));
parcelHelpers.export(exports, "useLocation", ()=>(0, _chunkAYJ5UCUIMjs.useLocation));
parcelHelpers.export(exports, "useMatch", ()=>(0, _chunkAYJ5UCUIMjs.useMatch));
parcelHelpers.export(exports, "useMatches", ()=>(0, _chunkAYJ5UCUIMjs.useMatches));
parcelHelpers.export(exports, "useNavigate", ()=>(0, _chunkAYJ5UCUIMjs.useNavigate));
parcelHelpers.export(exports, "useNavigation", ()=>(0, _chunkAYJ5UCUIMjs.useNavigation));
parcelHelpers.export(exports, "useNavigationType", ()=>(0, _chunkAYJ5UCUIMjs.useNavigationType));
parcelHelpers.export(exports, "useOutlet", ()=>(0, _chunkAYJ5UCUIMjs.useOutlet));
parcelHelpers.export(exports, "useOutletContext", ()=>(0, _chunkAYJ5UCUIMjs.useOutletContext));
parcelHelpers.export(exports, "useParams", ()=>(0, _chunkAYJ5UCUIMjs.useParams));
parcelHelpers.export(exports, "useResolvedPath", ()=>(0, _chunkAYJ5UCUIMjs.useResolvedPath));
parcelHelpers.export(exports, "useRevalidator", ()=>(0, _chunkAYJ5UCUIMjs.useRevalidator));
parcelHelpers.export(exports, "useRouteError", ()=>(0, _chunkAYJ5UCUIMjs.useRouteError));
parcelHelpers.export(exports, "useRouteLoaderData", ()=>(0, _chunkAYJ5UCUIMjs.useRouteLoaderData));
parcelHelpers.export(exports, "useRoutes", ()=>(0, _chunkAYJ5UCUIMjs.useRoutes));
parcelHelpers.export(exports, "useSearchParams", ()=>(0, _chunkAYJ5UCUIMjs.useSearchParams));
parcelHelpers.export(exports, "useSubmit", ()=>(0, _chunkAYJ5UCUIMjs.useSubmit));
parcelHelpers.export(exports, "useViewTransitionState", ()=>(0, _chunkAYJ5UCUIMjs.useViewTransitionState));
var _chunkAYJ5UCUIMjs = require("./chunk-AYJ5UCUI.mjs");

},{"./chunk-AYJ5UCUI.mjs":"8DEKK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8DEKK":[function(require,module,exports,__globalThis) {
/**
 * react-router v7.5.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Action", ()=>Action);
parcelHelpers.export(exports, "createBrowserHistory", ()=>createBrowserHistory);
parcelHelpers.export(exports, "invariant", ()=>invariant);
parcelHelpers.export(exports, "createPath", ()=>createPath);
parcelHelpers.export(exports, "parsePath", ()=>parsePath);
parcelHelpers.export(exports, "unstable_createContext", ()=>unstable_createContext);
parcelHelpers.export(exports, "unstable_RouterContextProvider", ()=>unstable_RouterContextProvider);
parcelHelpers.export(exports, "matchRoutes", ()=>matchRoutes);
parcelHelpers.export(exports, "generatePath", ()=>generatePath);
parcelHelpers.export(exports, "matchPath", ()=>matchPath);
parcelHelpers.export(exports, "resolvePath", ()=>resolvePath);
parcelHelpers.export(exports, "data", ()=>data);
parcelHelpers.export(exports, "redirect", ()=>redirect);
parcelHelpers.export(exports, "redirectDocument", ()=>redirectDocument);
parcelHelpers.export(exports, "replace", ()=>replace);
parcelHelpers.export(exports, "ErrorResponseImpl", ()=>ErrorResponseImpl);
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>isRouteErrorResponse);
parcelHelpers.export(exports, "IDLE_NAVIGATION", ()=>IDLE_NAVIGATION);
parcelHelpers.export(exports, "IDLE_FETCHER", ()=>IDLE_FETCHER);
parcelHelpers.export(exports, "IDLE_BLOCKER", ()=>IDLE_BLOCKER);
parcelHelpers.export(exports, "createRouter", ()=>createRouter);
parcelHelpers.export(exports, "DataRouterContext", ()=>DataRouterContext);
parcelHelpers.export(exports, "DataRouterStateContext", ()=>DataRouterStateContext);
parcelHelpers.export(exports, "ViewTransitionContext", ()=>ViewTransitionContext);
parcelHelpers.export(exports, "FetchersContext", ()=>FetchersContext);
parcelHelpers.export(exports, "NavigationContext", ()=>NavigationContext);
parcelHelpers.export(exports, "LocationContext", ()=>LocationContext);
parcelHelpers.export(exports, "RouteContext", ()=>RouteContext);
parcelHelpers.export(exports, "useHref", ()=>useHref);
parcelHelpers.export(exports, "useInRouterContext", ()=>useInRouterContext);
parcelHelpers.export(exports, "useLocation", ()=>useLocation);
parcelHelpers.export(exports, "useNavigationType", ()=>useNavigationType);
parcelHelpers.export(exports, "useMatch", ()=>useMatch);
parcelHelpers.export(exports, "useNavigate", ()=>useNavigate);
parcelHelpers.export(exports, "useOutletContext", ()=>useOutletContext);
parcelHelpers.export(exports, "useOutlet", ()=>useOutlet);
parcelHelpers.export(exports, "useParams", ()=>useParams);
parcelHelpers.export(exports, "useResolvedPath", ()=>useResolvedPath);
parcelHelpers.export(exports, "useRoutes", ()=>useRoutes);
parcelHelpers.export(exports, "useNavigation", ()=>useNavigation);
parcelHelpers.export(exports, "useRevalidator", ()=>useRevalidator);
parcelHelpers.export(exports, "useMatches", ()=>useMatches);
parcelHelpers.export(exports, "useLoaderData", ()=>useLoaderData);
parcelHelpers.export(exports, "useRouteLoaderData", ()=>useRouteLoaderData);
parcelHelpers.export(exports, "useActionData", ()=>useActionData);
parcelHelpers.export(exports, "useRouteError", ()=>useRouteError);
parcelHelpers.export(exports, "useAsyncValue", ()=>useAsyncValue);
parcelHelpers.export(exports, "useAsyncError", ()=>useAsyncError);
parcelHelpers.export(exports, "useBlocker", ()=>useBlocker);
parcelHelpers.export(exports, "mapRouteProperties", ()=>mapRouteProperties);
parcelHelpers.export(exports, "hydrationRouteProperties", ()=>hydrationRouteProperties);
parcelHelpers.export(exports, "createMemoryRouter", ()=>createMemoryRouter);
parcelHelpers.export(exports, "RouterProvider", ()=>RouterProvider);
parcelHelpers.export(exports, "MemoryRouter", ()=>MemoryRouter);
parcelHelpers.export(exports, "Navigate", ()=>Navigate);
parcelHelpers.export(exports, "Outlet", ()=>Outlet);
parcelHelpers.export(exports, "Route", ()=>Route);
parcelHelpers.export(exports, "Router", ()=>Router);
parcelHelpers.export(exports, "Routes", ()=>Routes);
parcelHelpers.export(exports, "Await", ()=>Await);
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>createRoutesFromChildren);
parcelHelpers.export(exports, "createRoutesFromElements", ()=>createRoutesFromElements);
parcelHelpers.export(exports, "renderMatches", ()=>renderMatches);
parcelHelpers.export(exports, "createSearchParams", ()=>createSearchParams);
parcelHelpers.export(exports, "SingleFetchRedirectSymbol", ()=>SingleFetchRedirectSymbol);
parcelHelpers.export(exports, "getTurboStreamSingleFetchDataStrategy", ()=>getTurboStreamSingleFetchDataStrategy);
parcelHelpers.export(exports, "decodeViaTurboStream", ()=>decodeViaTurboStream);
parcelHelpers.export(exports, "RemixErrorBoundary", ()=>RemixErrorBoundary);
parcelHelpers.export(exports, "createClientRoutesWithHMRRevalidationOptOut", ()=>createClientRoutesWithHMRRevalidationOptOut);
parcelHelpers.export(exports, "createClientRoutes", ()=>createClientRoutes);
parcelHelpers.export(exports, "shouldHydrateRouteLoader", ()=>shouldHydrateRouteLoader);
parcelHelpers.export(exports, "getPatchRoutesOnNavigationFunction", ()=>getPatchRoutesOnNavigationFunction);
parcelHelpers.export(exports, "useFogOFWarDiscovery", ()=>useFogOFWarDiscovery);
parcelHelpers.export(exports, "FrameworkContext", ()=>FrameworkContext);
parcelHelpers.export(exports, "Links", ()=>Links);
parcelHelpers.export(exports, "PrefetchPageLinks", ()=>PrefetchPageLinks);
parcelHelpers.export(exports, "Meta", ()=>Meta);
parcelHelpers.export(exports, "Scripts", ()=>Scripts);
parcelHelpers.export(exports, "createBrowserRouter", ()=>createBrowserRouter);
parcelHelpers.export(exports, "createHashRouter", ()=>createHashRouter);
parcelHelpers.export(exports, "BrowserRouter", ()=>BrowserRouter);
parcelHelpers.export(exports, "HashRouter", ()=>HashRouter);
parcelHelpers.export(exports, "HistoryRouter", ()=>HistoryRouter);
parcelHelpers.export(exports, "Link", ()=>Link);
parcelHelpers.export(exports, "NavLink", ()=>NavLink);
parcelHelpers.export(exports, "Form", ()=>Form);
parcelHelpers.export(exports, "ScrollRestoration", ()=>ScrollRestoration);
parcelHelpers.export(exports, "useLinkClickHandler", ()=>useLinkClickHandler);
parcelHelpers.export(exports, "useSearchParams", ()=>useSearchParams);
parcelHelpers.export(exports, "useSubmit", ()=>useSubmit);
parcelHelpers.export(exports, "useFormAction", ()=>useFormAction);
parcelHelpers.export(exports, "useFetcher", ()=>useFetcher);
parcelHelpers.export(exports, "useFetchers", ()=>useFetchers);
parcelHelpers.export(exports, "useScrollRestoration", ()=>useScrollRestoration);
parcelHelpers.export(exports, "useBeforeUnload", ()=>useBeforeUnload);
parcelHelpers.export(exports, "usePrompt", ()=>usePrompt);
parcelHelpers.export(exports, "useViewTransitionState", ()=>useViewTransitionState);
parcelHelpers.export(exports, "StaticRouter", ()=>StaticRouter);
parcelHelpers.export(exports, "StaticRouterProvider", ()=>StaticRouterProvider);
parcelHelpers.export(exports, "createStaticHandler", ()=>createStaticHandler2);
parcelHelpers.export(exports, "createStaticRouter", ()=>createStaticRouter);
parcelHelpers.export(exports, "ServerRouter", ()=>ServerRouter);
parcelHelpers.export(exports, "createRoutesStub", ()=>createRoutesStub);
parcelHelpers.export(exports, "createCookie", ()=>createCookie);
parcelHelpers.export(exports, "isCookie", ()=>isCookie);
parcelHelpers.export(exports, "ServerMode", ()=>ServerMode);
parcelHelpers.export(exports, "setDevServerHooks", ()=>setDevServerHooks);
parcelHelpers.export(exports, "createRequestHandler", ()=>createRequestHandler);
parcelHelpers.export(exports, "createSession", ()=>createSession);
parcelHelpers.export(exports, "isSession", ()=>isSession);
parcelHelpers.export(exports, "createSessionStorage", ()=>createSessionStorage);
parcelHelpers.export(exports, "createCookieSessionStorage", ()=>createCookieSessionStorage);
parcelHelpers.export(exports, "createMemorySessionStorage", ()=>createMemorySessionStorage);
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "deserializeErrors", ()=>deserializeErrors2);
parcelHelpers.export(exports, "getHydrationData", ()=>getHydrationData);
// lib/components.tsx
var _react = require("react");
var _turboStream = require("turbo-stream");
// lib/server-runtime/cookies.ts
var _cookie = require("cookie");
// lib/server-runtime/headers.ts
var _setCookieParser = require("set-cookie-parser");
var $86f1a5c7ac1383a4$import_meta = Object.assign(Object.create(null), {
    url: "file:///node_modules/react-router/dist/development/chunk-AYJ5UCUI.mjs"
});
var global = arguments[3];
var __typeError = (msg)=>{
    throw TypeError(msg);
};
var __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
// lib/router/history.ts
var Action = /* @__PURE__ */ ((Action2)=>{
    Action2["Pop"] = "POP";
    Action2["Push"] = "PUSH";
    Action2["Replace"] = "REPLACE";
    return Action2;
})(Action || {});
var PopStateEventType = "popstate";
function createMemoryHistory(options = {}) {
    let { initialEntries = [
        "/"
    ], initialIndex, v5Compat = false } = options;
    let entries;
    entries = initialEntries.map((entry, index2)=>createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index2 === 0 ? "default" : void 0));
    let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
    let action = "POP" /* Pop */ ;
    let listener = null;
    function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
    }
    function getCurrentLocation() {
        return entries[index];
    }
    function createMemoryLocation(to, state = null, key) {
        let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        warning(location.pathname.charAt(0) === "/", `relative pathnames are not supported in memory history: ${JSON.stringify(to)}`);
        return location;
    }
    function createHref2(to) {
        return typeof to === "string" ? to : createPath(to);
    }
    let history = {
        get index () {
            return index;
        },
        get action () {
            return action;
        },
        get location () {
            return getCurrentLocation();
        },
        createHref: createHref2,
        createURL (to) {
            return new URL(createHref2(to), "http://localhost");
        },
        encodeLocation (to) {
            let path = typeof to === "string" ? parsePath(to) : to;
            return {
                pathname: path.pathname || "",
                search: path.search || "",
                hash: path.hash || ""
            };
        },
        push (to, state) {
            action = "PUSH" /* Push */ ;
            let nextLocation = createMemoryLocation(to, state);
            index += 1;
            entries.splice(index, entries.length, nextLocation);
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 1
            });
        },
        replace (to, state) {
            action = "REPLACE" /* Replace */ ;
            let nextLocation = createMemoryLocation(to, state);
            entries[index] = nextLocation;
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 0
            });
        },
        go (delta) {
            action = "POP" /* Pop */ ;
            let nextIndex = clampIndex(index + delta);
            let nextLocation = entries[nextIndex];
            index = nextIndex;
            if (listener) listener({
                action,
                location: nextLocation,
                delta
            });
        },
        listen (fn) {
            listener = fn;
            return ()=>{
                listener = null;
            };
        }
    };
    return history;
}
function createBrowserHistory(options = {}) {
    function createBrowserLocation(window2, globalHistory) {
        let { pathname, search, hash } = window2.location;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createBrowserHref(window2, to) {
        return typeof to === "string" ? to : createPath(to);
    }
    return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function createHashHistory(options = {}) {
    function createHashLocation(window2, globalHistory) {
        let { pathname = "/", search = "", hash = "" } = parsePath(window2.location.hash.substring(1));
        if (!pathname.startsWith("/") && !pathname.startsWith(".")) pathname = "/" + pathname;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createHashHref(window2, to) {
        let base = window2.document.querySelector("base");
        let href2 = "";
        if (base && base.getAttribute("href")) {
            let url = window2.location.href;
            let hashIndex = url.indexOf("#");
            href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href2 + "#" + (typeof to === "string" ? to : createPath(to));
    }
    function validateHashLocation(location, to) {
        warning(location.pathname.charAt(0) === "/", `relative pathnames are not supported in hash history.push(${JSON.stringify(to)})`);
    }
    return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
function warning(cond, message) {
    if (!cond) {
        if (typeof console !== "undefined") console.warn(message);
        try {
            throw new Error(message);
        } catch (e) {}
    }
}
function createKey() {
    return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
    return {
        usr: location.state,
        key: location.key,
        idx: index
    };
}
function createLocation(current, to, state = null, key) {
    let location = {
        pathname: typeof current === "string" ? current : current.pathname,
        search: "",
        hash: "",
        ...typeof to === "string" ? parsePath(to) : to,
        state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || createKey()
    };
    return location;
}
function createPath({ pathname = "/", search = "", hash = "" }) {
    if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
    if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
    return pathname;
}
function parsePath(path) {
    let parsedPath = {};
    if (path) {
        let hashIndex = path.indexOf("#");
        if (hashIndex >= 0) {
            parsedPath.hash = path.substring(hashIndex);
            path = path.substring(0, hashIndex);
        }
        let searchIndex = path.indexOf("?");
        if (searchIndex >= 0) {
            parsedPath.search = path.substring(searchIndex);
            path = path.substring(0, searchIndex);
        }
        if (path) parsedPath.pathname = path;
    }
    return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {
    let { window: window2 = document.defaultView, v5Compat = false } = options;
    let globalHistory = window2.history;
    let action = "POP" /* Pop */ ;
    let listener = null;
    let index = getIndex();
    if (index == null) {
        index = 0;
        globalHistory.replaceState({
            ...globalHistory.state,
            idx: index
        }, "");
    }
    function getIndex() {
        let state = globalHistory.state || {
            idx: null
        };
        return state.idx;
    }
    function handlePop() {
        action = "POP" /* Pop */ ;
        let nextIndex = getIndex();
        let delta = nextIndex == null ? null : nextIndex - index;
        index = nextIndex;
        if (listener) listener({
            action,
            location: history.location,
            delta
        });
    }
    function push(to, state) {
        action = "PUSH" /* Push */ ;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex() + 1;
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        try {
            globalHistory.pushState(historyState, "", url);
        } catch (error) {
            if (error instanceof DOMException && error.name === "DataCloneError") throw error;
            window2.location.assign(url);
        }
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 1
        });
    }
    function replace2(to, state) {
        action = "REPLACE" /* Replace */ ;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex();
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url);
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 0
        });
    }
    function createURL(to) {
        let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
        let href2 = typeof to === "string" ? to : createPath(to);
        href2 = href2.replace(/ $/, "%20");
        invariant(base, `No window.location.(origin|href) available to create URL for href: ${href2}`);
        return new URL(href2, base);
    }
    let history = {
        get action () {
            return action;
        },
        get location () {
            return getLocation(window2, globalHistory);
        },
        listen (fn) {
            if (listener) throw new Error("A history only accepts one active listener");
            window2.addEventListener(PopStateEventType, handlePop);
            listener = fn;
            return ()=>{
                window2.removeEventListener(PopStateEventType, handlePop);
                listener = null;
            };
        },
        createHref (to) {
            return createHref2(window2, to);
        },
        createURL,
        encodeLocation (to) {
            let url = createURL(to);
            return {
                pathname: url.pathname,
                search: url.search,
                hash: url.hash
            };
        },
        push,
        replace: replace2,
        go (n) {
            return globalHistory.go(n);
        }
    };
    return history;
}
// lib/router/utils.ts
function unstable_createContext(defaultValue) {
    return {
        defaultValue
    };
}
var _map;
var unstable_RouterContextProvider = class {
    constructor(init){
        __privateAdd(this, _map, /* @__PURE__ */ new Map());
        if (init) for (let [context, value] of init)this.set(context, value);
    }
    get(context) {
        if (__privateGet(this, _map).has(context)) return __privateGet(this, _map).get(context);
        if (context.defaultValue !== void 0) return context.defaultValue;
        throw new Error("No value found for context");
    }
    set(context, value) {
        __privateGet(this, _map).set(context, value);
    }
};
_map = new WeakMap();
var unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([
    "lazy",
    "caseSensitive",
    "path",
    "id",
    "index",
    "children"
]);
function isUnsupportedLazyRouteObjectKey(key) {
    return unsupportedLazyRouteObjectKeys.has(key);
}
var unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([
    "lazy",
    "caseSensitive",
    "path",
    "id",
    "index",
    "unstable_middleware",
    "children"
]);
function isUnsupportedLazyRouteFunctionKey(key) {
    return unsupportedLazyRouteFunctionKeys.has(key);
}
function isIndexRoute(route) {
    return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {
    return routes.map((route, index)=>{
        let treePath = [
            ...parentPath,
            String(index)
        ];
        let id = typeof route.id === "string" ? route.id : treePath.join("-");
        invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);
        invariant(!manifest[id], `Found a route id collision on id "${id}".  Route id's must be globally unique within Data Router usages`);
        if (isIndexRoute(route)) {
            let indexRoute = {
                ...route,
                ...mapRouteProperties2(route),
                id
            };
            manifest[id] = indexRoute;
            return indexRoute;
        } else {
            let pathOrLayoutRoute = {
                ...route,
                ...mapRouteProperties2(route),
                id,
                children: void 0
            };
            manifest[id] = pathOrLayoutRoute;
            if (route.children) pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);
            return pathOrLayoutRoute;
        }
    });
}
function matchRoutes(routes, locationArg, basename = "/") {
    return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
    let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    let pathname = stripBasename(location.pathname || "/", basename);
    if (pathname == null) return null;
    let branches = flattenRoutes(routes);
    rankRouteBranches(branches);
    let matches = null;
    for(let i = 0; matches == null && i < branches.length; ++i){
        let decoded = decodePath(pathname);
        matches = matchRouteBranch(branches[i], decoded, allowPartial);
    }
    return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
    let { route, pathname, params } = match;
    return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
    };
}
function flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = "") {
    let flattenRoute = (route, index, relativePath)=>{
        let meta = {
            relativePath: relativePath === void 0 ? route.path || "" : relativePath,
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route
        };
        if (meta.relativePath.startsWith("/")) {
            invariant(meta.relativePath.startsWith(parentPath), `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);
            meta.relativePath = meta.relativePath.slice(parentPath.length);
        }
        let path = joinPaths([
            parentPath,
            meta.relativePath
        ]);
        let routesMeta = parentsMeta.concat(meta);
        if (route.children && route.children.length > 0) {
            invariant(// Our types know better, but runtime JS may not!
            // @ts-expect-error
            route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path "${path}".`);
            flattenRoutes(route.children, branches, routesMeta, path);
        }
        if (route.path == null && !route.index) return;
        branches.push({
            path,
            score: computeScore(path, route.index),
            routesMeta
        });
    };
    routes.forEach((route, index)=>{
        if (route.path === "" || !route.path?.includes("?")) flattenRoute(route, index);
        else for (let exploded of explodeOptionalSegments(route.path))flattenRoute(route, index, exploded);
    });
    return branches;
}
function explodeOptionalSegments(path) {
    let segments = path.split("/");
    if (segments.length === 0) return [];
    let [first, ...rest] = segments;
    let isOptional = first.endsWith("?");
    let required = first.replace(/\?$/, "");
    if (rest.length === 0) return isOptional ? [
        required,
        ""
    ] : [
        required
    ];
    let restExploded = explodeOptionalSegments(rest.join("/"));
    let result = [];
    result.push(...restExploded.map((subpath)=>subpath === "" ? required : [
            required,
            subpath
        ].join("/")));
    if (isOptional) result.push(...restExploded);
    return result.map((exploded)=>path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex), b.routesMeta.map((meta)=>meta.childrenIndex)));
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s)=>s === "*";
function computeScore(path, index) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some(isSplat)) initialScore += splatPenalty;
    if (index) initialScore += indexRouteValue;
    return segments.filter((s)=>!isSplat(s)).reduce((score, segment)=>score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]);
    return siblings ? // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0;
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
    let { routesMeta } = branch;
    let matchedParams = {};
    let matchedPathname = "/";
    let matches = [];
    for(let i = 0; i < routesMeta.length; ++i){
        let meta = routesMeta[i];
        let end = i === routesMeta.length - 1;
        let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
        let match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end
        }, remainingPathname);
        let route = meta.route;
        if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end: false
        }, remainingPathname);
        if (!match) return null;
        Object.assign(matchedParams, match.params);
        matches.push({
            // TODO: Can this as be avoided?
            params: matchedParams,
            pathname: joinPaths([
                matchedPathname,
                match.pathname
            ]),
            pathnameBase: normalizePathname(joinPaths([
                matchedPathname,
                match.pathnameBase
            ])),
            route
        });
        if (match.pathnameBase !== "/") matchedPathname = joinPaths([
            matchedPathname,
            match.pathnameBase
        ]);
    }
    return matches;
}
function generatePath(originalPath, params = {}) {
    let path = originalPath;
    if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
        warning(false, `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`);
        path = path.replace(/\*$/, "/*");
    }
    const prefix = path.startsWith("/") ? "/" : "";
    const stringify = (p)=>p == null ? "" : typeof p === "string" ? p : String(p);
    const segments = path.split(/\/+/).map((segment, index, array)=>{
        const isLastSegment = index === array.length - 1;
        if (isLastSegment && segment === "*") {
            const star = "*";
            return stringify(params[star]);
        }
        const keyMatch = segment.match(/^:([\w-]+)(\??)$/);
        if (keyMatch) {
            const [, key, optional] = keyMatch;
            let param = params[key];
            invariant(optional === "?" || param != null, `Missing ":${key}" param`);
            return stringify(param);
        }
        return segment.replace(/\?$/g, "");
    }).filter((segment)=>!!segment);
    return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
    if (typeof pattern === "string") pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
    };
    let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match) return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = compiledParams.reduce((memo2, { paramName, isOptional }, index)=>{
        if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
        }
        const value = captureGroups[index];
        if (isOptional && !value) memo2[paramName] = void 0;
        else memo2[paramName] = (value || "").replace(/%2F/g, "/");
        return memo2;
    }, {});
    return {
        params,
        pathname: matchedPathname,
        pathnameBase,
        pattern
    };
}
function compilePath(path, caseSensitive = false, end = true) {
    warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`);
    let params = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_, paramName, isOptional)=>{
        params.push({
            paramName,
            isOptional: isOptional != null
        });
        return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    });
    if (path.endsWith("*")) {
        params.push({
            paramName: "*"
        });
        regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
    } else if (end) regexpSource += "\\/*$";
    else if (path !== "" && path !== "/") regexpSource += "(?:(?=\\/|$))";
    let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
    return [
        matcher,
        params
    ];
}
function decodePath(value) {
    try {
        return value.split("/").map((v)=>decodeURIComponent(v).replace(/\//g, "%2F")).join("/");
    } catch (error) {
        warning(false, `The URL path "${value}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);
        return value;
    }
}
function stripBasename(pathname, basename) {
    if (basename === "/") return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
    let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
    let nextChar = pathname.charAt(startIndex);
    if (nextChar && nextChar !== "/") return null;
    return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname = "/") {
    let { pathname: toPathname, search = "", hash = "" } = typeof to === "string" ? parsePath(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
        pathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
    };
}
function resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment)=>{
        if (segment === "..") {
            if (segments.length > 1) segments.pop();
        } else if (segment !== ".") segments.push(segment);
    });
    return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
    return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(path)}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
    return matches.filter((match, index)=>index === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches) {
    let pathMatches = getPathContributingMatches(matches);
    return pathMatches.map((match, idx)=>idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {
    let to;
    if (typeof toArg === "string") to = parsePath(toArg);
    else {
        to = {
            ...toArg
        };
        invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
        invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
        invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
    }
    let isEmptyPath = toArg === "" || to.pathname === "";
    let toPathname = isEmptyPath ? "/" : to.pathname;
    let from;
    if (toPathname == null) from = locationPathname;
    else {
        let routePathnameIndex = routePathnames.length - 1;
        if (!isPathRelative && toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/");
            while(toSegments[0] === ".."){
                toSegments.shift();
                routePathnameIndex -= 1;
            }
            to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = resolvePath(to, from);
    let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
    let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
    if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) path.pathname += "/";
    return path;
}
var joinPaths = (paths)=>paths.join("/").replace(/\/\/+/g, "/");
var normalizePathname = (pathname)=>pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
var normalizeSearch = (search)=>!search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
var normalizeHash = (hash)=>!hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
var DataWithResponseInit = class {
    constructor(data2, init){
        this.type = "DataWithResponseInit";
        this.data = data2;
        this.init = init || null;
    }
};
function data(data2, init) {
    return new DataWithResponseInit(data2, typeof init === "number" ? {
        status: init
    } : init);
}
var redirect = (url, init = 302)=>{
    let responseInit = init;
    if (typeof responseInit === "number") responseInit = {
        status: responseInit
    };
    else if (typeof responseInit.status === "undefined") responseInit.status = 302;
    let headers = new Headers(responseInit.headers);
    headers.set("Location", url);
    return new Response(null, {
        ...responseInit,
        headers
    });
};
var redirectDocument = (url, init)=>{
    let response = redirect(url, init);
    response.headers.set("X-Remix-Reload-Document", "true");
    return response;
};
var replace = (url, init)=>{
    let response = redirect(url, init);
    response.headers.set("X-Remix-Replace", "true");
    return response;
};
var ErrorResponseImpl = class {
    constructor(status, statusText, data2, internal = false){
        this.status = status;
        this.statusText = statusText || "";
        this.internal = internal;
        if (data2 instanceof Error) {
            this.data = data2.toString();
            this.error = data2;
        } else this.data = data2;
    }
};
function isRouteErrorResponse(error) {
    return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
// lib/router/router.ts
var validMutationMethodsArr = [
    "POST",
    "PUT",
    "PATCH",
    "DELETE"
];
var validMutationMethods = new Set(validMutationMethodsArr);
var validRequestMethodsArr = [
    "GET",
    ...validMutationMethodsArr
];
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = /* @__PURE__ */ new Set([
    301,
    302,
    303,
    307,
    308
]);
var redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([
    307,
    308
]);
var IDLE_NAVIGATION = {
    state: "idle",
    location: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
};
var IDLE_FETCHER = {
    state: "idle",
    data: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
};
var IDLE_BLOCKER = {
    state: "unblocked",
    proceed: void 0,
    reset: void 0,
    location: void 0
};
var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var defaultMapRouteProperties = (route)=>({
        hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
var TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
var ResetLoaderDataSymbol = Symbol("ResetLoaderData");
function createRouter(init) {
    const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : void 0;
    const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
    invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
    let hydrationRouteProperties2 = init.hydrationRouteProperties || [];
    let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;
    let manifest = {};
    let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);
    let inFlightDataRoutes;
    let basename = init.basename || "/";
    let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;
    let future = {
        unstable_middleware: false,
        ...init.future
    };
    let unlistenHistory = null;
    let subscribers = /* @__PURE__ */ new Set();
    let savedScrollPositions2 = null;
    let getScrollRestorationKey2 = null;
    let getScrollPosition = null;
    let initialScrollRestored = init.hydrationData != null;
    let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
    let initialMatchesIsFOW = false;
    let initialErrors = null;
    if (initialMatches == null && !init.patchRoutesOnNavigation) {
        let error = getInternalRouterError(404, {
            pathname: init.history.location.pathname
        });
        let { matches, route } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches;
        initialErrors = {
            [route.id]: error
        };
    }
    if (initialMatches && !init.hydrationData) {
        let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);
        if (fogOfWar.active) initialMatches = null;
    }
    let initialized;
    if (!initialMatches) {
        initialized = false;
        initialMatches = [];
        let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);
        if (fogOfWar.active && fogOfWar.matches) {
            initialMatchesIsFOW = true;
            initialMatches = fogOfWar.matches;
        }
    } else if (initialMatches.some((m)=>m.route.lazy)) initialized = false;
    else if (!initialMatches.some((m)=>m.route.loader)) initialized = true;
    else {
        let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
        let errors = init.hydrationData ? init.hydrationData.errors : null;
        if (errors) {
            let idx = initialMatches.findIndex((m)=>errors[m.route.id] !== void 0);
            initialized = initialMatches.slice(0, idx + 1).every((m)=>!shouldLoadRouteOnHydration(m.route, loaderData, errors));
        } else initialized = initialMatches.every((m)=>!shouldLoadRouteOnHydration(m.route, loaderData, errors));
    }
    let router;
    let state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? false : null,
        preventScrollReset: false,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
    };
    let pendingAction = "POP" /* Pop */ ;
    let pendingPreventScrollReset = false;
    let pendingNavigationController;
    let pendingViewTransitionEnabled = false;
    let appliedViewTransitions = /* @__PURE__ */ new Map();
    let removePageHideEventListener = null;
    let isUninterruptedRevalidation = false;
    let isRevalidationRequired = false;
    let cancelledFetcherLoads = /* @__PURE__ */ new Set();
    let fetchControllers = /* @__PURE__ */ new Map();
    let incrementingLoadId = 0;
    let pendingNavigationLoadId = -1;
    let fetchReloadIds = /* @__PURE__ */ new Map();
    let fetchRedirectIds = /* @__PURE__ */ new Set();
    let fetchLoadMatches = /* @__PURE__ */ new Map();
    let activeFetchers = /* @__PURE__ */ new Map();
    let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();
    let blockerFunctions = /* @__PURE__ */ new Map();
    let unblockBlockerHistoryUpdate = void 0;
    let pendingRevalidationDfd = null;
    function initialize() {
        unlistenHistory = init.history.listen(({ action: historyAction, location, delta })=>{
            if (unblockBlockerHistoryUpdate) {
                unblockBlockerHistoryUpdate();
                unblockBlockerHistoryUpdate = void 0;
                return;
            }
            warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
            let blockerKey = shouldBlockNavigation({
                currentLocation: state.location,
                nextLocation: location,
                historyAction
            });
            if (blockerKey && delta != null) {
                let nextHistoryUpdatePromise = new Promise((resolve)=>{
                    unblockBlockerHistoryUpdate = resolve;
                });
                init.history.go(delta * -1);
                updateBlocker(blockerKey, {
                    state: "blocked",
                    location,
                    proceed () {
                        updateBlocker(blockerKey, {
                            state: "proceeding",
                            proceed: void 0,
                            reset: void 0,
                            location
                        });
                        nextHistoryUpdatePromise.then(()=>init.history.go(delta));
                    },
                    reset () {
                        let blockers = new Map(state.blockers);
                        blockers.set(blockerKey, IDLE_BLOCKER);
                        updateState({
                            blockers
                        });
                    }
                });
                return;
            }
            return startNavigation(historyAction, location);
        });
        if (isBrowser2) {
            restoreAppliedTransitions(routerWindow, appliedViewTransitions);
            let _saveAppliedTransitions = ()=>persistAppliedTransitions(routerWindow, appliedViewTransitions);
            routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
            removePageHideEventListener = ()=>routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
        }
        if (!state.initialized) startNavigation("POP" /* Pop */ , state.location, {
            initialHydration: true
        });
        return router;
    }
    function dispose() {
        if (unlistenHistory) unlistenHistory();
        if (removePageHideEventListener) removePageHideEventListener();
        subscribers.clear();
        pendingNavigationController && pendingNavigationController.abort();
        state.fetchers.forEach((_, key)=>deleteFetcher(key));
        state.blockers.forEach((_, key)=>deleteBlocker(key));
    }
    function subscribe(fn) {
        subscribers.add(fn);
        return ()=>subscribers.delete(fn);
    }
    function updateState(newState, opts = {}) {
        state = {
            ...state,
            ...newState
        };
        let unmountedFetchers = [];
        let mountedFetchers = [];
        state.fetchers.forEach((fetcher, key)=>{
            if (fetcher.state === "idle") {
                if (fetchersQueuedForDeletion.has(key)) unmountedFetchers.push(key);
                else mountedFetchers.push(key);
            }
        });
        fetchersQueuedForDeletion.forEach((key)=>{
            if (!state.fetchers.has(key) && !fetchControllers.has(key)) unmountedFetchers.push(key);
        });
        [
            ...subscribers
        ].forEach((subscriber)=>subscriber(state, {
                deletedFetchers: unmountedFetchers,
                viewTransitionOpts: opts.viewTransitionOpts,
                flushSync: opts.flushSync === true
            }));
        unmountedFetchers.forEach((key)=>deleteFetcher(key));
        mountedFetchers.forEach((key)=>state.fetchers.delete(key));
    }
    function completeNavigation(location, newState, { flushSync } = {}) {
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && location.state?._isRedirect !== true;
        let actionData;
        if (newState.actionData) {
            if (Object.keys(newState.actionData).length > 0) actionData = newState.actionData;
            else actionData = null;
        } else if (isActionReload) actionData = state.actionData;
        else actionData = null;
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        let blockers = state.blockers;
        if (blockers.size > 0) {
            blockers = new Map(blockers);
            blockers.forEach((_, k)=>blockers.set(k, IDLE_BLOCKER));
        }
        let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;
        if (inFlightDataRoutes) {
            dataRoutes = inFlightDataRoutes;
            inFlightDataRoutes = void 0;
        }
        if (isUninterruptedRevalidation) ;
        else if (pendingAction === "POP" /* Pop */ ) ;
        else if (pendingAction === "PUSH" /* Push */ ) init.history.push(location, location.state);
        else if (pendingAction === "REPLACE" /* Replace */ ) init.history.replace(location, location.state);
        let viewTransitionOpts;
        if (pendingAction === "POP" /* Pop */ ) {
            let priorPaths = appliedViewTransitions.get(state.location.pathname);
            if (priorPaths && priorPaths.has(location.pathname)) viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
            else if (appliedViewTransitions.has(location.pathname)) viewTransitionOpts = {
                currentLocation: location,
                nextLocation: state.location
            };
        } else if (pendingViewTransitionEnabled) {
            let toPaths = appliedViewTransitions.get(state.location.pathname);
            if (toPaths) toPaths.add(location.pathname);
            else {
                toPaths = /* @__PURE__ */ new Set([
                    location.pathname
                ]);
                appliedViewTransitions.set(state.location.pathname, toPaths);
            }
            viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
        }
        updateState({
            ...newState,
            // matches, errors, fetchers go through as-is
            actionData,
            loaderData,
            historyAction: pendingAction,
            location,
            initialized: true,
            navigation: IDLE_NAVIGATION,
            revalidation: "idle",
            restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
            preventScrollReset,
            blockers
        }, {
            viewTransitionOpts,
            flushSync: flushSync === true
        });
        pendingAction = "POP" /* Pop */ ;
        pendingPreventScrollReset = false;
        pendingViewTransitionEnabled = false;
        isUninterruptedRevalidation = false;
        isRevalidationRequired = false;
        pendingRevalidationDfd?.resolve();
        pendingRevalidationDfd = null;
    }
    async function navigate(to, opts) {
        if (typeof to === "number") {
            init.history.go(to);
            return;
        }
        let normalizedPath = normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);
        let { path, submission, error } = normalizeNavigateOptions(false, normalizedPath, opts);
        let currentLocation = state.location;
        let nextLocation = createLocation(state.location, path, opts && opts.state);
        nextLocation = {
            ...nextLocation,
            ...init.history.encodeLocation(nextLocation)
        };
        let userReplace = opts && opts.replace != null ? opts.replace : void 0;
        let historyAction = "PUSH" /* Push */ ;
        if (userReplace === true) historyAction = "REPLACE" /* Replace */ ;
        else if (userReplace === false) ;
        else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) historyAction = "REPLACE" /* Replace */ ;
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
        let flushSync = (opts && opts.flushSync) === true;
        let blockerKey = shouldBlockNavigation({
            currentLocation,
            nextLocation,
            historyAction
        });
        if (blockerKey) {
            updateBlocker(blockerKey, {
                state: "blocked",
                location: nextLocation,
                proceed () {
                    updateBlocker(blockerKey, {
                        state: "proceeding",
                        proceed: void 0,
                        reset: void 0,
                        location: nextLocation
                    });
                    navigate(to, opts);
                },
                reset () {
                    let blockers = new Map(state.blockers);
                    blockers.set(blockerKey, IDLE_BLOCKER);
                    updateState({
                        blockers
                    });
                }
            });
            return;
        }
        await startNavigation(historyAction, nextLocation, {
            submission,
            // Send through the formData serialization error if we have one so we can
            // render at the right error boundary after we match routes
            pendingError: error,
            preventScrollReset,
            replace: opts && opts.replace,
            enableViewTransition: opts && opts.viewTransition,
            flushSync
        });
    }
    function revalidate() {
        if (!pendingRevalidationDfd) pendingRevalidationDfd = createDeferred();
        interruptActiveLoads();
        updateState({
            revalidation: "loading"
        });
        let promise = pendingRevalidationDfd.promise;
        if (state.navigation.state === "submitting") return promise;
        if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
                startUninterruptedRevalidation: true
            });
            return promise;
        }
        startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation,
            // Proxy through any rending view transition
            enableViewTransition: pendingViewTransitionEnabled === true
        });
        return promise;
    }
    async function startNavigation(historyAction, location, opts) {
        pendingNavigationController && pendingNavigationController.abort();
        pendingNavigationController = null;
        pendingAction = historyAction;
        isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
        saveScrollPosition(state.location, state.matches);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let loadingNavigation = opts && opts.overrideNavigation;
        let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? // `matchRoutes()` has already been called if we're in here via `router.initialize()`
        state.matches : matchRoutes(routesToUse, location, basename);
        let flushSync = (opts && opts.flushSync) === true;
        if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
            completeNavigation(location, {
                matches
            }, {
                flushSync
            });
            return;
        }
        let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);
        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;
        if (!matches) {
            let { error, notFoundMatches, route } = handleNavigational404(location.pathname);
            completeNavigation(location, {
                matches: notFoundMatches,
                loaderData: {},
                errors: {
                    [route.id]: error
                }
            }, {
                flushSync
            });
            return;
        }
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);
        let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);
        let pendingActionResult;
        if (opts && opts.pendingError) pendingActionResult = [
            findNearestBoundary(matches).route.id,
            {
                type: "error" /* error */ ,
                error: opts.pendingError
            }
        ];
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
            let actionResult = await handleAction(request, location, opts.submission, matches, scopedContext, fogOfWar.active, opts && opts.initialHydration === true, {
                replace: opts.replace,
                flushSync
            });
            if (actionResult.shortCircuited) return;
            if (actionResult.pendingActionResult) {
                let [routeId, result] = actionResult.pendingActionResult;
                if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {
                    pendingNavigationController = null;
                    completeNavigation(location, {
                        matches: actionResult.matches,
                        loaderData: {},
                        errors: {
                            [routeId]: result.error
                        }
                    });
                    return;
                }
            }
            matches = actionResult.matches || matches;
            pendingActionResult = actionResult.pendingActionResult;
            loadingNavigation = getLoadingNavigation(location, opts.submission);
            flushSync = false;
            fogOfWar.active = false;
            request = createClientSideRequest(init.history, request.url, request.signal);
        }
        let { shortCircuited, matches: updatedMatches, loaderData, errors } = await handleLoaders(request, location, matches, scopedContext, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);
        if (shortCircuited) return;
        pendingNavigationController = null;
        completeNavigation(location, {
            matches: updatedMatches || matches,
            ...getActionDataForCommit(pendingActionResult),
            loaderData,
            errors
        });
    }
    async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {
        interruptActiveLoads();
        let navigation = getSubmittingNavigation(location, submission);
        updateState({
            navigation
        }, {
            flushSync: opts.flushSync === true
        });
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);
            if (discoverResult.type === "aborted") return {
                shortCircuited: true
            };
            else if (discoverResult.type === "error") {
                let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
                return {
                    matches: discoverResult.partialMatches,
                    pendingActionResult: [
                        boundaryId,
                        {
                            type: "error" /* error */ ,
                            error: discoverResult.error
                        }
                    ]
                };
            } else if (!discoverResult.matches) {
                let { notFoundMatches, error, route } = handleNavigational404(location.pathname);
                return {
                    matches: notFoundMatches,
                    pendingActionResult: [
                        route.id,
                        {
                            type: "error" /* error */ ,
                            error
                        }
                    ]
                };
            } else matches = discoverResult.matches;
        }
        let result;
        let actionMatch = getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy) result = {
            type: "error" /* error */ ,
            error: getInternalRouterError(405, {
                method: request.method,
                pathname: location.pathname,
                routeId: actionMatch.route.id
            })
        };
        else {
            let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, actionMatch, initialHydration ? [] : hydrationRouteProperties2, scopedContext);
            let results = await callDataStrategy(request, dsMatches, scopedContext, null);
            result = results[actionMatch.route.id];
            if (!result) {
                for (let match of matches)if (results[match.route.id]) {
                    result = results[match.route.id];
                    break;
                }
            }
            if (request.signal.aborted) return {
                shortCircuited: true
            };
        }
        if (isRedirectResult(result)) {
            let replace2;
            if (opts && opts.replace != null) replace2 = opts.replace;
            else {
                let location2 = normalizeRedirectLocation(result.response.headers.get("Location"), new URL(request.url), basename);
                replace2 = location2 === state.location.pathname + state.location.search;
            }
            await startRedirectNavigation(request, result, true, {
                submission,
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
            if ((opts && opts.replace) !== true) pendingAction = "PUSH" /* Push */ ;
            return {
                matches,
                pendingActionResult: [
                    boundaryMatch.route.id,
                    result,
                    actionMatch.route.id
                ]
            };
        }
        return {
            matches,
            pendingActionResult: [
                actionMatch.route.id,
                result
            ]
        };
    }
    async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {
        let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
        let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
        let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;
        if (isFogOfWar) {
            if (shouldUpdateNavigationState) {
                let actionData = getUpdatedActionData(pendingActionResult);
                updateState({
                    navigation: loadingNavigation,
                    ...actionData !== void 0 ? {
                        actionData
                    } : {}
                }, {
                    flushSync
                });
            }
            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);
            if (discoverResult.type === "aborted") return {
                shortCircuited: true
            };
            else if (discoverResult.type === "error") {
                let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
                return {
                    matches: discoverResult.partialMatches,
                    loaderData: {},
                    errors: {
                        [boundaryId]: discoverResult.error
                    }
                };
            } else if (!discoverResult.matches) {
                let { error, notFoundMatches, route } = handleNavigational404(location.pathname);
                return {
                    matches: notFoundMatches,
                    loaderData: {},
                    errors: {
                        [route.id]: error
                    }
                };
            } else matches = discoverResult.matches;
        }
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let { dsMatches, revalidatingFetchers } = getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, activeSubmission, location, initialHydration ? [] : hydrationRouteProperties2, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);
        pendingNavigationLoadId = ++incrementingLoadId;
        if (!init.dataStrategy && !dsMatches.some((m)=>m.shouldLoad) && revalidatingFetchers.length === 0) {
            let updatedFetchers2 = markFetchRedirectsDone();
            completeNavigation(location, {
                matches,
                loaderData: {},
                // Commit pending error if we're short circuiting
                errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
                    [pendingActionResult[0]]: pendingActionResult[1].error
                } : null,
                ...getActionDataForCommit(pendingActionResult),
                ...updatedFetchers2 ? {
                    fetchers: new Map(state.fetchers)
                } : {}
            }, {
                flushSync
            });
            return {
                shortCircuited: true
            };
        }
        if (shouldUpdateNavigationState) {
            let updates = {};
            if (!isFogOfWar) {
                updates.navigation = loadingNavigation;
                let actionData = getUpdatedActionData(pendingActionResult);
                if (actionData !== void 0) updates.actionData = actionData;
            }
            if (revalidatingFetchers.length > 0) updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);
            updateState(updates, {
                flushSync
            });
        }
        revalidatingFetchers.forEach((rf)=>{
            abortFetcher(rf.key);
            if (rf.controller) fetchControllers.set(rf.key, rf.controller);
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((f)=>abortFetcher(f.key));
        if (pendingNavigationController) pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, request, scopedContext);
        if (request.signal.aborted) return {
            shortCircuited: true
        };
        if (pendingNavigationController) pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        revalidatingFetchers.forEach((rf)=>fetchControllers.delete(rf.key));
        let redirect2 = findRedirect(loaderResults);
        if (redirect2) {
            await startRedirectNavigation(request, redirect2.result, true, {
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        redirect2 = findRedirect(fetcherResults);
        if (redirect2) {
            fetchRedirectIds.add(redirect2.key);
            await startRedirectNavigation(request, redirect2.result, true, {
                replace: replace2
            });
            return {
                shortCircuited: true
            };
        }
        let { loaderData, errors } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);
        if (initialHydration && state.errors) errors = {
            ...state.errors,
            ...errors
        };
        let updatedFetchers = markFetchRedirectsDone();
        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
        let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return {
            matches,
            loaderData,
            errors,
            ...shouldUpdateFetchers ? {
                fetchers: new Map(state.fetchers)
            } : {}
        };
    }
    function getUpdatedActionData(pendingActionResult) {
        if (pendingActionResult && !isErrorResult(pendingActionResult[1])) return {
            [pendingActionResult[0]]: pendingActionResult[1].data
        };
        else if (state.actionData) {
            if (Object.keys(state.actionData).length === 0) return null;
            else return state.actionData;
        }
    }
    function getUpdatedRevalidatingFetchers(revalidatingFetchers) {
        revalidatingFetchers.forEach((rf)=>{
            let fetcher = state.fetchers.get(rf.key);
            let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
            state.fetchers.set(rf.key, revalidatingFetcher);
        });
        return new Map(state.fetchers);
    }
    async function fetch2(key, routeId, href2, opts) {
        abortFetcher(key);
        let flushSync = (opts && opts.flushSync) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let normalizedPath = normalizeTo(state.location, state.matches, basename, href2, routeId, opts?.relative);
        let matches = matchRoutes(routesToUse, normalizedPath, basename);
        let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);
        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;
        if (!matches) {
            setFetcherError(key, routeId, getInternalRouterError(404, {
                pathname: normalizedPath
            }), {
                flushSync
            });
            return;
        }
        let { path, submission, error } = normalizeNavigateOptions(true, normalizedPath, opts);
        if (error) {
            setFetcherError(key, routeId, error, {
                flushSync
            });
            return;
        }
        let match = getTargetMatch(matches, path);
        let scopedContext = new unstable_RouterContextProvider(init.unstable_getContext ? await init.unstable_getContext() : void 0);
        let preventScrollReset = (opts && opts.preventScrollReset) === true;
        if (submission && isMutationMethod(submission.formMethod)) {
            await handleFetcherAction(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);
            return;
        }
        fetchLoadMatches.set(key, {
            routeId,
            path
        });
        await handleFetcherLoader(key, routeId, path, match, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);
    }
    async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
        interruptActiveLoads();
        fetchLoadMatches.delete(key);
        function detectAndHandle405Error(m) {
            if (!m.route.action && !m.route.lazy) {
                let error = getInternalRouterError(405, {
                    method: submission.formMethod,
                    pathname: path,
                    routeId
                });
                setFetcherError(key, routeId, error, {
                    flushSync
                });
                return true;
            }
            return false;
        }
        if (!isFogOfWar && detectAndHandle405Error(match)) return;
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
            flushSync
        });
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal, key);
            if (discoverResult.type === "aborted") return;
            else if (discoverResult.type === "error") {
                setFetcherError(key, routeId, discoverResult.error, {
                    flushSync
                });
                return;
            } else if (!discoverResult.matches) {
                setFetcherError(key, routeId, getInternalRouterError(404, {
                    pathname: path
                }), {
                    flushSync
                });
                return;
            } else {
                requestMatches = discoverResult.matches;
                match = getTargetMatch(requestMatches, path);
                if (detectAndHandle405Error(match)) return;
            }
        }
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let fetchMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, requestMatches, match, hydrationRouteProperties2, scopedContext);
        let actionResults = await callDataStrategy(fetchRequest, fetchMatches, scopedContext, key);
        let actionResult = actionResults[match.route.id];
        if (fetchRequest.signal.aborted) {
            if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
            return;
        }
        if (fetchersQueuedForDeletion.has(key)) {
            if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
                updateFetcherState(key, getDoneFetcher(void 0));
                return;
            }
        } else {
            if (isRedirectResult(actionResult)) {
                fetchControllers.delete(key);
                if (pendingNavigationLoadId > originatingLoadId) {
                    updateFetcherState(key, getDoneFetcher(void 0));
                    return;
                } else {
                    fetchRedirectIds.add(key);
                    updateFetcherState(key, getLoadingFetcher(submission));
                    return startRedirectNavigation(fetchRequest, actionResult, false, {
                        fetcherSubmission: submission,
                        preventScrollReset
                    });
                }
            }
            if (isErrorResult(actionResult)) {
                setFetcherError(key, routeId, actionResult.error);
                return;
            }
        }
        let nextLocation = state.navigation.location || state.location;
        let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
        invariant(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = getLoadingFetcher(submission, actionResult.data);
        state.fetchers.set(key, loadFetcher);
        let { dsMatches, revalidatingFetchers } = getMatchesToLoad(revalidationRequest, scopedContext, mapRouteProperties2, manifest, init.history, state, matches, submission, nextLocation, hydrationRouteProperties2, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [
            match.route.id,
            actionResult
        ]);
        revalidatingFetchers.filter((rf)=>rf.key !== key).forEach((rf)=>{
            let staleKey = rf.key;
            let existingFetcher2 = state.fetchers.get(staleKey);
            let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
            state.fetchers.set(staleKey, revalidatingFetcher);
            abortFetcher(staleKey);
            if (rf.controller) fetchControllers.set(staleKey, rf.controller);
        });
        updateState({
            fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((rf)=>abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, revalidationRequest, scopedContext);
        if (abortController.signal.aborted) return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        fetchReloadIds.delete(key);
        fetchControllers.delete(key);
        revalidatingFetchers.forEach((r)=>fetchControllers.delete(r.key));
        let redirect2 = findRedirect(loaderResults);
        if (redirect2) return startRedirectNavigation(revalidationRequest, redirect2.result, false, {
            preventScrollReset
        });
        redirect2 = findRedirect(fetcherResults);
        if (redirect2) {
            fetchRedirectIds.add(redirect2.key);
            return startRedirectNavigation(revalidationRequest, redirect2.result, false, {
                preventScrollReset
            });
        }
        let { loaderData, errors } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);
        if (state.fetchers.has(key)) {
            let doneFetcher = getDoneFetcher(actionResult.data);
            state.fetchers.set(key, doneFetcher);
        }
        abortStaleFetchLoads(loadId);
        if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
            invariant(pendingAction, "Expected pending action");
            pendingNavigationController && pendingNavigationController.abort();
            completeNavigation(state.navigation.location, {
                matches,
                loaderData,
                errors,
                fetchers: new Map(state.fetchers)
            });
        } else {
            updateState({
                errors,
                loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),
                fetchers: new Map(state.fetchers)
            });
            isRevalidationRequired = false;
        }
    }
    async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {
            flushSync
        });
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
        if (isFogOfWar) {
            let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal, key);
            if (discoverResult.type === "aborted") return;
            else if (discoverResult.type === "error") {
                setFetcherError(key, routeId, discoverResult.error, {
                    flushSync
                });
                return;
            } else if (!discoverResult.matches) {
                setFetcherError(key, routeId, getInternalRouterError(404, {
                    pathname: path
                }), {
                    flushSync
                });
                return;
            } else {
                matches = discoverResult.matches;
                match = getTargetMatch(matches, path);
            }
        }
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, matches, match, hydrationRouteProperties2, scopedContext);
        let results = await callDataStrategy(fetchRequest, dsMatches, scopedContext, key);
        let result = results[match.route.id];
        if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
        if (fetchRequest.signal.aborted) return;
        if (fetchersQueuedForDeletion.has(key)) {
            updateFetcherState(key, getDoneFetcher(void 0));
            return;
        }
        if (isRedirectResult(result)) {
            if (pendingNavigationLoadId > originatingLoadId) {
                updateFetcherState(key, getDoneFetcher(void 0));
                return;
            } else {
                fetchRedirectIds.add(key);
                await startRedirectNavigation(fetchRequest, result, false, {
                    preventScrollReset
                });
                return;
            }
        }
        if (isErrorResult(result)) {
            setFetcherError(key, routeId, result.error);
            return;
        }
        updateFetcherState(key, getDoneFetcher(result.data));
    }
    async function startRedirectNavigation(request, redirect2, isNavigation, { submission, fetcherSubmission, preventScrollReset, replace: replace2 } = {}) {
        if (redirect2.response.headers.has("X-Remix-Revalidate")) isRevalidationRequired = true;
        let location = redirect2.response.headers.get("Location");
        invariant(location, "Expected a Location header on the redirect Response");
        location = normalizeRedirectLocation(location, new URL(request.url), basename);
        let redirectLocation = createLocation(state.location, location, {
            _isRedirect: true
        });
        if (isBrowser2) {
            let isDocumentReload = false;
            if (redirect2.response.headers.has("X-Remix-Reload-Document")) isDocumentReload = true;
            else if (ABSOLUTE_URL_REGEX.test(location)) {
                const url = init.history.createURL(location);
                isDocumentReload = url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
                stripBasename(url.pathname, basename) == null;
            }
            if (isDocumentReload) {
                if (replace2) routerWindow.location.replace(location);
                else routerWindow.location.assign(location);
                return;
            }
        }
        pendingNavigationController = null;
        let redirectNavigationType = replace2 === true || redirect2.response.headers.has("X-Remix-Replace") ? "REPLACE" /* Replace */  : "PUSH" /* Push */ ;
        let { formMethod, formAction, formEncType } = state.navigation;
        if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) submission = getSubmissionFromNavigation(state.navigation);
        let activeSubmission = submission || fetcherSubmission;
        if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) await startNavigation(redirectNavigationType, redirectLocation, {
            submission: {
                ...activeSubmission,
                formAction: location
            },
            // Preserve these flags across redirects
            preventScrollReset: preventScrollReset || pendingPreventScrollReset,
            enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
        });
        else {
            let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
            await startNavigation(redirectNavigationType, redirectLocation, {
                overrideNavigation,
                // Send fetcher submissions through for shouldRevalidate
                fetcherSubmission,
                // Preserve these flags across redirects
                preventScrollReset: preventScrollReset || pendingPreventScrollReset,
                enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
            });
        }
    }
    async function callDataStrategy(request, matches, scopedContext, fetcherKey) {
        let results;
        let dataResults = {};
        try {
            results = await callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, false);
        } catch (e) {
            matches.filter((m)=>m.shouldLoad).forEach((m)=>{
                dataResults[m.route.id] = {
                    type: "error" /* error */ ,
                    error: e
                };
            });
            return dataResults;
        }
        for (let [routeId, result] of Object.entries(results))if (isRedirectDataStrategyResult(result)) {
            let response = result.result;
            dataResults[routeId] = {
                type: "redirect" /* redirect */ ,
                response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)
            };
        } else dataResults[routeId] = await convertDataStrategyResultToDataResult(result);
        return dataResults;
    }
    async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {
        let loaderResultsPromise = callDataStrategy(request, matches, scopedContext, null);
        let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async (f)=>{
            if (f.matches && f.match && f.request && f.controller) {
                let results = await callDataStrategy(f.request, f.matches, scopedContext, f.key);
                let result = results[f.match.route.id];
                return {
                    [f.key]: result
                };
            } else return Promise.resolve({
                [f.key]: {
                    type: "error" /* error */ ,
                    error: getInternalRouterError(404, {
                        pathname: f.path
                    })
                }
            });
        }));
        let loaderResults = await loaderResultsPromise;
        let fetcherResults = (await fetcherResultsPromise).reduce((acc, r)=>Object.assign(acc, r), {});
        return {
            loaderResults,
            fetcherResults
        };
    }
    function interruptActiveLoads() {
        isRevalidationRequired = true;
        fetchLoadMatches.forEach((_, key)=>{
            if (fetchControllers.has(key)) cancelledFetcherLoads.add(key);
            abortFetcher(key);
        });
    }
    function updateFetcherState(key, fetcher, opts = {}) {
        state.fetchers.set(key, fetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function setFetcherError(key, routeId, error, opts = {}) {
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key);
        updateState({
            errors: {
                [boundaryMatch.route.id]: error
            },
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function getFetcher(key) {
        activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
        if (fetchersQueuedForDeletion.has(key)) fetchersQueuedForDeletion.delete(key);
        return state.fetchers.get(key) || IDLE_FETCHER;
    }
    function deleteFetcher(key) {
        let fetcher = state.fetchers.get(key);
        if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) abortFetcher(key);
        fetchLoadMatches.delete(key);
        fetchReloadIds.delete(key);
        fetchRedirectIds.delete(key);
        fetchersQueuedForDeletion.delete(key);
        cancelledFetcherLoads.delete(key);
        state.fetchers.delete(key);
    }
    function queueFetcherForDeletion(key) {
        let count = (activeFetchers.get(key) || 0) - 1;
        if (count <= 0) {
            activeFetchers.delete(key);
            fetchersQueuedForDeletion.add(key);
        } else activeFetchers.set(key, count);
        updateState({
            fetchers: new Map(state.fetchers)
        });
    }
    function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        if (controller) {
            controller.abort();
            fetchControllers.delete(key);
        }
    }
    function markFetchersDone(keys) {
        for (let key of keys){
            let fetcher = getFetcher(key);
            let doneFetcher = getDoneFetcher(fetcher.data);
            state.fetchers.set(key, doneFetcher);
        }
    }
    function markFetchRedirectsDone() {
        let doneKeys = [];
        let updatedFetchers = false;
        for (let key of fetchRedirectIds){
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, `Expected fetcher: ${key}`);
            if (fetcher.state === "loading") {
                fetchRedirectIds.delete(key);
                doneKeys.push(key);
                updatedFetchers = true;
            }
        }
        markFetchersDone(doneKeys);
        return updatedFetchers;
    }
    function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id] of fetchReloadIds)if (id < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, `Expected fetcher: ${key}`);
            if (fetcher.state === "loading") {
                abortFetcher(key);
                fetchReloadIds.delete(key);
                yeetedKeys.push(key);
            }
        }
        markFetchersDone(yeetedKeys);
        return yeetedKeys.length > 0;
    }
    function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        if (blockerFunctions.get(key) !== fn) blockerFunctions.set(key, fn);
        return blocker;
    }
    function deleteBlocker(key) {
        state.blockers.delete(key);
        blockerFunctions.delete(key);
    }
    function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);
        let blockers = new Map(state.blockers);
        blockers.set(key, newBlocker);
        updateState({
            blockers
        });
    }
    function shouldBlockNavigation({ currentLocation, nextLocation, historyAction }) {
        if (blockerFunctions.size === 0) return;
        if (blockerFunctions.size > 1) warning(false, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries());
        let [blockerKey, blockerFunction] = entries[entries.length - 1];
        let blocker = state.blockers.get(blockerKey);
        if (blocker && blocker.state === "proceeding") return;
        if (blockerFunction({
            currentLocation,
            nextLocation,
            historyAction
        })) return blockerKey;
    }
    function handleNavigational404(pathname) {
        let error = getInternalRouterError(404, {
            pathname
        });
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let { matches, route } = getShortCircuitMatches(routesToUse);
        return {
            notFoundMatches: matches,
            route,
            error
        };
    }
    function enableScrollRestoration(positions, getPosition, getKey) {
        savedScrollPositions2 = positions;
        getScrollPosition = getPosition;
        getScrollRestorationKey2 = getKey || null;
        if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
            initialScrollRestored = true;
            let y = getSavedScrollPosition(state.location, state.matches);
            if (y != null) updateState({
                restoreScrollPosition: y
            });
        }
        return ()=>{
            savedScrollPositions2 = null;
            getScrollPosition = null;
            getScrollRestorationKey2 = null;
        };
    }
    function getScrollKey(location, matches) {
        if (getScrollRestorationKey2) {
            let key = getScrollRestorationKey2(location, matches.map((m)=>convertRouteMatchToUiMatch(m, state.loaderData)));
            return key || location.key;
        }
        return location.key;
    }
    function saveScrollPosition(location, matches) {
        if (savedScrollPositions2 && getScrollPosition) {
            let key = getScrollKey(location, matches);
            savedScrollPositions2[key] = getScrollPosition();
        }
    }
    function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions2) {
            let key = getScrollKey(location, matches);
            let y = savedScrollPositions2[key];
            if (typeof y === "number") return y;
        }
        return null;
    }
    function checkFogOfWar(matches, routesToUse, pathname) {
        if (init.patchRoutesOnNavigation) {
            if (!matches) {
                let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
                return {
                    active: true,
                    matches: fogMatches || []
                };
            } else if (Object.keys(matches[0].params).length > 0) {
                let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
                return {
                    active: true,
                    matches: partialMatches
                };
            }
        }
        return {
            active: false,
            matches: null
        };
    }
    async function discoverRoutes(matches, pathname, signal, fetcherKey) {
        if (!init.patchRoutesOnNavigation) return {
            type: "success",
            matches
        };
        let partialMatches = matches;
        while(true){
            let isNonHMR = inFlightDataRoutes == null;
            let routesToUse = inFlightDataRoutes || dataRoutes;
            let localManifest = manifest;
            try {
                await init.patchRoutesOnNavigation({
                    signal,
                    path: pathname,
                    matches: partialMatches,
                    fetcherKey,
                    patch: (routeId, children)=>{
                        if (signal.aborted) return;
                        patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);
                    }
                });
            } catch (e) {
                return {
                    type: "error",
                    error: e,
                    partialMatches
                };
            } finally{
                if (isNonHMR && !signal.aborted) dataRoutes = [
                    ...dataRoutes
                ];
            }
            if (signal.aborted) return {
                type: "aborted"
            };
            let newMatches = matchRoutes(routesToUse, pathname, basename);
            if (newMatches) return {
                type: "success",
                matches: newMatches
            };
            let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
            if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i)=>m.route.id === newPartialMatches[i].route.id)) return {
                type: "success",
                matches: null
            };
            partialMatches = newPartialMatches;
        }
    }
    function _internalSetRoutes(newRoutes) {
        manifest = {};
        inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
    }
    function patchRoutes(routeId, children) {
        let isNonHMR = inFlightDataRoutes == null;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);
        if (isNonHMR) {
            dataRoutes = [
                ...dataRoutes
            ];
            updateState({});
        }
    }
    router = {
        get basename () {
            return basename;
        },
        get future () {
            return future;
        },
        get state () {
            return state;
        },
        get routes () {
            return dataRoutes;
        },
        get window () {
            return routerWindow;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch: fetch2,
        revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to)=>init.history.createHref(to),
        encodeLocation: (to)=>init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher: queueFetcherForDeletion,
        dispose,
        getBlocker,
        deleteBlocker,
        patchRoutes,
        _internalFetchControllers: fetchControllers,
        // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
    };
    return router;
}
function createStaticHandler(routes, opts) {
    invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
    let manifest = {};
    let basename = (opts ? opts.basename : null) || "/";
    let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;
    let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties2, void 0, manifest);
    async function query(request, { requestContext, filterMatchesToLoad, skipLoaderErrorBubbling, skipRevalidation, dataStrategy, unstable_respond: respond } = {}) {
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();
        if (!isValidMethod(method) && method !== "HEAD") {
            let error = getInternalRouterError(405, {
                method
            });
            let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);
            let staticContext = {
                basename,
                location,
                matches: methodNotAllowedMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {}
            };
            return respond ? respond(staticContext) : staticContext;
        } else if (!matches) {
            let error = getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);
            let staticContext = {
                basename,
                location,
                matches: notFoundMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {}
            };
            return respond ? respond(staticContext) : staticContext;
        }
        if (respond && matches.some((m)=>m.route.unstable_middleware || typeof m.route.lazy === "object" && m.route.lazy.unstable_middleware)) {
            invariant(requestContext instanceof unstable_RouterContextProvider, "When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`");
            try {
                await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);
                let renderedStaticContext;
                let response = await runMiddlewarePipeline({
                    request,
                    matches,
                    params: matches[0].params,
                    // If we're calling middleware then it must be enabled so we can cast
                    // this to the proper type knowing it's not an `AppLoadContext`
                    context: requestContext
                }, true, async ()=>{
                    let result2 = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, filterMatchesToLoad || null, skipRevalidation === true);
                    if (isResponse(result2)) return result2;
                    renderedStaticContext = {
                        location,
                        basename,
                        ...result2
                    };
                    let res = await respond(renderedStaticContext);
                    return res;
                }, async (error, routeId)=>{
                    if (isResponse(error)) return error;
                    if (renderedStaticContext) {
                        if (routeId in renderedStaticContext.loaderData) renderedStaticContext.loaderData[routeId] = void 0;
                        return respond(getStaticContextFromError(dataRoutes, renderedStaticContext, error, findNearestBoundary(matches, routeId).route.id));
                    } else {
                        let loaderIdx = matches.findIndex((m)=>m.route.loader);
                        let boundary = loaderIdx >= 0 ? findNearestBoundary(matches, matches[loaderIdx].route.id) : findNearestBoundary(matches);
                        return respond({
                            matches,
                            location,
                            basename,
                            loaderData: {},
                            actionData: null,
                            errors: {
                                [boundary.route.id]: error
                            },
                            statusCode: isRouteErrorResponse(error) ? error.status : 500,
                            actionHeaders: {},
                            loaderHeaders: {}
                        });
                    }
                });
                invariant(isResponse(response), "Expected a response in query()");
                return response;
            } catch (e) {
                if (isResponse(e)) return e;
                throw e;
            }
        }
        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, filterMatchesToLoad || null, skipRevalidation === true);
        if (isResponse(result)) return result;
        return {
            location,
            basename,
            ...result
        };
    }
    async function queryRoute(request, { routeId, requestContext, dataStrategy, unstable_respond: respond } = {}) {
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();
        if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") throw getInternalRouterError(405, {
            method
        });
        else if (!matches) throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        let match = routeId ? matches.find((m)=>m.route.id === routeId) : getTargetMatch(matches, location);
        if (routeId && !match) throw getInternalRouterError(403, {
            pathname: location.pathname,
            routeId
        });
        else if (!match) throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        if (respond && matches.some((m)=>m.route.unstable_middleware || typeof m.route.lazy === "object" && m.route.lazy.unstable_middleware)) {
            invariant(requestContext instanceof unstable_RouterContextProvider, "When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`");
            await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);
            let response = await runMiddlewarePipeline({
                request,
                matches,
                params: matches[0].params,
                // If we're calling middleware then it must be enabled so we can cast
                // this to the proper type knowing it's not an `AppLoadContext`
                context: requestContext
            }, true, async ()=>{
                let result2 = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match, null, false);
                if (isResponse(result2)) return respond(result2);
                let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;
                if (error2 !== void 0) throw error2;
                let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];
                return typeof value === "string" ? new Response(value) : Response.json(value);
            }, (error2)=>{
                if (isResponse(error2)) return respond(error2);
                return new Response(String(error2), {
                    status: 500,
                    statusText: "Unexpected Server Error"
                });
            });
            return response;
        }
        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match, null, false);
        if (isResponse(result)) return result;
        let error = result.errors ? Object.values(result.errors)[0] : void 0;
        if (error !== void 0) throw error;
        if (result.actionData) return Object.values(result.actionData)[0];
        if (result.loaderData) return Object.values(result.loaderData)[0];
        return void 0;
    }
    async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {
        invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
            if (isMutationMethod(request.method)) {
                let result2 = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null, filterMatchesToLoad, skipRevalidation);
                return result2;
            }
            let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad);
            return isResponse(result) ? result : {
                ...result,
                actionData: null,
                actionHeaders: {}
            };
        } catch (e) {
            if (isDataStrategyResult(e) && isResponse(e.result)) {
                if (e.type === "error" /* error */ ) throw e.result;
                return e.result;
            }
            if (isRedirectResponse(e)) return e;
            throw e;
        }
    }
    async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
            let error = getInternalRouterError(405, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: actionMatch.route.id
            });
            if (isRouteRequest) throw error;
            result = {
                type: "error" /* error */ ,
                error
            };
        } else {
            let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, actionMatch, [], requestContext);
            let results = await callDataStrategy(request, dsMatches, isRouteRequest, requestContext, dataStrategy);
            result = results[actionMatch.route.id];
            if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest);
        }
        if (isRedirectResult(result)) throw new Response(null, {
            status: result.response.status,
            headers: {
                Location: result.response.headers.get("Location")
            }
        });
        if (isRouteRequest) {
            if (isErrorResult(result)) throw result.error;
            return {
                matches: [
                    actionMatch
                ],
                loaderData: {},
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                errors: null,
                // Note: statusCode + headers are unused here since queryRoute will
                // return the raw Response or value
                statusCode: 200,
                loaderHeaders: {},
                actionHeaders: {}
            };
        }
        if (skipRevalidation) {
            if (isErrorResult(result)) {
                let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
                return {
                    statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
                    actionData: null,
                    actionHeaders: {
                        ...result.headers ? {
                            [actionMatch.route.id]: result.headers
                        } : {}
                    },
                    matches,
                    loaderData: {},
                    errors: {
                        [boundaryMatch.route.id]: result.error
                    },
                    loaderHeaders: {}
                };
            } else return {
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                actionHeaders: result.headers ? {
                    [actionMatch.route.id]: result.headers
                } : {},
                matches,
                loaderData: {},
                errors: null,
                statusCode: result.statusCode || 200,
                loaderHeaders: {}
            };
        }
        let loaderRequest = new Request(request.url, {
            headers: request.headers,
            redirect: request.redirect,
            signal: request.signal
        });
        if (isErrorResult(result)) {
            let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
            let handlerContext2 = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad, [
                boundaryMatch.route.id,
                result
            ]);
            return {
                ...handlerContext2,
                statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
                actionData: null,
                actionHeaders: {
                    ...result.headers ? {
                        [actionMatch.route.id]: result.headers
                    } : {}
                }
            };
        }
        let handlerContext = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad);
        return {
            ...handlerContext,
            actionData: {
                [actionMatch.route.id]: result.data
            },
            // action status codes take precedence over loader status codes
            ...result.statusCode ? {
                statusCode: result.statusCode
            } : {},
            actionHeaders: result.headers ? {
                [actionMatch.route.id]: result.headers
            } : {}
        };
    }
    async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {
        let isRouteRequest = routeMatch != null;
        if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch?.route.id
        });
        let dsMatches;
        if (routeMatch) dsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, routeMatch, [], requestContext);
        else {
            let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? // Up to but not including the boundary
            matches.findIndex((m)=>m.route.id === pendingActionResult[0]) - 1 : void 0;
            dsMatches = matches.map((match, index)=>{
                if (maxIdx != null && index > maxIdx) return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, [], requestContext, false);
                return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, [], requestContext, (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match)));
            });
        }
        if (!dataStrategy && !dsMatches.some((m)=>m.shouldLoad)) return {
            matches,
            loaderData: {},
            errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
                [pendingActionResult[0]]: pendingActionResult[1].error
            } : null,
            statusCode: 200,
            loaderHeaders: {}
        };
        let results = await callDataStrategy(request, dsMatches, isRouteRequest, requestContext, dataStrategy);
        if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest);
        let handlerContext = processRouteLoaderData(matches, results, pendingActionResult, true, skipLoaderErrorBubbling);
        return {
            ...handlerContext,
            matches
        };
    }
    async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {
        let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, request, matches, null, requestContext, true);
        let dataResults = {};
        await Promise.all(matches.map(async (match)=>{
            if (!(match.route.id in results)) return;
            let result = results[match.route.id];
            if (isRedirectDataStrategyResult(result)) {
                let response = result.result;
                throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename);
            }
            if (isResponse(result.result) && isRouteRequest) throw result;
            dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);
        }));
        return dataResults;
    }
    return {
        dataRoutes,
        query,
        queryRoute
    };
}
function getStaticContextFromError(routes, handlerContext, error, boundaryId) {
    let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;
    return {
        ...handlerContext,
        statusCode: isRouteErrorResponse(error) ? error.status : 500,
        errors: {
            [errorBoundaryId]: error
        }
    };
}
function throwStaticHandlerAbortedError(request, isRouteRequest) {
    if (request.signal.reason !== void 0) throw request.signal.reason;
    let method = isRouteRequest ? "queryRoute" : "query";
    throw new Error(`${method}() call aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`);
}
function isSubmissionNavigation(opts) {
    return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, to, fromRouteId, relative) {
    let contextualMatches;
    let activeRouteMatch;
    if (fromRouteId) {
        contextualMatches = [];
        for (let match of matches){
            contextualMatches.push(match);
            if (match.route.id === fromRouteId) {
                activeRouteMatch = match;
                break;
            }
        }
    } else {
        contextualMatches = matches;
        activeRouteMatch = matches[matches.length - 1];
    }
    let path = resolveTo(to ? to : ".", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
    if (to == null) {
        path.search = location.search;
        path.hash = location.hash;
    }
    if ((to == null || to === "" || to === ".") && activeRouteMatch) {
        let nakedIndex = hasNakedIndexQuery(path.search);
        if (activeRouteMatch.route.index && !nakedIndex) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
        else if (!activeRouteMatch.route.index && nakedIndex) {
            let params = new URLSearchParams(path.search);
            let indexValues = params.getAll("index");
            params.delete("index");
            indexValues.filter((v)=>v).forEach((v)=>params.append("index", v));
            let qs = params.toString();
            path.search = qs ? `?${qs}` : "";
        }
    }
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
        basename,
        path.pathname
    ]);
    return createPath(path);
}
function normalizeNavigateOptions(isFetcher, path, opts) {
    if (!opts || !isSubmissionNavigation(opts)) return {
        path
    };
    if (opts.formMethod && !isValidMethod(opts.formMethod)) return {
        path,
        error: getInternalRouterError(405, {
            method: opts.formMethod
        })
    };
    let getInvalidBodyError = ()=>({
            path,
            error: getInternalRouterError(400, {
                type: "invalid-body"
            })
        });
    let rawFormMethod = opts.formMethod || "get";
    let formMethod = rawFormMethod.toUpperCase();
    let formAction = stripHashFromPath(path);
    if (opts.body !== void 0) {
        if (opts.formEncType === "text/plain") {
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
            Array.from(opts.body.entries()).reduce((acc, [name, value])=>`${acc}${name}=${value}
`, "") : String(opts.body);
            return {
                path,
                submission: {
                    formMethod,
                    formAction,
                    formEncType: opts.formEncType,
                    formData: void 0,
                    json: void 0,
                    text
                }
            };
        } else if (opts.formEncType === "application/json") {
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            try {
                let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
                return {
                    path,
                    submission: {
                        formMethod,
                        formAction,
                        formEncType: opts.formEncType,
                        formData: void 0,
                        json,
                        text: void 0
                    }
                };
            } catch (e) {
                return getInvalidBodyError();
            }
        }
    }
    invariant(typeof FormData === "function", "FormData is not available in this environment");
    let searchParams;
    let formData;
    if (opts.formData) {
        searchParams = convertFormDataToSearchParams(opts.formData);
        formData = opts.formData;
    } else if (opts.body instanceof FormData) {
        searchParams = convertFormDataToSearchParams(opts.body);
        formData = opts.body;
    } else if (opts.body instanceof URLSearchParams) {
        searchParams = opts.body;
        formData = convertSearchParamsToFormData(searchParams);
    } else if (opts.body == null) {
        searchParams = new URLSearchParams();
        formData = new FormData();
    } else try {
        searchParams = new URLSearchParams(opts.body);
        formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
        return getInvalidBodyError();
    }
    let submission = {
        formMethod,
        formAction,
        formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
        formData,
        json: void 0,
        text: void 0
    };
    if (isMutationMethod(submission.formMethod)) return {
        path,
        submission
    };
    let parsedPath = parsePath(path);
    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) searchParams.append("index", "");
    parsedPath.search = `?${searchParams}`;
    return {
        path: createPath(parsedPath),
        submission
    };
}
function getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {
    let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;
    let currentUrl = history.createURL(state.location);
    let nextUrl = history.createURL(location);
    let maxIdx;
    if (initialHydration && state.errors) {
        let boundaryId = Object.keys(state.errors)[0];
        maxIdx = matches.findIndex((m)=>m.route.id === boundaryId);
    } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {
        let boundaryId = pendingActionResult[0];
        maxIdx = matches.findIndex((m)=>m.route.id === boundaryId) - 1;
    }
    let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;
    let shouldSkipRevalidation = actionStatus && actionStatus >= 400;
    let baseShouldRevalidateArgs = {
        currentUrl,
        currentParams: state.matches[0]?.params || {},
        nextUrl,
        nextParams: matches[0].params,
        ...submission,
        actionResult,
        actionStatus
    };
    let dsMatches = matches.map((match, index)=>{
        let { route } = match;
        let forceShouldLoad = null;
        if (maxIdx != null && index > maxIdx) forceShouldLoad = false;
        else if (route.lazy) forceShouldLoad = true;
        else if (route.loader == null) forceShouldLoad = false;
        else if (initialHydration) forceShouldLoad = shouldLoadRouteOnHydration(route, state.loaderData, state.errors);
        else if (isNewLoader(state.loaderData, state.matches[index], match)) forceShouldLoad = true;
        if (forceShouldLoad !== null) return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, forceShouldLoad);
        let defaultShouldRevalidate = shouldSkipRevalidation ? false : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match);
        let shouldRevalidateArgs = {
            ...baseShouldRevalidateArgs,
            defaultShouldRevalidate
        };
        let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);
        return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, shouldRevalidateArgs);
    });
    let revalidatingFetchers = [];
    fetchLoadMatches.forEach((f, key)=>{
        if (initialHydration || !matches.some((m)=>m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        if (!fetcherMatches) {
            revalidatingFetchers.push({
                key,
                routeId: f.routeId,
                path: f.path,
                matches: null,
                match: null,
                request: null,
                controller: null
            });
            return;
        }
        if (fetchRedirectIds.has(key)) return;
        let fetcher = state.fetchers.get(key);
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        let fetchController = new AbortController();
        let fetchRequest = createClientSideRequest(history, f.path, fetchController.signal);
        let fetcherDsMatches = null;
        if (cancelledFetcherLoads.has(key)) {
            cancelledFetcherLoads.delete(key);
            fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);
        } else if (fetcher && fetcher.state !== "idle" && fetcher.data === void 0) {
            if (isRevalidationRequired) fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);
        } else {
            let shouldRevalidateArgs = {
                ...baseShouldRevalidateArgs,
                defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired
            };
            if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties2, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs);
        }
        if (fetcherDsMatches) revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherDsMatches,
            match: fetcherMatch,
            request: fetchRequest,
            controller: fetchController
        });
    });
    return {
        dsMatches,
        revalidatingFetchers
    };
}
function shouldLoadRouteOnHydration(route, loaderData, errors) {
    if (route.lazy) return true;
    if (!route.loader) return false;
    let hasData = loaderData != null && loaderData[route.id] !== void 0;
    let hasError = errors != null && errors[route.id] !== void 0;
    if (!hasData && hasError) return false;
    if (typeof route.loader === "function" && route.loader.hydrate === true) return true;
    return !hasData && !hasError;
}
function isNewLoader(currentLoaderData, currentMatch, match) {
    let isNew = // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id;
    let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);
    return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
    let currentPath = currentMatch.route.path;
    return(// param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]);
}
function shouldRevalidateLoader(loaderMatch, arg) {
    if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice === "boolean") return routeChoice;
    }
    return arg.defaultShouldRevalidate;
}
function patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {
    let childrenToPatch;
    if (routeId) {
        let route = manifest[routeId];
        invariant(route, `No route found to patch children into: routeId = ${routeId}`);
        if (!route.children) route.children = [];
        childrenToPatch = route.children;
    } else childrenToPatch = routesToUse;
    let uniqueChildren = children.filter((newRoute)=>!childrenToPatch.some((existingRoute)=>isSameRoute(newRoute, existingRoute)));
    let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [
        routeId || "_",
        "patch",
        String(childrenToPatch?.length || "0")
    ], manifest);
    childrenToPatch.push(...newRoutes);
}
function isSameRoute(newRoute, existingRoute) {
    if ("id" in newRoute && "id" in existingRoute && newRoute.id === existingRoute.id) return true;
    if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) return false;
    if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) return true;
    return newRoute.children.every((aChild, i)=>existingRoute.children?.some((bChild)=>isSameRoute(aChild, bChild)));
}
var lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();
var loadLazyRouteProperty = ({ key, route, manifest, mapRouteProperties: mapRouteProperties2 })=>{
    let routeToUpdate = manifest[route.id];
    invariant(routeToUpdate, "No route found in manifest");
    if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== "object") return;
    let lazyFn = routeToUpdate.lazy[key];
    if (!lazyFn) return;
    let cache = lazyRoutePropertyCache.get(routeToUpdate);
    if (!cache) {
        cache = {};
        lazyRoutePropertyCache.set(routeToUpdate, cache);
    }
    let cachedPromise = cache[key];
    if (cachedPromise) return cachedPromise;
    let propertyPromise = (async ()=>{
        let isUnsupported = isUnsupportedLazyRouteObjectKey(key);
        let staticRouteValue = routeToUpdate[key];
        let isStaticallyDefined = staticRouteValue !== void 0 && key !== "hasErrorBoundary";
        if (isUnsupported) {
            warning(!isUnsupported, "Route property " + key + " is not a supported lazy route property. This property will be ignored.");
            cache[key] = Promise.resolve();
        } else if (isStaticallyDefined) warning(false, `Route "${routeToUpdate.id}" has a static property "${key}" defined. The lazy property will be ignored.`);
        else {
            let value = await lazyFn();
            if (value != null) {
                Object.assign(routeToUpdate, {
                    [key]: value
                });
                Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));
            }
        }
        if (typeof routeToUpdate.lazy === "object") {
            routeToUpdate.lazy[key] = void 0;
            if (Object.values(routeToUpdate.lazy).every((value)=>value === void 0)) routeToUpdate.lazy = void 0;
        }
    })();
    cache[key] = propertyPromise;
    return propertyPromise;
};
var lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();
function loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {
    let routeToUpdate = manifest[route.id];
    invariant(routeToUpdate, "No route found in manifest");
    if (!route.lazy) return {
        lazyRoutePromise: void 0,
        lazyHandlerPromise: void 0
    };
    if (typeof route.lazy === "function") {
        let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);
        if (cachedPromise) return {
            lazyRoutePromise: cachedPromise,
            lazyHandlerPromise: cachedPromise
        };
        let lazyRoutePromise2 = (async ()=>{
            invariant(typeof route.lazy === "function", "No lazy route function found");
            let lazyRoute = await route.lazy();
            let routeUpdates = {};
            for(let lazyRouteProperty in lazyRoute){
                let lazyValue = lazyRoute[lazyRouteProperty];
                if (lazyValue === void 0) continue;
                let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);
                let staticRouteValue = routeToUpdate[lazyRouteProperty];
                let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
                // on the route updates
                lazyRouteProperty !== "hasErrorBoundary";
                if (isUnsupported) warning(!isUnsupported, "Route property " + lazyRouteProperty + " is not a supported property to be returned from a lazy route function. This property will be ignored.");
                else if (isStaticallyDefined) warning(!isStaticallyDefined, `Route "${routeToUpdate.id}" has a static property "${lazyRouteProperty}" defined but its lazy function is also returning a value for this property. The lazy route property "${lazyRouteProperty}" will be ignored.`);
                else routeUpdates[lazyRouteProperty] = lazyValue;
            }
            Object.assign(routeToUpdate, routeUpdates);
            Object.assign(routeToUpdate, {
                // To keep things framework agnostic, we use the provided `mapRouteProperties`
                // function to set the framework-aware properties (`element`/`hasErrorBoundary`)
                // since the logic will differ between frameworks.
                ...mapRouteProperties2(routeToUpdate),
                lazy: void 0
            });
        })();
        lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);
        lazyRoutePromise2.catch(()=>{});
        return {
            lazyRoutePromise: lazyRoutePromise2,
            lazyHandlerPromise: lazyRoutePromise2
        };
    }
    let lazyKeys = Object.keys(route.lazy);
    let lazyPropertyPromises = [];
    let lazyHandlerPromise = void 0;
    for (let key of lazyKeys){
        if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) continue;
        let promise = loadLazyRouteProperty({
            key,
            route,
            manifest,
            mapRouteProperties: mapRouteProperties2
        });
        if (promise) {
            lazyPropertyPromises.push(promise);
            if (key === type) lazyHandlerPromise = promise;
        }
    }
    let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(()=>{}) : void 0;
    lazyRoutePromise?.catch(()=>{});
    lazyHandlerPromise?.catch(()=>{});
    return {
        lazyRoutePromise,
        lazyHandlerPromise
    };
}
function isNonNullable(value) {
    return value !== void 0;
}
function loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {
    let promises = matches.map(({ route })=>{
        if (typeof route.lazy !== "object" || !route.lazy.unstable_middleware) return void 0;
        return loadLazyRouteProperty({
            key: "unstable_middleware",
            route,
            manifest,
            mapRouteProperties: mapRouteProperties2
        });
    }).filter(isNonNullable);
    return promises.length > 0 ? Promise.all(promises) : void 0;
}
async function defaultDataStrategy(args) {
    let matchesToLoad = args.matches.filter((m)=>m.shouldLoad);
    let keyedResults = {};
    let results = await Promise.all(matchesToLoad.map((m)=>m.resolve()));
    results.forEach((result, i)=>{
        keyedResults[matchesToLoad[i].route.id] = result;
    });
    return keyedResults;
}
async function defaultDataStrategyWithMiddleware(args) {
    if (!args.matches.some((m)=>m.route.unstable_middleware)) return defaultDataStrategy(args);
    return runMiddlewarePipeline(args, false, ()=>defaultDataStrategy(args), (error, routeId)=>({
            [routeId]: {
                type: "error",
                result: error
            }
        }));
}
async function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {
    let { matches, request, params, context } = args;
    let middlewareState = {
        handlerResult: void 0
    };
    try {
        let tuples = matches.flatMap((m)=>m.route.unstable_middleware ? m.route.unstable_middleware.map((fn)=>[
                    m.route.id,
                    fn
                ]) : []);
        let result = await callRouteMiddleware({
            request,
            params,
            context
        }, tuples, propagateResult, middlewareState, handler);
        return propagateResult ? result : middlewareState.handlerResult;
    } catch (e) {
        if (!middlewareState.middlewareError) throw e;
        let result = await errorHandler(middlewareState.middlewareError.error, middlewareState.middlewareError.routeId);
        if (propagateResult || !middlewareState.handlerResult) return result;
        return Object.assign(middlewareState.handlerResult, result);
    }
}
async function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {
    let { request } = args;
    if (request.signal.aborted) {
        if (request.signal.reason) throw request.signal.reason;
        throw new Error(`Request aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`);
    }
    let tuple = middlewares[idx];
    if (!tuple) {
        middlewareState.handlerResult = await handler();
        return middlewareState.handlerResult;
    }
    let [routeId, middleware] = tuple;
    let nextCalled = false;
    let nextResult = void 0;
    let next = async ()=>{
        if (nextCalled) throw new Error("You may only call `next()` once per middleware");
        nextCalled = true;
        let result = await callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx + 1);
        if (propagateResult) {
            nextResult = result;
            return nextResult;
        }
    };
    try {
        let result = await middleware({
            request: args.request,
            params: args.params,
            context: args.context
        }, next);
        if (nextCalled) {
            if (result === void 0) return nextResult;
            else return result;
        } else return next();
    } catch (error) {
        if (!middlewareState.middlewareError) middlewareState.middlewareError = {
            routeId,
            error
        };
        else if (middlewareState.middlewareError.error !== error) middlewareState.middlewareError = {
            routeId,
            error
        };
        throw error;
    }
}
function getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {
    let lazyMiddlewarePromise = loadLazyRouteProperty({
        key: "unstable_middleware",
        route: match.route,
        manifest,
        mapRouteProperties: mapRouteProperties2
    });
    let lazyRoutePromises = loadLazyRoute(match.route, isMutationMethod(request.method) ? "action" : "loader", manifest, mapRouteProperties2, lazyRoutePropertiesToSkip);
    return {
        middleware: lazyMiddlewarePromise,
        route: lazyRoutePromises.lazyRoutePromise,
        handler: lazyRoutePromises.lazyHandlerPromise
    };
}
function getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {
    let isUsingNewApi = false;
    let _lazyPromises = getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip);
    return {
        ...match,
        _lazyPromises,
        shouldLoad,
        unstable_shouldRevalidateArgs,
        unstable_shouldCallHandler (defaultShouldRevalidate) {
            isUsingNewApi = true;
            if (!unstable_shouldRevalidateArgs) return shouldLoad;
            if (typeof defaultShouldRevalidate === "boolean") return shouldRevalidateLoader(match, {
                ...unstable_shouldRevalidateArgs,
                defaultShouldRevalidate
            });
            return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);
        },
        resolve (handlerOverride) {
            if (isUsingNewApi || shouldLoad || handlerOverride && request.method === "GET" && (match.route.lazy || match.route.loader)) return callLoaderOrAction({
                request,
                match,
                lazyHandlerPromise: _lazyPromises?.handler,
                lazyRoutePromise: _lazyPromises?.route,
                handlerOverride,
                scopedContext
            });
            return Promise.resolve({
                type: "data" /* data */ ,
                result: void 0
            });
        }
    };
}
function getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {
    return matches.map((match)=>{
        if (match.route.id !== targetMatch.route.id) return {
            ...match,
            shouldLoad: false,
            unstable_shouldRevalidateArgs: shouldRevalidateArgs,
            unstable_shouldCallHandler: ()=>false,
            _lazyPromises: getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip),
            resolve: ()=>Promise.resolve({
                    type: "data",
                    result: void 0
                })
        };
        return getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, true, shouldRevalidateArgs);
    });
}
async function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {
    if (matches.some((m)=>m._lazyPromises?.middleware)) await Promise.all(matches.map((m)=>m._lazyPromises?.middleware));
    let dataStrategyArgs = {
        request,
        params: matches[0].params,
        context: scopedContext,
        matches
    };
    let unstable_runClientMiddleware = isStaticHandler ? ()=>{
        throw new Error("You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`");
    } : (cb)=>{
        let typedDataStrategyArgs = dataStrategyArgs;
        return runMiddlewarePipeline(typedDataStrategyArgs, false, ()=>cb({
                ...typedDataStrategyArgs,
                fetcherKey,
                unstable_runClientMiddleware: ()=>{
                    throw new Error("Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler");
                }
            }), (error, routeId)=>({
                [routeId]: {
                    type: "error",
                    result: error
                }
            }));
    };
    let results = await dataStrategyImpl({
        ...dataStrategyArgs,
        fetcherKey,
        unstable_runClientMiddleware
    });
    try {
        await Promise.all(matches.flatMap((m)=>[
                m._lazyPromises?.handler,
                m._lazyPromises?.route
            ]));
    } catch (e) {}
    return results;
}
async function callLoaderOrAction({ request, match, lazyHandlerPromise, lazyRoutePromise, handlerOverride, scopedContext }) {
    let result;
    let onReject;
    let isAction = isMutationMethod(request.method);
    let type = isAction ? "action" : "loader";
    let runHandler = (handler)=>{
        let reject;
        let abortPromise = new Promise((_, r)=>reject = r);
        onReject = ()=>reject();
        request.signal.addEventListener("abort", onReject);
        let actualHandler = (ctx)=>{
            if (typeof handler !== "function") return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean "${type}" [routeId: ${match.route.id}]`));
            return handler({
                request,
                params: match.params,
                context: scopedContext
            }, ...ctx !== void 0 ? [
                ctx
            ] : []);
        };
        let handlerPromise = (async ()=>{
            try {
                let val = await (handlerOverride ? handlerOverride((ctx)=>actualHandler(ctx)) : actualHandler());
                return {
                    type: "data",
                    result: val
                };
            } catch (e) {
                return {
                    type: "error",
                    result: e
                };
            }
        })();
        return Promise.race([
            handlerPromise,
            abortPromise
        ]);
    };
    try {
        let handler = isAction ? match.route.action : match.route.loader;
        if (lazyHandlerPromise || lazyRoutePromise) {
            if (handler) {
                let handlerError;
                let [value] = await Promise.all([
                    // If the handler throws, don't let it immediately bubble out,
                    // since we need to let the lazy() execution finish so we know if this
                    // route has a boundary that can handle the error
                    runHandler(handler).catch((e)=>{
                        handlerError = e;
                    }),
                    // Ensure all lazy route promises are resolved before continuing
                    lazyHandlerPromise,
                    lazyRoutePromise
                ]);
                if (handlerError !== void 0) throw handlerError;
                result = value;
            } else {
                await lazyHandlerPromise;
                let handler2 = isAction ? match.route.action : match.route.loader;
                if (handler2) [result] = await Promise.all([
                    runHandler(handler2),
                    lazyRoutePromise
                ]);
                else if (type === "action") {
                    let url = new URL(request.url);
                    let pathname = url.pathname + url.search;
                    throw getInternalRouterError(405, {
                        method: request.method,
                        pathname,
                        routeId: match.route.id
                    });
                } else return {
                    type: "data" /* data */ ,
                    result: void 0
                };
            }
        } else if (!handler) {
            let url = new URL(request.url);
            let pathname = url.pathname + url.search;
            throw getInternalRouterError(404, {
                pathname
            });
        } else result = await runHandler(handler);
    } catch (e) {
        return {
            type: "error" /* error */ ,
            result: e
        };
    } finally{
        if (onReject) request.signal.removeEventListener("abort", onReject);
    }
    return result;
}
async function convertDataStrategyResultToDataResult(dataStrategyResult) {
    let { result, type } = dataStrategyResult;
    if (isResponse(result)) {
        let data2;
        try {
            let contentType = result.headers.get("Content-Type");
            if (contentType && /\bapplication\/json\b/.test(contentType)) {
                if (result.body == null) data2 = null;
                else data2 = await result.json();
            } else data2 = await result.text();
        } catch (e) {
            return {
                type: "error" /* error */ ,
                error: e
            };
        }
        if (type === "error" /* error */ ) return {
            type: "error" /* error */ ,
            error: new ErrorResponseImpl(result.status, result.statusText, data2),
            statusCode: result.status,
            headers: result.headers
        };
        return {
            type: "data" /* data */ ,
            data: data2,
            statusCode: result.status,
            headers: result.headers
        };
    }
    if (type === "error" /* error */ ) {
        if (isDataWithResponseInit(result)) {
            if (result.data instanceof Error) return {
                type: "error" /* error */ ,
                error: result.data,
                statusCode: result.init?.status,
                headers: result.init?.headers ? new Headers(result.init.headers) : void 0
            };
            return {
                type: "error" /* error */ ,
                error: new ErrorResponseImpl(result.init?.status || 500, void 0, result.data),
                statusCode: isRouteErrorResponse(result) ? result.status : void 0,
                headers: result.init?.headers ? new Headers(result.init.headers) : void 0
            };
        }
        return {
            type: "error" /* error */ ,
            error: result,
            statusCode: isRouteErrorResponse(result) ? result.status : void 0
        };
    }
    if (isDataWithResponseInit(result)) return {
        type: "data" /* data */ ,
        data: result.data,
        statusCode: result.init?.status,
        headers: result.init?.headers ? new Headers(result.init.headers) : void 0
    };
    return {
        type: "data" /* data */ ,
        data: result
    };
}
function normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {
    let location = response.headers.get("Location");
    invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
    if (!ABSOLUTE_URL_REGEX.test(location)) {
        let trimmedMatches = matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1);
        location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);
        response.headers.set("Location", location);
    }
    return response;
}
function normalizeRedirectLocation(location, currentUrl, basename) {
    if (ABSOLUTE_URL_REGEX.test(location)) {
        let normalizedLocation = location;
        let url = normalizedLocation.startsWith("//") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);
        let isSameBasename = stripBasename(url.pathname, basename) != null;
        if (url.origin === currentUrl.origin && isSameBasename) return url.pathname + url.search + url.hash;
    }
    return location;
}
function createClientSideRequest(history, location, signal, submission) {
    let url = history.createURL(stripHashFromPath(location)).toString();
    let init = {
        signal
    };
    if (submission && isMutationMethod(submission.formMethod)) {
        let { formMethod, formEncType } = submission;
        init.method = formMethod.toUpperCase();
        if (formEncType === "application/json") {
            init.headers = new Headers({
                "Content-Type": formEncType
            });
            init.body = JSON.stringify(submission.json);
        } else if (formEncType === "text/plain") init.body = submission.text;
        else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) init.body = convertFormDataToSearchParams(submission.formData);
        else init.body = submission.formData;
    }
    return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
    let searchParams = new URLSearchParams();
    for (let [key, value] of formData.entries())searchParams.append(key, typeof value === "string" ? value : value.name);
    return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
    let formData = new FormData();
    for (let [key, value] of searchParams.entries())formData.append(key, value);
    return formData;
}
function processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {
    let loaderData = {};
    let errors = null;
    let statusCode;
    let foundError = false;
    let loaderHeaders = {};
    let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;
    matches.forEach((match)=>{
        if (!(match.route.id in results)) return;
        let id = match.route.id;
        let result = results[id];
        invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
        if (isErrorResult(result)) {
            let error = result.error;
            if (pendingError !== void 0) {
                error = pendingError;
                pendingError = void 0;
            }
            errors = errors || {};
            if (skipLoaderErrorBubbling) errors[id] = error;
            else {
                let boundaryMatch = findNearestBoundary(matches, id);
                if (errors[boundaryMatch.route.id] == null) errors[boundaryMatch.route.id] = error;
            }
            if (!isStaticHandler) loaderData[id] = ResetLoaderDataSymbol;
            if (!foundError) {
                foundError = true;
                statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
            }
            if (result.headers) loaderHeaders[id] = result.headers;
        } else {
            loaderData[id] = result.data;
            if (result.statusCode && result.statusCode !== 200 && !foundError) statusCode = result.statusCode;
            if (result.headers) loaderHeaders[id] = result.headers;
        }
    });
    if (pendingError !== void 0 && pendingActionResult) {
        errors = {
            [pendingActionResult[0]]: pendingError
        };
        if (pendingActionResult[2]) loaderData[pendingActionResult[2]] = void 0;
    }
    return {
        loaderData,
        errors,
        statusCode: statusCode || 200,
        loaderHeaders
    };
}
function processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {
    let { loaderData, errors } = processRouteLoaderData(matches, results, pendingActionResult);
    revalidatingFetchers.filter((f)=>!f.matches || f.matches.some((m)=>m.shouldLoad)).forEach((rf)=>{
        let { key, match, controller } = rf;
        let result = fetcherResults[key];
        invariant(result, "Did not find corresponding fetcher result");
        if (controller && controller.signal.aborted) return;
        else if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);
            if (!(errors && errors[boundaryMatch.route.id])) errors = {
                ...errors,
                [boundaryMatch.route.id]: result.error
            };
            state.fetchers.delete(key);
        } else if (isRedirectResult(result)) invariant(false, "Unhandled fetcher revalidation redirect");
        else {
            let doneFetcher = getDoneFetcher(result.data);
            state.fetchers.set(key, doneFetcher);
        }
    });
    return {
        loaderData,
        errors
    };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
    let mergedLoaderData = Object.entries(newLoaderData).filter(([, v])=>v !== ResetLoaderDataSymbol).reduce((merged, [k, v])=>{
        merged[k] = v;
        return merged;
    }, {});
    for (let match of matches){
        let id = match.route.id;
        if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) mergedLoaderData[id] = loaderData[id];
        if (errors && errors.hasOwnProperty(id)) break;
    }
    return mergedLoaderData;
}
function getActionDataForCommit(pendingActionResult) {
    if (!pendingActionResult) return {};
    return isErrorResult(pendingActionResult[1]) ? {
        // Clear out prior actionData on errors
        actionData: {}
    } : {
        actionData: {
            [pendingActionResult[0]]: pendingActionResult[1].data
        }
    };
}
function findNearestBoundary(matches, routeId) {
    let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1) : [
        ...matches
    ];
    return eligibleMatches.reverse().find((m)=>m.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
    let route = routes.length === 1 ? routes[0] : routes.find((r)=>r.index || !r.path || r.path === "/") || {
        id: `__shim-error-route__`
    };
    return {
        matches: [
            {
                params: {},
                pathname: "",
                pathnameBase: "",
                route
            }
        ],
        route
    };
}
function getInternalRouterError(status, { pathname, routeId, method, type, message } = {}) {
    let statusText = "Unknown Server Error";
    let errorMessage = "Unknown @remix-run/router error";
    if (status === 400) {
        statusText = "Bad Request";
        if (method && pathname && routeId) errorMessage = `You made a ${method} request to "${pathname}" but did not provide a \`loader\` for route "${routeId}", so there is no way to handle the request.`;
        else if (type === "invalid-body") errorMessage = "Unable to encode submission body";
    } else if (status === 403) {
        statusText = "Forbidden";
        errorMessage = `Route "${routeId}" does not match URL "${pathname}"`;
    } else if (status === 404) {
        statusText = "Not Found";
        errorMessage = `No route matches URL "${pathname}"`;
    } else if (status === 405) {
        statusText = "Method Not Allowed";
        if (method && pathname && routeId) errorMessage = `You made a ${method.toUpperCase()} request to "${pathname}" but did not provide an \`action\` for route "${routeId}", so there is no way to handle the request.`;
        else if (method) errorMessage = `Invalid request method "${method.toUpperCase()}"`;
    }
    return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);
}
function findRedirect(results) {
    let entries = Object.entries(results);
    for(let i = entries.length - 1; i >= 0; i--){
        let [key, result] = entries[i];
        if (isRedirectResult(result)) return {
            key,
            result
        };
    }
}
function stripHashFromPath(path) {
    let parsedPath = typeof path === "string" ? parsePath(path) : path;
    return createPath({
        ...parsedPath,
        hash: ""
    });
}
function isHashChangeOnly(a, b) {
    if (a.pathname !== b.pathname || a.search !== b.search) return false;
    if (a.hash === "") return b.hash !== "";
    else if (a.hash === b.hash) return true;
    else if (b.hash !== "") return true;
    return false;
}
function isDataStrategyResult(result) {
    return result != null && typeof result === "object" && "type" in result && "result" in result && (result.type === "data" /* data */  || result.type === "error" /* error */ );
}
function isRedirectDataStrategyResult(result) {
    return isResponse(result.result) && redirectStatusCodes.has(result.result.status);
}
function isErrorResult(result) {
    return result.type === "error" /* error */ ;
}
function isRedirectResult(result) {
    return (result && result.type) === "redirect" /* redirect */ ;
}
function isDataWithResponseInit(value) {
    return typeof value === "object" && value != null && "type" in value && "data" in value && "init" in value && value.type === "DataWithResponseInit";
}
function isResponse(value) {
    return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectStatusCode(statusCode) {
    return redirectStatusCodes.has(statusCode);
}
function isRedirectResponse(result) {
    return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has("Location");
}
function isValidMethod(method) {
    return validRequestMethods.has(method.toUpperCase());
}
function isMutationMethod(method) {
    return validMutationMethods.has(method.toUpperCase());
}
function hasNakedIndexQuery(search) {
    return new URLSearchParams(search).getAll("index").some((v)=>v === "");
}
function getTargetMatch(matches, location) {
    let search = typeof location === "string" ? parsePath(location).search : location.search;
    if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) return matches[matches.length - 1];
    let pathMatches = getPathContributingMatches(matches);
    return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
    let { formMethod, formAction, formEncType, text, formData, json } = navigation;
    if (!formMethod || !formAction || !formEncType) return;
    if (text != null) return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: void 0,
        text
    };
    else if (formData != null) return {
        formMethod,
        formAction,
        formEncType,
        formData,
        json: void 0,
        text: void 0
    };
    else if (json !== void 0) return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json,
        text: void 0
    };
}
function getLoadingNavigation(location, submission) {
    if (submission) {
        let navigation = {
            state: "loading",
            location,
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text
        };
        return navigation;
    } else {
        let navigation = {
            state: "loading",
            location,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            json: void 0,
            text: void 0
        };
        return navigation;
    }
}
function getSubmittingNavigation(location, submission) {
    let navigation = {
        state: "submitting",
        location,
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text
    };
    return navigation;
}
function getLoadingFetcher(submission, data2) {
    if (submission) {
        let fetcher = {
            state: "loading",
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text,
            data: data2
        };
        return fetcher;
    } else {
        let fetcher = {
            state: "loading",
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            json: void 0,
            text: void 0,
            data: data2
        };
        return fetcher;
    }
}
function getSubmittingFetcher(submission, existingFetcher) {
    let fetcher = {
        state: "submitting",
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text,
        data: existingFetcher ? existingFetcher.data : void 0
    };
    return fetcher;
}
function getDoneFetcher(data2) {
    let fetcher = {
        state: "idle",
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
        data: data2
    };
    return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
    try {
        let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);
        if (sessionPositions) {
            let json = JSON.parse(sessionPositions);
            for (let [k, v] of Object.entries(json || {}))if (v && Array.isArray(v)) transitions.set(k, new Set(v || []));
        }
    } catch (e) {}
}
function persistAppliedTransitions(_window, transitions) {
    if (transitions.size > 0) {
        let json = {};
        for (let [k, v] of transitions)json[k] = [
            ...v
        ];
        try {
            _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));
        } catch (error) {
            warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);
        }
    }
}
function createDeferred() {
    let resolve;
    let reject;
    let promise = new Promise((res, rej)=>{
        resolve = async (val)=>{
            res(val);
            try {
                await promise;
            } catch (e) {}
        };
        reject = async (error)=>{
            rej(error);
            try {
                await promise;
            } catch (e) {}
        };
    });
    return {
        promise,
        //@ts-ignore
        resolve,
        //@ts-ignore
        reject
    };
}
var DataRouterContext = _react.createContext(null);
DataRouterContext.displayName = "DataRouter";
var DataRouterStateContext = _react.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
var ViewTransitionContext = _react.createContext({
    isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
var FetchersContext = _react.createContext(/* @__PURE__ */ new Map());
FetchersContext.displayName = "Fetchers";
var AwaitContext = _react.createContext(null);
AwaitContext.displayName = "Await";
var NavigationContext = _react.createContext(null);
NavigationContext.displayName = "Navigation";
var LocationContext = _react.createContext(null);
LocationContext.displayName = "Location";
var RouteContext = _react.createContext({
    outlet: null,
    matches: [],
    isDataRoute: false
});
RouteContext.displayName = "Route";
var RouteErrorContext = _react.createContext(null);
RouteErrorContext.displayName = "RouteError";
var ENABLE_DEV_WARNINGS = true;
function useHref(to, { relative } = {}) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`);
    let { basename, navigator: navigator2 } = _react.useContext(NavigationContext);
    let { hash, pathname, search } = useResolvedPath(to, {
        relative
    });
    let joinedPathname = pathname;
    if (basename !== "/") joinedPathname = pathname === "/" ? basename : joinPaths([
        basename,
        pathname
    ]);
    return navigator2.createHref({
        pathname: joinedPathname,
        search,
        hash
    });
}
function useInRouterContext() {
    return _react.useContext(LocationContext) != null;
}
function useLocation() {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`);
    return _react.useContext(LocationContext).location;
}
function useNavigationType() {
    return _react.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useMatch() may be used only in the context of a <Router> component.`);
    let { pathname } = useLocation();
    return _react.useMemo(()=>matchPath(pattern, decodePath(pathname)), [
        pathname,
        pattern
    ]);
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect(cb) {
    let isStatic = _react.useContext(NavigationContext).static;
    if (!isStatic) _react.useLayoutEffect(cb);
}
function useNavigate() {
    let { isDataRoute } = _react.useContext(RouteContext);
    return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`);
    let dataRouterContext = _react.useContext(DataRouterContext);
    let { basename, navigator: navigator2 } = _react.useContext(NavigationContext);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback((to, options = {})=>{
        warning(activeRef.current, navigateEffectWarning);
        if (!activeRef.current) return;
        if (typeof to === "number") {
            navigator2.go(to);
            return;
        }
        let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
        if (dataRouterContext == null && basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
            basename,
            path.pathname
        ]);
        (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
    }, [
        basename,
        navigator2,
        routePathnamesJson,
        locationPathname,
        dataRouterContext
    ]);
    return navigate;
}
var OutletContext = _react.createContext(null);
function useOutletContext() {
    return _react.useContext(OutletContext);
}
function useOutlet(context) {
    let outlet = _react.useContext(RouteContext).outlet;
    if (outlet) return /* @__PURE__ */ _react.createElement(OutletContext.Provider, {
        value: context
    }, outlet);
    return outlet;
}
function useParams() {
    let { matches } = _react.useContext(RouteContext);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, { relative } = {}) {
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
    return _react.useMemo(()=>resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [
        to,
        routePathnamesJson,
        locationPathname,
        relative
    ]);
}
function useRoutes(routes, locationArg) {
    return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`);
    let { navigator: navigator2, static: isStatic } = _react.useContext(NavigationContext);
    let { matches: parentMatches } = _react.useContext(RouteContext);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {};
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    if (ENABLE_DEV_WARNINGS) {
        let parentPath = parentRoute && parentRoute.path || "";
        warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*") || parentPath.endsWith("*?"), `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`);
    }
    let locationFromContext = useLocation();
    let location;
    if (locationArg) {
        let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
        invariant(parentPathnameBase === "/" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`);
        location = parsedLocationArg;
    } else location = locationFromContext;
    let pathname = location.pathname || "/";
    let remainingPathname = pathname;
    if (parentPathnameBase !== "/") {
        let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
        let segments = pathname.replace(/^\//, "").split("/");
        remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
    }
    let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {
        pathname: remainingPathname
    });
    if (ENABLE_DEV_WARNINGS) {
        warning(parentRoute || matches != null, `No routes matched location "${location.pathname}${location.search}${location.hash}" `);
        warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);
    }
    let renderedMatches = _renderMatches(matches && matches.map((match)=>Object.assign({}, match, {
            params: Object.assign({}, parentParams, match.params),
            pathname: joinPaths([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
            ]),
            pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
            ])
        })), parentMatches, dataRouterState, future);
    if (locationArg && renderedMatches) return /* @__PURE__ */ _react.createElement(LocationContext.Provider, {
        value: {
            location: {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
                ...location
            },
            navigationType: "POP" /* Pop */ 
        }
    }, renderedMatches);
    return renderedMatches;
}
function DefaultErrorComponent() {
    let error = useRouteError();
    let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);
    let stack = error instanceof Error ? error.stack : null;
    let lightgrey = "rgba(200,200,200, 0.5)";
    let preStyles = {
        padding: "0.5rem",
        backgroundColor: lightgrey
    };
    let codeStyles = {
        padding: "2px 4px",
        backgroundColor: lightgrey
    };
    let devInfo = null;
    if (ENABLE_DEV_WARNINGS) {
        console.error("Error handled by React Router default ErrorBoundary:", error);
        devInfo = /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ _react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ _react.createElement("code", {
            style: codeStyles
        }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ _react.createElement("code", {
            style: codeStyles
        }, "errorElement"), " prop on your route."));
    }
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ _react.createElement("h3", {
        style: {
            fontStyle: "italic"
        }
    }, message), stack ? /* @__PURE__ */ _react.createElement("pre", {
        style: preStyles
    }, stack) : null, devInfo);
}
var defaultErrorElement = /* @__PURE__ */ _react.createElement(DefaultErrorComponent, null);
var RenderErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            location: props.location,
            revalidation: props.revalidation,
            error: props.error
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    static getDerivedStateFromProps(props, state) {
        if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") return {
            error: props.error,
            location: props.location,
            revalidation: props.revalidation
        };
        return {
            error: props.error !== void 0 ? props.error : state.error,
            location: state.location,
            revalidation: props.revalidation || state.revalidation
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
    }
    render() {
        return this.state.error !== void 0 ? /* @__PURE__ */ _react.createElement(RouteContext.Provider, {
            value: this.props.routeContext
        }, /* @__PURE__ */ _react.createElement(RouteErrorContext.Provider, {
            value: this.state.error,
            children: this.props.component
        })) : this.props.children;
    }
};
function RenderedRoute({ routeContext, match, children }) {
    let dataRouterContext = _react.useContext(DataRouterContext);
    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
    return /* @__PURE__ */ _react.createElement(RouteContext.Provider, {
        value: routeContext
    }, children);
}
function _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {
    if (matches == null) {
        if (!dataRouterState) return null;
        if (dataRouterState.errors) matches = dataRouterState.matches;
        else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) matches = dataRouterState.matches;
        else return null;
    }
    let renderedMatches = matches;
    let errors = dataRouterState?.errors;
    if (errors != null) {
        let errorIndex = renderedMatches.findIndex((m)=>m.route.id && errors?.[m.route.id] !== void 0);
        invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(",")}`);
        renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
    }
    let renderFallback = false;
    let fallbackIndex = -1;
    if (dataRouterState) for(let i = 0; i < renderedMatches.length; i++){
        let match = renderedMatches[i];
        if (match.route.HydrateFallback || match.route.hydrateFallbackElement) fallbackIndex = i;
        if (match.route.id) {
            let { loaderData, errors: errors2 } = dataRouterState;
            let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);
            if (match.route.lazy || needsToRunLoader) {
                renderFallback = true;
                if (fallbackIndex >= 0) renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
                else renderedMatches = [
                    renderedMatches[0]
                ];
                break;
            }
        }
    }
    return renderedMatches.reduceRight((outlet, match, index)=>{
        let error;
        let shouldRenderHydrateFallback = false;
        let errorElement = null;
        let hydrateFallbackElement = null;
        if (dataRouterState) {
            error = errors && match.route.id ? errors[match.route.id] : void 0;
            errorElement = match.route.errorElement || defaultErrorElement;
            if (renderFallback) {
                if (fallbackIndex < 0 && index === 0) {
                    warningOnce("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration");
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = null;
                } else if (fallbackIndex === index) {
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = match.route.hydrateFallbackElement || null;
                }
            }
        }
        let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
        let getChildren = ()=>{
            let children;
            if (error) children = errorElement;
            else if (shouldRenderHydrateFallback) children = hydrateFallbackElement;
            else if (match.route.Component) children = /* @__PURE__ */ _react.createElement(match.route.Component, null);
            else if (match.route.element) children = match.route.element;
            else children = outlet;
            return /* @__PURE__ */ _react.createElement(RenderedRoute, {
                match,
                routeContext: {
                    outlet,
                    matches: matches2,
                    isDataRoute: dataRouterState != null
                },
                children
            });
        };
        return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ _react.createElement(RenderErrorBoundary, {
            location: dataRouterState.location,
            revalidation: dataRouterState.revalidation,
            component: errorElement,
            error,
            children: getChildren(),
            routeContext: {
                outlet: null,
                matches: matches2,
                isDataRoute: true
            }
        }) : getChildren();
    }, null);
}
function getDataRouterConsoleError(hookName) {
    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
    let ctx = _react.useContext(DataRouterContext);
    invariant(ctx, getDataRouterConsoleError(hookName));
    return ctx;
}
function useDataRouterState(hookName) {
    let state = _react.useContext(DataRouterStateContext);
    invariant(state, getDataRouterConsoleError(hookName));
    return state;
}
function useRouteContext(hookName) {
    let route = _react.useContext(RouteContext);
    invariant(route, getDataRouterConsoleError(hookName));
    return route;
}
function useCurrentRouteId(hookName) {
    let route = useRouteContext(hookName);
    let thisRoute = route.matches[route.matches.length - 1];
    invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique "id"`);
    return thisRoute.route.id;
}
function useRouteId() {
    return useCurrentRouteId("useRouteId" /* UseRouteId */ );
}
function useNavigation() {
    let state = useDataRouterState("useNavigation" /* UseNavigation */ );
    return state.navigation;
}
function useRevalidator() {
    let dataRouterContext = useDataRouterContext("useRevalidator" /* UseRevalidator */ );
    let state = useDataRouterState("useRevalidator" /* UseRevalidator */ );
    return _react.useMemo(()=>({
            async revalidate () {
                await dataRouterContext.router.revalidate();
            },
            state: state.revalidation
        }), [
        dataRouterContext.router,
        state.revalidation
    ]);
}
function useMatches() {
    let { matches, loaderData } = useDataRouterState("useMatches" /* UseMatches */ );
    return _react.useMemo(()=>matches.map((m)=>convertRouteMatchToUiMatch(m, loaderData)), [
        matches,
        loaderData
    ]);
}
function useLoaderData() {
    let state = useDataRouterState("useLoaderData" /* UseLoaderData */ );
    let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */ );
    return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
    let state = useDataRouterState("useRouteLoaderData" /* UseRouteLoaderData */ );
    return state.loaderData[routeId];
}
function useActionData() {
    let state = useDataRouterState("useActionData" /* UseActionData */ );
    let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */ );
    return state.actionData ? state.actionData[routeId] : void 0;
}
function useRouteError() {
    let error = _react.useContext(RouteErrorContext);
    let state = useDataRouterState("useRouteError" /* UseRouteError */ );
    let routeId = useCurrentRouteId("useRouteError" /* UseRouteError */ );
    if (error !== void 0) return error;
    return state.errors?.[routeId];
}
function useAsyncValue() {
    let value = _react.useContext(AwaitContext);
    return value?._data;
}
function useAsyncError() {
    let value = _react.useContext(AwaitContext);
    return value?._error;
}
var blockerId = 0;
function useBlocker(shouldBlock) {
    let { router, basename } = useDataRouterContext("useBlocker" /* UseBlocker */ );
    let state = useDataRouterState("useBlocker" /* UseBlocker */ );
    let [blockerKey, setBlockerKey] = _react.useState("");
    let blockerFunction = _react.useCallback((arg)=>{
        if (typeof shouldBlock !== "function") return !!shouldBlock;
        if (basename === "/") return shouldBlock(arg);
        let { currentLocation, nextLocation, historyAction } = arg;
        return shouldBlock({
            currentLocation: {
                ...currentLocation,
                pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname
            },
            nextLocation: {
                ...nextLocation,
                pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname
            },
            historyAction
        });
    }, [
        basename,
        shouldBlock
    ]);
    _react.useEffect(()=>{
        let key = String(++blockerId);
        setBlockerKey(key);
        return ()=>router.deleteBlocker(key);
    }, [
        router
    ]);
    _react.useEffect(()=>{
        if (blockerKey !== "") router.getBlocker(blockerKey, blockerFunction);
    }, [
        router,
        blockerKey,
        blockerFunction
    ]);
    return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
    let { router } = useDataRouterContext("useNavigate" /* UseNavigateStable */ );
    let id = useCurrentRouteId("useNavigate" /* UseNavigateStable */ );
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback(async (to, options = {})=>{
        warning(activeRef.current, navigateEffectWarning);
        if (!activeRef.current) return;
        if (typeof to === "number") router.navigate(to);
        else await router.navigate(to, {
            fromRouteId: id,
            ...options
        });
    }, [
        router,
        id
    ]);
    return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
    if (!cond && !alreadyWarned[key]) {
        alreadyWarned[key] = true;
        warning(false, message);
    }
}
// lib/server-runtime/warnings.ts
var alreadyWarned2 = {};
function warnOnce(condition, message) {
    if (!condition && !alreadyWarned2[message]) {
        alreadyWarned2[message] = true;
        console.warn(message);
    }
}
// lib/components.tsx
var ENABLE_DEV_WARNINGS2 = true;
function mapRouteProperties(route) {
    let updates = {
        // Note: this check also occurs in createRoutesFromChildren so update
        // there if you change this -- please and thank you!
        hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null
    };
    if (route.Component) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.element) warning(false, "You should not include both `Component` and `element` on your route - `Component` will be used.");
        }
        Object.assign(updates, {
            element: _react.createElement(route.Component),
            Component: void 0
        });
    }
    if (route.HydrateFallback) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.hydrateFallbackElement) warning(false, "You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.");
        }
        Object.assign(updates, {
            hydrateFallbackElement: _react.createElement(route.HydrateFallback),
            HydrateFallback: void 0
        });
    }
    if (route.ErrorBoundary) {
        if (ENABLE_DEV_WARNINGS2) {
            if (route.errorElement) warning(false, "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.");
        }
        Object.assign(updates, {
            errorElement: _react.createElement(route.ErrorBoundary),
            ErrorBoundary: void 0
        });
    }
    return updates;
}
var hydrationRouteProperties = [
    "HydrateFallback",
    "hydrateFallbackElement"
];
function createMemoryRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createMemoryHistory({
            initialEntries: opts?.initialEntries,
            initialIndex: opts?.initialIndex
        }),
        hydrationData: opts?.hydrationData,
        routes,
        hydrationRouteProperties,
        mapRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation
    }).initialize();
}
var Deferred = class {
    constructor(){
        this.status = "pending";
        this.promise = new Promise((resolve, reject)=>{
            this.resolve = (value)=>{
                if (this.status === "pending") {
                    this.status = "resolved";
                    resolve(value);
                }
            };
            this.reject = (reason)=>{
                if (this.status === "pending") {
                    this.status = "rejected";
                    reject(reason);
                }
            };
        });
    }
};
function RouterProvider({ router, flushSync: reactDomFlushSyncImpl }) {
    let [state, setStateImpl] = _react.useState(router.state);
    let [pendingState, setPendingState] = _react.useState();
    let [vtContext, setVtContext] = _react.useState({
        isTransitioning: false
    });
    let [renderDfd, setRenderDfd] = _react.useState();
    let [transition, setTransition] = _react.useState();
    let [interruption, setInterruption] = _react.useState();
    let fetcherData = _react.useRef(/* @__PURE__ */ new Map());
    let setState = _react.useCallback((newState, { deletedFetchers, flushSync, viewTransitionOpts })=>{
        newState.fetchers.forEach((fetcher, key)=>{
            if (fetcher.data !== void 0) fetcherData.current.set(key, fetcher.data);
        });
        deletedFetchers.forEach((key)=>fetcherData.current.delete(key));
        warnOnce(flushSync === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from "react-router/dom"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');
        let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === "function";
        warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, "You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.");
        if (!viewTransitionOpts || !isViewTransitionAvailable) {
            if (reactDomFlushSyncImpl && flushSync) reactDomFlushSyncImpl(()=>setStateImpl(newState));
            else _react.startTransition(()=>setStateImpl(newState));
            return;
        }
        if (reactDomFlushSyncImpl && flushSync) {
            reactDomFlushSyncImpl(()=>{
                if (transition) {
                    renderDfd && renderDfd.resolve();
                    transition.skipTransition();
                }
                setVtContext({
                    isTransitioning: true,
                    flushSync: true,
                    currentLocation: viewTransitionOpts.currentLocation,
                    nextLocation: viewTransitionOpts.nextLocation
                });
            });
            let t = router.window.document.startViewTransition(()=>{
                reactDomFlushSyncImpl(()=>setStateImpl(newState));
            });
            t.finished.finally(()=>{
                reactDomFlushSyncImpl(()=>{
                    setRenderDfd(void 0);
                    setTransition(void 0);
                    setPendingState(void 0);
                    setVtContext({
                        isTransitioning: false
                    });
                });
            });
            reactDomFlushSyncImpl(()=>setTransition(t));
            return;
        }
        if (transition) {
            renderDfd && renderDfd.resolve();
            transition.skipTransition();
            setInterruption({
                state: newState,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        } else {
            setPendingState(newState);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        }
    }, [
        router.window,
        reactDomFlushSyncImpl,
        transition,
        renderDfd
    ]);
    _react.useLayoutEffect(()=>router.subscribe(setState), [
        router,
        setState
    ]);
    _react.useEffect(()=>{
        if (vtContext.isTransitioning && !vtContext.flushSync) setRenderDfd(new Deferred());
    }, [
        vtContext
    ]);
    _react.useEffect(()=>{
        if (renderDfd && pendingState && router.window) {
            let newState = pendingState;
            let renderPromise = renderDfd.promise;
            let transition2 = router.window.document.startViewTransition(async ()=>{
                _react.startTransition(()=>setStateImpl(newState));
                await renderPromise;
            });
            transition2.finished.finally(()=>{
                setRenderDfd(void 0);
                setTransition(void 0);
                setPendingState(void 0);
                setVtContext({
                    isTransitioning: false
                });
            });
            setTransition(transition2);
        }
    }, [
        pendingState,
        renderDfd,
        router.window
    ]);
    _react.useEffect(()=>{
        if (renderDfd && pendingState && state.location.key === pendingState.location.key) renderDfd.resolve();
    }, [
        renderDfd,
        transition,
        state.location,
        pendingState
    ]);
    _react.useEffect(()=>{
        if (!vtContext.isTransitioning && interruption) {
            setPendingState(interruption.state);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: interruption.currentLocation,
                nextLocation: interruption.nextLocation
            });
            setInterruption(void 0);
        }
    }, [
        vtContext.isTransitioning,
        interruption
    ]);
    let navigator2 = _react.useMemo(()=>{
        return {
            createHref: router.createHref,
            encodeLocation: router.encodeLocation,
            go: (n)=>router.navigate(n),
            push: (to, state2, opts)=>router.navigate(to, {
                    state: state2,
                    preventScrollReset: opts?.preventScrollReset
                }),
            replace: (to, state2, opts)=>router.navigate(to, {
                    replace: true,
                    state: state2,
                    preventScrollReset: opts?.preventScrollReset
                })
        };
    }, [
        router
    ]);
    let basename = router.basename || "/";
    let dataRouterContext = _react.useMemo(()=>({
            router,
            navigator: navigator2,
            static: false,
            basename
        }), [
        router,
        navigator2,
        basename
    ]);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(DataRouterContext.Provider, {
        value: dataRouterContext
    }, /* @__PURE__ */ _react.createElement(DataRouterStateContext.Provider, {
        value: state
    }, /* @__PURE__ */ _react.createElement(FetchersContext.Provider, {
        value: fetcherData.current
    }, /* @__PURE__ */ _react.createElement(ViewTransitionContext.Provider, {
        value: vtContext
    }, /* @__PURE__ */ _react.createElement(Router, {
        basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: navigator2
    }, /* @__PURE__ */ _react.createElement(MemoizedDataRoutes, {
        routes: router.routes,
        future: router.future,
        state
    })))))), null);
}
var MemoizedDataRoutes = _react.memo(DataRoutes);
function DataRoutes({ routes, future, state }) {
    return useRoutesImpl(routes, void 0, state, future);
}
function MemoryRouter({ basename, children, initialEntries, initialIndex }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createMemoryHistory({
        initialEntries,
        initialIndex,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function Navigate({ to, replace: replace2, state, relative }) {
    invariant(useInRouterContext(), // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    `<Navigate> may be used only in the context of a <Router> component.`);
    let { static: isStatic } = _react.useContext(NavigationContext);
    warning(!isStatic, `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let navigate = useNavigate();
    let path = resolveTo(to, getResolveToMatches(matches), locationPathname, relative === "path");
    let jsonPath = JSON.stringify(path);
    _react.useEffect(()=>{
        navigate(JSON.parse(jsonPath), {
            replace: replace2,
            state,
            relative
        });
    }, [
        navigate,
        jsonPath,
        relative,
        replace2,
        state
    ]);
    return null;
}
function Outlet(props) {
    return useOutlet(props.context);
}
function Route(_props) {
    invariant(false, `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`);
}
function Router({ basename: basenameProp = "/", children = null, location: locationProp, navigationType = "POP" /* Pop */ , navigator: navigator2, static: staticProp = false }) {
    invariant(!useInRouterContext(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);
    let basename = basenameProp.replace(/^\/*/, "/");
    let navigationContext = _react.useMemo(()=>({
            basename,
            navigator: navigator2,
            static: staticProp,
            future: {}
        }), [
        basename,
        navigator2,
        staticProp
    ]);
    if (typeof locationProp === "string") locationProp = parsePath(locationProp);
    let { pathname = "/", search = "", hash = "", state = null, key = "default" } = locationProp;
    let locationContext = _react.useMemo(()=>{
        let trailingPathname = stripBasename(pathname, basename);
        if (trailingPathname == null) return null;
        return {
            location: {
                pathname: trailingPathname,
                search,
                hash,
                state,
                key
            },
            navigationType
        };
    }, [
        basename,
        pathname,
        search,
        hash,
        state,
        key,
        navigationType
    ]);
    warning(locationContext != null, `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`);
    if (locationContext == null) return null;
    return /* @__PURE__ */ _react.createElement(NavigationContext.Provider, {
        value: navigationContext
    }, /* @__PURE__ */ _react.createElement(LocationContext.Provider, {
        children,
        value: locationContext
    }));
}
function Routes({ children, location }) {
    return useRoutes(createRoutesFromChildren(children), location);
}
function Await({ children, errorElement, resolve }) {
    return /* @__PURE__ */ _react.createElement(AwaitErrorBoundary, {
        resolve,
        errorElement
    }, /* @__PURE__ */ _react.createElement(ResolveAwait, null, children));
}
var AwaitErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            error: null
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
    }
    render() {
        let { children, errorElement, resolve } = this.props;
        let promise = null;
        let status = 0 /* pending */ ;
        if (!(resolve instanceof Promise)) {
            status = 1 /* success */ ;
            promise = Promise.resolve();
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_data", {
                get: ()=>resolve
            });
        } else if (this.state.error) {
            status = 2 /* error */ ;
            let renderError = this.state.error;
            promise = Promise.reject().catch(()=>{});
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_error", {
                get: ()=>renderError
            });
        } else if (resolve._tracked) {
            promise = resolve;
            status = "_error" in promise ? 2 /* error */  : "_data" in promise ? 1 /* success */  : 0 /* pending */ ;
        } else {
            status = 0 /* pending */ ;
            Object.defineProperty(resolve, "_tracked", {
                get: ()=>true
            });
            promise = resolve.then((data2)=>Object.defineProperty(resolve, "_data", {
                    get: ()=>data2
                }), (error)=>Object.defineProperty(resolve, "_error", {
                    get: ()=>error
                }));
        }
        if (status === 2 /* error */  && !errorElement) throw promise._error;
        if (status === 2 /* error */ ) return /* @__PURE__ */ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
        });
        if (status === 1 /* success */ ) return /* @__PURE__ */ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children
        });
        throw promise;
    }
};
function ResolveAwait({ children }) {
    let data2 = useAsyncValue();
    let toRender = typeof children === "function" ? children(data2) : children;
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath = []) {
    let routes = [];
    _react.Children.forEach(children, (element, index)=>{
        if (!_react.isValidElement(element)) return;
        let treePath = [
            ...parentPath,
            index
        ];
        if (element.type === _react.Fragment) {
            routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
            return;
        }
        invariant(element.type === Route, `[${typeof element.type === "string" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`);
        invariant(!element.props.index || !element.props.children, "An index route cannot have child routes.");
        let route = {
            id: element.props.id || treePath.join("-"),
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            Component: element.props.Component,
            index: element.props.index,
            path: element.props.path,
            loader: element.props.loader,
            action: element.props.action,
            hydrateFallbackElement: element.props.hydrateFallbackElement,
            HydrateFallback: element.props.HydrateFallback,
            errorElement: element.props.errorElement,
            ErrorBoundary: element.props.ErrorBoundary,
            hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,
            shouldRevalidate: element.props.shouldRevalidate,
            handle: element.props.handle,
            lazy: element.props.lazy
        };
        if (element.props.children) route.children = createRoutesFromChildren(element.props.children, treePath);
        routes.push(route);
    });
    return routes;
}
var createRoutesFromElements = createRoutesFromChildren;
function renderMatches(matches) {
    return _renderMatches(matches);
}
// lib/dom/dom.ts
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
    return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
    return event.button === 0 && // Ignore everything but left clicks
    (!target || target === "_self") && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event);
}
function createSearchParams(init = "") {
    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key)=>{
        let value = init[key];
        return memo2.concat(Array.isArray(value) ? value.map((v)=>[
                key,
                v
            ]) : [
            [
                key,
                value
            ]
        ]);
    }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
    let searchParams = createSearchParams(locationSearch);
    if (defaultSearchParams) defaultSearchParams.forEach((_, key)=>{
        if (!searchParams.has(key)) defaultSearchParams.getAll(key).forEach((value)=>{
            searchParams.append(key, value);
        });
    });
    return searchParams;
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
    if (_formDataSupportsSubmitter === null) try {
        new FormData(document.createElement("form"), // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0);
        _formDataSupportsSubmitter = false;
    } catch (e) {
        _formDataSupportsSubmitter = true;
    }
    return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
]);
function getFormEncType(encType) {
    if (encType != null && !supportedFormEncTypes.has(encType)) {
        warning(false, `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`);
        return null;
    }
    return encType;
}
function getFormSubmissionInfo(target, basename) {
    let method;
    let action;
    let encType;
    let formData;
    let body;
    if (isFormElement(target)) {
        let attr = target.getAttribute("action");
        action = attr ? stripBasename(attr, basename) : null;
        method = target.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
        formData = new FormData(target);
    } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
        let form = target.form;
        if (form == null) throw new Error(`Cannot submit a <button> or <input type="submit"> without a <form>`);
        let attr = target.getAttribute("formaction") || form.getAttribute("action");
        action = attr ? stripBasename(attr, basename) : null;
        method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
        formData = new FormData(form, target);
        if (!isFormDataSubmitterSupported()) {
            let { name, type, value } = target;
            if (type === "image") {
                let prefix = name ? `${name}.` : "";
                formData.append(`${prefix}x`, "0");
                formData.append(`${prefix}y`, "0");
            } else if (name) formData.append(name, value);
        }
    } else if (isHtmlElement(target)) throw new Error(`Cannot submit element that is not <form>, <button>, or <input type="submit|image">`);
    else {
        method = defaultMethod;
        action = null;
        encType = defaultEncType;
        body = target;
    }
    if (formData && encType === "text/plain") {
        body = formData;
        formData = void 0;
    }
    return {
        action,
        method: method.toLowerCase(),
        encType,
        formData,
        body
    };
}
// lib/dom/ssr/invariant.ts
function invariant2(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
// lib/dom/ssr/routeModules.ts
async function loadRouteModule(route, routeModulesCache) {
    if (route.id in routeModulesCache) return routeModulesCache[route.id];
    try {
        let routeModule = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.module);
        routeModulesCache[route.id] = routeModule;
        return routeModule;
    } catch (error) {
        console.error(`Error loading route module \`${route.module}\`, reloading page...`);
        console.error(error);
        if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error
        $86f1a5c7ac1383a4$import_meta.hot) throw error;
        window.location.reload();
        return new Promise(()=>{});
    }
}
// lib/dom/ssr/links.ts
function getKeyedLinksForMatches(matches, routeModules, manifest) {
    let descriptors = matches.map((match)=>{
        let module = routeModules[match.route.id];
        let route = manifest.routes[match.route.id];
        return [
            route && route.css ? route.css.map((href2)=>({
                    rel: "stylesheet",
                    href: href2
                })) : [],
            module?.links?.() || []
        ];
    }).flat(2);
    let preloads = getModuleLinkHrefs(matches, manifest);
    return dedupeLinkDescriptors(descriptors, preloads);
}
function getRouteCssDescriptors(route) {
    if (!route.css) return [];
    return route.css.map((href2)=>({
            rel: "stylesheet",
            href: href2
        }));
}
async function prefetchRouteCss(route) {
    if (!route.css) return;
    let descriptors = getRouteCssDescriptors(route);
    await Promise.all(descriptors.map(prefetchStyleLink));
}
async function prefetchStyleLinks(route, routeModule) {
    if (!route.css && !routeModule.links || !isPreloadSupported()) return;
    let descriptors = [];
    if (route.css) descriptors.push(...getRouteCssDescriptors(route));
    if (routeModule.links) descriptors.push(...routeModule.links());
    if (descriptors.length === 0) return;
    let styleLinks = [];
    for (let descriptor of descriptors)if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") styleLinks.push({
        ...descriptor,
        rel: "preload",
        as: "style"
    });
    await Promise.all(styleLinks.map(prefetchStyleLink));
}
async function prefetchStyleLink(descriptor) {
    return new Promise((resolve)=>{
        if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel="stylesheet"][href="${descriptor.href}"]`)) return resolve();
        let link = document.createElement("link");
        Object.assign(link, descriptor);
        function removeLink() {
            if (document.head.contains(link)) document.head.removeChild(link);
        }
        link.onload = ()=>{
            removeLink();
            resolve();
        };
        link.onerror = ()=>{
            removeLink();
            resolve();
        };
        document.head.appendChild(link);
    });
}
function isPageLinkDescriptor(object) {
    return object != null && typeof object.page === "string";
}
function isHtmlLinkDescriptor(object) {
    if (object == null) return false;
    if (object.href == null) return object.rel === "preload" && typeof object.imageSrcSet === "string" && typeof object.imageSizes === "string";
    return typeof object.rel === "string" && typeof object.href === "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
    let links = await Promise.all(matches.map(async (match)=>{
        let route = manifest.routes[match.route.id];
        if (route) {
            let mod = await loadRouteModule(route, routeModules);
            return mod.links ? mod.links() : [];
        }
        return [];
    }));
    return dedupeLinkDescriptors(links.flat(1).filter(isHtmlLinkDescriptor).filter((link)=>link.rel === "stylesheet" || link.rel === "preload").map((link)=>link.rel === "stylesheet" ? {
            ...link,
            rel: "prefetch",
            as: "style"
        } : {
            ...link,
            rel: "prefetch"
        }));
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
    let isNew = (match, index)=>{
        if (!currentMatches[index]) return true;
        return match.route.id !== currentMatches[index].route.id;
    };
    let matchPathChanged = (match, index)=>{
        return(// param change, /users/123 -> /users/456
        currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
        // e.g. /files/images/avatar.jpg -> files/finances.xls
        currentMatches[index].route.path?.endsWith("*") && currentMatches[index].params["*"] !== match.params["*"]);
    };
    if (mode === "assets") return nextMatches.filter((match, index)=>isNew(match, index) || matchPathChanged(match, index));
    if (mode === "data") return nextMatches.filter((match, index)=>{
        let manifestRoute = manifest.routes[match.route.id];
        if (!manifestRoute || !manifestRoute.hasLoader) return false;
        if (isNew(match, index) || matchPathChanged(match, index)) return true;
        if (match.route.shouldRevalidate) {
            let routeChoice = match.route.shouldRevalidate({
                currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
                currentParams: currentMatches[0]?.params || {},
                nextUrl: new URL(page, window.origin),
                nextParams: match.params,
                defaultShouldRevalidate: true
            });
            if (typeof routeChoice === "boolean") return routeChoice;
        }
        return true;
    });
    return [];
}
function getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {
    return dedupeHrefs(matches.map((match)=>{
        let route = manifest.routes[match.route.id];
        if (!route) return [];
        let hrefs = [
            route.module
        ];
        if (route.clientActionModule) hrefs = hrefs.concat(route.clientActionModule);
        if (route.clientLoaderModule) hrefs = hrefs.concat(route.clientLoaderModule);
        if (includeHydrateFallback && route.hydrateFallbackModule) hrefs = hrefs.concat(route.hydrateFallbackModule);
        if (route.imports) hrefs = hrefs.concat(route.imports);
        return hrefs;
    }).flat(1));
}
function dedupeHrefs(hrefs) {
    return [
        ...new Set(hrefs)
    ];
}
function sortKeys(obj) {
    let sorted = {};
    let keys = Object.keys(obj).sort();
    for (let key of keys)sorted[key] = obj[key];
    return sorted;
}
function dedupeLinkDescriptors(descriptors, preloads) {
    let set = /* @__PURE__ */ new Set();
    let preloadsSet = new Set(preloads);
    return descriptors.reduce((deduped, descriptor)=>{
        let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href);
        if (alreadyModulePreload) return deduped;
        let key = JSON.stringify(sortKeys(descriptor));
        if (!set.has(key)) {
            set.add(key);
            deduped.push({
                key,
                link: descriptor
            });
        }
        return deduped;
    }, []);
}
var _isPreloadSupported;
function isPreloadSupported() {
    if (_isPreloadSupported !== void 0) return _isPreloadSupported;
    let el = document.createElement("link");
    _isPreloadSupported = el.relList.supports("preload");
    el = null;
    return _isPreloadSupported;
}
// lib/dom/ssr/markup.ts
var ESCAPE_LOOKUP = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX = /[&><\u2028\u2029]/g;
function escapeHtml(html) {
    return html.replace(ESCAPE_REGEX, (match)=>ESCAPE_LOOKUP[match]);
}
function createHtml(html) {
    return {
        __html: html
    };
}
// lib/dom/ssr/data.ts
async function createRequestInit(request) {
    let init = {
        signal: request.signal
    };
    if (request.method !== "GET") {
        init.method = request.method;
        let contentType = request.headers.get("Content-Type");
        if (contentType && /\bapplication\/json\b/.test(contentType)) {
            init.headers = {
                "Content-Type": contentType
            };
            init.body = JSON.stringify(await request.json());
        } else if (contentType && /\btext\/plain\b/.test(contentType)) {
            init.headers = {
                "Content-Type": contentType
            };
            init.body = await request.text();
        } else if (contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType)) init.body = new URLSearchParams(await request.text());
        else init.body = await request.formData();
    }
    return init;
}
// lib/dom/ssr/single-fetch.tsx
var SingleFetchRedirectSymbol = Symbol("SingleFetchRedirect");
var SINGLE_FETCH_REDIRECT_STATUS = 202;
var NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([
    100,
    101,
    204,
    205
]);
function StreamTransfer({ context, identifier, reader, textDecoder, nonce }) {
    if (!context.renderMeta || !context.renderMeta.didRenderScripts) return null;
    if (!context.renderMeta.streamCache) context.renderMeta.streamCache = {};
    let { streamCache } = context.renderMeta;
    let promise = streamCache[identifier];
    if (!promise) promise = streamCache[identifier] = reader.read().then((result)=>{
        streamCache[identifier].result = {
            done: result.done,
            value: textDecoder.decode(result.value, {
                stream: true
            })
        };
    }).catch((e)=>{
        streamCache[identifier].error = e;
    });
    if (promise.error) throw promise.error;
    if (promise.result === void 0) throw promise;
    let { done, value } = promise.result;
    let scriptTag = value ? /* @__PURE__ */ _react.createElement("script", {
        nonce,
        dangerouslySetInnerHTML: {
            __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(JSON.stringify(value))});`
        }
    }) : null;
    if (done) return /* @__PURE__ */ _react.createElement(_react.Fragment, null, scriptTag, /* @__PURE__ */ _react.createElement("script", {
        nonce,
        dangerouslySetInnerHTML: {
            __html: `window.__reactRouterContext.streamController.close();`
        }
    }));
    else return /* @__PURE__ */ _react.createElement(_react.Fragment, null, scriptTag, /* @__PURE__ */ _react.createElement(_react.Suspense, null, /* @__PURE__ */ _react.createElement(StreamTransfer, {
        context,
        identifier: identifier + 1,
        reader,
        textDecoder,
        nonce
    })));
}
function getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {
    let dataStrategy = getSingleFetchDataStrategyImpl(getRouter, (match)=>{
        let manifestRoute = manifest.routes[match.route.id];
        invariant2(manifestRoute, "Route not found in manifest");
        let routeModule = routeModules[match.route.id];
        return {
            hasLoader: manifestRoute.hasLoader,
            hasClientLoader: manifestRoute.hasClientLoader,
            hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)
        };
    }, fetchAndDecodeViaTurboStream, ssr, basename);
    return async (args)=>args.unstable_runClientMiddleware(dataStrategy);
}
function getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {
    return async (args)=>{
        let { request, matches, fetcherKey } = args;
        let router = getRouter();
        if (request.method !== "GET") return singleFetchActionStrategy(args, fetchAndDecode, basename);
        let foundRevalidatingServerLoader = matches.some((m)=>{
            let { hasLoader, hasClientLoader } = getRouteInfo(m);
            return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;
        });
        if (!ssr && !foundRevalidatingServerLoader) return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);
        if (fetcherKey) return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);
        return singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename);
    };
}
async function singleFetchActionStrategy(args, fetchAndDecode, basename) {
    let actionMatch = args.matches.find((m)=>m.unstable_shouldCallHandler());
    invariant2(actionMatch, "No action match found");
    let actionStatus = void 0;
    let result = await actionMatch.resolve(async (handler)=>{
        let result2 = await handler(async ()=>{
            let { data: data2, status } = await fetchAndDecode(args, basename, [
                actionMatch.route.id
            ]);
            actionStatus = status;
            return unwrapSingleFetchResult(data2, actionMatch.route.id);
        });
        return result2;
    });
    if (isResponse(result.result) || isRouteErrorResponse(result.result)) return {
        [actionMatch.route.id]: result
    };
    return {
        [actionMatch.route.id]: {
            type: result.type,
            result: data(result.result, actionStatus)
        }
    };
}
async function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {
    let matchesToLoad = args.matches.filter((m)=>m.unstable_shouldCallHandler());
    let results = {};
    await Promise.all(matchesToLoad.map((m)=>m.resolve(async (handler)=>{
            try {
                let { hasClientLoader } = getRouteInfo(m);
                let routeId = m.route.id;
                let result = hasClientLoader ? await handler(async ()=>{
                    let { data: data2 } = await fetchAndDecode(args, basename, [
                        routeId
                    ]);
                    return unwrapSingleFetchResult(data2, routeId);
                }) : await handler();
                results[m.route.id] = {
                    type: "data",
                    result
                };
            } catch (e) {
                results[m.route.id] = {
                    type: "error",
                    result: e
                };
            }
        })));
    return results;
}
async function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename) {
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    let routeDfds = args.matches.map(()=>createDeferred2());
    let singleFetchDfd = createDeferred2();
    let results = {};
    let resolvePromise = Promise.all(args.matches.map(async (m, i)=>m.resolve(async (handler)=>{
            routeDfds[i].resolve();
            let routeId = m.route.id;
            let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);
            let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;
            let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);
            if (!shouldCall) {
                foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,
                hasLoader && // for a route with a server loader,
                hasShouldRevalidate === true);
                return;
            }
            if (hasClientLoader) {
                if (hasLoader) foundOptOutRoute = true;
                try {
                    let result = await handler(async ()=>{
                        let { data: data2 } = await fetchAndDecode(args, basename, [
                            routeId
                        ]);
                        return unwrapSingleFetchResult(data2, routeId);
                    });
                    results[routeId] = {
                        type: "data",
                        result
                    };
                } catch (e) {
                    results[routeId] = {
                        type: "error",
                        result: e
                    };
                }
                return;
            }
            if (hasLoader) routesParams.add(routeId);
            try {
                let result = await handler(async ()=>{
                    let data2 = await singleFetchDfd.promise;
                    return unwrapSingleFetchResult(data2, routeId);
                });
                results[routeId] = {
                    type: "data",
                    result
                };
            } catch (e) {
                results[routeId] = {
                    type: "error",
                    result: e
                };
            }
        })));
    await Promise.all(routeDfds.map((d)=>d.promise));
    let isInitialLoad = !router.state.initialized && router.state.navigation.state === "idle";
    if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) singleFetchDfd.resolve({
        routes: {}
    });
    else {
        let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [
            ...routesParams.keys()
        ] : void 0;
        try {
            let data2 = await fetchAndDecode(args, basename, targetRoutes);
            singleFetchDfd.resolve(data2.data);
        } catch (e) {
            singleFetchDfd.reject(e);
        }
    }
    await resolvePromise;
    return results;
}
async function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {
    let fetcherMatch = args.matches.find((m)=>m.unstable_shouldCallHandler());
    invariant2(fetcherMatch, "No fetcher match found");
    let routeId = fetcherMatch.route.id;
    let result = await fetcherMatch.resolve(async (handler)=>handler(async ()=>{
            let { data: data2 } = await fetchAndDecode(args, basename, [
                routeId
            ]);
            return unwrapSingleFetchResult(data2, routeId);
        }));
    return {
        [fetcherMatch.route.id]: result
    };
}
function stripIndexParam(url) {
    let indexValues = url.searchParams.getAll("index");
    url.searchParams.delete("index");
    let indexValuesToKeep = [];
    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);
    for (let toKeep of indexValuesToKeep)url.searchParams.append("index", toKeep);
    return url;
}
function singleFetchUrl(reqUrl, basename) {
    let url = typeof reqUrl === "string" ? new URL(reqUrl, // This can be called during the SSR flow via PrefetchPageLinksImpl so
    // don't assume window is available
    typeof window === "undefined" ? "server://singlefetch/" : window.location.origin) : reqUrl;
    if (url.pathname === "/") url.pathname = "_root.data";
    else if (basename && stripBasename(url.pathname, basename) === "/") url.pathname = `${basename.replace(/\/$/, "")}/_root.data`;
    else url.pathname = `${url.pathname.replace(/\/$/, "")}.data`;
    return url;
}
async function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {
    let { request } = args;
    let url = singleFetchUrl(request.url, basename);
    if (request.method === "GET") {
        url = stripIndexParam(url);
        if (targetRoutes) url.searchParams.set("_routes", targetRoutes.join(","));
    }
    let res = await fetch(url, await createRequestInit(request));
    if (res.status === 404 && !res.headers.has("X-Remix-Response")) throw new ErrorResponseImpl(404, "Not Found", true);
    if (res.status === 204 && res.headers.has("X-Remix-Redirect")) return {
        status: SINGLE_FETCH_REDIRECT_STATUS,
        data: {
            redirect: {
                redirect: res.headers.get("X-Remix-Redirect"),
                status: Number(res.headers.get("X-Remix-Status") || "302"),
                revalidate: res.headers.get("X-Remix-Revalidate") === "true",
                reload: res.headers.get("X-Remix-Reload-Document") === "true",
                replace: res.headers.get("X-Remix-Replace") === "true"
            }
        }
    };
    if (NO_BODY_STATUS_CODES.has(res.status)) {
        let routes = {};
        if (targetRoutes && request.method !== "GET") routes[targetRoutes[0]] = {
            data: void 0
        };
        return {
            status: res.status,
            data: {
                routes
            }
        };
    }
    invariant2(res.body, "No response body to decode");
    try {
        let decoded = await decodeViaTurboStream(res.body, window);
        let data2;
        if (request.method === "GET") {
            let typed = decoded.value;
            if (SingleFetchRedirectSymbol in typed) data2 = {
                redirect: typed[SingleFetchRedirectSymbol]
            };
            else data2 = {
                routes: typed
            };
        } else {
            let typed = decoded.value;
            let routeId = targetRoutes?.[0];
            invariant2(routeId, "No routeId found for single fetch call decoding");
            if ("redirect" in typed) data2 = {
                redirect: typed
            };
            else data2 = {
                routes: {
                    [routeId]: typed
                }
            };
        }
        return {
            status: res.status,
            data: data2
        };
    } catch (e) {
        throw new Error("Unable to decode turbo-stream response");
    }
}
function decodeViaTurboStream(body, global2) {
    return (0, _turboStream.decode)(body, {
        plugins: [
            (type, ...rest)=>{
                if (type === "SanitizedError") {
                    let [name, message, stack] = rest;
                    let Constructor = Error;
                    if (name && name in global2 && typeof global2[name] === "function") Constructor = global2[name];
                    let error = new Constructor(message);
                    error.stack = stack;
                    return {
                        value: error
                    };
                }
                if (type === "ErrorResponse") {
                    let [data2, status, statusText] = rest;
                    return {
                        value: new ErrorResponseImpl(status, statusText, data2)
                    };
                }
                if (type === "SingleFetchRedirect") return {
                    value: {
                        [SingleFetchRedirectSymbol]: rest[0]
                    }
                };
                if (type === "SingleFetchClassInstance") return {
                    value: rest[0]
                };
                if (type === "SingleFetchFallback") return {
                    value: void 0
                };
            }
        ]
    });
}
function unwrapSingleFetchResult(result, routeId) {
    if ("redirect" in result) {
        let { redirect: location, revalidate, reload, replace: replace2, status } = result.redirect;
        throw redirect(location, {
            status,
            headers: {
                // Three R's of redirecting (lol Veep)
                ...revalidate ? {
                    "X-Remix-Revalidate": "yes"
                } : null,
                ...reload ? {
                    "X-Remix-Reload-Document": "yes"
                } : null,
                ...replace2 ? {
                    "X-Remix-Replace": "yes"
                } : null
            }
        });
    }
    let routeResult = result.routes[routeId];
    if ("error" in routeResult) throw routeResult.error;
    else if ("data" in routeResult) return routeResult.data;
    else throw new Error(`No response found for routeId "${routeId}"`);
}
function createDeferred2() {
    let resolve;
    let reject;
    let promise = new Promise((res, rej)=>{
        resolve = async (val)=>{
            res(val);
            try {
                await promise;
            } catch (e) {}
        };
        reject = async (error)=>{
            rej(error);
            try {
                await promise;
            } catch (e) {}
        };
    });
    return {
        promise,
        //@ts-ignore
        resolve,
        //@ts-ignore
        reject
    };
}
var RemixErrorBoundary = class extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            error: props.error || null,
            location: props.location
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    static getDerivedStateFromProps(props, state) {
        if (state.location !== props.location) return {
            error: props.error || null,
            location: props.location
        };
        return {
            error: props.error || state.error,
            location: state.location
        };
    }
    render() {
        if (this.state.error) return /* @__PURE__ */ _react.createElement(RemixRootDefaultErrorBoundary, {
            error: this.state.error,
            isOutsideRemixApp: true
        });
        else return this.props.children;
    }
};
function RemixRootDefaultErrorBoundary({ error, isOutsideRemixApp }) {
    console.error(error);
    let heyDeveloper = /* @__PURE__ */ _react.createElement("script", {
        dangerouslySetInnerHTML: {
            __html: `
        console.log(
          "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
        );
      `
        }
    });
    if (isRouteErrorResponse(error)) return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Unhandled Thrown Response!"
    }, /* @__PURE__ */ _react.createElement("h1", {
        style: {
            fontSize: "24px"
        }
    }, error.status, " ", error.statusText), heyDeveloper);
    let errorInstance;
    if (error instanceof Error) errorInstance = error;
    else {
        let errorString = error == null ? "Unknown Error" : typeof error === "object" && "toString" in error ? error.toString() : JSON.stringify(error);
        errorInstance = new Error(errorString);
    }
    return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Application Error!",
        isOutsideRemixApp
    }, /* @__PURE__ */ _react.createElement("h1", {
        style: {
            fontSize: "24px"
        }
    }, "Application Error"), /* @__PURE__ */ _react.createElement("pre", {
        style: {
            padding: "2rem",
            background: "hsla(10, 50%, 50%, 0.1)",
            color: "red",
            overflow: "auto"
        }
    }, errorInstance.stack), heyDeveloper);
}
function BoundaryShell({ title, renderScripts, isOutsideRemixApp, children }) {
    let { routeModules } = useFrameworkContext();
    if (routeModules.root?.Layout && !isOutsideRemixApp) return children;
    return /* @__PURE__ */ _react.createElement("html", {
        lang: "en"
    }, /* @__PURE__ */ _react.createElement("head", null, /* @__PURE__ */ _react.createElement("meta", {
        charSet: "utf-8"
    }), /* @__PURE__ */ _react.createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
    }), /* @__PURE__ */ _react.createElement("title", null, title)), /* @__PURE__ */ _react.createElement("body", null, /* @__PURE__ */ _react.createElement("main", {
        style: {
            fontFamily: "system-ui, sans-serif",
            padding: "2rem"
        }
    }, children, renderScripts ? /* @__PURE__ */ _react.createElement(Scripts, null) : null)));
}
function RemixRootDefaultHydrateFallback() {
    return /* @__PURE__ */ _react.createElement(BoundaryShell, {
        title: "Loading...",
        renderScripts: true
    }, /* @__PURE__ */ _react.createElement("script", {
        dangerouslySetInnerHTML: {
            __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this " +
                "when your app is loading JS modules and/or running \`clientLoader\` " +
                "functions. Check out https://remix.run/route/hydrate-fallback " +
                "for more information."
              );
            `
        }
    }));
}
// lib/dom/ssr/routes.tsx
function groupRoutesByParentId(manifest) {
    let routes = {};
    Object.values(manifest).forEach((route)=>{
        if (route) {
            let parentId = route.parentId || "";
            if (!routes[parentId]) routes[parentId] = [];
            routes[parentId].push(route);
        }
    });
    return routes;
}
function getRouteComponents(route, routeModule, isSpaMode) {
    let Component4 = getRouteModuleComponent(routeModule);
    let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === "root") ? routeModule.HydrateFallback : route.id === "root" ? RemixRootDefaultHydrateFallback : void 0;
    let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === "root" ? ()=>/* @__PURE__ */ _react.createElement(RemixRootDefaultErrorBoundary, {
            error: useRouteError()
        }) : void 0;
    if (route.id === "root" && routeModule.Layout) return {
        ...Component4 ? {
            element: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(Component4, null))
        } : {
            Component: Component4
        },
        ...ErrorBoundary ? {
            errorElement: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(ErrorBoundary, null))
        } : {
            ErrorBoundary
        },
        ...HydrateFallback ? {
            hydrateFallbackElement: /* @__PURE__ */ _react.createElement(routeModule.Layout, null, /* @__PURE__ */ _react.createElement(HydrateFallback, null))
        } : {
            HydrateFallback
        }
    };
    return {
        Component: Component4,
        ErrorBoundary,
        HydrateFallback
    };
}
function createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({
    Component: ()=>null
})) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let routeModule = routeModules[route.id];
        invariant2(routeModule, "No `routeModule` available to create server routes");
        let dataRoute = {
            ...getRouteComponents(route, routeModule, isSpaMode),
            caseSensitive: route.caseSensitive,
            id: route.id,
            index: route.index,
            path: route.path,
            handle: routeModule.handle,
            // For SPA Mode, all routes are lazy except root.  However we tell the
            // router root is also lazy here too since we don't need a full
            // implementation - we just need a `lazy` prop to tell the RR rendering
            // where to stop which is always at the root route in SPA mode
            lazy: isSpaMode ? ()=>spaModeLazyPromise : void 0,
            // For partial hydration rendering, we need to indicate when the route
            // has a loader/clientLoader, but it won't ever be called during the static
            // render, so just give it a no-op function so we can render down to the
            // proper fallback
            loader: route.hasLoader || route.hasClientLoader ? ()=>null : void 0
        };
        let children = createServerRoutes(manifest, routeModules, future, isSpaMode, route.id, routesByParentId, spaModeLazyPromise);
        if (children.length > 0) dataRoute.children = children;
        return dataRoute;
    });
}
function createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {
    return createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, "", groupRoutesByParentId(manifest), needsRevalidation);
}
function preventInvalidServerHandlerCall(type, route) {
    if (type === "loader" && !route.hasLoader || type === "action" && !route.hasAction) {
        let fn = type === "action" ? "serverAction()" : "serverLoader()";
        let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: "${route.id}")`;
        console.error(msg);
        throw new ErrorResponseImpl(400, "Bad Request", new Error(msg), true);
    }
}
function noActionDefinedError(type, routeId) {
    let article = type === "clientAction" ? "a" : "an";
    let msg = `Route "${routeId}" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \`${type}\` function to the route`;
    console.error(msg);
    throw new ErrorResponseImpl(405, "Method Not Allowed", new Error(msg), true);
}
function createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let routeModule = routeModulesCache[route.id];
        function fetchServerHandler(singleFetch) {
            invariant2(typeof singleFetch === "function", "No single fetch function available for route handler");
            return singleFetch();
        }
        function fetchServerLoader(singleFetch) {
            if (!route.hasLoader) return Promise.resolve(null);
            return fetchServerHandler(singleFetch);
        }
        function fetchServerAction(singleFetch) {
            if (!route.hasAction) throw noActionDefinedError("action", route.id);
            return fetchServerHandler(singleFetch);
        }
        function prefetchModule(modulePath) {
            import(/* @vite-ignore */ /* webpackIgnore: true */ modulePath);
        }
        function prefetchRouteModuleChunks(route2) {
            if (route2.clientActionModule) prefetchModule(route2.clientActionModule);
            if (route2.clientLoaderModule) prefetchModule(route2.clientLoaderModule);
        }
        async function prefetchStylesAndCallHandler(handler) {
            let cachedModule = routeModulesCache[route.id];
            let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();
            try {
                return handler();
            } finally{
                await linkPrefetchPromise;
            }
        }
        let dataRoute = {
            id: route.id,
            index: route.index,
            path: route.path
        };
        if (routeModule) {
            Object.assign(dataRoute, {
                ...dataRoute,
                ...getRouteComponents(route, routeModule, isSpaMode),
                unstable_middleware: routeModule.unstable_clientMiddleware,
                handle: routeModule.handle,
                shouldRevalidate: getShouldRevalidateFunction(dataRoute.path, routeModule, route, ssr, needsRevalidation)
            });
            let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;
            let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;
            let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;
            let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;
            let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);
            dataRoute.loader = async ({ request, params, context }, singleFetch)=>{
                try {
                    let result = await prefetchStylesAndCallHandler(async ()=>{
                        invariant2(routeModule, "No `routeModule` available for critical-route loader");
                        if (!routeModule.clientLoader) return fetchServerLoader(singleFetch);
                        return routeModule.clientLoader({
                            request,
                            params,
                            context,
                            async serverLoader () {
                                preventInvalidServerHandlerCall("loader", route);
                                if (isHydrationRequest) {
                                    if (hasInitialData) return initialData;
                                    if (hasInitialError) throw initialError;
                                }
                                return fetchServerLoader(singleFetch);
                            }
                        });
                    });
                    return result;
                } finally{
                    isHydrationRequest = false;
                }
            };
            dataRoute.loader.hydrate = shouldHydrateRouteLoader(route.id, routeModule.clientLoader, route.hasLoader, isSpaMode);
            dataRoute.action = ({ request, params, context }, singleFetch)=>{
                return prefetchStylesAndCallHandler(async ()=>{
                    invariant2(routeModule, "No `routeModule` available for critical-route action");
                    if (!routeModule.clientAction) {
                        if (isSpaMode) throw noActionDefinedError("clientAction", route.id);
                        return fetchServerAction(singleFetch);
                    }
                    return routeModule.clientAction({
                        request,
                        params,
                        context,
                        async serverAction () {
                            preventInvalidServerHandlerCall("action", route);
                            return fetchServerAction(singleFetch);
                        }
                    });
                });
            };
        } else {
            if (!route.hasClientLoader) dataRoute.loader = (_, singleFetch)=>prefetchStylesAndCallHandler(()=>{
                    return fetchServerLoader(singleFetch);
                });
            if (!route.hasClientAction) dataRoute.action = (_, singleFetch)=>prefetchStylesAndCallHandler(()=>{
                    if (isSpaMode) throw noActionDefinedError("clientAction", route.id);
                    return fetchServerAction(singleFetch);
                });
            let lazyRoutePromise;
            async function getLazyRoute() {
                if (lazyRoutePromise) return await lazyRoutePromise;
                lazyRoutePromise = (async ()=>{
                    if (route.clientLoaderModule || route.clientActionModule) await new Promise((resolve)=>setTimeout(resolve, 0));
                    let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModulesCache);
                    prefetchRouteModuleChunks(route);
                    return await routeModulePromise;
                })();
                return await lazyRoutePromise;
            }
            dataRoute.lazy = {
                loader: route.hasClientLoader ? async ()=>{
                    let { clientLoader } = route.clientLoaderModule ? await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientLoaderModule) : await getLazyRoute();
                    invariant2(clientLoader, "No `clientLoader` export found");
                    return (args, singleFetch)=>clientLoader({
                            ...args,
                            async serverLoader () {
                                preventInvalidServerHandlerCall("loader", route);
                                return fetchServerLoader(singleFetch);
                            }
                        });
                } : void 0,
                action: route.hasClientAction ? async ()=>{
                    let clientActionPromise = route.clientActionModule ? import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientActionModule) : getLazyRoute();
                    prefetchRouteModuleChunks(route);
                    let { clientAction } = await clientActionPromise;
                    invariant2(clientAction, "No `clientAction` export found");
                    return (args, singleFetch)=>clientAction({
                            ...args,
                            async serverAction () {
                                preventInvalidServerHandlerCall("action", route);
                                return fetchServerAction(singleFetch);
                            }
                        });
                } : void 0,
                unstable_middleware: route.hasClientMiddleware ? async ()=>{
                    let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientMiddlewareModule) : await getLazyRoute();
                    invariant2(unstable_clientMiddleware, "No `unstable_clientMiddleware` export found");
                    return unstable_clientMiddleware;
                } : void 0,
                shouldRevalidate: async ()=>{
                    let lazyRoute = await getLazyRoute();
                    return getShouldRevalidateFunction(dataRoute.path, lazyRoute, route, ssr, needsRevalidation);
                },
                handle: async ()=>(await getLazyRoute()).handle,
                // No need to wrap these in layout since the root route is never
                // loaded via route.lazy()
                Component: async ()=>(await getLazyRoute()).Component,
                ErrorBoundary: route.hasErrorBoundary ? async ()=>(await getLazyRoute()).ErrorBoundary : void 0
            };
        }
        let children = createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);
        if (children.length > 0) dataRoute.children = children;
        return dataRoute;
    });
}
function getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {
    if (needsRevalidation) return wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);
    if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {
        let myParams = path ? compilePath(path)[1].map((p)=>p.paramName) : [];
        const didParamsChange = (opts)=>myParams.some((p)=>opts.currentParams[p] !== opts.nextParams[p]);
        if (route.shouldRevalidate) {
            let fn = route.shouldRevalidate;
            return (opts)=>fn({
                    ...opts,
                    defaultShouldRevalidate: didParamsChange(opts)
                });
        } else return (opts)=>didParamsChange(opts);
    }
    if (ssr && route.shouldRevalidate) {
        let fn = route.shouldRevalidate;
        return (opts)=>fn({
                ...opts,
                defaultShouldRevalidate: true
            });
    }
    return route.shouldRevalidate;
}
function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {
    let handledRevalidation = false;
    return (arg)=>{
        if (!handledRevalidation) {
            handledRevalidation = true;
            return needsRevalidation.has(routeId);
        }
        return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;
    };
}
async function loadRouteModuleWithBlockingLinks(route, routeModules) {
    let routeModulePromise = loadRouteModule(route, routeModules);
    let prefetchRouteCssPromise = prefetchRouteCss(route);
    let routeModule = await routeModulePromise;
    await Promise.all([
        prefetchRouteCssPromise,
        prefetchStyleLinks(route, routeModule)
    ]);
    return {
        Component: getRouteModuleComponent(routeModule),
        ErrorBoundary: routeModule.ErrorBoundary,
        unstable_clientMiddleware: routeModule.unstable_clientMiddleware,
        clientAction: routeModule.clientAction,
        clientLoader: routeModule.clientLoader,
        handle: routeModule.handle,
        links: routeModule.links,
        meta: routeModule.meta,
        shouldRevalidate: routeModule.shouldRevalidate
    };
}
function getRouteModuleComponent(routeModule) {
    if (routeModule.default == null) return void 0;
    let isEmptyObject = typeof routeModule.default === "object" && Object.keys(routeModule.default).length === 0;
    if (!isEmptyObject) return routeModule.default;
}
function shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {
    return isSpaMode && routeId !== "root" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);
}
// lib/dom/ssr/fog-of-war.ts
var nextPaths = /* @__PURE__ */ new Set();
var discoveredPathsMaxSize = 1e3;
var discoveredPaths = /* @__PURE__ */ new Set();
var URL_LIMIT = 7680;
function isFogOfWarEnabled(ssr) {
    return ssr === true;
}
function getPartialManifest({ sri, ...manifest }, router) {
    let routeIds = new Set(router.state.matches.map((m)=>m.route.id));
    let segments = router.state.location.pathname.split("/").filter(Boolean);
    let paths = [
        "/"
    ];
    segments.pop();
    while(segments.length > 0){
        paths.push(`/${segments.join("/")}`);
        segments.pop();
    }
    paths.forEach((path)=>{
        let matches = matchRoutes(router.routes, path, router.basename);
        if (matches) matches.forEach((m)=>routeIds.add(m.route.id));
    });
    let initialRoutes = [
        ...routeIds
    ].reduce((acc, id)=>Object.assign(acc, {
            [id]: manifest.routes[id]
        }), {});
    return {
        ...manifest,
        routes: initialRoutes,
        sri: sri ? true : void 0
    };
}
function getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {
    if (!isFogOfWarEnabled(ssr)) return void 0;
    return async ({ path, patch, signal, fetcherKey })=>{
        if (discoveredPaths.has(path)) return;
        await fetchAndApplyManifestPatches([
            path
        ], fetcherKey ? window.location.href : path, manifest, routeModules, ssr, isSpaMode, basename, patch, signal);
    };
}
function useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {
    _react.useEffect(()=>{
        if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) return;
        function registerElement(el) {
            let path = el.tagName === "FORM" ? el.getAttribute("action") : el.getAttribute("href");
            if (!path) return;
            let pathname = el.tagName === "A" ? el.pathname : new URL(path, window.location.origin).pathname;
            if (!discoveredPaths.has(pathname)) nextPaths.add(pathname);
        }
        async function fetchPatches() {
            document.querySelectorAll("a[data-discover], form[data-discover]").forEach(registerElement);
            let lazyPaths = Array.from(nextPaths.keys()).filter((path)=>{
                if (discoveredPaths.has(path)) {
                    nextPaths.delete(path);
                    return false;
                }
                return true;
            });
            if (lazyPaths.length === 0) return;
            try {
                await fetchAndApplyManifestPatches(lazyPaths, null, manifest, routeModules, ssr, isSpaMode, router.basename, router.patchRoutes);
            } catch (e) {
                console.error("Failed to fetch manifest patches", e);
            }
        }
        let debouncedFetchPatches = debounce(fetchPatches, 100);
        fetchPatches();
        let observer = new MutationObserver(()=>debouncedFetchPatches());
        observer.observe(document.documentElement, {
            subtree: true,
            childList: true,
            attributes: true,
            attributeFilter: [
                "data-discover",
                "href",
                "action"
            ]
        });
        return ()=>observer.disconnect();
    }, [
        ssr,
        isSpaMode,
        manifest,
        routeModules,
        router
    ]);
}
var MANIFEST_VERSION_STORAGE_KEY = "react-router-manifest-version";
async function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {
    let manifestPath = `${basename != null ? basename : "/"}/__manifest`.replace(/\/+/g, "/");
    let url = new URL(manifestPath, window.location.origin);
    paths.sort().forEach((path)=>url.searchParams.append("p", path));
    url.searchParams.set("version", manifest.version);
    if (url.toString().length > URL_LIMIT) {
        nextPaths.clear();
        return;
    }
    let serverPatches;
    try {
        let res = await fetch(url, {
            signal
        });
        if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);
        else if (res.status === 204 && res.headers.has("X-Remix-Reload-Document")) {
            if (!errorReloadPath) {
                console.warn("Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.");
                return;
            }
            if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {
                console.error("Unable to discover routes due to manifest version mismatch.");
                return;
            }
            sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);
            window.location.href = errorReloadPath;
            throw new Error("Detected manifest version mismatch, reloading...");
        } else if (res.status >= 400) throw new Error(await res.text());
        sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);
        serverPatches = await res.json();
    } catch (e) {
        if (signal?.aborted) return;
        throw e;
    }
    let knownRoutes = new Set(Object.keys(manifest.routes));
    let patches = Object.values(serverPatches).reduce((acc, route)=>{
        if (route && !knownRoutes.has(route.id)) acc[route.id] = route;
        return acc;
    }, {});
    Object.assign(manifest.routes, patches);
    paths.forEach((p)=>addToFifoQueue(p, discoveredPaths));
    let parentIds = /* @__PURE__ */ new Set();
    Object.values(patches).forEach((patch)=>{
        if (patch && (!patch.parentId || !patches[patch.parentId])) parentIds.add(patch.parentId);
    });
    parentIds.forEach((parentId)=>patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)));
}
function addToFifoQueue(path, queue) {
    if (queue.size >= discoveredPathsMaxSize) {
        let first = queue.values().next().value;
        queue.delete(first);
    }
    queue.add(path);
}
function debounce(callback, wait) {
    let timeoutId;
    return (...args)=>{
        window.clearTimeout(timeoutId);
        timeoutId = window.setTimeout(()=>callback(...args), wait);
    };
}
// lib/dom/ssr/components.tsx
function useDataRouterContext2() {
    let context = _react.useContext(DataRouterContext);
    invariant2(context, "You must render this element inside a <DataRouterContext.Provider> element");
    return context;
}
function useDataRouterStateContext() {
    let context = _react.useContext(DataRouterStateContext);
    invariant2(context, "You must render this element inside a <DataRouterStateContext.Provider> element");
    return context;
}
var FrameworkContext = _react.createContext(void 0);
FrameworkContext.displayName = "FrameworkContext";
function useFrameworkContext() {
    let context = _react.useContext(FrameworkContext);
    invariant2(context, "You must render this element inside a <HydratedRouter> element");
    return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
    let frameworkContext = _react.useContext(FrameworkContext);
    let [maybePrefetch, setMaybePrefetch] = _react.useState(false);
    let [shouldPrefetch, setShouldPrefetch] = _react.useState(false);
    let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;
    let ref = _react.useRef(null);
    _react.useEffect(()=>{
        if (prefetch === "render") setShouldPrefetch(true);
        if (prefetch === "viewport") {
            let callback = (entries)=>{
                entries.forEach((entry)=>{
                    setShouldPrefetch(entry.isIntersecting);
                });
            };
            let observer = new IntersectionObserver(callback, {
                threshold: 0.5
            });
            if (ref.current) observer.observe(ref.current);
            return ()=>{
                observer.disconnect();
            };
        }
    }, [
        prefetch
    ]);
    _react.useEffect(()=>{
        if (maybePrefetch) {
            let id = setTimeout(()=>{
                setShouldPrefetch(true);
            }, 100);
            return ()=>{
                clearTimeout(id);
            };
        }
    }, [
        maybePrefetch
    ]);
    let setIntent = ()=>{
        setMaybePrefetch(true);
    };
    let cancelIntent = ()=>{
        setMaybePrefetch(false);
        setShouldPrefetch(false);
    };
    if (!frameworkContext) return [
        false,
        ref,
        {}
    ];
    if (prefetch !== "intent") return [
        shouldPrefetch,
        ref,
        {}
    ];
    return [
        shouldPrefetch,
        ref,
        {
            onFocus: composeEventHandlers(onFocus, setIntent),
            onBlur: composeEventHandlers(onBlur, cancelIntent),
            onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
            onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
            onTouchStart: composeEventHandlers(onTouchStart, setIntent)
        }
    ];
}
function composeEventHandlers(theirHandler, ourHandler) {
    return (event)=>{
        theirHandler && theirHandler(event);
        if (!event.defaultPrevented) ourHandler(event);
    };
}
function getActiveMatches(matches, errors, isSpaMode) {
    if (isSpaMode && !isHydrated) return [
        matches[0]
    ];
    if (errors) {
        let errorIdx = matches.findIndex((m)=>errors[m.route.id] !== void 0);
        return matches.slice(0, errorIdx + 1);
    }
    return matches;
}
function Links() {
    let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();
    let { errors, matches: routerMatches } = useDataRouterStateContext();
    let matches = getActiveMatches(routerMatches, errors, isSpaMode);
    let keyedLinks = _react.useMemo(()=>getKeyedLinksForMatches(matches, routeModules, manifest), [
        matches,
        routeModules,
        manifest
    ]);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, typeof criticalCss === "string" ? /* @__PURE__ */ _react.createElement("style", {
        dangerouslySetInnerHTML: {
            __html: criticalCss
        }
    }) : null, typeof criticalCss === "object" ? /* @__PURE__ */ _react.createElement("link", {
        rel: "stylesheet",
        href: criticalCss.href
    }) : null, keyedLinks.map(({ key, link })=>isPageLinkDescriptor(link) ? /* @__PURE__ */ _react.createElement(PrefetchPageLinks, {
            key,
            ...link
        }) : /* @__PURE__ */ _react.createElement("link", {
            key,
            ...link
        })));
}
function PrefetchPageLinks({ page, ...dataLinkProps }) {
    let { router } = useDataRouterContext2();
    let matches = _react.useMemo(()=>matchRoutes(router.routes, page, router.basename), [
        router.routes,
        page,
        router.basename
    ]);
    if (!matches) return null;
    return /* @__PURE__ */ _react.createElement(PrefetchPageLinksImpl, {
        page,
        matches,
        ...dataLinkProps
    });
}
function useKeyedPrefetchLinks(matches) {
    let { manifest, routeModules } = useFrameworkContext();
    let [keyedPrefetchLinks, setKeyedPrefetchLinks] = _react.useState([]);
    _react.useEffect(()=>{
        let interrupted = false;
        getKeyedPrefetchLinks(matches, manifest, routeModules).then((links)=>{
            if (!interrupted) setKeyedPrefetchLinks(links);
        });
        return ()=>{
            interrupted = true;
        };
    }, [
        matches,
        manifest,
        routeModules
    ]);
    return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({ page, matches: nextMatches, ...linkProps }) {
    let location = useLocation();
    let { manifest, routeModules } = useFrameworkContext();
    let { basename } = useDataRouterContext2();
    let { loaderData, matches } = useDataRouterStateContext();
    let newMatchesForData = _react.useMemo(()=>getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [
        page,
        nextMatches,
        matches,
        manifest,
        location
    ]);
    let newMatchesForAssets = _react.useMemo(()=>getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [
        page,
        nextMatches,
        matches,
        manifest,
        location
    ]);
    let dataHrefs = _react.useMemo(()=>{
        if (page === location.pathname + location.search + location.hash) return [];
        let routesParams = /* @__PURE__ */ new Set();
        let foundOptOutRoute = false;
        nextMatches.forEach((m)=>{
            let manifestRoute = manifest.routes[m.route.id];
            if (!manifestRoute || !manifestRoute.hasLoader) return;
            if (!newMatchesForData.some((m2)=>m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) foundOptOutRoute = true;
            else if (manifestRoute.hasClientLoader) foundOptOutRoute = true;
            else routesParams.add(m.route.id);
        });
        if (routesParams.size === 0) return [];
        let url = singleFetchUrl(page, basename);
        if (foundOptOutRoute && routesParams.size > 0) url.searchParams.set("_routes", nextMatches.filter((m)=>routesParams.has(m.route.id)).map((m)=>m.route.id).join(","));
        return [
            url.pathname + url.search
        ];
    }, [
        basename,
        loaderData,
        location,
        manifest,
        newMatchesForData,
        nextMatches,
        page,
        routeModules
    ]);
    let moduleHrefs = _react.useMemo(()=>getModuleLinkHrefs(newMatchesForAssets, manifest), [
        newMatchesForAssets,
        manifest
    ]);
    let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, dataHrefs.map((href2)=>/* @__PURE__ */ _react.createElement("link", {
            key: href2,
            rel: "prefetch",
            as: "fetch",
            href: href2,
            ...linkProps
        })), moduleHrefs.map((href2)=>/* @__PURE__ */ _react.createElement("link", {
            key: href2,
            rel: "modulepreload",
            href: href2,
            ...linkProps
        })), keyedPrefetchLinks.map(({ key, link })=>// these don't spread `linkProps` because they are full link descriptors
        // already with their own props
        /* @__PURE__ */ _react.createElement("link", {
            key,
            ...link
        })));
}
function Meta() {
    let { isSpaMode, routeModules } = useFrameworkContext();
    let { errors, matches: routerMatches, loaderData } = useDataRouterStateContext();
    let location = useLocation();
    let _matches = getActiveMatches(routerMatches, errors, isSpaMode);
    let error = null;
    if (errors) error = errors[_matches[_matches.length - 1].route.id];
    let meta = [];
    let leafMeta = null;
    let matches = [];
    for(let i = 0; i < _matches.length; i++){
        let _match = _matches[i];
        let routeId = _match.route.id;
        let data2 = loaderData[routeId];
        let params = _match.params;
        let routeModule = routeModules[routeId];
        let routeMeta = [];
        let match = {
            id: routeId,
            data: data2,
            meta: [],
            params: _match.params,
            pathname: _match.pathname,
            handle: _match.route.handle,
            error
        };
        matches[i] = match;
        if (routeModule?.meta) routeMeta = typeof routeModule.meta === "function" ? routeModule.meta({
            data: data2,
            params,
            location,
            matches,
            error
        }) : Array.isArray(routeModule.meta) ? [
            ...routeModule.meta
        ] : routeModule.meta;
        else if (leafMeta) routeMeta = [
            ...leafMeta
        ];
        routeMeta = routeMeta || [];
        if (!Array.isArray(routeMeta)) throw new Error("The route at " + _match.route.path + " returns an invalid value. All route meta functions must return an array of meta objects.\n\nTo reference the meta function API, see https://remix.run/route/meta");
        match.meta = routeMeta;
        matches[i] = match;
        meta = [
            ...routeMeta
        ];
        leafMeta = meta;
    }
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, meta.flat().map((metaProps)=>{
        if (!metaProps) return null;
        if ("tagName" in metaProps) {
            let { tagName, ...rest } = metaProps;
            if (!isValidMetaTag(tagName)) {
                console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);
                return null;
            }
            let Comp = tagName;
            return /* @__PURE__ */ _react.createElement(Comp, {
                key: JSON.stringify(rest),
                ...rest
            });
        }
        if ("title" in metaProps) return /* @__PURE__ */ _react.createElement("title", {
            key: "title"
        }, String(metaProps.title));
        if ("charset" in metaProps) {
            metaProps.charSet ?? (metaProps.charSet = metaProps.charset);
            delete metaProps.charset;
        }
        if ("charSet" in metaProps && metaProps.charSet != null) return typeof metaProps.charSet === "string" ? /* @__PURE__ */ _react.createElement("meta", {
            key: "charSet",
            charSet: metaProps.charSet
        }) : null;
        if ("script:ld+json" in metaProps) try {
            let json = JSON.stringify(metaProps["script:ld+json"]);
            return /* @__PURE__ */ _react.createElement("script", {
                key: `script:ld+json:${json}`,
                type: "application/ld+json",
                dangerouslySetInnerHTML: {
                    __html: json
                }
            });
        } catch (err) {
            return null;
        }
        return /* @__PURE__ */ _react.createElement("meta", {
            key: JSON.stringify(metaProps),
            ...metaProps
        });
    }));
}
function isValidMetaTag(tagName) {
    return typeof tagName === "string" && /^(meta|link)$/.test(tagName);
}
var isHydrated = false;
function Scripts(props) {
    let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();
    let { router, static: isStatic, staticContext } = useDataRouterContext2();
    let { matches: routerMatches } = useDataRouterStateContext();
    let enableFogOfWar = isFogOfWarEnabled(ssr);
    if (renderMeta) renderMeta.didRenderScripts = true;
    let matches = getActiveMatches(routerMatches, null, isSpaMode);
    _react.useEffect(()=>{
        isHydrated = true;
    }, []);
    let initialScripts = _react.useMemo(()=>{
        let streamScript = "window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());";
        let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : " ";
        let routeModulesScript = !isStatic ? " " : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : ""};
${matches.map((match, routeIndex)=>{
            let routeVarName = `route${routeIndex}`;
            let manifestEntry = manifest.routes[match.route.id];
            invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);
            let { clientActionModule, clientLoaderModule, clientMiddlewareModule, hydrateFallbackModule, module } = manifestEntry;
            let chunks = [
                ...clientActionModule ? [
                    {
                        module: clientActionModule,
                        varName: `${routeVarName}_clientAction`
                    }
                ] : [],
                ...clientLoaderModule ? [
                    {
                        module: clientLoaderModule,
                        varName: `${routeVarName}_clientLoader`
                    }
                ] : [],
                ...clientMiddlewareModule ? [
                    {
                        module: clientMiddlewareModule,
                        varName: `${routeVarName}_clientMiddleware`
                    }
                ] : [],
                ...hydrateFallbackModule ? [
                    {
                        module: hydrateFallbackModule,
                        varName: `${routeVarName}_HydrateFallback`
                    }
                ] : [],
                {
                    module,
                    varName: `${routeVarName}_main`
                }
            ];
            if (chunks.length === 1) return `import * as ${routeVarName} from ${JSON.stringify(module)};`;
            let chunkImportsSnippet = chunks.map((chunk)=>`import * as ${chunk.varName} from "${chunk.module}";`).join("\n");
            let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk)=>`...${chunk.varName}`).join(",")}};`;
            return [
                chunkImportsSnippet,
                mergedChunksSnippet
            ].join("\n");
        }).join("\n")}
  ${enableFogOfWar ? // Inline a minimal manifest with the SSR matches
        `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router), null, 2)};` : ""}
  window.__reactRouterRouteModules = {${matches.map((match, index)=>`${JSON.stringify(match.route.id)}:route${index}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});`;
        return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement("script", {
            ...props,
            suppressHydrationWarning: true,
            dangerouslySetInnerHTML: createHtml(contextScript),
            type: void 0
        }), /* @__PURE__ */ _react.createElement("script", {
            ...props,
            suppressHydrationWarning: true,
            dangerouslySetInnerHTML: createHtml(routeModulesScript),
            type: "module",
            async: true
        }));
    }, []);
    let preloads = isHydrated ? [] : dedupe(manifest.entry.imports.concat(getModuleLinkHrefs(matches, manifest, {
        includeHydrateFallback: true
    })));
    let sri = typeof manifest.sri === "object" ? manifest.sri : {};
    return isHydrated ? null : /* @__PURE__ */ _react.createElement(_react.Fragment, null, typeof manifest.sri === "object" ? /* @__PURE__ */ _react.createElement("script", {
        "rr-importmap": "",
        type: "importmap",
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: {
            __html: JSON.stringify({
                integrity: sri
            })
        }
    }) : null, !enableFogOfWar ? /* @__PURE__ */ _react.createElement("link", {
        rel: "modulepreload",
        href: manifest.url,
        crossOrigin: props.crossOrigin,
        integrity: sri[manifest.url],
        suppressHydrationWarning: true
    }) : null, /* @__PURE__ */ _react.createElement("link", {
        rel: "modulepreload",
        href: manifest.entry.module,
        crossOrigin: props.crossOrigin,
        integrity: sri[manifest.entry.module],
        suppressHydrationWarning: true
    }), preloads.map((path)=>/* @__PURE__ */ _react.createElement("link", {
            key: path,
            rel: "modulepreload",
            href: path,
            crossOrigin: props.crossOrigin,
            integrity: sri[path],
            suppressHydrationWarning: true
        })), initialScripts);
}
function dedupe(array) {
    return [
        ...new Set(array)
    ];
}
function mergeRefs(...refs) {
    return (value)=>{
        refs.forEach((ref)=>{
            if (typeof ref === "function") ref(value);
            else if (ref != null) ref.current = value;
        });
    };
}
// lib/dom/lib.tsx
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
try {
    if (isBrowser) window.__reactRouterVersion = "7.5.3";
} catch (e) {}
function createBrowserRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createBrowserHistory({
            window: opts?.window
        }),
        hydrationData: opts?.hydrationData || parseHydrationData(),
        routes,
        mapRouteProperties,
        hydrationRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
        window: opts?.window
    }).initialize();
}
function createHashRouter(routes, opts) {
    return createRouter({
        basename: opts?.basename,
        unstable_getContext: opts?.unstable_getContext,
        future: opts?.future,
        history: createHashHistory({
            window: opts?.window
        }),
        hydrationData: opts?.hydrationData || parseHydrationData(),
        routes,
        mapRouteProperties,
        hydrationRouteProperties,
        dataStrategy: opts?.dataStrategy,
        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
        window: opts?.window
    }).initialize();
}
function parseHydrationData() {
    let state = window?.__staticRouterHydrationData;
    if (state && state.errors) state = {
        ...state,
        errors: deserializeErrors(state.errors)
    };
    return state;
}
function deserializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            if (val.__subType) {
                let ErrorConstructor = window[val.__subType];
                if (typeof ErrorConstructor === "function") try {
                    let error = new ErrorConstructor(val.message);
                    error.stack = "";
                    serialized[key] = error;
                } catch (e) {}
            }
            if (serialized[key] == null) {
                let error = new Error(val.message);
                error.stack = "";
                serialized[key] = error;
            }
        } else serialized[key] = val;
    }
    return serialized;
}
function BrowserRouter({ basename, children, window: window2 }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createBrowserHistory({
        window: window2,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function HashRouter({ basename, children, window: window2 }) {
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = createHashHistory({
        window: window2,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
function HistoryRouter({ basename, children, history }) {
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let setState = _react.useCallback((newState)=>{
        _react.startTransition(()=>setStateImpl(newState));
    }, [
        setStateImpl
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
HistoryRouter.displayName = "unstable_HistoryRouter";
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = _react.forwardRef(function LinkWithRef({ onClick, discover = "render", prefetch = "none", relative, reloadDocument, replace: replace2, state, target, to, preventScrollReset, viewTransition, ...rest }, forwardedRef) {
    let { basename } = _react.useContext(NavigationContext);
    let isAbsolute = typeof to === "string" && ABSOLUTE_URL_REGEX2.test(to);
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && isAbsolute) {
        absoluteHref = to;
        if (isBrowser) try {
            let currentUrl = new URL(window.location.href);
            let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
            let path = stripBasename(targetUrl.pathname, basename);
            if (targetUrl.origin === currentUrl.origin && path != null) to = path + targetUrl.search + targetUrl.hash;
            else isExternal = true;
        } catch (e) {
            warning(false, `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`);
        }
    }
    let href2 = useHref(to, {
        relative
    });
    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(prefetch, rest);
    let internalOnClick = useLinkClickHandler(to, {
        replace: replace2,
        state,
        target,
        preventScrollReset,
        relative,
        viewTransition
    });
    function handleClick(event) {
        if (onClick) onClick(event);
        if (!event.defaultPrevented) internalOnClick(event);
    }
    let link = // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ _react.createElement("a", {
        ...rest,
        ...prefetchHandlers,
        href: absoluteHref || href2,
        onClick: isExternal || reloadDocument ? onClick : handleClick,
        ref: mergeRefs(forwardedRef, prefetchRef),
        target,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
    });
    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ _react.createElement(_react.Fragment, null, link, /* @__PURE__ */ _react.createElement(PrefetchPageLinks, {
        page: href2
    })) : link;
});
Link.displayName = "Link";
var NavLink = _react.forwardRef(function NavLinkWithRef({ "aria-current": ariaCurrentProp = "page", caseSensitive = false, className: classNameProp = "", end = false, style: styleProp, to, viewTransition, children, ...rest }, ref) {
    let path = useResolvedPath(to, {
        relative: rest.relative
    });
    let location = useLocation();
    let routerState = _react.useContext(DataRouterStateContext);
    let { navigator: navigator2, basename } = _react.useContext(NavigationContext);
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && viewTransition === true;
    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
        locationPathname = locationPathname.toLowerCase();
        nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
        toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
        isActive,
        isPending,
        isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") className = classNameProp(renderProps);
    else className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
    ].filter(Boolean).join(" ");
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /* @__PURE__ */ _react.createElement(Link, {
        ...rest,
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        viewTransition
    }, typeof children === "function" ? children(renderProps) : children);
});
NavLink.displayName = "NavLink";
var Form = _react.forwardRef(({ discover = "render", fetcherKey, navigate, reloadDocument, replace: replace2, state, method = defaultMethod, action, onSubmit, relative, preventScrollReset, viewTransition, ...props }, forwardedRef)=>{
    let submit = useSubmit();
    let formAction = useFormAction(action, {
        relative
    });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let isAbsolute = typeof action === "string" && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event)=>{
        onSubmit && onSubmit(event);
        if (event.defaultPrevented) return;
        event.preventDefault();
        let submitter = event.nativeEvent.submitter;
        let submitMethod = submitter?.getAttribute("formmethod") || method;
        submit(submitter || event.currentTarget, {
            fetcherKey,
            method: submitMethod,
            navigate,
            replace: replace2,
            state,
            relative,
            preventScrollReset,
            viewTransition
        });
    };
    return /* @__PURE__ */ _react.createElement("form", {
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler,
        ...props,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
    });
});
Form.displayName = "Form";
function ScrollRestoration({ getKey, storageKey, ...props }) {
    let remixContext = _react.useContext(FrameworkContext);
    let { basename } = _react.useContext(NavigationContext);
    let location = useLocation();
    let matches = useMatches();
    useScrollRestoration({
        getKey,
        storageKey
    });
    let ssrKey = _react.useMemo(()=>{
        if (!remixContext || !getKey) return null;
        let userKey = getScrollRestorationKey(location, matches, basename, getKey);
        return userKey !== location.key ? userKey : null;
    }, // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []);
    if (!remixContext || remixContext.isSpaMode) return null;
    let restoreScroll = ((storageKey2, restoreKey)=>{
        if (!window.history.state || !window.history.state.key) {
            let key = Math.random().toString(32).slice(2);
            window.history.replaceState({
                key
            }, "");
        }
        try {
            let positions = JSON.parse(sessionStorage.getItem(storageKey2) || "{}");
            let storedY = positions[restoreKey || window.history.state.key];
            if (typeof storedY === "number") window.scrollTo(0, storedY);
        } catch (error) {
            console.error(error);
            sessionStorage.removeItem(storageKey2);
        }
    }).toString();
    return /* @__PURE__ */ _react.createElement("script", {
        ...props,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: {
            __html: `(${restoreScroll})(${JSON.stringify(storageKey || SCROLL_RESTORATION_STORAGE_KEY)}, ${JSON.stringify(ssrKey)})`
        }
    });
}
ScrollRestoration.displayName = "ScrollRestoration";
function getDataRouterConsoleError2(hookName) {
    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
    let ctx = _react.useContext(DataRouterContext);
    invariant(ctx, getDataRouterConsoleError2(hookName));
    return ctx;
}
function useDataRouterState2(hookName) {
    let state = _react.useContext(DataRouterStateContext);
    invariant(state, getDataRouterConsoleError2(hookName));
    return state;
}
function useLinkClickHandler(to, { target, replace: replaceProp, state, preventScrollReset, relative, viewTransition } = {}) {
    let navigate = useNavigate();
    let location = useLocation();
    let path = useResolvedPath(to, {
        relative
    });
    return _react.useCallback((event)=>{
        if (shouldProcessLinkClick(event, target)) {
            event.preventDefault();
            let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
            navigate(to, {
                replace: replace2,
                state,
                preventScrollReset,
                relative,
                viewTransition
            });
        }
    }, [
        location,
        navigate,
        path,
        replaceProp,
        state,
        target,
        to,
        preventScrollReset,
        relative,
        viewTransition
    ]);
}
function useSearchParams(defaultInit) {
    warning(typeof URLSearchParams !== "undefined", `You cannot use the \`useSearchParams\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`);
    let defaultSearchParamsRef = _react.useRef(createSearchParams(defaultInit));
    let hasSetSearchParamsRef = _react.useRef(false);
    let location = useLocation();
    let searchParams = _react.useMemo(()=>// Only merge in the defaults if we haven't yet called setSearchParams.
        // Once we call that we want those to take precedence, otherwise you can't
        // remove a param with setSearchParams({}) if it has an initial value
        getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [
        location.search
    ]);
    let navigate = useNavigate();
    let setSearchParams = _react.useCallback((nextInit, navigateOptions)=>{
        const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
        hasSetSearchParamsRef.current = true;
        navigate("?" + newSearchParams, navigateOptions);
    }, [
        navigate,
        searchParams
    ]);
    return [
        searchParams,
        setSearchParams
    ];
}
var fetcherId = 0;
var getUniqueFetcherId = ()=>`__${String(++fetcherId)}__`;
function useSubmit() {
    let { router } = useDataRouterContext3("useSubmit" /* UseSubmit */ );
    let { basename } = _react.useContext(NavigationContext);
    let currentRouteId = useRouteId();
    return _react.useCallback(async (target, options = {})=>{
        let { action, method, encType, formData, body } = getFormSubmissionInfo(target, basename);
        if (options.navigate === false) {
            let key = options.fetcherKey || getUniqueFetcherId();
            await router.fetch(key, currentRouteId, options.action || action, {
                preventScrollReset: options.preventScrollReset,
                formData,
                body,
                formMethod: options.method || method,
                formEncType: options.encType || encType,
                flushSync: options.flushSync
            });
        } else await router.navigate(options.action || action, {
            preventScrollReset: options.preventScrollReset,
            formData,
            body,
            formMethod: options.method || method,
            formEncType: options.encType || encType,
            replace: options.replace,
            state: options.state,
            fromRouteId: currentRouteId,
            flushSync: options.flushSync,
            viewTransition: options.viewTransition
        });
    }, [
        router,
        basename,
        currentRouteId
    ]);
}
function useFormAction(action, { relative } = {}) {
    let { basename } = _react.useContext(NavigationContext);
    let routeContext = _react.useContext(RouteContext);
    invariant(routeContext, "useFormAction must be used inside a RouteContext");
    let [match] = routeContext.matches.slice(-1);
    let path = {
        ...useResolvedPath(action ? action : ".", {
            relative
        })
    };
    let location = useLocation();
    if (action == null) {
        path.search = location.search;
        let params = new URLSearchParams(path.search);
        let indexValues = params.getAll("index");
        let hasNakedIndexParam = indexValues.some((v)=>v === "");
        if (hasNakedIndexParam) {
            params.delete("index");
            indexValues.filter((v)=>v).forEach((v)=>params.append("index", v));
            let qs = params.toString();
            path.search = qs ? `?${qs}` : "";
        }
    }
    if ((!action || action === ".") && match.route.index) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
        basename,
        path.pathname
    ]);
    return createPath(path);
}
function useFetcher({ key } = {}) {
    let { router } = useDataRouterContext3("useFetcher" /* UseFetcher */ );
    let state = useDataRouterState2("useFetcher" /* UseFetcher */ );
    let fetcherData = _react.useContext(FetchersContext);
    let route = _react.useContext(RouteContext);
    let routeId = route.matches[route.matches.length - 1]?.route.id;
    invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);
    invariant(route, `useFetcher must be used inside a RouteContext`);
    invariant(routeId != null, `useFetcher can only be used on routes that contain a unique "id"`);
    let defaultKey = _react.useId();
    let [fetcherKey, setFetcherKey] = _react.useState(key || defaultKey);
    if (key && key !== fetcherKey) setFetcherKey(key);
    _react.useEffect(()=>{
        router.getFetcher(fetcherKey);
        return ()=>router.deleteFetcher(fetcherKey);
    }, [
        router,
        fetcherKey
    ]);
    let load = _react.useCallback(async (href2, opts)=>{
        invariant(routeId, "No routeId available for fetcher.load()");
        await router.fetch(fetcherKey, routeId, href2, opts);
    }, [
        fetcherKey,
        routeId,
        router
    ]);
    let submitImpl = useSubmit();
    let submit = _react.useCallback(async (target, opts)=>{
        await submitImpl(target, {
            ...opts,
            navigate: false,
            fetcherKey
        });
    }, [
        fetcherKey,
        submitImpl
    ]);
    let FetcherForm = _react.useMemo(()=>{
        let FetcherForm2 = _react.forwardRef((props, ref)=>{
            return /* @__PURE__ */ _react.createElement(Form, {
                ...props,
                navigate: false,
                fetcherKey,
                ref
            });
        });
        FetcherForm2.displayName = "fetcher.Form";
        return FetcherForm2;
    }, [
        fetcherKey
    ]);
    let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;
    let data2 = fetcherData.get(fetcherKey);
    let fetcherWithComponents = _react.useMemo(()=>({
            Form: FetcherForm,
            submit,
            load,
            ...fetcher,
            data: data2
        }), [
        FetcherForm,
        submit,
        load,
        fetcher,
        data2
    ]);
    return fetcherWithComponents;
}
function useFetchers() {
    let state = useDataRouterState2("useFetchers" /* UseFetchers */ );
    return Array.from(state.fetchers.entries()).map(([key, fetcher])=>({
            ...fetcher,
            key
        }));
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
function getScrollRestorationKey(location, matches, basename, getKey) {
    let key = null;
    if (getKey) {
        if (basename !== "/") key = getKey({
            ...location,
            pathname: stripBasename(location.pathname, basename) || location.pathname
        }, matches);
        else key = getKey(location, matches);
    }
    if (key == null) key = location.key;
    return key;
}
function useScrollRestoration({ getKey, storageKey } = {}) {
    let { router } = useDataRouterContext3("useScrollRestoration" /* UseScrollRestoration */ );
    let { restoreScrollPosition, preventScrollReset } = useDataRouterState2("useScrollRestoration" /* UseScrollRestoration */ );
    let { basename } = _react.useContext(NavigationContext);
    let location = useLocation();
    let matches = useMatches();
    let navigation = useNavigation();
    _react.useEffect(()=>{
        window.history.scrollRestoration = "manual";
        return ()=>{
            window.history.scrollRestoration = "auto";
        };
    }, []);
    usePageHide(_react.useCallback(()=>{
        if (navigation.state === "idle") {
            let key = getScrollRestorationKey(location, matches, basename, getKey);
            savedScrollPositions[key] = window.scrollY;
        }
        try {
            sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
        } catch (error) {
            warning(false, `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`);
        }
        window.history.scrollRestoration = "auto";
    }, [
        navigation.state,
        getKey,
        basename,
        location,
        matches,
        storageKey
    ]));
    if (typeof document !== "undefined") {
        _react.useLayoutEffect(()=>{
            try {
                let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
                if (sessionPositions) savedScrollPositions = JSON.parse(sessionPositions);
            } catch (e) {}
        }, [
            storageKey
        ]);
        _react.useLayoutEffect(()=>{
            let disableScrollRestoration = router?.enableScrollRestoration(savedScrollPositions, ()=>window.scrollY, getKey ? (location2, matches2)=>getScrollRestorationKey(location2, matches2, basename, getKey) : void 0);
            return ()=>disableScrollRestoration && disableScrollRestoration();
        }, [
            router,
            basename,
            getKey
        ]);
        _react.useLayoutEffect(()=>{
            if (restoreScrollPosition === false) return;
            if (typeof restoreScrollPosition === "number") {
                window.scrollTo(0, restoreScrollPosition);
                return;
            }
            if (location.hash) {
                let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));
                if (el) {
                    el.scrollIntoView();
                    return;
                }
            }
            if (preventScrollReset === true) return;
            window.scrollTo(0, 0);
        }, [
            location,
            restoreScrollPosition,
            preventScrollReset
        ]);
    }
}
function useBeforeUnload(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : void 0;
        window.addEventListener("beforeunload", callback, opts);
        return ()=>{
            window.removeEventListener("beforeunload", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
function usePageHide(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : void 0;
        window.addEventListener("pagehide", callback, opts);
        return ()=>{
            window.removeEventListener("pagehide", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
function usePrompt({ when, message }) {
    let blocker = useBlocker(when);
    _react.useEffect(()=>{
        if (blocker.state === "blocked") {
            let proceed = window.confirm(message);
            if (proceed) setTimeout(blocker.proceed, 0);
            else blocker.reset();
        }
    }, [
        blocker,
        message
    ]);
    _react.useEffect(()=>{
        if (blocker.state === "blocked" && !when) blocker.reset();
    }, [
        blocker,
        when
    ]);
}
function useViewTransitionState(to, opts = {}) {
    let vtContext = _react.useContext(ViewTransitionContext);
    invariant(vtContext != null, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
    let { basename } = useDataRouterContext3("useViewTransitionState" /* useViewTransitionState */ );
    let path = useResolvedPath(to, {
        relative: opts.relative
    });
    if (!vtContext.isTransitioning) return false;
    let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
    let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
    return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;
}
function StaticRouter({ basename, children, location: locationProp = "/" }) {
    if (typeof locationProp === "string") locationProp = parsePath(locationProp);
    let action = "POP" /* Pop */ ;
    let location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state != null ? locationProp.state : null,
        key: locationProp.key || "default"
    };
    let staticNavigator = getStatelessNavigator();
    return /* @__PURE__ */ _react.createElement(Router, {
        basename,
        children,
        location,
        navigationType: action,
        navigator: staticNavigator,
        static: true
    });
}
function StaticRouterProvider({ context, router, hydrate = true, nonce }) {
    invariant(router && context, "You must provide `router` and `context` to <StaticRouterProvider>");
    let dataRouterContext = {
        router,
        navigator: getStatelessNavigator(),
        static: true,
        staticContext: context,
        basename: context.basename || "/"
    };
    let fetchersContext = /* @__PURE__ */ new Map();
    let hydrateScript = "";
    if (hydrate !== false) {
        let data2 = {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: serializeErrors(context.errors)
        };
        let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;
    }
    let { state } = dataRouterContext.router;
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(DataRouterContext.Provider, {
        value: dataRouterContext
    }, /* @__PURE__ */ _react.createElement(DataRouterStateContext.Provider, {
        value: state
    }, /* @__PURE__ */ _react.createElement(FetchersContext.Provider, {
        value: fetchersContext
    }, /* @__PURE__ */ _react.createElement(ViewTransitionContext.Provider, {
        value: {
            isTransitioning: false
        }
    }, /* @__PURE__ */ _react.createElement(Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static
    }, /* @__PURE__ */ _react.createElement(DataRoutes2, {
        routes: router.routes,
        future: router.future,
        state
    })))))), hydrateScript ? /* @__PURE__ */ _react.createElement("script", {
        suppressHydrationWarning: true,
        nonce,
        dangerouslySetInnerHTML: {
            __html: hydrateScript
        }
    }) : null);
}
function DataRoutes2({ routes, future, state }) {
    return useRoutesImpl(routes, void 0, state, future);
}
function serializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (isRouteErrorResponse(val)) serialized[key] = {
            ...val,
            __type: "RouteErrorResponse"
        };
        else if (val instanceof Error) serialized[key] = {
            message: val.message,
            __type: "Error",
            // If this is a subclass (i.e., ReferenceError), send up the type so we
            // can re-create the same type during hydration.
            ...val.name !== "Error" ? {
                __subType: val.name
            } : {}
        };
        else serialized[key] = val;
    }
    return serialized;
}
function getStatelessNavigator() {
    return {
        createHref,
        encodeLocation,
        push (to) {
            throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace (to) {
            throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go (delta) {
            throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back () {
            throw new Error(`You cannot use navigator.back() on the server because it is a stateless environment.`);
        },
        forward () {
            throw new Error(`You cannot use navigator.forward() on the server because it is a stateless environment.`);
        }
    };
}
function createStaticHandler2(routes, opts) {
    return createStaticHandler(routes, {
        ...opts,
        mapRouteProperties
    });
}
function createStaticRouter(routes, context, opts = {}) {
    let manifest = {};
    let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, void 0, manifest);
    let matches = context.matches.map((match)=>{
        let route = manifest[match.route.id] || match.route;
        return {
            ...match,
            route
        };
    });
    let msg = (method)=>`You cannot use router.${method}() on the server because it is a stateless environment`;
    return {
        get basename () {
            return context.basename;
        },
        get future () {
            return {
                unstable_middleware: false,
                ...opts?.future
            };
        },
        get state () {
            return {
                historyAction: "POP" /* Pop */ ,
                location: context.location,
                matches,
                loaderData: context.loaderData,
                actionData: context.actionData,
                errors: context.errors,
                initialized: true,
                navigation: IDLE_NAVIGATION,
                restoreScrollPosition: null,
                preventScrollReset: false,
                revalidation: "idle",
                fetchers: /* @__PURE__ */ new Map(),
                blockers: /* @__PURE__ */ new Map()
            };
        },
        get routes () {
            return dataRoutes;
        },
        get window () {
            return void 0;
        },
        initialize () {
            throw msg("initialize");
        },
        subscribe () {
            throw msg("subscribe");
        },
        enableScrollRestoration () {
            throw msg("enableScrollRestoration");
        },
        navigate () {
            throw msg("navigate");
        },
        fetch () {
            throw msg("fetch");
        },
        revalidate () {
            throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher () {
            return IDLE_FETCHER;
        },
        deleteFetcher () {
            throw msg("deleteFetcher");
        },
        dispose () {
            throw msg("dispose");
        },
        getBlocker () {
            return IDLE_BLOCKER;
        },
        deleteBlocker () {
            throw msg("deleteBlocker");
        },
        patchRoutes () {
            throw msg("patchRoutes");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalSetRoutes () {
            throw msg("_internalSetRoutes");
        }
    };
}
function createHref(to) {
    return typeof to === "string" ? to : createPath(to);
}
function encodeLocation(to) {
    let href2 = typeof to === "string" ? to : createPath(to);
    href2 = href2.replace(/ $/, "%20");
    let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, "http://localhost");
    return {
        pathname: encoded.pathname,
        search: encoded.search,
        hash: encoded.hash
    };
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var ESCAPE_LOOKUP2 = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function htmlEscape(str) {
    return str.replace(ESCAPE_REGEX2, (match)=>ESCAPE_LOOKUP2[match]);
}
function ServerRouter({ context, url, nonce }) {
    if (typeof url === "string") url = new URL(url);
    let { manifest, routeModules, criticalCss, serverHandoffString } = context;
    let routes = createServerRoutes(manifest.routes, routeModules, context.future, context.isSpaMode);
    context.staticHandlerContext.loaderData = {
        ...context.staticHandlerContext.loaderData
    };
    for (let match of context.staticHandlerContext.matches){
        let routeId = match.route.id;
        let route = routeModules[routeId];
        let manifestRoute = context.manifest.routes[routeId];
        if (route && manifestRoute && shouldHydrateRouteLoader(routeId, route.clientLoader, manifestRoute.hasLoader, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) delete context.staticHandlerContext.loaderData[routeId];
    }
    let router = createStaticRouter(routes, context.staticHandlerContext);
    return /* @__PURE__ */ _react.createElement(_react.Fragment, null, /* @__PURE__ */ _react.createElement(FrameworkContext.Provider, {
        value: {
            manifest,
            routeModules,
            criticalCss,
            serverHandoffString,
            future: context.future,
            ssr: context.ssr,
            isSpaMode: context.isSpaMode,
            serializeError: context.serializeError,
            renderMeta: context.renderMeta
        }
    }, /* @__PURE__ */ _react.createElement(RemixErrorBoundary, {
        location: router.state.location
    }, /* @__PURE__ */ _react.createElement(StaticRouterProvider, {
        router,
        context: context.staticHandlerContext,
        hydrate: false
    }))), context.serverHandoffStream ? /* @__PURE__ */ _react.createElement(_react.Suspense, null, /* @__PURE__ */ _react.createElement(StreamTransfer, {
        context,
        identifier: 0,
        reader: context.serverHandoffStream.getReader(),
        textDecoder: new TextDecoder(),
        nonce
    })) : null);
}
function createRoutesStub(routes, unstable_getContext) {
    return function RoutesTestStub({ initialEntries, initialIndex, hydrationData, future }) {
        let routerRef = _react.useRef();
        let remixContextRef = _react.useRef();
        if (routerRef.current == null) {
            remixContextRef.current = {
                future: {
                    unstable_subResourceIntegrity: future?.unstable_subResourceIntegrity === true,
                    unstable_middleware: future?.unstable_middleware === true
                },
                manifest: {
                    routes: {},
                    entry: {
                        imports: [],
                        module: ""
                    },
                    url: "",
                    version: ""
                },
                routeModules: {},
                ssr: false,
                isSpaMode: false
            };
            let patched = processRoutes(// @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`
            // types compared to `AgnosticRouteObject`
            convertRoutesToDataRoutes(routes, (r)=>r), remixContextRef.current.manifest, remixContextRef.current.routeModules);
            routerRef.current = createMemoryRouter(patched, {
                unstable_getContext,
                initialEntries,
                initialIndex,
                hydrationData
            });
        }
        return /* @__PURE__ */ _react.createElement(FrameworkContext.Provider, {
            value: remixContextRef.current
        }, /* @__PURE__ */ _react.createElement(RouterProvider, {
            router: routerRef.current
        }));
    };
}
function processRoutes(routes, manifest, routeModules, parentId) {
    return routes.map((route)=>{
        if (!route.id) throw new Error("Expected a route.id in @remix-run/testing processRoutes() function");
        let newRoute = {
            id: route.id,
            path: route.path,
            index: route.index,
            Component: route.Component,
            HydrateFallback: route.HydrateFallback,
            ErrorBoundary: route.ErrorBoundary,
            action: route.action,
            loader: route.loader,
            handle: route.handle,
            shouldRevalidate: route.shouldRevalidate
        };
        let entryRoute = {
            id: route.id,
            path: route.path,
            index: route.index,
            parentId,
            hasAction: route.action != null,
            hasLoader: route.loader != null,
            // When testing routes, you should be stubbing loader/action/middleware,
            // not trying to re-implement the full loader/clientLoader/SSR/hydration
            // flow. That is better tested via E2E tests.
            hasClientAction: false,
            hasClientLoader: false,
            hasClientMiddleware: false,
            hasErrorBoundary: route.ErrorBoundary != null,
            // any need for these?
            module: "build/stub-path-to-module.js",
            clientActionModule: void 0,
            clientLoaderModule: void 0,
            clientMiddlewareModule: void 0,
            hydrateFallbackModule: void 0
        };
        manifest.routes[newRoute.id] = entryRoute;
        routeModules[route.id] = {
            default: route.Component || Outlet,
            ErrorBoundary: route.ErrorBoundary || void 0,
            handle: route.handle,
            links: route.links,
            meta: route.meta,
            shouldRevalidate: route.shouldRevalidate
        };
        if (route.children) newRoute.children = processRoutes(route.children, manifest, routeModules, newRoute.id);
        return newRoute;
    });
}
// lib/server-runtime/crypto.ts
var encoder = new TextEncoder();
var sign = async (value, secret)=>{
    let data2 = encoder.encode(value);
    let key = await createKey2(secret, [
        "sign"
    ]);
    let signature = await crypto.subtle.sign("HMAC", key, data2);
    let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, "");
    return value + "." + hash;
};
var unsign = async (cookie, secret)=>{
    let index = cookie.lastIndexOf(".");
    let value = cookie.slice(0, index);
    let hash = cookie.slice(index + 1);
    let data2 = encoder.encode(value);
    let key = await createKey2(secret, [
        "verify"
    ]);
    let signature = byteStringToUint8Array(atob(hash));
    let valid = await crypto.subtle.verify("HMAC", key, signature, data2);
    return valid ? value : false;
};
var createKey2 = async (secret, usages)=>crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
    }, false, usages);
function byteStringToUint8Array(byteString) {
    let array = new Uint8Array(byteString.length);
    for(let i = 0; i < byteString.length; i++)array[i] = byteString.charCodeAt(i);
    return array;
}
// lib/server-runtime/cookies.ts
var createCookie = (name, cookieOptions = {})=>{
    let { secrets = [], ...options } = {
        path: "/",
        sameSite: "lax",
        ...cookieOptions
    };
    warnOnceAboutExpiresCookie(name, options.expires);
    return {
        get name () {
            return name;
        },
        get isSigned () {
            return secrets.length > 0;
        },
        get expires () {
            return typeof options.maxAge !== "undefined" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
        },
        async parse (cookieHeader, parseOptions) {
            if (!cookieHeader) return null;
            let cookies = (0, _cookie.parse)(cookieHeader, {
                ...options,
                ...parseOptions
            });
            if (name in cookies) {
                let value = cookies[name];
                if (typeof value === "string" && value !== "") {
                    let decoded = await decodeCookieValue(value, secrets);
                    return decoded;
                } else return "";
            } else return null;
        },
        async serialize (value, serializeOptions) {
            return (0, _cookie.serialize)(name, value === "" ? "" : await encodeCookieValue(value, secrets), {
                ...options,
                ...serializeOptions
            });
        }
    };
};
var isCookie = (object)=>{
    return object != null && typeof object.name === "string" && typeof object.isSigned === "boolean" && typeof object.parse === "function" && typeof object.serialize === "function";
};
async function encodeCookieValue(value, secrets) {
    let encoded = encodeData(value);
    if (secrets.length > 0) encoded = await sign(encoded, secrets[0]);
    return encoded;
}
async function decodeCookieValue(value, secrets) {
    if (secrets.length > 0) {
        for (let secret of secrets){
            let unsignedValue = await unsign(value, secret);
            if (unsignedValue !== false) return decodeData(unsignedValue);
        }
        return null;
    }
    return decodeData(value);
}
function encodeData(value) {
    return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
    try {
        return JSON.parse(decodeURIComponent(myEscape(atob(value))));
    } catch (error) {
        return {};
    }
}
function myEscape(value) {
    let str = value.toString();
    let result = "";
    let index = 0;
    let chr, code;
    while(index < str.length){
        chr = str.charAt(index++);
        if (/[\w*+\-./@]/.exec(chr)) result += chr;
        else {
            code = chr.charCodeAt(0);
            if (code < 256) result += "%" + hex(code, 2);
            else result += "%u" + hex(code, 4).toUpperCase();
        }
    }
    return result;
}
function hex(code, length) {
    let result = code.toString(16);
    while(result.length < length)result = "0" + result;
    return result;
}
function myUnescape(value) {
    let str = value.toString();
    let result = "";
    let index = 0;
    let chr, part;
    while(index < str.length){
        chr = str.charAt(index++);
        if (chr === "%") {
            if (str.charAt(index) === "u") {
                part = str.slice(index + 1, index + 5);
                if (/^[\da-f]{4}$/i.exec(part)) {
                    result += String.fromCharCode(parseInt(part, 16));
                    index += 5;
                    continue;
                }
            } else {
                part = str.slice(index, index + 2);
                if (/^[\da-f]{2}$/i.exec(part)) {
                    result += String.fromCharCode(parseInt(part, 16));
                    index += 2;
                    continue;
                }
            }
        }
        result += chr;
    }
    return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
    warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
}
// lib/server-runtime/entry.ts
function createEntryRouteModules(manifest) {
    return Object.keys(manifest).reduce((memo2, routeId)=>{
        let route = manifest[routeId];
        if (route) memo2[routeId] = route.module;
        return memo2;
    }, {});
}
// lib/server-runtime/mode.ts
var ServerMode = /* @__PURE__ */ ((ServerMode2)=>{
    ServerMode2["Development"] = "development";
    ServerMode2["Production"] = "production";
    ServerMode2["Test"] = "test";
    return ServerMode2;
})(ServerMode || {});
function isServerMode(value) {
    return value === "development" /* Development */  || value === "production" /* Production */  || value === "test" /* Test */ ;
}
// lib/server-runtime/errors.ts
function sanitizeError(error, serverMode) {
    if (error instanceof Error && serverMode !== "development" /* Development */ ) {
        let sanitized = new Error("Unexpected Server Error");
        sanitized.stack = void 0;
        return sanitized;
    }
    return error;
}
function sanitizeErrors(errors, serverMode) {
    return Object.entries(errors).reduce((acc, [routeId, error])=>{
        return Object.assign(acc, {
            [routeId]: sanitizeError(error, serverMode)
        });
    }, {});
}
function serializeError(error, serverMode) {
    let sanitized = sanitizeError(error, serverMode);
    return {
        message: sanitized.message,
        stack: sanitized.stack
    };
}
function serializeErrors2(errors, serverMode) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (isRouteErrorResponse(val)) serialized[key] = {
            ...val,
            __type: "RouteErrorResponse"
        };
        else if (val instanceof Error) {
            let sanitized = sanitizeError(val, serverMode);
            serialized[key] = {
                message: sanitized.message,
                stack: sanitized.stack,
                __type: "Error",
                // If this is a subclass (i.e., ReferenceError), send up the type so we
                // can re-create the same type during hydration.  This will only apply
                // in dev mode since all production errors are sanitized to normal
                // Error instances
                ...sanitized.name !== "Error" ? {
                    __subType: sanitized.name
                } : {}
            };
        } else serialized[key] = val;
    }
    return serialized;
}
// lib/server-runtime/routeMatching.ts
function matchServerRoutes(routes, pathname, basename) {
    let matches = matchRoutes(routes, pathname, basename);
    if (!matches) return null;
    return matches.map((match)=>({
            params: match.params,
            pathname: match.pathname,
            route: match.route
        }));
}
// lib/server-runtime/data.ts
async function callRouteHandler(handler, args) {
    let result = await handler({
        request: stripRoutesParam(stripIndexParam2(args.request)),
        params: args.params,
        context: args.context
    });
    if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) throw new Response(null, result.init);
    return result;
}
function stripIndexParam2(request) {
    let url = new URL(request.url);
    let indexValues = url.searchParams.getAll("index");
    url.searchParams.delete("index");
    let indexValuesToKeep = [];
    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);
    for (let toKeep of indexValuesToKeep)url.searchParams.append("index", toKeep);
    let init = {
        method: request.method,
        body: request.body,
        headers: request.headers,
        signal: request.signal
    };
    if (init.body) init.duplex = "half";
    return new Request(url.href, init);
}
function stripRoutesParam(request) {
    let url = new URL(request.url);
    url.searchParams.delete("_routes");
    let init = {
        method: request.method,
        body: request.body,
        headers: request.headers,
        signal: request.signal
    };
    if (init.body) init.duplex = "half";
    return new Request(url.href, init);
}
// lib/server-runtime/invariant.ts
function invariant3(value, message) {
    if (value === false || value === null || typeof value === "undefined") {
        console.error("The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose");
        throw new Error(message);
    }
}
// lib/server-runtime/dev.ts
var globalDevServerHooksKey = "__reactRouterDevServerHooks";
function setDevServerHooks(devServerHooks) {
    globalThis[globalDevServerHooksKey] = devServerHooks;
}
function getDevServerHooks() {
    return globalThis[globalDevServerHooksKey];
}
function getBuildTimeHeader(request, headerName) {
    var e;
    return null;
}
// lib/server-runtime/routes.ts
function groupRoutesByParentId2(manifest) {
    let routes = {};
    Object.values(manifest).forEach((route)=>{
        if (route) {
            let parentId = route.parentId || "";
            if (!routes[parentId]) routes[parentId] = [];
            routes[parentId].push(route);
        }
    });
    return routes;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
    return (routesByParentId[parentId] || []).map((route)=>({
            ...route,
            children: createRoutes(manifest, route.id, routesByParentId)
        }));
}
function createStaticHandlerDataRoutes(manifest, future, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
    return (routesByParentId[parentId] || []).map((route)=>{
        let commonRoute = {
            // Always include root due to default boundaries
            hasErrorBoundary: route.id === "root" || route.module.ErrorBoundary != null,
            id: route.id,
            path: route.path,
            unstable_middleware: route.module.unstable_middleware,
            // Need to use RR's version in the param typed here to permit the optional
            // context even though we know it'll always be provided in remix
            loader: route.module.loader ? async (args)=>{
                let preRenderedData = getBuildTimeHeader(args.request, "X-React-Router-Prerender-Data");
                if (preRenderedData != null) {
                    let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;
                    invariant3(encoded, "Missing prerendered data for route");
                    let uint8array = new TextEncoder().encode(encoded);
                    let stream = new ReadableStream({
                        start (controller) {
                            controller.enqueue(uint8array);
                            controller.close();
                        }
                    });
                    let decoded = await decodeViaTurboStream(stream, global);
                    let data2 = decoded.value;
                    if (data2 && SingleFetchRedirectSymbol in data2) {
                        let result = data2[SingleFetchRedirectSymbol];
                        let init = {
                            status: result.status
                        };
                        if (result.reload) throw redirectDocument(result.redirect, init);
                        else if (result.replace) throw replace(result.redirect, init);
                        else throw redirect(result.redirect, init);
                    } else {
                        invariant3(data2 && route.id in data2, "Unable to decode prerendered data");
                        let result = data2[route.id];
                        invariant3("data" in result, "Unable to process prerendered data");
                        return result.data;
                    }
                }
                let val = await callRouteHandler(route.module.loader, args);
                return val;
            } : void 0,
            action: route.module.action ? (args)=>callRouteHandler(route.module.action, args) : void 0,
            handle: route.module.handle
        };
        return route.index ? {
            index: true,
            ...commonRoute
        } : {
            caseSensitive: route.caseSensitive,
            children: createStaticHandlerDataRoutes(manifest, future, route.id, routesByParentId),
            ...commonRoute
        };
    });
}
// lib/server-runtime/markup.ts
var ESCAPE_LOOKUP3 = {
    "&": "\\u0026",
    ">": "\\u003e",
    "<": "\\u003c",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029"
};
var ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
    return html.replace(ESCAPE_REGEX3, (match)=>ESCAPE_LOOKUP3[match]);
}
// lib/server-runtime/serverHandoff.ts
function createServerHandoffString(serverHandoff) {
    return escapeHtml2(JSON.stringify(serverHandoff));
}
function getDocumentHeaders(build, context) {
    let boundaryIdx = context.errors ? context.matches.findIndex((m)=>context.errors[m.route.id]) : -1;
    let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;
    let errorHeaders;
    if (boundaryIdx >= 0) {
        let { actionHeaders, actionData, loaderHeaders, loaderData } = context;
        context.matches.slice(boundaryIdx).some((match)=>{
            let id = match.route.id;
            if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) errorHeaders = actionHeaders[id];
            else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) errorHeaders = loaderHeaders[id];
            return errorHeaders != null;
        });
    }
    return matches.reduce((parentHeaders, match, idx)=>{
        let { id } = match.route;
        let route = build.routes[id];
        invariant3(route, `Route with id "${id}" not found in build`);
        let routeModule = route.module;
        let loaderHeaders = context.loaderHeaders[id] || new Headers();
        let actionHeaders = context.actionHeaders[id] || new Headers();
        let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;
        let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
        if (routeModule.headers == null) {
            let headers2 = new Headers(parentHeaders);
            if (includeErrorCookies) prependCookies(errorHeaders, headers2);
            prependCookies(actionHeaders, headers2);
            prependCookies(loaderHeaders, headers2);
            return headers2;
        }
        let headers = new Headers(routeModule.headers ? typeof routeModule.headers === "function" ? routeModule.headers({
            loaderHeaders,
            parentHeaders,
            actionHeaders,
            errorHeaders: includeErrorHeaders ? errorHeaders : void 0
        }) : routeModule.headers : void 0);
        if (includeErrorCookies) prependCookies(errorHeaders, headers);
        prependCookies(actionHeaders, headers);
        prependCookies(loaderHeaders, headers);
        prependCookies(parentHeaders, headers);
        return headers;
    }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
    let parentSetCookieString = parentHeaders.get("Set-Cookie");
    if (parentSetCookieString) {
        let cookies = (0, _setCookieParser.splitCookiesString)(parentSetCookieString);
        let childCookies = new Set(childHeaders.getSetCookie());
        cookies.forEach((cookie)=>{
            if (!childCookies.has(cookie)) childHeaders.append("Set-Cookie", cookie);
        });
    }
}
// lib/server-runtime/single-fetch.ts
var SERVER_NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([
    ...NO_BODY_STATUS_CODES,
    304
]);
async function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
    try {
        let respond2 = function(context) {
            let headers = getDocumentHeaders(build, context);
            if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) return generateSingleFetchResponse(request, build, serverMode, {
                result: getSingleFetchRedirect(context.statusCode, headers, build.basename),
                headers,
                status: SINGLE_FETCH_REDIRECT_STATUS
            });
            if (context.errors) {
                Object.values(context.errors).forEach((err)=>{
                    if (!isRouteErrorResponse(err) || err.error) handleError(err);
                });
                context.errors = sanitizeErrors(context.errors, serverMode);
            }
            let singleFetchResult;
            if (context.errors) singleFetchResult = {
                error: Object.values(context.errors)[0]
            };
            else singleFetchResult = {
                data: Object.values(context.actionData || {})[0]
            };
            return generateSingleFetchResponse(request, build, serverMode, {
                result: singleFetchResult,
                headers,
                status: context.statusCode
            });
        };
        var respond = respond2;
        let handlerRequest = new Request(handlerUrl, {
            method: request.method,
            body: request.body,
            headers: request.headers,
            signal: request.signal,
            ...request.body ? {
                duplex: "half"
            } : void 0
        });
        let result = await staticHandler.query(handlerRequest, {
            requestContext: loadContext,
            skipLoaderErrorBubbling: true,
            skipRevalidation: true,
            unstable_respond: respond2
        });
        if (!isResponse(result)) result = respond2(result);
        if (isRedirectResponse(result)) return generateSingleFetchResponse(request, build, serverMode, {
            result: getSingleFetchRedirect(result.status, result.headers, build.basename),
            headers: result.headers,
            status: SINGLE_FETCH_REDIRECT_STATUS
        });
        return result;
    } catch (error) {
        handleError(error);
        return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                error
            },
            headers: new Headers(),
            status: 500
        });
    }
}
async function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
    try {
        let respond2 = function(context) {
            let headers = getDocumentHeaders(build, context);
            if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) return generateSingleFetchResponse(request, build, serverMode, {
                result: {
                    [SingleFetchRedirectSymbol]: getSingleFetchRedirect(context.statusCode, headers, build.basename)
                },
                headers,
                status: SINGLE_FETCH_REDIRECT_STATUS
            });
            if (context.errors) {
                Object.values(context.errors).forEach((err)=>{
                    if (!isRouteErrorResponse(err) || err.error) handleError(err);
                });
                context.errors = sanitizeErrors(context.errors, serverMode);
            }
            let results = {};
            let loadedMatches = new Set(context.matches.filter((m)=>loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null).map((m)=>m.route.id));
            if (context.errors) for (let [id, error] of Object.entries(context.errors))results[id] = {
                error
            };
            for (let [id, data2] of Object.entries(context.loaderData))if (!(id in results) && loadedMatches.has(id)) results[id] = {
                data: data2
            };
            return generateSingleFetchResponse(request, build, serverMode, {
                result: results,
                headers,
                status: context.statusCode
            });
        };
        var respond = respond2;
        let handlerRequest = new Request(handlerUrl, {
            headers: request.headers,
            signal: request.signal
        });
        let routesParam = new URL(request.url).searchParams.get("_routes");
        let loadRouteIds = routesParam ? new Set(routesParam.split(",")) : null;
        let result = await staticHandler.query(handlerRequest, {
            requestContext: loadContext,
            filterMatchesToLoad: (m)=>!loadRouteIds || loadRouteIds.has(m.route.id),
            skipLoaderErrorBubbling: true,
            unstable_respond: respond2
        });
        if (!isResponse(result)) result = respond2(result);
        if (isRedirectResponse(result)) return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                [SingleFetchRedirectSymbol]: getSingleFetchRedirect(result.status, result.headers, build.basename)
            },
            headers: result.headers,
            status: SINGLE_FETCH_REDIRECT_STATUS
        });
        return result;
    } catch (error) {
        handleError(error);
        return generateSingleFetchResponse(request, build, serverMode, {
            result: {
                root: {
                    error
                }
            },
            headers: new Headers(),
            status: 500
        });
    }
}
function generateSingleFetchResponse(request, build, serverMode, { result, headers, status }) {
    let resultHeaders = new Headers(headers);
    resultHeaders.set("X-Remix-Response", "yes");
    if (SERVER_NO_BODY_STATUS_CODES.has(status)) return new Response(null, {
        status,
        headers: resultHeaders
    });
    resultHeaders.set("Content-Type", "text/x-script");
    return new Response(encodeViaTurboStream(result, request.signal, build.entry.module.streamTimeout, serverMode), {
        status: status || 200,
        headers: resultHeaders
    });
}
function getSingleFetchRedirect(status, headers, basename) {
    let redirect2 = headers.get("Location");
    if (basename) redirect2 = stripBasename(redirect2, basename) || redirect2;
    return {
        redirect: redirect2,
        status,
        revalidate: // Technically X-Remix-Revalidate isn't needed here - that was an implementation
        // detail of ?_data requests as our way to tell the front end to revalidate when
        // we didn't have a response body to include that information in.
        // With single fetch, we tell the front end via this revalidate boolean field.
        // However, we're respecting it for now because it may be something folks have
        // used in their own responses
        // TODO(v3): Consider removing or making this official public API
        headers.has("X-Remix-Revalidate") || headers.has("Set-Cookie"),
        reload: headers.has("X-Remix-Reload-Document"),
        replace: headers.has("X-Remix-Replace")
    };
}
function encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {
    let controller = new AbortController();
    let timeoutId = setTimeout(()=>controller.abort(new Error("Server Timeout")), typeof streamTimeout === "number" ? streamTimeout : 4950);
    requestSignal.addEventListener("abort", ()=>clearTimeout(timeoutId));
    return (0, _turboStream.encode)(data2, {
        signal: controller.signal,
        plugins: [
            (value)=>{
                if (value instanceof Error) {
                    let { name, message, stack } = serverMode === "production" /* Production */  ? sanitizeError(value, serverMode) : value;
                    return [
                        "SanitizedError",
                        name,
                        message,
                        stack
                    ];
                }
                if (value instanceof ErrorResponseImpl) {
                    let { data: data3, status, statusText } = value;
                    return [
                        "ErrorResponse",
                        data3,
                        status,
                        statusText
                    ];
                }
                if (value && typeof value === "object" && SingleFetchRedirectSymbol in value) return [
                    "SingleFetchRedirect",
                    value[SingleFetchRedirectSymbol]
                ];
            }
        ],
        postPlugins: [
            (value)=>{
                if (!value) return;
                if (typeof value !== "object") return;
                return [
                    "SingleFetchClassInstance",
                    Object.fromEntries(Object.entries(value))
                ];
            },
            ()=>[
                    "SingleFetchFallback"
                ]
        ]
    });
}
// lib/server-runtime/server.ts
function derive(build, mode) {
    let routes = createRoutes(build.routes);
    let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);
    let serverMode = isServerMode(mode) ? mode : "production" /* Production */ ;
    let staticHandler = createStaticHandler(dataRoutes, {
        basename: build.basename
    });
    let errorHandler = build.entry.module.handleError || ((error, { request })=>{
        if (serverMode !== "test" /* Test */  && !request.signal.aborted) console.error(// @ts-expect-error This is "private" from users but intended for internal use
        isRouteErrorResponse(error) && error.error ? error.error : error);
    });
    return {
        routes,
        dataRoutes,
        serverMode,
        staticHandler,
        errorHandler
    };
}
var createRequestHandler = (build, mode)=>{
    let _build;
    let routes;
    let serverMode;
    let staticHandler;
    let errorHandler;
    return async function requestHandler(request, initialContext) {
        _build = typeof build === "function" ? await build() : build;
        if (typeof build === "function") {
            let derived = derive(_build, mode);
            routes = derived.routes;
            serverMode = derived.serverMode;
            staticHandler = derived.staticHandler;
            errorHandler = derived.errorHandler;
        } else if (!routes || !serverMode || !staticHandler || !errorHandler) {
            let derived = derive(_build, mode);
            routes = derived.routes;
            serverMode = derived.serverMode;
            staticHandler = derived.staticHandler;
            errorHandler = derived.errorHandler;
        }
        let params = {};
        let loadContext;
        let handleError = (error)=>{
            if (mode === "development" /* Development */ ) getDevServerHooks()?.processRequestError?.(error);
            errorHandler(error, {
                context: loadContext,
                params,
                request
            });
        };
        if (_build.future.unstable_middleware) {
            if (initialContext == null) loadContext = new unstable_RouterContextProvider();
            else try {
                loadContext = new unstable_RouterContextProvider(initialContext);
            } catch (e) {
                let error = new Error(`Unable to create initial \`unstable_RouterContextProvider\` instance. Please confirm you are returning an instance of \`Map<unstable_routerContext, unknown>\` from your \`getLoadContext\` function.

Error: ${e instanceof Error ? e.toString() : e}`);
                handleError(error);
                return returnLastResortErrorResponse(error, serverMode);
            }
        } else loadContext = initialContext || {};
        let url = new URL(request.url);
        let normalizedBasename = _build.basename || "/";
        let normalizedPath = url.pathname;
        if (stripBasename(normalizedPath, normalizedBasename) === "/_root.data") normalizedPath = normalizedBasename;
        else if (normalizedPath.endsWith(".data")) normalizedPath = normalizedPath.replace(/\.data$/, "");
        if (stripBasename(normalizedPath, normalizedBasename) !== "/" && normalizedPath.endsWith("/")) normalizedPath = normalizedPath.slice(0, -1);
        let isSpaMode = getBuildTimeHeader(request, "X-React-Router-SPA-Mode") === "yes";
        if (!_build.ssr) {
            if (_build.prerender.length === 0) isSpaMode = true;
            else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + "/")) {
                if (url.pathname.endsWith(".data")) {
                    errorHandler(new ErrorResponseImpl(404, "Not Found", `Refusing to SSR the path \`${normalizedPath}\` because \`ssr:false\` is set and the path is not included in the \`prerender\` config, so in production the path will be a 404.`), {
                        context: loadContext,
                        params,
                        request
                    });
                    return new Response("Not Found", {
                        status: 404,
                        statusText: "Not Found"
                    });
                } else isSpaMode = true;
            }
        }
        let manifestUrl = `${normalizedBasename}/__manifest`.replace(/\/+/g, "/");
        if (url.pathname === manifestUrl) try {
            let res = await handleManifestRequest(_build, routes, url);
            return res;
        } catch (e) {
            handleError(e);
            return new Response("Unknown Server Error", {
                status: 500
            });
        }
        let matches = matchServerRoutes(routes, url.pathname, _build.basename);
        if (matches && matches.length > 0) Object.assign(params, matches[0].params);
        let response;
        if (url.pathname.endsWith(".data")) {
            let handlerUrl = new URL(request.url);
            handlerUrl.pathname = normalizedPath;
            let singleFetchMatches = matchServerRoutes(routes, handlerUrl.pathname, _build.basename);
            response = await handleSingleFetchRequest(serverMode, _build, staticHandler, request, handlerUrl, loadContext, handleError);
            if (_build.entry.module.handleDataRequest) {
                response = await _build.entry.module.handleDataRequest(response, {
                    context: loadContext,
                    params: singleFetchMatches ? singleFetchMatches[0].params : {},
                    request
                });
                if (isRedirectResponse(response)) {
                    let result = getSingleFetchRedirect(response.status, response.headers, _build.basename);
                    if (request.method === "GET") result = {
                        [SingleFetchRedirectSymbol]: result
                    };
                    let headers = new Headers(response.headers);
                    headers.set("Content-Type", "text/x-script");
                    return new Response(encodeViaTurboStream(result, request.signal, _build.entry.module.streamTimeout, serverMode), {
                        status: SINGLE_FETCH_REDIRECT_STATUS,
                        headers
                    });
                }
            }
        } else if (!isSpaMode && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) response = await handleResourceRequest(serverMode, _build, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError);
        else {
            let { pathname } = url;
            let criticalCss = void 0;
            if (_build.unstable_getCriticalCss) criticalCss = await _build.unstable_getCriticalCss({
                pathname
            });
            else if (mode === "development" /* Development */  && getDevServerHooks()?.getCriticalCss) criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);
            response = await handleDocumentRequest(serverMode, _build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss);
        }
        if (request.method === "HEAD") return new Response(null, {
            headers: response.headers,
            status: response.status,
            statusText: response.statusText
        });
        return response;
    };
};
async function handleManifestRequest(build, routes, url) {
    if (build.assets.version !== url.searchParams.get("version")) return new Response(null, {
        status: 204,
        headers: {
            "X-Remix-Reload-Document": "true"
        }
    });
    let patches = {};
    if (url.searchParams.has("p")) {
        let paths = /* @__PURE__ */ new Set();
        url.searchParams.getAll("p").forEach((path)=>{
            if (!path.startsWith("/")) path = `/${path}`;
            let segments = path.split("/").slice(1);
            segments.forEach((_, i)=>{
                let partialPath = segments.slice(0, i + 1).join("/");
                paths.add(`/${partialPath}`);
            });
        });
        for (let path of paths){
            let matches = matchServerRoutes(routes, path, build.basename);
            if (matches) for (let match of matches){
                let routeId = match.route.id;
                let route = build.assets.routes[routeId];
                if (route) patches[routeId] = route;
            }
        }
        return Response.json(patches, {
            headers: {
                "Cache-Control": "public, max-age=31536000, immutable"
            }
        });
    }
    return new Response("Invalid Request", {
        status: 400
    });
}
async function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {
    let response = request.method !== "GET" ? await singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) : await singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError);
    return response;
}
async function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss) {
    try {
        let response = await staticHandler.query(request, {
            requestContext: loadContext,
            unstable_respond: build.future.unstable_middleware ? (ctx)=>renderHtml(ctx, isSpaMode) : void 0
        });
        return isResponse(response) ? response : renderHtml(response, isSpaMode);
    } catch (error) {
        handleError(error);
        return new Response(null, {
            status: 500
        });
    }
    async function renderHtml(context, isSpaMode2) {
        if (isResponse(context)) return context;
        let headers = getDocumentHeaders(build, context);
        if (SERVER_NO_BODY_STATUS_CODES.has(context.statusCode)) return new Response(null, {
            status: context.statusCode,
            headers
        });
        if (context.errors) {
            Object.values(context.errors).forEach((err)=>{
                if (!isRouteErrorResponse(err) || err.error) handleError(err);
            });
            context.errors = sanitizeErrors(context.errors, serverMode);
        }
        let state = {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: serializeErrors2(context.errors, serverMode)
        };
        let entryContext = {
            manifest: build.assets,
            routeModules: createEntryRouteModules(build.routes),
            staticHandlerContext: context,
            criticalCss,
            serverHandoffString: createServerHandoffString({
                basename: build.basename,
                criticalCss,
                future: build.future,
                ssr: build.ssr,
                isSpaMode: isSpaMode2
            }),
            serverHandoffStream: encodeViaTurboStream(state, request.signal, build.entry.module.streamTimeout, serverMode),
            renderMeta: {},
            future: build.future,
            ssr: build.ssr,
            isSpaMode: isSpaMode2,
            serializeError: (err)=>serializeError(err, serverMode)
        };
        let handleDocumentRequestFunction = build.entry.module.default;
        try {
            return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
        } catch (error) {
            handleError(error);
            let errorForSecondRender = error;
            if (isResponse(error)) try {
                let data2 = await unwrapResponse(error);
                errorForSecondRender = new ErrorResponseImpl(error.status, error.statusText, data2);
            } catch (e) {}
            context = getStaticContextFromError(staticHandler.dataRoutes, context, errorForSecondRender);
            if (context.errors) context.errors = sanitizeErrors(context.errors, serverMode);
            let state2 = {
                loaderData: context.loaderData,
                actionData: context.actionData,
                errors: serializeErrors2(context.errors, serverMode)
            };
            entryContext = {
                ...entryContext,
                staticHandlerContext: context,
                serverHandoffString: createServerHandoffString({
                    basename: build.basename,
                    future: build.future,
                    ssr: build.ssr,
                    isSpaMode: isSpaMode2
                }),
                serverHandoffStream: encodeViaTurboStream(state2, request.signal, build.entry.module.streamTimeout, serverMode),
                renderMeta: {}
            };
            try {
                return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
            } catch (error2) {
                handleError(error2);
                return returnLastResortErrorResponse(error2, serverMode);
            }
        }
    }
}
async function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {
    try {
        let response = await staticHandler.queryRoute(request, {
            routeId,
            requestContext: loadContext,
            unstable_respond: build.future.unstable_middleware ? (ctx)=>ctx : void 0
        });
        if (isResponse(response)) return response;
        if (typeof response === "string") return new Response(response);
        return Response.json(response);
    } catch (error) {
        if (isResponse(error)) {
            error.headers.set("X-Remix-Catch", "yes");
            return error;
        }
        if (isRouteErrorResponse(error)) {
            if (error) handleError(error);
            return errorResponseToJson(error, serverMode);
        }
        if (error instanceof Error && error.message === "Expected a response from queryRoute") {
            let newError = new Error("Expected a Response to be returned from resource route handler");
            handleError(newError);
            return returnLastResortErrorResponse(newError, serverMode);
        }
        handleError(error);
        return returnLastResortErrorResponse(error, serverMode);
    }
}
function errorResponseToJson(errorResponse, serverMode) {
    return Response.json(serializeError(// @ts-expect-error This is "private" from users but intended for internal use
    errorResponse.error || new Error("Unexpected Server Error"), serverMode), {
        status: errorResponse.status,
        statusText: errorResponse.statusText,
        headers: {
            "X-Remix-Error": "yes"
        }
    });
}
function returnLastResortErrorResponse(error, serverMode) {
    let message = "Unexpected Server Error";
    if (serverMode !== "production" /* Production */ ) message += `

${String(error)}`;
    return new Response(message, {
        status: 500,
        headers: {
            "Content-Type": "text/plain"
        }
    });
}
function unwrapResponse(response) {
    let contentType = response.headers.get("Content-Type");
    return contentType && /\bapplication\/json\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();
}
// lib/server-runtime/sessions.ts
function flash(name) {
    return `__flash_${name}__`;
}
var createSession = (initialData = {}, id = "")=>{
    let map = new Map(Object.entries(initialData));
    return {
        get id () {
            return id;
        },
        get data () {
            return Object.fromEntries(map);
        },
        has (name) {
            return map.has(name) || map.has(flash(name));
        },
        get (name) {
            if (map.has(name)) return map.get(name);
            let flashName = flash(name);
            if (map.has(flashName)) {
                let value = map.get(flashName);
                map.delete(flashName);
                return value;
            }
            return void 0;
        },
        set (name, value) {
            map.set(name, value);
        },
        flash (name, value) {
            map.set(flash(name), value);
        },
        unset (name) {
            map.delete(name);
        }
    };
};
var isSession = (object)=>{
    return object != null && typeof object.id === "string" && typeof object.data !== "undefined" && typeof object.has === "function" && typeof object.get === "function" && typeof object.set === "function" && typeof object.flash === "function" && typeof object.unset === "function";
};
function createSessionStorage({ cookie: cookieArg, createData, readData, updateData, deleteData }) {
    let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
    warnOnceAboutSigningSessionCookie(cookie);
    return {
        async getSession (cookieHeader, options) {
            let id = cookieHeader && await cookie.parse(cookieHeader, options);
            let data2 = id && await readData(id);
            return createSession(data2 || {}, id || "");
        },
        async commitSession (session, options) {
            let { id, data: data2 } = session;
            let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;
            if (id) await updateData(id, data2, expires);
            else id = await createData(data2, expires);
            return cookie.serialize(id, options);
        },
        async destroySession (session, options) {
            await deleteData(session.id);
            return cookie.serialize("", {
                ...options,
                maxAge: void 0,
                expires: /* @__PURE__ */ new Date(0)
            });
        }
    };
}
function warnOnceAboutSigningSessionCookie(cookie) {
    warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://reactrouter.com/explanation/sessions-and-cookies#signing-cookies for more information.`);
}
// lib/server-runtime/sessions/cookieStorage.ts
function createCookieSessionStorage({ cookie: cookieArg } = {}) {
    let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
    warnOnceAboutSigningSessionCookie(cookie);
    return {
        async getSession (cookieHeader, options) {
            return createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});
        },
        async commitSession (session, options) {
            let serializedCookie = await cookie.serialize(session.data, options);
            if (serializedCookie.length > 4096) throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
            return serializedCookie;
        },
        async destroySession (_session, options) {
            return cookie.serialize("", {
                ...options,
                maxAge: void 0,
                expires: /* @__PURE__ */ new Date(0)
            });
        }
    };
}
// lib/server-runtime/sessions/memoryStorage.ts
function createMemorySessionStorage({ cookie } = {}) {
    let map = /* @__PURE__ */ new Map();
    return createSessionStorage({
        cookie,
        async createData (data2, expires) {
            let id = Math.random().toString(36).substring(2, 10);
            map.set(id, {
                data: data2,
                expires
            });
            return id;
        },
        async readData (id) {
            if (map.has(id)) {
                let { data: data2, expires } = map.get(id);
                if (!expires || expires > /* @__PURE__ */ new Date()) return data2;
                if (expires) map.delete(id);
            }
            return null;
        },
        async updateData (id, data2, expires) {
            map.set(id, {
                data: data2,
                expires
            });
        },
        async deleteData (id) {
            map.delete(id);
        }
    });
}
// lib/href.ts
function href(path, ...args) {
    let params = args[0];
    return path.split("/").map((segment)=>{
        const match = segment.match(/^:([\w-]+)(\?)?/);
        if (!match) return segment;
        const param = match[1];
        const value = params ? params[param] : void 0;
        const isRequired = match[2] === void 0;
        if (isRequired && value === void 0) throw Error(`Path '${path}' requires param '${param}' but it was not provided`);
        return value;
    }).filter((segment)=>segment !== void 0).join("/");
}
// lib/dom/ssr/errors.ts
function deserializeErrors2(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            if (val.__subType) {
                let ErrorConstructor = window[val.__subType];
                if (typeof ErrorConstructor === "function") try {
                    let error = new ErrorConstructor(val.message);
                    error.stack = val.stack;
                    serialized[key] = error;
                } catch (e) {}
            }
            if (serialized[key] == null) {
                let error = new Error(val.message);
                error.stack = val.stack;
                serialized[key] = error;
            }
        } else serialized[key] = val;
    }
    return serialized;
}
// lib/dom/ssr/hydration.tsx
function getHydrationData(state, routes, getRouteInfo, location, basename, isSpaMode) {
    let hydrationData = {
        ...state,
        loaderData: {
            ...state.loaderData
        }
    };
    let initialMatches = matchRoutes(routes, location, basename);
    if (initialMatches) for (let match of initialMatches){
        let routeId = match.route.id;
        let routeInfo = getRouteInfo(routeId);
        if (shouldHydrateRouteLoader(routeId, routeInfo.clientLoader, routeInfo.hasLoader, isSpaMode) && (routeInfo.hasHydrateFallback || !routeInfo.hasLoader)) delete hydrationData.loaderData[routeId];
        else if (!routeInfo.hasLoader) hydrationData.loaderData[routeId] = null;
    }
    return hydrationData;
}

},{"react":"jMk1U","turbo-stream":"031wi","cookie":"8Pe3w","set-cookie-parser":"8AeuC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"031wi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.encode = exports.decode = void 0;
const flatten_js_1 = require("8f10be1c14cdc7ed");
const unflatten_js_1 = require("d8f22d128db7aee5");
const utils_js_1 = require("bcbf18eed9422159");
async function decode(readable, options) {
    const { plugins } = options ?? {};
    const done = new utils_js_1.Deferred();
    const reader = readable.pipeThrough((0, utils_js_1.createLineSplittingTransform)()).getReader();
    const decoder = {
        values: [],
        hydrated: [],
        deferred: {},
        plugins
    };
    const decoded = await decodeInitial.call(decoder, reader);
    let donePromise = done.promise;
    if (decoded.done) done.resolve();
    else donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason)=>{
        for (const deferred of Object.values(decoder.deferred))deferred.reject(reason);
        done.reject(reason);
    });
    return {
        done: donePromise.then(()=>reader.closed),
        value: decoded.value
    };
}
exports.decode = decode;
async function decodeInitial(reader) {
    const read = await reader.read();
    if (!read.value) throw new SyntaxError();
    let line;
    try {
        line = JSON.parse(read.value);
    } catch (reason) {
        throw new SyntaxError();
    }
    return {
        done: read.done,
        value: unflatten_js_1.unflatten.call(this, line)
    };
}
async function decodeDeferred(reader) {
    let read = await reader.read();
    while(!read.done){
        if (!read.value) continue;
        const line = read.value;
        switch(line[0]){
            case utils_js_1.TYPE_PROMISE:
                {
                    const colonIndex = line.indexOf(":");
                    const deferredId = Number(line.slice(1, colonIndex));
                    const deferred = this.deferred[deferredId];
                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);
                    const lineData = line.slice(colonIndex + 1);
                    let jsonLine;
                    try {
                        jsonLine = JSON.parse(lineData);
                    } catch (reason) {
                        throw new SyntaxError();
                    }
                    const value = unflatten_js_1.unflatten.call(this, jsonLine);
                    deferred.resolve(value);
                    break;
                }
            case utils_js_1.TYPE_ERROR:
                {
                    const colonIndex = line.indexOf(":");
                    const deferredId = Number(line.slice(1, colonIndex));
                    const deferred = this.deferred[deferredId];
                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);
                    const lineData = line.slice(colonIndex + 1);
                    let jsonLine;
                    try {
                        jsonLine = JSON.parse(lineData);
                    } catch (reason) {
                        throw new SyntaxError();
                    }
                    const value = unflatten_js_1.unflatten.call(this, jsonLine);
                    deferred.reject(value);
                    break;
                }
            default:
                throw new SyntaxError();
        }
        read = await reader.read();
    }
}
function encode(input, options) {
    const { plugins, postPlugins, signal } = options ?? {};
    const encoder = {
        deferred: {},
        index: 0,
        indices: new Map(),
        stringified: [],
        plugins,
        postPlugins,
        signal
    };
    const textEncoder = new TextEncoder();
    let lastSentIndex = 0;
    const readable = new ReadableStream({
        async start (controller) {
            const id = flatten_js_1.flatten.call(encoder, input);
            if (Array.isArray(id)) throw new Error("This should never happen");
            if (id < 0) controller.enqueue(textEncoder.encode(`${id}\n`));
            else {
                controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(",")}]\n`));
                lastSentIndex = encoder.stringified.length - 1;
            }
            const seenPromises = new WeakSet();
            while(Object.keys(encoder.deferred).length > 0){
                for (const [deferredId, deferred] of Object.entries(encoder.deferred)){
                    if (seenPromises.has(deferred)) continue;
                    seenPromises.add(encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal).then((resolved)=>{
                        const id = flatten_js_1.flatten.call(encoder, resolved);
                        if (Array.isArray(id)) {
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[["${utils_js_1.TYPE_PREVIOUS_RESOLVED}",${id[0]}]]\n`));
                            encoder.index++;
                            lastSentIndex++;
                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:${id}\n`));
                        else {
                            const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[${values}]\n`));
                            lastSentIndex = encoder.stringified.length - 1;
                        }
                    }, (reason)=>{
                        if (!reason || typeof reason !== "object" || !(reason instanceof Error)) reason = new Error("An unknown error occurred");
                        const id = flatten_js_1.flatten.call(encoder, reason);
                        if (Array.isArray(id)) {
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[["${utils_js_1.TYPE_PREVIOUS_RESOLVED}",${id[0]}]]\n`));
                            encoder.index++;
                            lastSentIndex++;
                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:${id}\n`));
                        else {
                            const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[${values}]\n`));
                            lastSentIndex = encoder.stringified.length - 1;
                        }
                    }).finally(()=>{
                        delete encoder.deferred[Number(deferredId)];
                    }));
                }
                await Promise.race(Object.values(encoder.deferred));
            }
            await Promise.all(Object.values(encoder.deferred));
            controller.close();
        }
    });
    return readable;
}
exports.encode = encode;
function raceSignal(promise, signal) {
    if (!signal) return promise;
    if (signal.aborted) return Promise.reject(signal.reason || new Error("Signal was aborted."));
    const abort = new Promise((resolve, reject)=>{
        signal.addEventListener("abort", (event)=>{
            reject(signal.reason || new Error("Signal was aborted."));
        });
        promise.then(resolve).catch(reject);
    });
    abort.catch(()=>{});
    return Promise.race([
        abort,
        promise
    ]);
}

},{"8f10be1c14cdc7ed":"2GWmZ","d8f22d128db7aee5":"8ddmw","bcbf18eed9422159":"kbjqW"}],"2GWmZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.flatten = void 0;
const utils_js_1 = require("c3c0dac07752d118");
function flatten(input) {
    const { indices } = this;
    const existing = indices.get(input);
    if (existing) return [
        existing
    ];
    if (input === undefined) return utils_js_1.UNDEFINED;
    if (input === null) return utils_js_1.NULL;
    if (Number.isNaN(input)) return utils_js_1.NAN;
    if (input === Number.POSITIVE_INFINITY) return utils_js_1.POSITIVE_INFINITY;
    if (input === Number.NEGATIVE_INFINITY) return utils_js_1.NEGATIVE_INFINITY;
    if (input === 0 && 1 / input < 0) return utils_js_1.NEGATIVE_ZERO;
    const index = this.index++;
    indices.set(input, index);
    stringify.call(this, input, index);
    return index;
}
exports.flatten = flatten;
function stringify(input, index) {
    const { deferred, plugins, postPlugins } = this;
    const str = this.stringified;
    const stack = [
        [
            input,
            index
        ]
    ];
    while(stack.length > 0){
        const [input, index] = stack.pop();
        const partsForObj = (obj)=>Object.keys(obj).map((k)=>`"_${flatten.call(this, k)}":${flatten.call(this, obj[k])}`).join(",");
        let error = null;
        switch(typeof input){
            case "boolean":
            case "number":
            case "string":
                str[index] = JSON.stringify(input);
                break;
            case "bigint":
                str[index] = `["${utils_js_1.TYPE_BIGINT}","${input}"]`;
                break;
            case "symbol":
                {
                    const keyFor = Symbol.keyFor(input);
                    if (!keyFor) error = new Error("Cannot encode symbol unless created with Symbol.for()");
                    else str[index] = `["${utils_js_1.TYPE_SYMBOL}",${JSON.stringify(keyFor)}]`;
                    break;
                }
            case "object":
                {
                    if (!input) {
                        str[index] = `${utils_js_1.NULL}`;
                        break;
                    }
                    const isArray = Array.isArray(input);
                    let pluginHandled = false;
                    if (!isArray && plugins) for (const plugin of plugins){
                        const pluginResult = plugin(input);
                        if (Array.isArray(pluginResult)) {
                            pluginHandled = true;
                            const [pluginIdentifier, ...rest] = pluginResult;
                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                            if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                            str[index] += "]";
                            break;
                        }
                    }
                    if (!pluginHandled) {
                        let result = isArray ? "[" : "{";
                        if (isArray) {
                            for(let i = 0; i < input.length; i++)result += (i ? "," : "") + (i in input ? flatten.call(this, input[i]) : utils_js_1.HOLE);
                            str[index] = `${result}]`;
                        } else if (input instanceof Date) str[index] = `["${utils_js_1.TYPE_DATE}",${input.getTime()}]`;
                        else if (input instanceof URL) str[index] = `["${utils_js_1.TYPE_URL}",${JSON.stringify(input.href)}]`;
                        else if (input instanceof RegExp) str[index] = `["${utils_js_1.TYPE_REGEXP}",${JSON.stringify(input.source)},${JSON.stringify(input.flags)}]`;
                        else if (input instanceof Set) {
                            if (input.size > 0) str[index] = `["${utils_js_1.TYPE_SET}",${[
                                ...input
                            ].map((val)=>flatten.call(this, val)).join(",")}]`;
                            else str[index] = `["${utils_js_1.TYPE_SET}"]`;
                        } else if (input instanceof Map) {
                            if (input.size > 0) str[index] = `["${utils_js_1.TYPE_MAP}",${[
                                ...input
                            ].flatMap(([k, v])=>[
                                    flatten.call(this, k),
                                    flatten.call(this, v)
                                ]).join(",")}]`;
                            else str[index] = `["${utils_js_1.TYPE_MAP}"]`;
                        } else if (input instanceof Promise) {
                            str[index] = `["${utils_js_1.TYPE_PROMISE}",${index}]`;
                            deferred[index] = input;
                        } else if (input instanceof Error) {
                            str[index] = `["${utils_js_1.TYPE_ERROR}",${JSON.stringify(input.message)}`;
                            if (input.name !== "Error") str[index] += `,${JSON.stringify(input.name)}`;
                            str[index] += "]";
                        } else if (Object.getPrototypeOf(input) === null) str[index] = `["${utils_js_1.TYPE_NULL_OBJECT}",{${partsForObj(input)}}]`;
                        else if (isPlainObject(input)) str[index] = `{${partsForObj(input)}}`;
                        else error = new Error("Cannot encode object with prototype");
                    }
                    break;
                }
            default:
                {
                    const isArray = Array.isArray(input);
                    let pluginHandled = false;
                    if (!isArray && plugins) for (const plugin of plugins){
                        const pluginResult = plugin(input);
                        if (Array.isArray(pluginResult)) {
                            pluginHandled = true;
                            const [pluginIdentifier, ...rest] = pluginResult;
                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                            if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                            str[index] += "]";
                            break;
                        }
                    }
                    if (!pluginHandled) error = new Error("Cannot encode function or unexpected type");
                }
        }
        if (error) {
            let pluginHandled = false;
            if (postPlugins) for (const plugin of postPlugins){
                const pluginResult = plugin(input);
                if (Array.isArray(pluginResult)) {
                    pluginHandled = true;
                    const [pluginIdentifier, ...rest] = pluginResult;
                    str[index] = `[${JSON.stringify(pluginIdentifier)}`;
                    if (rest.length > 0) str[index] += `,${rest.map((v)=>flatten.call(this, v)).join(",")}`;
                    str[index] += "]";
                    break;
                }
            }
            if (!pluginHandled) throw error;
        }
    }
}
const objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function isPlainObject(thing) {
    const proto = Object.getPrototypeOf(thing);
    return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === objectProtoNames;
}

},{"c3c0dac07752d118":"kbjqW"}],"kbjqW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createLineSplittingTransform = exports.Deferred = exports.TYPE_PREVIOUS_RESOLVED = exports.TYPE_URL = exports.TYPE_SYMBOL = exports.TYPE_SET = exports.TYPE_REGEXP = exports.TYPE_PROMISE = exports.TYPE_NULL_OBJECT = exports.TYPE_MAP = exports.TYPE_ERROR = exports.TYPE_DATE = exports.TYPE_BIGINT = exports.UNDEFINED = exports.POSITIVE_INFINITY = exports.NULL = exports.NEGATIVE_ZERO = exports.NEGATIVE_INFINITY = exports.NAN = exports.HOLE = void 0;
exports.HOLE = -1;
exports.NAN = -2;
exports.NEGATIVE_INFINITY = -3;
exports.NEGATIVE_ZERO = -4;
exports.NULL = -5;
exports.POSITIVE_INFINITY = -6;
exports.UNDEFINED = -7;
exports.TYPE_BIGINT = "B";
exports.TYPE_DATE = "D";
exports.TYPE_ERROR = "E";
exports.TYPE_MAP = "M";
exports.TYPE_NULL_OBJECT = "N";
exports.TYPE_PROMISE = "P";
exports.TYPE_REGEXP = "R";
exports.TYPE_SET = "S";
exports.TYPE_SYMBOL = "Y";
exports.TYPE_URL = "U";
exports.TYPE_PREVIOUS_RESOLVED = "Z";
class Deferred {
    promise;
    resolve;
    reject;
    constructor(){
        this.promise = new Promise((resolve, reject)=>{
            this.resolve = resolve;
            this.reject = reject;
        });
    }
}
exports.Deferred = Deferred;
function createLineSplittingTransform() {
    const decoder = new TextDecoder();
    let leftover = "";
    return new TransformStream({
        transform (chunk, controller) {
            const str = decoder.decode(chunk, {
                stream: true
            });
            const parts = (leftover + str).split("\n");
            // The last part might be a partial line, so keep it for the next chunk.
            leftover = parts.pop() || "";
            for (const part of parts)controller.enqueue(part);
        },
        flush (controller) {
            // If there's any leftover data, enqueue it before closing.
            if (leftover) controller.enqueue(leftover);
        }
    });
}
exports.createLineSplittingTransform = createLineSplittingTransform;

},{}],"8ddmw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.unflatten = void 0;
const utils_js_1 = require("5dc07f7a5a3d111c");
const globalObj = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : undefined;
function unflatten(parsed) {
    const { hydrated, values } = this;
    if (typeof parsed === "number") return hydrate.call(this, parsed);
    if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();
    const startIndex = values.length;
    for (const value of parsed)values.push(value);
    hydrated.length = values.length;
    return hydrate.call(this, startIndex);
}
exports.unflatten = unflatten;
function hydrate(index) {
    const { hydrated, values, deferred, plugins } = this;
    let result;
    const stack = [
        [
            index,
            (v)=>{
                result = v;
            }
        ]
    ];
    let postRun = [];
    while(stack.length > 0){
        const [index, set] = stack.pop();
        switch(index){
            case utils_js_1.UNDEFINED:
                set(undefined);
                continue;
            case utils_js_1.NULL:
                set(null);
                continue;
            case utils_js_1.NAN:
                set(NaN);
                continue;
            case utils_js_1.POSITIVE_INFINITY:
                set(Infinity);
                continue;
            case utils_js_1.NEGATIVE_INFINITY:
                set(-Infinity);
                continue;
            case utils_js_1.NEGATIVE_ZERO:
                set(-0);
                continue;
        }
        if (hydrated[index]) {
            set(hydrated[index]);
            continue;
        }
        const value = values[index];
        if (!value || typeof value !== "object") {
            hydrated[index] = value;
            set(value);
            continue;
        }
        if (Array.isArray(value)) {
            if (typeof value[0] === "string") {
                const [type, b, c] = value;
                switch(type){
                    case utils_js_1.TYPE_DATE:
                        set(hydrated[index] = new Date(b));
                        continue;
                    case utils_js_1.TYPE_URL:
                        set(hydrated[index] = new URL(b));
                        continue;
                    case utils_js_1.TYPE_BIGINT:
                        set(hydrated[index] = BigInt(b));
                        continue;
                    case utils_js_1.TYPE_REGEXP:
                        set(hydrated[index] = new RegExp(b, c));
                        continue;
                    case utils_js_1.TYPE_SYMBOL:
                        set(hydrated[index] = Symbol.for(b));
                        continue;
                    case utils_js_1.TYPE_SET:
                        const newSet = new Set();
                        hydrated[index] = newSet;
                        for(let i = 1; i < value.length; i++)stack.push([
                            value[i],
                            (v)=>{
                                newSet.add(v);
                            }
                        ]);
                        set(newSet);
                        continue;
                    case utils_js_1.TYPE_MAP:
                        const map = new Map();
                        hydrated[index] = map;
                        for(let i = 1; i < value.length; i += 2){
                            const r = [];
                            stack.push([
                                value[i + 1],
                                (v)=>{
                                    r[1] = v;
                                }
                            ]);
                            stack.push([
                                value[i],
                                (k)=>{
                                    r[0] = k;
                                }
                            ]);
                            postRun.push(()=>{
                                map.set(r[0], r[1]);
                            });
                        }
                        set(map);
                        continue;
                    case utils_js_1.TYPE_NULL_OBJECT:
                        const obj = Object.create(null);
                        hydrated[index] = obj;
                        for (const key of Object.keys(b).reverse()){
                            const r = [];
                            stack.push([
                                b[key],
                                (v)=>{
                                    r[1] = v;
                                }
                            ]);
                            stack.push([
                                Number(key.slice(1)),
                                (k)=>{
                                    r[0] = k;
                                }
                            ]);
                            postRun.push(()=>{
                                obj[r[0]] = r[1];
                            });
                        }
                        set(obj);
                        continue;
                    case utils_js_1.TYPE_PROMISE:
                        if (hydrated[b]) set(hydrated[index] = hydrated[b]);
                        else {
                            const d = new utils_js_1.Deferred();
                            deferred[b] = d;
                            set(hydrated[index] = d.promise);
                        }
                        continue;
                    case utils_js_1.TYPE_ERROR:
                        const [, message, errorType] = value;
                        let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);
                        hydrated[index] = error;
                        set(error);
                        continue;
                    case utils_js_1.TYPE_PREVIOUS_RESOLVED:
                        set(hydrated[index] = hydrated[b]);
                        continue;
                    default:
                        // Run plugins at the end so we have a chance to resolve primitives
                        // without running into a loop
                        if (Array.isArray(plugins)) {
                            const r = [];
                            const vals = value.slice(1);
                            for(let i = 0; i < vals.length; i++){
                                const v = vals[i];
                                stack.push([
                                    v,
                                    (v)=>{
                                        r[i] = v;
                                    }
                                ]);
                            }
                            postRun.push(()=>{
                                for (const plugin of plugins){
                                    const result = plugin(value[0], ...r);
                                    if (result) {
                                        set(hydrated[index] = result.value);
                                        return;
                                    }
                                }
                                throw new SyntaxError();
                            });
                            continue;
                        }
                        throw new SyntaxError();
                }
            } else {
                const array = [];
                hydrated[index] = array;
                for(let i = 0; i < value.length; i++){
                    const n = value[i];
                    if (n !== utils_js_1.HOLE) stack.push([
                        n,
                        (v)=>{
                            array[i] = v;
                        }
                    ]);
                }
                set(array);
                continue;
            }
        } else {
            const object = {};
            hydrated[index] = object;
            for (const key of Object.keys(value).reverse()){
                const r = [];
                stack.push([
                    value[key],
                    (v)=>{
                        r[1] = v;
                    }
                ]);
                stack.push([
                    Number(key.slice(1)),
                    (k)=>{
                        r[0] = k;
                    }
                ]);
                postRun.push(()=>{
                    object[r[0]] = r[1];
                });
            }
            set(object);
            continue;
        }
    }
    while(postRun.length > 0)postRun.pop()();
    return result;
}

},{"5dc07f7a5a3d111c":"kbjqW"}],"8Pe3w":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parse = parse;
exports.serialize = serialize;
/**
 * RegExp to match cookie-name in RFC 6265 sec 4.1.1
 * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
 * which has been replaced by the token definition in RFC 7230 appendix B.
 *
 * cookie-name       = token
 * token             = 1*tchar
 * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
 *                     "*" / "+" / "-" / "." / "^" / "_" /
 *                     "`" / "|" / "~" / DIGIT / ALPHA
 *
 * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191
 * Allow same range as cookie value, except `=`, which delimits end of name.
 */ const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
/**
 * RegExp to match cookie-value in RFC 6265 sec 4.1.1
 *
 * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
 *                     ; US-ASCII characters excluding CTLs,
 *                     ; whitespace DQUOTE, comma, semicolon,
 *                     ; and backslash
 *
 * Allowing more characters: https://github.com/jshttp/cookie/issues/191
 * Comma, backslash, and DQUOTE are not part of the parsing algorithm.
 */ const cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
/**
 * RegExp to match domain-value in RFC 6265 sec 4.1.1
 *
 * domain-value      = <subdomain>
 *                     ; defined in [RFC1034], Section 3.5, as
 *                     ; enhanced by [RFC1123], Section 2.1
 * <subdomain>       = <label> | <subdomain> "." <label>
 * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
 *                     Labels must be 63 characters or less.
 *                     'let-dig' not 'letter' in the first char, per RFC1123
 * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
 * <let-dig-hyp>     = <let-dig> | "-"
 * <let-dig>         = <letter> | <digit>
 * <letter>          = any one of the 52 alphabetic characters A through Z in
 *                     upper case and a through z in lower case
 * <digit>           = any one of the ten digits 0 through 9
 *
 * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
 *
 * > (Note that a leading %x2E ("."), if present, is ignored even though that
 * character is not permitted, but a trailing %x2E ("."), if present, will
 * cause the user agent to ignore the attribute.)
 */ const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
/**
 * RegExp to match path-value in RFC 6265 sec 4.1.1
 *
 * path-value        = <any CHAR except CTLs or ";">
 * CHAR              = %x01-7F
 *                     ; defined in RFC 5234 appendix B.1
 */ const pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
const __toString = Object.prototype.toString;
const NullObject = /* @__PURE__ */ (()=>{
    const C = function() {};
    C.prototype = Object.create(null);
    return C;
})();
/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 */ function parse(str, options) {
    const obj = new NullObject();
    const len = str.length;
    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
    if (len < 2) return obj;
    const dec = options?.decode || decode;
    let index = 0;
    do {
        const eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) break; // No more cookie pairs.
        const colonIdx = str.indexOf(";", index);
        const endIdx = colonIdx === -1 ? len : colonIdx;
        if (eqIdx > endIdx) {
            // backtrack on prior semicolon
            index = str.lastIndexOf(";", eqIdx - 1) + 1;
            continue;
        }
        const keyStartIdx = startIndex(str, index, eqIdx);
        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
        const key = str.slice(keyStartIdx, keyEndIdx);
        // only assign once
        if (obj[key] === undefined) {
            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
            let valEndIdx = endIndex(str, endIdx, valStartIdx);
            const value = dec(str.slice(valStartIdx, valEndIdx));
            obj[key] = value;
        }
        index = endIdx + 1;
    }while (index < len);
    return obj;
}
function startIndex(str, index, max) {
    do {
        const code = str.charCodeAt(index);
        if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index;
    }while (++index < max);
    return max;
}
function endIndex(str, index, min) {
    while(index > min){
        const code = str.charCodeAt(--index);
        if (code !== 0x20 /*   */  && code !== 0x09 /* \t */ ) return index + 1;
    }
    return min;
}
/**
 * Serialize data into a cookie header.
 *
 * Serialize a name value pair into a cookie string suitable for
 * http headers. An optional options object specifies cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 */ function serialize(name, val, options) {
    const enc = options?.encode || encodeURIComponent;
    if (!cookieNameRegExp.test(name)) throw new TypeError(`argument name is invalid: ${name}`);
    const value = enc(val);
    if (!cookieValueRegExp.test(value)) throw new TypeError(`argument val is invalid: ${val}`);
    let str = name + "=" + value;
    if (!options) return str;
    if (options.maxAge !== undefined) {
        if (!Number.isInteger(options.maxAge)) throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
        str += "; Max-Age=" + options.maxAge;
    }
    if (options.domain) {
        if (!domainValueRegExp.test(options.domain)) throw new TypeError(`option domain is invalid: ${options.domain}`);
        str += "; Domain=" + options.domain;
    }
    if (options.path) {
        if (!pathValueRegExp.test(options.path)) throw new TypeError(`option path is invalid: ${options.path}`);
        str += "; Path=" + options.path;
    }
    if (options.expires) {
        if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) throw new TypeError(`option expires is invalid: ${options.expires}`);
        str += "; Expires=" + options.expires.toUTCString();
    }
    if (options.httpOnly) str += "; HttpOnly";
    if (options.secure) str += "; Secure";
    if (options.partitioned) str += "; Partitioned";
    if (options.priority) {
        const priority = typeof options.priority === "string" ? options.priority.toLowerCase() : undefined;
        switch(priority){
            case "low":
                str += "; Priority=Low";
                break;
            case "medium":
                str += "; Priority=Medium";
                break;
            case "high":
                str += "; Priority=High";
                break;
            default:
                throw new TypeError(`option priority is invalid: ${options.priority}`);
        }
    }
    if (options.sameSite) {
        const sameSite = typeof options.sameSite === "string" ? options.sameSite.toLowerCase() : options.sameSite;
        switch(sameSite){
            case true:
            case "strict":
                str += "; SameSite=Strict";
                break;
            case "lax":
                str += "; SameSite=Lax";
                break;
            case "none":
                str += "; SameSite=None";
                break;
            default:
                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
        }
    }
    return str;
}
/**
 * URL-decode string value. Optimized to skip native call when no %.
 */ function decode(str) {
    if (str.indexOf("%") === -1) return str;
    try {
        return decodeURIComponent(str);
    } catch (e) {
        return str;
    }
}
/**
 * Determine if value is a Date.
 */ function isDate(val) {
    return __toString.call(val) === "[object Date]";
}

},{}],"8AeuC":[function(require,module,exports,__globalThis) {
"use strict";
var defaultParseOptions = {
    decodeValues: true,
    map: false,
    silent: false
};
function isNonEmptyString(str) {
    return typeof str === "string" && !!str.trim();
}
function parseString(setCookieValue, options) {
    var parts = setCookieValue.split(";").filter(isNonEmptyString);
    var nameValuePairStr = parts.shift();
    var parsed = parseNameValuePair(nameValuePairStr);
    var name = parsed.name;
    var value = parsed.value;
    options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
    try {
        value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value
    } catch (e) {
        console.error("set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.", e);
    }
    var cookie = {
        name: name,
        value: value
    };
    parts.forEach(function(part) {
        var sides = part.split("=");
        var key = sides.shift().trimLeft().toLowerCase();
        var value = sides.join("=");
        if (key === "expires") cookie.expires = new Date(value);
        else if (key === "max-age") cookie.maxAge = parseInt(value, 10);
        else if (key === "secure") cookie.secure = true;
        else if (key === "httponly") cookie.httpOnly = true;
        else if (key === "samesite") cookie.sameSite = value;
        else if (key === "partitioned") cookie.partitioned = true;
        else cookie[key] = value;
    });
    return cookie;
}
function parseNameValuePair(nameValuePairStr) {
    // Parses name-value-pair according to rfc6265bis draft
    var name = "";
    var value = "";
    var nameValueArr = nameValuePairStr.split("=");
    if (nameValueArr.length > 1) {
        name = nameValueArr.shift();
        value = nameValueArr.join("="); // everything after the first =, joined by a "=" if there was more than one part
    } else value = nameValuePairStr;
    return {
        name: name,
        value: value
    };
}
function parse(input, options) {
    options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
    if (!input) {
        if (!options.map) return [];
        else return {};
    }
    if (input.headers) {
        if (typeof input.headers.getSetCookie === "function") // for fetch responses - they combine headers of the same type in the headers array,
        // but getSetCookie returns an uncombined array
        input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"]) // fast-path for node.js (which automatically normalizes header names to lower-case
        input = input.headers["set-cookie"];
        else {
            // slow-path for other environments - see #25
            var sch = input.headers[Object.keys(input.headers).find(function(key) {
                return key.toLowerCase() === "set-cookie";
            })];
            // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36
            if (!sch && input.headers.cookie && !options.silent) console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
            input = sch;
        }
    }
    if (!Array.isArray(input)) input = [
        input
    ];
    if (!options.map) return input.filter(isNonEmptyString).map(function(str) {
        return parseString(str, options);
    });
    else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies, str) {
            var cookie = parseString(str, options);
            cookies[cookie.name] = cookie;
            return cookies;
        }, cookies);
    }
}
/*
  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas
  that are within a single set-cookie field-value, such as in the Expires portion.

  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2
  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128
  React Native's fetch does this for *every* header, including set-cookie.

  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25
  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation
*/ function splitCookiesString(cookiesString) {
    if (Array.isArray(cookiesString)) return cookiesString;
    if (typeof cookiesString !== "string") return [];
    var cookiesStrings = [];
    var pos = 0;
    var start;
    var ch;
    var lastComma;
    var nextStart;
    var cookiesSeparatorFound;
    function skipWhitespace() {
        while(pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)))pos += 1;
        return pos < cookiesString.length;
    }
    function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
    }
    while(pos < cookiesString.length){
        start = pos;
        cookiesSeparatorFound = false;
        while(skipWhitespace()){
            ch = cookiesString.charAt(pos);
            if (ch === ",") {
                // ',' is a cookie separator if we have later first '=', not ';' or ','
                lastComma = pos;
                pos += 1;
                skipWhitespace();
                nextStart = pos;
                while(pos < cookiesString.length && notSpecialChar())pos += 1;
                // currently special character
                if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
                    // we found cookies separator
                    cookiesSeparatorFound = true;
                    // pos is inside the next cookie, so back up and return it.
                    pos = nextStart;
                    cookiesStrings.push(cookiesString.substring(start, lastComma));
                    start = pos;
                } else // in param ',' or param separator ';',
                // we continue from that comma
                pos = lastComma + 1;
            } else pos += 1;
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
    }
    return cookiesStrings;
}
module.exports = parse;
module.exports.parse = parse;
module.exports.parseString = parseString;
module.exports.splitCookiesString = splitCookiesString;

},{}],"duKYb":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$5652 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$5652.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$5652.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _mainCardBalance = require("./MainCardBalance");
var _mainCardBalanceDefault = parcelHelpers.interopDefault(_mainCardBalance);
var _mainCardBanner = require("./MainCardBanner");
var _mainCardBannerDefault = parcelHelpers.interopDefault(_mainCardBanner);
const MainCard = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full px-4 md:px-0",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _mainCardBalanceDefault.default), {}, void 0, false, {
                fileName: "src/Components/MainCard/MainCard.js",
                lineNumber: 8,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _mainCardBannerDefault.default), {}, void 0, false, {
                fileName: "src/Components/MainCard/MainCard.js",
                lineNumber: 9,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/MainCard/MainCard.js",
        lineNumber: 7,
        columnNumber: 5
    }, undefined);
};
_c = MainCard;
exports.default = MainCard;
var _c;
$RefreshReg$(_c, "MainCard");

  $parcel$ReactRefreshHelpers$5652.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./MainCardBalance":"c3P4N","./MainCardBanner":"aMoMX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"c3P4N":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c37a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c37a.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c37a.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const MainCardBalance = ()=>{
    _s();
    const [view, setView] = (0, _react.useState)(false);
    const handleViewToggle = ()=>{
        setView(!view);
    };
    const { formData } = (0, _appContext.useAppContext)();
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "w-full h-[175px] rounded-3xl rounded-b-4xl bg-[#0171ff] relative flex flex-col items-center justify-center text-white gap-2",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-sm mb-2",
                    children: "Your Available Balance"
                }, void 0, false, {
                    fileName: "src/Components/MainCard/MainCardBalance.js",
                    lineNumber: 16,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-5xl",
                    style: {
                        fontFamily: "agrandir-gheavy"
                    },
                    children: [
                        "\u20B9",
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                            className: "ml-2",
                            children: view ? formData.CurrentBalance : "\u2055".repeat(String(formData.CurrentBalance).length)
                        }, void 0, false, {
                            fileName: "src/Components/MainCard/MainCardBalance.js",
                            lineNumber: 19,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/MainCard/MainCardBalance.js",
                    lineNumber: 17,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-lg flex items-center justify-center gap-2",
                    onClick: handleViewToggle,
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "font-semibold underline",
                            children: [
                                view ? "Hide" : "View",
                                " Balance"
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/MainCard/MainCardBalance.js",
                            lineNumber: 29,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: `${view ? "bi bi-eye-slash" : "bi bi-eye"} cursor-pointer`
                        }, void 0, false, {
                            fileName: "src/Components/MainCard/MainCardBalance.js",
                            lineNumber: 32,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/MainCard/MainCardBalance.js",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/Components/MainCard/MainCardBalance.js",
            lineNumber: 15,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/Components/MainCard/MainCardBalance.js",
        lineNumber: 14,
        columnNumber: 5
    }, undefined);
};
_s(MainCardBalance, "8iONVw984bXhgzropjfI9USDhLw=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = MainCardBalance;
exports.default = MainCardBalance;
var _c;
$RefreshReg$(_c, "MainCardBalance");

  $parcel$ReactRefreshHelpers$c37a.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"aMoMX":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$b062 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$b062.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$b062.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const MainCardBanner = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full h-[150px] rounded-b-3xl bg-[#121826] -mt-12 flex items-center justify-center pt-24 md:pt-[105px] gap-4 py-16",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bi bi-calendar text-[#ffa900] text-6xl mt-2"
            }, void 0, false, {
                fileName: "src/Components/MainCard/MainCardBanner.js",
                lineNumber: 6,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col justify-center items-start text-white",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "text-lg font-semibold",
                        children: "New Month Started"
                    }, void 0, false, {
                        fileName: "src/Components/MainCard/MainCardBanner.js",
                        lineNumber: 8,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "text-sm leading-tight",
                        children: [
                            "Time to analyze!",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("br", {}, void 0, false, {
                                fileName: "src/Components/MainCard/MainCardBanner.js",
                                lineNumber: 11,
                                columnNumber: 11
                            }, undefined),
                            "Set goals for June?"
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/MainCard/MainCardBanner.js",
                        lineNumber: 9,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/MainCard/MainCardBanner.js",
                lineNumber: 7,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/MainCard/MainCardBanner.js",
        lineNumber: 5,
        columnNumber: 5
    }, undefined);
};
_c = MainCardBanner;
exports.default = MainCardBanner;
var _c;
$RefreshReg$(_c, "MainCardBanner");

  $parcel$ReactRefreshHelpers$b062.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"5MArW":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$3638 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$3638.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$3638.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _quickActionBtn = require("./QuickActionBtn");
var _quickActionBtnDefault = parcelHelpers.interopDefault(_quickActionBtn);
const QuickActions = ({ setAddIcome, setAddInvestment, setAddExpense })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full py-4 flex items-center justify-around gap-2 -mt-2 px-4 md:px-0",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _quickActionBtnDefault.default), {
                icon: "bi bi-plus",
                type: "Add Income",
                clickState: setAddIcome
            }, void 0, false, {
                fileName: "src/Components/QuickActions/QuickActions.js",
                lineNumber: 7,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _quickActionBtnDefault.default), {
                icon: "bi bi-piggy-bank-fill",
                type: "Add Savings",
                clickState: setAddInvestment
            }, void 0, false, {
                fileName: "src/Components/QuickActions/QuickActions.js",
                lineNumber: 12,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _quickActionBtnDefault.default), {
                icon: "bi bi-dash",
                type: "Add Expenses",
                clickState: setAddExpense
            }, void 0, false, {
                fileName: "src/Components/QuickActions/QuickActions.js",
                lineNumber: 17,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/QuickActions/QuickActions.js",
        lineNumber: 6,
        columnNumber: 5
    }, undefined);
};
_c = QuickActions;
exports.default = QuickActions;
var _c;
$RefreshReg$(_c, "QuickActions");

  $parcel$ReactRefreshHelpers$3638.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./QuickActionBtn":"hoYAe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"hoYAe":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$8424 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$8424.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$8424.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const QuickActionBtn = ({ icon, type, clickState })=>{
    const handleClick = ()=>{
        clickState(true);
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: " flex flex-col gap-2 items-center cursor-pointer",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bg-[#0171ff] rounded-full w-fit p-3",
                onClick: handleClick,
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: `${icon} text-2xl text-white flex items-center justify-center`
                }, void 0, false, {
                    fileName: "src/Components/QuickActions/QuickActionBtn.js",
                    lineNumber: 10,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/QuickActions/QuickActionBtn.js",
                lineNumber: 9,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "font-semibold whitespace-pre-line text-center leading-tight",
                children: type.replace(" ", "\n")
            }, void 0, false, {
                fileName: "src/Components/QuickActions/QuickActionBtn.js",
                lineNumber: 14,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/QuickActions/QuickActionBtn.js",
        lineNumber: 8,
        columnNumber: 5
    }, undefined);
};
_c = QuickActionBtn;
exports.default = QuickActionBtn;
var _c;
$RefreshReg$(_c, "QuickActionBtn");

  $parcel$ReactRefreshHelpers$8424.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"5P0C6":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$7523 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$7523.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$7523.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _recentTransaction = require("./RecentTransaction");
var _recentTransactionDefault = parcelHelpers.interopDefault(_recentTransaction);
var _emptyMp4 = require("../../../public/media/videos/Empty.mp4");
var _emptyMp4Default = parcelHelpers.interopDefault(_emptyMp4);
var _s = $RefreshSig$();
const RecentTransactions = ({ setAllTransactions, renderList, webLength, ctrlHeight })=>{
    _s();
    const [isMobile, setIsMobile] = (0, _react.useState)(true);
    (0, _react.useEffect)(()=>{
        const checkScreenSize = ()=>{
            setIsMobile(window.innerWidth < 768);
        };
        checkScreenSize();
        window.addEventListener("resize", checkScreenSize);
        return ()=>window.removeEventListener("resize", checkScreenSize);
    }, []);
    const handleViewAll = ()=>{
        setAllTransactions(true);
    };
    const alteredSliceLength = isMobile ? 3 : webLength;
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between px-6 md:px-0 mb-2",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold text-md",
                        children: [
                            ctrlHeight ? "All " : "Recent ",
                            "Transactions"
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                        lineNumber: 34,
                        columnNumber: 9
                    }, undefined),
                    !ctrlHeight && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "text-xs underline cursor-pointer",
                        onClick: handleViewAll,
                        children: "View All"
                    }, void 0, false, {
                        fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                        lineNumber: 38,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                lineNumber: 33,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `flex flex-col gap-1 px-6 md:px-0 items-center justify-center ${ctrlHeight ? "md:justify-start md:h-[315px] md:overflow-y-scroll md:pr-3" : ""}`,
                children: renderList.length > 0 ? renderList.slice(0, alteredSliceLength).map((transaction, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recentTransactionDefault.default), {
                        data: transaction
                    }, index, false, {
                        fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                        lineNumber: 57,
                        columnNumber: 15
                    }, undefined)) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                    src: (0, _emptyMp4Default.default),
                    autoPlay: true,
                    muted: true,
                    loop: true,
                    className: "h-60 w-60 -mt-4"
                }, void 0, false, {
                    fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                    lineNumber: 60,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/RecentTransactions/RecentTransactions.js",
                lineNumber: 46,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/RecentTransactions/RecentTransactions.js",
        lineNumber: 32,
        columnNumber: 5
    }, undefined);
};
_s(RecentTransactions, "MlmSG3uSWWvVgZvDg0SD4XH58F4=");
_c = RecentTransactions;
exports.default = RecentTransactions;
var _c;
$RefreshReg$(_c, "RecentTransactions");

  $parcel$ReactRefreshHelpers$7523.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./RecentTransaction":"k16c5","../../../public/media/videos/Empty.mp4":"kWlIC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"k16c5":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$e662 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$e662.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$e662.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _userProfilePic1Png = require("url:../../../public/media/images/UserProfilePic1.png");
var _userProfilePic1PngDefault = parcelHelpers.interopDefault(_userProfilePic1Png);
var _transactionModal = require("./TransactionModal");
var _transactionModalDefault = parcelHelpers.interopDefault(_transactionModal);
var _s = $RefreshSig$();
const RecentTransaction = ({ bgOverlay, data })=>{
    _s();
    const [isModalOpen, setIsModalOpen] = (0, _react.useState)(false);
    const getTransactionStyles = (type)=>{
        switch(type){
            case "Income":
                return {
                    color: "text-green-500",
                    symbol: "+"
                };
            case "Expense":
                return {
                    color: "text-red-500",
                    symbol: "-"
                };
            case "Investment":
                return {
                    color: "text-blue-500",
                    symbol: "\u2197"
                };
            default:
                return {
                    color: "",
                    symbol: ""
                };
        }
    };
    const openModal = ()=>{
        setIsModalOpen(true);
    };
    const closeModal = ()=>{
        setIsModalOpen(false);
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `flex items-center justify-between w-full py-2 ${bgOverlay ? "bg-[#016fff4e] rounded-lg px-2" : ""}`,
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-center gap-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                src: (0, _userProfilePic1PngDefault.default),
                                className: "rounded-full w-8 h-8",
                                alt: "Profile"
                            }, void 0, false, {
                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                lineNumber: 37,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "flex flex-col justify-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "font-semibold",
                                        children: data["Entity"]
                                    }, void 0, false, {
                                        fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                        lineNumber: 43,
                                        columnNumber: 13
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "flex items-center justify-between text-xs",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                children: data["Date"]
                                            }, void 0, false, {
                                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                                lineNumber: 45,
                                                columnNumber: 15
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                className: "mx-2",
                                                children: "|"
                                            }, void 0, false, {
                                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                                lineNumber: 46,
                                                columnNumber: 15
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                children: data["Time"]
                                            }, void 0, false, {
                                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                                lineNumber: 47,
                                                columnNumber: 15
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                        lineNumber: 44,
                                        columnNumber: 13
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                lineNumber: 42,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                        lineNumber: 36,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold text-lg flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: getTransactionStyles(data["TransactionType"]).color,
                                children: [
                                    getTransactionStyles(data["TransactionType"]).symbol,
                                    " \u20B9",
                                    data["Amount"]
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                lineNumber: 52,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "ml-3 bi bi-gear-fill text-gray-500 cursor-pointer hover:text-gray-700",
                                onClick: openModal
                            }, void 0, false, {
                                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                                lineNumber: 56,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                        lineNumber: 51,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                lineNumber: 31,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _transactionModalDefault.default), {
                isOpen: isModalOpen,
                onClose: closeModal,
                transaction: data
            }, void 0, false, {
                fileName: "src/Components/RecentTransactions/RecentTransaction.js",
                lineNumber: 63,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true);
};
_s(RecentTransaction, "mLsII5HRP5G63IA/8vjZ5YHXWr8=");
_c = RecentTransaction;
exports.default = RecentTransaction;
var _c;
$RefreshReg$(_c, "RecentTransaction");

  $parcel$ReactRefreshHelpers$e662.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","url:../../../public/media/images/UserProfilePic1.png":"dqvpE","./TransactionModal":"ddZry","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"ddZry":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$97bd = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$97bd.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$97bd.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const TransactionModal = ({ isOpen, onClose, transaction })=>{
    _s();
    const { incomeTransactions, setIncomeTransactions, expenseTransactions, setExpenseTransactions, investmentTransactions, setInvestmentTransactions, transactions, setTransactions, updateFormData, formData } = (0, _appContext.useAppContext)();
    const [isEditing, setIsEditing] = (0, _react.useState)(false);
    const [editedTransaction, setEditedTransaction] = (0, _react.useState)({});
    const [errors, setErrors] = (0, _react.useState)({});
    const [showDeleteConfirmation, setShowDeleteConfirmation] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        if (transaction) setEditedTransaction({
            ...transaction
        });
    }, [
        transaction
    ]);
    if (!isOpen || !transaction) return null;
    const handleInputChange = (field, value)=>{
        setEditedTransaction((prev)=>({
                ...prev,
                [field]: value
            }));
        if (errors[field]) {
            const newErrors = {
                ...errors
            };
            delete newErrors[field];
            setErrors(newErrors);
        }
    };
    const validateForm = ()=>{
        const newErrors = {};
        if (!editedTransaction.Amount || isNaN(parseFloat(editedTransaction.Amount))) newErrors.Amount = "Amount is required";
        else if (parseFloat(editedTransaction.Amount) <= 0) newErrors.Amount = "Amount must be positive";
        if (!editedTransaction.Entity || editedTransaction.Entity.trim() === "") newErrors.Entity = "Entity is required";
        if (!editedTransaction.Category || editedTransaction.Category.trim() === "") newErrors.Category = "Category is required";
        if (!editedTransaction.Date) newErrors.Date = "Date is required";
        if (!editedTransaction.Time) newErrors.Time = "Time is required";
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSave = ()=>{
        if (!validateForm()) return;
        const originalAmount = Number(transaction.Amount);
        const newAmount = Number(editedTransaction.Amount);
        const amountDifference = newAmount - originalAmount;
        const updateTransactionList = (list, setList)=>{
            const updatedList = list.map((item)=>item.id === transaction.id ? editedTransaction : item);
            setList(updatedList);
        };
        const updatedAllTransactions = transactions.map((item)=>item.id === transaction.id ? editedTransaction : item);
        setTransactions(updatedAllTransactions);
        switch(transaction.TransactionType){
            case "Income":
                updateTransactionList(incomeTransactions, setIncomeTransactions);
                updateFormData("TotalIncome", formData.TotalIncome + amountDifference);
                updateFormData("CurrentBalance", formData.CurrentBalance + amountDifference);
                break;
            case "Expense":
                updateTransactionList(expenseTransactions, setExpenseTransactions);
                updateFormData("TotalExpense", formData.TotalExpense + amountDifference);
                updateFormData("CurrentBalance", formData.CurrentBalance - amountDifference);
                break;
            case "Investment":
                updateTransactionList(investmentTransactions, setInvestmentTransactions);
                updateFormData("TotalInvestment", formData.TotalInvestment + amountDifference);
                break;
            default:
                break;
        }
        setIsEditing(false);
        onClose();
    };
    const handleDelete = ()=>{
        setShowDeleteConfirmation(true);
    };
    const confirmDelete = ()=>{
        const amount = Number(transaction.Amount);
        const filterTransactionList = (list, setList)=>{
            const updatedList = list.filter((item)=>item.id !== transaction.id);
            setList(updatedList);
        };
        const updatedAllTransactions = transactions.filter((item)=>item.id !== transaction.id);
        setTransactions(updatedAllTransactions);
        switch(transaction.TransactionType){
            case "Income":
                filterTransactionList(incomeTransactions, setIncomeTransactions);
                updateFormData("TotalIncome", formData.TotalIncome - amount);
                updateFormData("CurrentBalance", formData.CurrentBalance - amount);
                break;
            case "Expense":
                filterTransactionList(expenseTransactions, setExpenseTransactions);
                updateFormData("TotalExpense", formData.TotalExpense - amount);
                updateFormData("CurrentBalance", formData.CurrentBalance + amount);
                break;
            case "Investment":
                filterTransactionList(investmentTransactions, setInvestmentTransactions);
                updateFormData("TotalInvestment", formData.TotalInvestment - amount);
                break;
            default:
                break;
        }
        setShowDeleteConfirmation(false);
        onClose();
    };
    const getTransactionTypeLabel = ()=>{
        switch(transaction.TransactionType){
            case "Income":
                return "Income";
            case "Expense":
                return "Expense";
            case "Investment":
                return "Investment";
            default:
                return "Transaction";
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "bg-white rounded-lg p-6 max-w-md w-full text-black",
            children: [
                !isEditing && !showDeleteConfirmation && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold mb-4",
                            children: "Transaction Details"
                        }, void 0, false, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 197,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "mb-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Type:"
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 200,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        transaction.TransactionType
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 199,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Amount:"
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 204,
                                            columnNumber: 17
                                        }, undefined),
                                        " \u20B9",
                                        transaction.Amount
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 203,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: [
                                                transaction.TransactionType === "Income" ? "From" : transaction.TransactionType === "Expense" ? "To" : "In",
                                                ":"
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 208,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        transaction.Entity
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 207,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Category:"
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 219,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        transaction.Category
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 218,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Date:"
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 223,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        transaction.Date
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 222,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Time:"
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 226,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        transaction.Time
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 225,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 198,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-3",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold flex-1 hover:bg-gray-400 transition-colors",
                                    onClick: onClose,
                                    children: "Close"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 230,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-blue-500 text-white px-4 py-2 rounded-md font-semibold flex-1 hover:bg-blue-600 transition-colors",
                                    onClick: ()=>setIsEditing(true),
                                    children: "Edit"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 236,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-red-500 text-white px-4 py-2 rounded-md font-semibold flex-1 hover:bg-red-600 transition-colors",
                                    onClick: handleDelete,
                                    children: "Delete"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 242,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 229,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true),
                isEditing && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold mb-4",
                            children: [
                                "Edit ",
                                getTransactionTypeLabel()
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 254,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex flex-col gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "flex flex-col items-start justify-center w-full gap-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "font-semibold",
                                            children: [
                                                "Amount ",
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                    className: "text-red-500",
                                                    children: "*"
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 260,
                                                    columnNumber: 26
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 259,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "number",
                                            className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Amount ? "border-2 border-red-500" : ""}`,
                                            value: editedTransaction.Amount || "",
                                            onChange: (e)=>handleInputChange("Amount", e.target.value)
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 262,
                                            columnNumber: 17
                                        }, undefined),
                                        errors.Amount && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-red-500 text-sm mt-1",
                                            children: errors.Amount
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 271,
                                            columnNumber: 19
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 258,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "flex flex-col items-start justify-center w-full gap-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "font-semibold",
                                            children: [
                                                transaction.TransactionType === "Income" ? "Entity From" : transaction.TransactionType === "Expense" ? "Entity To" : "Entity",
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                    className: "text-red-500",
                                                    children: "*"
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 282,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 276,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Entity ? "border-2 border-red-500" : ""}`,
                                            value: editedTransaction.Entity || "",
                                            onChange: (e)=>handleInputChange("Entity", e.target.value)
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 284,
                                            columnNumber: 17
                                        }, undefined),
                                        errors.Entity && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-red-500 text-sm mt-1",
                                            children: errors.Entity
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 293,
                                            columnNumber: 19
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 275,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "flex flex-col items-start justify-center w-full gap-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                            className: "font-semibold",
                                            children: [
                                                "Category ",
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                    className: "text-red-500",
                                                    children: "*"
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 299,
                                                    columnNumber: 28
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 298,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                            type: "text",
                                            className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Category ? "border-2 border-red-500" : ""}`,
                                            value: editedTransaction.Category || "",
                                            onChange: (e)=>handleInputChange("Category", e.target.value)
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 301,
                                            columnNumber: 17
                                        }, undefined),
                                        errors.Category && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-red-500 text-sm mt-1",
                                            children: errors.Category
                                        }, void 0, false, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 312,
                                            columnNumber: 19
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 297,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "w-full flex items-center justify-between gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "flex flex-col items-start justify-center w-1/2 gap-1",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                    className: "font-semibold",
                                                    children: [
                                                        "Date ",
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                            className: "text-red-500",
                                                            children: "*"
                                                        }, void 0, false, {
                                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                            lineNumber: 319,
                                                            columnNumber: 26
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 318,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                                    type: "date",
                                                    className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Date ? "border-2 border-red-500" : ""}`,
                                                    value: editedTransaction.Date || "",
                                                    onChange: (e)=>handleInputChange("Date", e.target.value)
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 321,
                                                    columnNumber: 19
                                                }, undefined),
                                                errors.Date && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-red-500 text-sm mt-1",
                                                    children: errors.Date
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 330,
                                                    columnNumber: 21
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 317,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "flex flex-col items-end justify-center w-1/2 gap-1",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                    className: "font-semibold",
                                                    children: [
                                                        "Time ",
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                            className: "text-red-500",
                                                            children: "*"
                                                        }, void 0, false, {
                                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                            lineNumber: 335,
                                                            columnNumber: 26
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 334,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                                    type: "time",
                                                    className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Time ? "border-2 border-red-500" : ""}`,
                                                    value: editedTransaction.Time || "",
                                                    onChange: (e)=>handleInputChange("Time", e.target.value)
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 337,
                                                    columnNumber: 19
                                                }, undefined),
                                                errors.Time && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-red-500 text-sm mt-1",
                                                    children: errors.Time
                                                }, void 0, false, {
                                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                                    lineNumber: 346,
                                                    columnNumber: 21
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                            lineNumber: 333,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 316,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 257,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-3 mt-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold flex-1 hover:bg-gray-400 transition-colors",
                                    onClick: ()=>setIsEditing(false),
                                    children: "Cancel"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 352,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-green-500 text-white px-4 py-2 rounded-md font-semibold flex-1 hover:bg-green-600 transition-colors",
                                    onClick: handleSave,
                                    children: "Save"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 358,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 351,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true),
                showDeleteConfirmation && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold mb-4",
                            children: "Confirm Delete"
                        }, void 0, false, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 370,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "mb-6",
                            children: [
                                "Are you sure you want to delete this",
                                " ",
                                transaction.TransactionType.toLowerCase(),
                                "?"
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 371,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-3",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold flex-1 hover:bg-gray-400 transition-colors",
                                    onClick: ()=>setShowDeleteConfirmation(false),
                                    children: "Cancel"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 376,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-red-500 text-white px-4 py-2 rounded-md font-semibold flex-1 hover:bg-red-600 transition-colors",
                                    onClick: confirmDelete,
                                    children: "Delete"
                                }, void 0, false, {
                                    fileName: "src/Components/RecentTransactions/TransactionModal.js",
                                    lineNumber: 382,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/RecentTransactions/TransactionModal.js",
                            lineNumber: 375,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true)
            ]
        }, void 0, true, {
            fileName: "src/Components/RecentTransactions/TransactionModal.js",
            lineNumber: 194,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/Components/RecentTransactions/TransactionModal.js",
        lineNumber: 193,
        columnNumber: 5
    }, undefined);
};
_s(TransactionModal, "IbtB+hHTHzrFVdXoL8XqS2E4m90=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = TransactionModal;
exports.default = TransactionModal;
var _c;
$RefreshReg$(_c, "TransactionModal");

  $parcel$ReactRefreshHelpers$97bd.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"kWlIC":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("Empty.fa3e0a54.mp4") + "?" + Date.now();

},{}],"3P15P":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$a0d6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$a0d6.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$a0d6.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _recentTransaction = require("../RecentTransactions/RecentTransaction");
var _recentTransactionDefault = parcelHelpers.interopDefault(_recentTransaction);
var _s = $RefreshSig$();
const AllTransactions = ({ setAllTransactions, renderList, ctrlPosition })=>{
    _s();
    const [searchTerm, setSearchTerm] = (0, _react.useState)("");
    const [filteredTransactions, setFilteredTransactions] = (0, _react.useState)(renderList);
    (0, _react.useEffect)(()=>{
        if (!searchTerm.trim()) {
            setFilteredTransactions(renderList);
            return;
        }
        const lowerCaseSearchTerm = searchTerm.toLowerCase();
        const filtered = renderList.filter((transaction)=>{
            return transaction.Entity.toLowerCase().includes(lowerCaseSearchTerm) || transaction.Category.toLowerCase().includes(lowerCaseSearchTerm) || transaction.TransactionType.toLowerCase().includes(lowerCaseSearchTerm) || transaction.Amount.toString().includes(lowerCaseSearchTerm) || transaction.Date.includes(lowerCaseSearchTerm);
        });
        setFilteredTransactions(filtered);
    }, [
        searchTerm,
        renderList
    ]);
    const handleCloseTransactions = ()=>{
        setAllTransactions(false);
    };
    const handleSearchChange = (e)=>{
        setSearchTerm(e.target.value);
    };
    const handleSearchSubmit = (e)=>{
        e.preventDefault();
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `w-[92.5%] md:mx-20 md:w-[80%] flex flex-col items-center justify-start
        bg-[#121826] absolute left-[3.75%] rounded-t-3xl px-4 md:px-6 pt-4 opacity-[97.5%] text-white gap-2 ${ctrlPosition ? "-bottom-20 md:bottom-0" : "bottom-0"} h-full`,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between text-xl md:py-2",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold ",
                        children: "All Transactions"
                    }, void 0, false, {
                        fileName: "src/Components/AllTransactions/AllTransactions.js",
                        lineNumber: 50,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                        className: "bi bi-x-circle-fill cursor-pointer",
                        onClick: handleCloseTransactions
                    }, void 0, false, {
                        fileName: "src/Components/AllTransactions/AllTransactions.js",
                        lineNumber: 51,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AllTransactions/AllTransactions.js",
                lineNumber: 49,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("form", {
                className: "w-full flex items-center justify-center mt-2",
                onSubmit: handleSearchSubmit,
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                        placeholder: "Search",
                        className: "bg-gray-100 rounded-l-lg py-2 w-[85%] text-black/50 pl-3 pt-3 font-semibold",
                        value: searchTerm,
                        onChange: handleSearchChange
                    }, void 0, false, {
                        fileName: "src/Components/AllTransactions/AllTransactions.js",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                        type: "submit",
                        className: "bg-[#1071ff]/50 w-[15%] rounded-r-lg py-2 pt-3 px-3 shadow-2xl shadow-black flex items-center justify-center cursor-pointer",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                            className: "bi bi-search text-white"
                        }, void 0, false, {
                            fileName: "src/Components/AllTransactions/AllTransactions.js",
                            lineNumber: 71,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Components/AllTransactions/AllTransactions.js",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AllTransactions/AllTransactions.js",
                lineNumber: 57,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col gap-4 overflow-y-scroll w-full py-3",
                children: filteredTransactions.length > 0 ? filteredTransactions.map((transaction, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recentTransactionDefault.default), {
                        bgOverlay: true,
                        data: transaction
                    }, index, false, {
                        fileName: "src/Components/AllTransactions/AllTransactions.js",
                        lineNumber: 78,
                        columnNumber: 13
                    }, undefined)) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-center py-6",
                    children: searchTerm ? "No matching transactions found" : "No Transactions Yet"
                }, void 0, false, {
                    fileName: "src/Components/AllTransactions/AllTransactions.js",
                    lineNumber: 85,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/AllTransactions/AllTransactions.js",
                lineNumber: 75,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/AllTransactions/AllTransactions.js",
        lineNumber: 43,
        columnNumber: 5
    }, undefined);
};
_s(AllTransactions, "9G5UeqMY605zAW99AW+ECJBcPGk=");
_c = AllTransactions;
exports.default = AllTransactions;
var _c;
$RefreshReg$(_c, "AllTransactions");

  $parcel$ReactRefreshHelpers$a0d6.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../RecentTransactions/RecentTransaction":"k16c5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"jfTUS":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$4962 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$4962.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$4962.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _addIcomeVidMp4 = require("../../../public/media/videos/AddIcomeVid.mp4");
var _addIcomeVidMp4Default = parcelHelpers.interopDefault(_addIcomeVidMp4);
var _tickMp4 = require("../../../public/media/videos/Tick.mp4");
var _tickMp4Default = parcelHelpers.interopDefault(_tickMp4);
var _addIncomeForm = require("./AddIncomeForm");
var _addIncomeFormDefault = parcelHelpers.interopDefault(_addIncomeForm);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddIncome = ({ setAddIcome })=>{
    _s();
    const [submit, setSubmit] = (0, _react.useState)(false);
    const { incomeTransactions, transactions } = (0, _appContext.useAppContext)();
    const handleClose = ()=>{
        setAddIcome(false);
    };
    (0, _react.useEffect)(()=>{
        if (submit) {
            const timer = setTimeout(()=>{
                handleClose();
                console.log(incomeTransactions);
                console.log(transactions);
            }, 2000);
            return ()=>clearTimeout(timer);
        }
    }, [
        submit,
        setAddIcome
    ]);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            !submit && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bi bi-x-circle-fill text-xl absolute top-4 right-8 md:right-44 z-10 text-white cursor-pointer",
                onClick: handleClose
            }, void 0, false, {
                fileName: "src/Components/AddIcome/AddIcome.js",
                lineNumber: 30,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `quickAction w-[92.5%] md:mx-20 md:w-[80%] flex flex-col items-center ${submit ? "justify-center" : `justify-start`} bg-[#121826] absolute left-[3.75%] rounded-t-3xl px-6 pt-4 opacity-[97.5%] text-white gap-2 bottom-0 h-full`,
                children: submit ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "flex flex-col items-center justify-center gap-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                            src: (0, _tickMp4Default.default),
                            autoPlay: true,
                            muted: true,
                            loop: true,
                            className: "w-60 h-60 rounded-full"
                        }, void 0, false, {
                            fileName: "src/Components/AddIcome/AddIcome.js",
                            lineNumber: 42,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {}, void 0, false, {
                                    fileName: "src/Components/AddIcome/AddIcome.js",
                                    lineNumber: 50,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-3xl",
                                    children: [
                                        "Added to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Income"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIcome.js",
                                            lineNumber: 52,
                                            columnNumber: 26
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIcome.js",
                                    lineNumber: 51,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddIcome/AddIcome.js",
                            lineNumber: 49,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddIcome/AddIcome.js",
                    lineNumber: 41,
                    columnNumber: 11
                }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex flex-col items-center justify-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                                    src: (0, _addIcomeVidMp4Default.default),
                                    autoPlay: true,
                                    muted: true,
                                    loop: true,
                                    className: "w-20 h-20 rounded-full"
                                }, void 0, false, {
                                    fileName: "src/Components/AddIcome/AddIcome.js",
                                    lineNumber: 59,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-xl",
                                    children: [
                                        "Add to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Income"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIcome.js",
                                            lineNumber: 67,
                                            columnNumber: 24
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIcome.js",
                                    lineNumber: 66,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddIcome/AddIcome.js",
                            lineNumber: 58,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addIncomeFormDefault.default), {
                            setSubmit: setSubmit
                        }, void 0, false, {
                            fileName: "src/Components/AddIcome/AddIcome.js",
                            lineNumber: 70,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true)
            }, void 0, false, {
                fileName: "src/Components/AddIcome/AddIcome.js",
                lineNumber: 35,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true);
};
_s(AddIncome, "6llb/oDoAyoRpnOuexQSHp4GA6Q=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddIncome;
exports.default = AddIncome;
var _c;
$RefreshReg$(_c, "AddIncome");

  $parcel$ReactRefreshHelpers$4962.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../../public/media/videos/AddIcomeVid.mp4":"bVmuR","../../../public/media/videos/Tick.mp4":"230oV","./AddIncomeForm":"i2E8L","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"bVmuR":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("AddIcomeVid.0e1ff373.mp4") + "?" + Date.now();

},{}],"230oV":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("Tick.209b7ef7.mp4") + "?" + Date.now();

},{}],"i2E8L":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$e40a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$e40a.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$e40a.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddIncomeForm = ({ setSubmit })=>{
    _s();
    const { incomeFormData, updateIncomeFormData, addIncomeTransaction, addTransaction } = (0, _appContext.useAppContext)();
    const [errors, setErrors] = (0, _react.useState)({});
    const [showConfirmation, setShowConfirmation] = (0, _react.useState)(false);
    const setCurrentDateTime = ()=>{
        const now = new Date();
        const currentDate = now.toISOString().split("T")[0];
        const hours = now.getHours().toString().padStart(2, "0");
        const minutes = now.getMinutes().toString().padStart(2, "0");
        const currentTime = `${hours}:${minutes}`;
        updateIncomeFormData("Date", currentDate);
        updateIncomeFormData("Time", currentTime);
    };
    (0, _react.useEffect)(()=>{
        setCurrentDateTime();
    }, []);
    const validateForm = ()=>{
        const newErrors = {};
        if (!incomeFormData.Amount || isNaN(parseFloat(incomeFormData.Amount))) newErrors.Amount = "Amount is required";
        else if (parseFloat(incomeFormData.Amount) <= 0) newErrors.Amount = "Amount must be positive";
        if (!incomeFormData.Entity || incomeFormData.Entity.trim() === "") newErrors.Entity = "Entity is required";
        if (!incomeFormData.Category || incomeFormData.Category.trim() === "") newErrors.Category = "Category is required";
        if (!incomeFormData.Date) newErrors.Date = "Date is required";
        if (!incomeFormData.Time) newErrors.Time = "Time is required";
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSubmitClick = ()=>{
        if (validateForm()) setShowConfirmation(true);
    };
    const confirmSubmit = ()=>{
        setSubmit(true);
        addIncomeTransaction(incomeFormData);
        addTransaction(incomeFormData);
        updateIncomeFormData("Amount", "");
        updateIncomeFormData("Entity", "");
        updateIncomeFormData("Category", "");
        setCurrentDateTime();
        setShowConfirmation(false);
    };
    const cancelSubmit = ()=>{
        setShowConfirmation(false);
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full flex flex-col gap-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Amount ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                        lineNumber: 86,
                                        columnNumber: 20
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 85,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Money",
                                type: "number",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Amount ? "border-2 border-red-500" : ""}`,
                                value: incomeFormData.Amount || "",
                                onChange: (e)=>{
                                    updateIncomeFormData("Amount", e.target.value);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 88,
                                columnNumber: 11
                            }, undefined),
                            errors.Amount && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Amount
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 105,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 84,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 md:mt-6 w-full",
                        children: [
                            50,
                            100,
                            250,
                            500
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-3 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateIncomeFormData("Amount", item);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                },
                                children: [
                                    "\u20B9",
                                    item
                                ]
                            }, index, true, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 110,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 108,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 83,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col items-start justify-center w-full gap-1",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                        className: "font-semibold",
                        children: [
                            "Entity From ",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "text-red-500",
                                children: "*"
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 130,
                                columnNumber: 23
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 129,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                        value: incomeFormData.Entity || "",
                        onChange: (e)=>{
                            updateIncomeFormData("Entity", e.target.value);
                            if (errors.Entity) {
                                const newErrors = {
                                    ...errors
                                };
                                delete newErrors.Entity;
                                setErrors(newErrors);
                            }
                        },
                        placeholder: "Received From",
                        type: "text",
                        className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Entity ? "border-2 border-red-500" : ""}`
                    }, void 0, false, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 132,
                        columnNumber: 9
                    }, undefined),
                    errors.Entity && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "text-red-500 text-sm mt-1",
                        children: errors.Entity
                    }, void 0, false, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 149,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Category ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                        lineNumber: 156,
                                        columnNumber: 22
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 155,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                value: incomeFormData.Category || "",
                                placeholder: "Categorise Transaction",
                                type: "text",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Category ? "border-2 border-red-500" : ""}`,
                                onChange: (e)=>{
                                    updateIncomeFormData("Category", e.target.value);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 158,
                                columnNumber: 11
                            }, undefined),
                            errors.Category && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Category
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 175,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 154,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 w-full md:mt-6",
                        children: [
                            "Salary \uD83E\uDD11",
                            "Income \u2B07\uFE0F",
                            "Gift \uD83C\uDF81"
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-2 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateIncomeFormData("Category", item.split(" ")[0]);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                },
                                children: item
                            }, index, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 180,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 178,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Date ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                        lineNumber: 201,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 200,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Date",
                                type: "date",
                                value: incomeFormData.Date || "",
                                onChange: (e)=>{
                                    updateIncomeFormData("Date", e.target.value);
                                    if (errors.Date) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Date;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Date ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 203,
                                columnNumber: 11
                            }, undefined),
                            errors.Date && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Date
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 220,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 199,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-end justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Time ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                        lineNumber: 225,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 224,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Time",
                                type: "time",
                                value: incomeFormData.Time || "",
                                onChange: (e)=>{
                                    updateIncomeFormData("Time", e.target.value);
                                    if (errors.Time) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Time;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Time ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 227,
                                columnNumber: 11
                            }, undefined),
                            errors.Time && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Time
                            }, void 0, false, {
                                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                lineNumber: 244,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddIcome/AddIncomeForm.js",
                        lineNumber: 223,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                type: "button",
                className: "bg-blue-500 w-full py-3 rounded-md font-semibold cursor-pointer hover:bg-blue-600 transition-colors",
                onClick: handleSubmitClick,
                children: "Submit"
            }, void 0, false, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 249,
                columnNumber: 7
            }, undefined),
            showConfirmation && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "bg-white rounded-lg p-6 max-w-md w-full",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold text-black mb-4",
                            children: "Confirm Transaction"
                        }, void 0, false, {
                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                            lineNumber: 260,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "text-black mb-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Amount:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                            lineNumber: 265,
                                            columnNumber: 17
                                        }, undefined),
                                        " \u20B9",
                                        incomeFormData.Amount
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 264,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "From:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                            lineNumber: 269,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        incomeFormData.Entity
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 268,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Category:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                            lineNumber: 273,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        incomeFormData.Category
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 272,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Date:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                            lineNumber: 277,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        incomeFormData.Date
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 276,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Time:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                            lineNumber: 281,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        incomeFormData.Time
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 280,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                            lineNumber: 263,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-gray-400 transition-colors",
                                    onClick: cancelSubmit,
                                    children: "Cancel"
                                }, void 0, false, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 286,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-green-500 text-white px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-green-600 transition-colors",
                                    onClick: confirmSubmit,
                                    children: "Confirm"
                                }, void 0, false, {
                                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                                    lineNumber: 292,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddIcome/AddIncomeForm.js",
                            lineNumber: 285,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddIcome/AddIncomeForm.js",
                    lineNumber: 259,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/AddIcome/AddIncomeForm.js",
                lineNumber: 258,
                columnNumber: 9
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/AddIcome/AddIncomeForm.js",
        lineNumber: 82,
        columnNumber: 5
    }, undefined);
};
_s(AddIncomeForm, "+YvTSMbdj6004ifylh91R/XcgsE=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddIncomeForm;
exports.default = AddIncomeForm;
var _c;
$RefreshReg$(_c, "AddIncomeForm");

  $parcel$ReactRefreshHelpers$e40a.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"lAPBj":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$6739 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$6739.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$6739.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _addInvestmentVidMp4 = require("../../../public/media/videos/AddInvestmentVid.mp4");
var _addInvestmentVidMp4Default = parcelHelpers.interopDefault(_addInvestmentVidMp4);
var _addInvestmentForm = require("./AddInvestmentForm");
var _addInvestmentFormDefault = parcelHelpers.interopDefault(_addInvestmentForm);
var _tickMp4 = require("../../../public/media/videos/Tick.mp4");
var _tickMp4Default = parcelHelpers.interopDefault(_tickMp4);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddInvestment = ({ setAddInvestment })=>{
    _s();
    const [submit, setSubmit] = (0, _react.useState)(false);
    const { investmentTransactions, transactions } = (0, _appContext.useAppContext)();
    const handleClose = ()=>{
        setAddInvestment(false);
    };
    (0, _react.useEffect)(()=>{
        if (submit) {
            const timer = setTimeout(()=>{
                handleClose();
                console.log(investmentTransactions);
                console.log(transactions);
            }, 3000);
            return ()=>clearTimeout(timer);
        }
    }, [
        submit,
        setAddInvestment
    ]);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            !submit && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bi bi-x-circle-fill text-xl absolute top-4 right-8 md:right-44 z-10 text-white cursor-pointer",
                onClick: handleClose
            }, void 0, false, {
                fileName: "src/Components/AddSaving/AddInvestment.js",
                lineNumber: 30,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `quickAction w-[92.5%] md:mx-20 md:w-[80%] flex flex-col items-center ${submit ? "justify-center" : `justify-start`} bg-[#121826] absolute left-[3.75%] rounded-t-3xl px-6 pt-4 opacity-[97.5%] text-white gap-2 bottom-0 h-full`,
                children: submit ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "flex flex-col items-center justify-center gap-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                            src: (0, _tickMp4Default.default),
                            autoPlay: true,
                            muted: true,
                            loop: true,
                            className: "w-60 h-60 rounded-full"
                        }, void 0, false, {
                            fileName: "src/Components/AddSaving/AddInvestment.js",
                            lineNumber: 42,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {}, void 0, false, {
                                    fileName: "src/Components/AddSaving/AddInvestment.js",
                                    lineNumber: 50,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-3xl",
                                    children: [
                                        "Added to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Savings"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestment.js",
                                            lineNumber: 52,
                                            columnNumber: 26
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestment.js",
                                    lineNumber: 51,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddSaving/AddInvestment.js",
                            lineNumber: 49,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddSaving/AddInvestment.js",
                    lineNumber: 41,
                    columnNumber: 11
                }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex flex-col items-center justify-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                                    src: (0, _addInvestmentVidMp4Default.default),
                                    autoPlay: true,
                                    muted: true,
                                    loop: true,
                                    className: "w-20 h-20 rounded-full"
                                }, void 0, false, {
                                    fileName: "src/Components/AddSaving/AddInvestment.js",
                                    lineNumber: 59,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-xl",
                                    children: [
                                        "Add to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Savings"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestment.js",
                                            lineNumber: 67,
                                            columnNumber: 24
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestment.js",
                                    lineNumber: 66,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddSaving/AddInvestment.js",
                            lineNumber: 58,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addInvestmentFormDefault.default), {
                            setSubmit: setSubmit
                        }, void 0, false, {
                            fileName: "src/Components/AddSaving/AddInvestment.js",
                            lineNumber: 70,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true)
            }, void 0, false, {
                fileName: "src/Components/AddSaving/AddInvestment.js",
                lineNumber: 35,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true);
};
_s(AddInvestment, "DFD1iQPMvwDN+MZPy3zas73IRsY=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddInvestment;
exports.default = AddInvestment;
var _c;
$RefreshReg$(_c, "AddInvestment");

  $parcel$ReactRefreshHelpers$6739.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../../public/media/videos/AddInvestmentVid.mp4":"6LJuV","./AddInvestmentForm":"j7cPY","../../../public/media/videos/Tick.mp4":"230oV","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"6LJuV":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("AddInvestmentVid.d9228a29.mp4") + "?" + Date.now();

},{}],"j7cPY":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$9454 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$9454.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$9454.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddInvestmentForm = ({ setSubmit })=>{
    _s();
    const { investmentFormData, updateInvestmentFormData, addInvestmentTransaction, addTransaction } = (0, _appContext.useAppContext)();
    const [errors, setErrors] = (0, _react.useState)({});
    const [showConfirmation, setShowConfirmation] = (0, _react.useState)(false);
    const setCurrentDateTime = ()=>{
        const now = new Date();
        const currentDate = now.toISOString().split("T")[0];
        const hours = now.getHours().toString().padStart(2, "0");
        const minutes = now.getMinutes().toString().padStart(2, "0");
        const currentTime = `${hours}:${minutes}`;
        updateInvestmentFormData("Date", currentDate);
        updateInvestmentFormData("Time", currentTime);
    };
    (0, _react.useEffect)(()=>{
        setCurrentDateTime();
    }, []);
    const validateForm = ()=>{
        const newErrors = {};
        if (!investmentFormData.Amount || isNaN(parseFloat(investmentFormData.Amount))) newErrors.Amount = "Amount is required";
        else if (parseFloat(investmentFormData.Amount) <= 0) newErrors.Amount = "Amount must be positive";
        if (!investmentFormData.Entity || investmentFormData.Entity.trim() === "") newErrors.Entity = "Entity is required";
        if (!investmentFormData.Category || investmentFormData.Category.trim() === "") newErrors.Category = "Category is required";
        if (!investmentFormData.Date) newErrors.Date = "Date is required";
        if (!investmentFormData.Time) newErrors.Time = "Time is required";
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSubmitClick = ()=>{
        if (validateForm()) setShowConfirmation(true);
    };
    const confirmSubmit = ()=>{
        setSubmit(true);
        addInvestmentTransaction(investmentFormData);
        addTransaction(investmentFormData);
        updateInvestmentFormData("Amount", "");
        updateInvestmentFormData("Entity", "");
        updateInvestmentFormData("Category", "");
        setCurrentDateTime();
        setShowConfirmation(false);
    };
    const cancelSubmit = ()=>{
        setShowConfirmation(false);
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full flex flex-col gap-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Amount ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                        lineNumber: 95,
                                        columnNumber: 20
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 94,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Money",
                                type: "number",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Amount ? "border-2 border-red-500" : ""}`,
                                value: investmentFormData.Amount || "",
                                onChange: (e)=>{
                                    updateInvestmentFormData("Amount", e.target.value);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 97,
                                columnNumber: 11
                            }, undefined),
                            errors.Amount && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Amount
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 114,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 93,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 md:mt-6 w-full",
                        children: [
                            50,
                            100,
                            250,
                            500
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-3 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateInvestmentFormData("Amount", item);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                },
                                children: [
                                    "\u20B9",
                                    item
                                ]
                            }, index, true, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 119,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 117,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 92,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col items-start justify-center w-full gap-1",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                        className: "font-semibold",
                        children: [
                            "Entity ",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "text-red-500",
                                children: "*"
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 138,
                                columnNumber: 18
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 137,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                        value: investmentFormData.Entity || "",
                        onChange: (e)=>{
                            updateInvestmentFormData("Entity", e.target.value);
                            if (errors.Entity) {
                                const newErrors = {
                                    ...errors
                                };
                                delete newErrors.Entity;
                                setErrors(newErrors);
                            }
                        },
                        placeholder: "Saving Name",
                        type: "text",
                        className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Entity ? "border-2 border-red-500" : ""}`
                    }, void 0, false, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 140,
                        columnNumber: 9
                    }, undefined),
                    errors.Entity && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "text-red-500 text-sm mt-1",
                        children: errors.Entity
                    }, void 0, false, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 157,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 136,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Category ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                        lineNumber: 163,
                                        columnNumber: 22
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 162,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Categorise Transaction",
                                type: "text",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Category ? "border-2 border-red-500" : ""}`,
                                value: investmentFormData.Category || "",
                                onChange: (e)=>{
                                    updateInvestmentFormData("Category", e.target.value);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 165,
                                columnNumber: 11
                            }, undefined),
                            errors.Category && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Category
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 182,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 161,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 w-full md:mt-6",
                        children: [
                            "Jar \uD83E\uDED9",
                            "Investement \uD83D\uDCC8",
                            "Loan \uD83D\uDCB0"
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-2 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateInvestmentFormData("Category", item.split(" ")[0]);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                },
                                children: item
                            }, index, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 187,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 185,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 160,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Date ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                        lineNumber: 207,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 206,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Date",
                                type: "date",
                                value: investmentFormData.Date || "",
                                onChange: (e)=>{
                                    updateInvestmentFormData("Date", e.target.value);
                                    if (errors.Date) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Date;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Date ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 209,
                                columnNumber: 11
                            }, undefined),
                            errors.Date && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Date
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 226,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 205,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-end justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Time ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                        lineNumber: 231,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 230,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Time",
                                type: "time",
                                value: investmentFormData.Time || "",
                                onChange: (e)=>{
                                    updateInvestmentFormData("Time", e.target.value);
                                    if (errors.Time) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Time;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Time ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 233,
                                columnNumber: 11
                            }, undefined),
                            errors.Time && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Time
                            }, void 0, false, {
                                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                lineNumber: 250,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                        lineNumber: 229,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 204,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                type: "button",
                className: "bg-blue-500 w-full py-3 rounded-md font-semibold cursor-pointer hover:bg-blue-600 transition-colors",
                onClick: handleSubmitClick,
                children: "Submit"
            }, void 0, false, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 254,
                columnNumber: 7
            }, undefined),
            showConfirmation && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "bg-white rounded-lg p-6 max-w-md w-full",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold text-black mb-4",
                            children: "Confirm Investment"
                        }, void 0, false, {
                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                            lineNumber: 265,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "text-black mb-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Amount:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                            lineNumber: 270,
                                            columnNumber: 17
                                        }, undefined),
                                        " \u20B9",
                                        investmentFormData.Amount
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 269,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Entity:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                            lineNumber: 274,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        investmentFormData.Entity
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 273,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Category:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                            lineNumber: 278,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        investmentFormData.Category
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 277,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Date:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                            lineNumber: 282,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        investmentFormData.Date
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 281,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Time:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                            lineNumber: 286,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        investmentFormData.Time
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 285,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                            lineNumber: 268,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-gray-400 transition-colors",
                                    onClick: cancelSubmit,
                                    children: "Cancel"
                                }, void 0, false, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 291,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-green-500 text-white px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-green-600 transition-colors",
                                    onClick: confirmSubmit,
                                    children: "Confirm"
                                }, void 0, false, {
                                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                                    lineNumber: 297,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                            lineNumber: 290,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                    lineNumber: 264,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/AddSaving/AddInvestmentForm.js",
                lineNumber: 263,
                columnNumber: 9
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/AddSaving/AddInvestmentForm.js",
        lineNumber: 91,
        columnNumber: 5
    }, undefined);
};
_s(AddInvestmentForm, "KYuhN56gyNWeIyEm7qBDAE8aEpk=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddInvestmentForm;
exports.default = AddInvestmentForm;
var _c;
$RefreshReg$(_c, "AddInvestmentForm");

  $parcel$ReactRefreshHelpers$9454.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"kcs4K":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$59fd = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$59fd.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$59fd.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _addExpenseVidMp4 = require("../../../public/media/videos/AddExpenseVid.mp4");
var _addExpenseVidMp4Default = parcelHelpers.interopDefault(_addExpenseVidMp4);
var _addExpenseForm = require("./AddExpenseForm");
var _addExpenseFormDefault = parcelHelpers.interopDefault(_addExpenseForm);
var _tickMp4 = require("../../../public/media/videos/Tick.mp4");
var _tickMp4Default = parcelHelpers.interopDefault(_tickMp4);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddExpense = ({ setAddExpense })=>{
    _s();
    const [submit, setSubmit] = (0, _react.useState)(false);
    const { expenseTransactions, transactions } = (0, _appContext.useAppContext)();
    const handleClose = ()=>{
        setAddExpense(false);
    };
    (0, _react.useEffect)(()=>{
        if (submit) {
            const timer = setTimeout(()=>{
                handleClose();
                console.log(expenseTransactions);
                console.log(transactions);
            }, 3000);
            return ()=>clearTimeout(timer);
        }
    }, [
        submit,
        setAddExpense
    ]);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            !submit && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bi bi-x-circle-fill text-xl absolute top-4 right-8 md:right-44 z-10 text-white cursor-pointer",
                onClick: handleClose
            }, void 0, false, {
                fileName: "src/Components/AddExpense/AddExpense.js",
                lineNumber: 30,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `quickAction w-[92.5%] md:mx-20 md:w-[80%] flex flex-col items-center ${submit ? "justify-center" : `justify-start`} bg-[#121826] absolute left-[3.75%] rounded-t-3xl px-6 pt-4 opacity-[97.5%] text-white gap-2 bottom-0 h-full`,
                children: submit ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "flex flex-col items-center justify-center gap-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                            src: (0, _tickMp4Default.default),
                            autoPlay: true,
                            muted: true,
                            loop: true,
                            className: "w-60 h-60 rounded-full"
                        }, void 0, false, {
                            fileName: "src/Components/AddExpense/AddExpense.js",
                            lineNumber: 42,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {}, void 0, false, {
                                    fileName: "src/Components/AddExpense/AddExpense.js",
                                    lineNumber: 50,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-3xl",
                                    children: [
                                        "Added to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Expenses"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpense.js",
                                            lineNumber: 52,
                                            columnNumber: 26
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpense.js",
                                    lineNumber: 51,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddExpense/AddExpense.js",
                            lineNumber: 49,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddExpense/AddExpense.js",
                    lineNumber: 41,
                    columnNumber: 11
                }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex flex-col items-center justify-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                                    src: (0, _addExpenseVidMp4Default.default),
                                    autoPlay: true,
                                    muted: true,
                                    loop: true,
                                    className: "w-20 h-20 rounded-full"
                                }, void 0, false, {
                                    fileName: "src/Components/AddExpense/AddExpense.js",
                                    lineNumber: 59,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "text-xl",
                                    children: [
                                        "Add to ",
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold italic",
                                            children: "Expense"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpense.js",
                                            lineNumber: 67,
                                            columnNumber: 24
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpense.js",
                                    lineNumber: 66,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddExpense/AddExpense.js",
                            lineNumber: 58,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _addExpenseFormDefault.default), {
                            setSubmit: setSubmit
                        }, void 0, false, {
                            fileName: "src/Components/AddExpense/AddExpense.js",
                            lineNumber: 70,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true)
            }, void 0, false, {
                fileName: "src/Components/AddExpense/AddExpense.js",
                lineNumber: 35,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true);
};
_s(AddExpense, "pWdI89OGs1XcngJkxa/ZffPZyvg=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddExpense;
exports.default = AddExpense;
var _c;
$RefreshReg$(_c, "AddExpense");

  $parcel$ReactRefreshHelpers$59fd.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../../public/media/videos/AddExpenseVid.mp4":"6yGuM","./AddExpenseForm":"HyrW2","../../../public/media/videos/Tick.mp4":"230oV","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"6yGuM":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("AddExpenseVid.b6db760a.mp4") + "?" + Date.now();

},{}],"HyrW2":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$daba = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$daba.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$daba.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const AddExpenseForm = ({ setSubmit })=>{
    _s();
    const { expenseFormData, updateExpenseFormData, addExpenseTransaction, addTransaction } = (0, _appContext.useAppContext)();
    const [errors, setErrors] = (0, _react.useState)({});
    const [showConfirmation, setShowConfirmation] = (0, _react.useState)(false);
    const setCurrentDateTime = ()=>{
        const now = new Date();
        const currentDate = now.toISOString().split("T")[0];
        const hours = now.getHours().toString().padStart(2, "0");
        const minutes = now.getMinutes().toString().padStart(2, "0");
        const currentTime = `${hours}:${minutes}`;
        updateExpenseFormData("Date", currentDate);
        updateExpenseFormData("Time", currentTime);
    };
    (0, _react.useEffect)(()=>{
        setCurrentDateTime();
    }, []);
    const validateForm = ()=>{
        const newErrors = {};
        // Check amount
        if (!expenseFormData.Amount || isNaN(parseFloat(expenseFormData.Amount))) newErrors.Amount = "Amount is required";
        else if (parseFloat(expenseFormData.Amount) <= 0) newErrors.Amount = "Amount must be positive";
        // Check entity
        if (!expenseFormData.Entity || expenseFormData.Entity.trim() === "") newErrors.Entity = "Entity is required";
        // Check category
        if (!expenseFormData.Category || expenseFormData.Category.trim() === "") newErrors.Category = "Category is required";
        // Check date
        if (!expenseFormData.Date) newErrors.Date = "Date is required";
        // Check time
        if (!expenseFormData.Time) newErrors.Time = "Time is required";
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSubmitClick = ()=>{
        if (validateForm()) setShowConfirmation(true);
    };
    const confirmSubmit = ()=>{
        setSubmit(true);
        addExpenseTransaction(expenseFormData);
        addTransaction(expenseFormData);
        // Reset form
        updateExpenseFormData("Amount", "");
        updateExpenseFormData("Entity", "");
        updateExpenseFormData("Category", "");
        setCurrentDateTime();
        setShowConfirmation(false);
    };
    const cancelSubmit = ()=>{
        setShowConfirmation(false);
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full flex flex-col gap-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Amount ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                        lineNumber: 93,
                                        columnNumber: 20
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 92,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Money",
                                type: "number",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Amount ? "border-2 border-red-500" : ""}`,
                                value: expenseFormData.Amount || "",
                                onChange: (e)=>{
                                    updateExpenseFormData("Amount", e.target.value);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 95,
                                columnNumber: 11
                            }, undefined),
                            errors.Amount && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Amount
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 112,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 91,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 md:mt-6 w-full",
                        children: [
                            50,
                            100,
                            250,
                            500
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-3 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateExpenseFormData("Amount", item);
                                    if (errors.Amount) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Amount;
                                        setErrors(newErrors);
                                    }
                                },
                                children: [
                                    "\u20B9",
                                    item
                                ]
                            }, index, true, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 117,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 115,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 90,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col items-start justify-center w-full gap-1",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                        className: "font-semibold",
                        children: [
                            "Entity To ",
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "text-red-500",
                                children: "*"
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 138,
                                columnNumber: 21
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 137,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                        value: expenseFormData.Entity || "",
                        onChange: (e)=>{
                            updateExpenseFormData("Entity", e.target.value);
                            if (errors.Entity) {
                                const newErrors = {
                                    ...errors
                                };
                                delete newErrors.Entity;
                                setErrors(newErrors);
                            }
                        },
                        placeholder: "Spent On",
                        type: "text",
                        className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Entity ? "border-2 border-red-500" : ""}`
                    }, void 0, false, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 140,
                        columnNumber: 9
                    }, undefined),
                    errors.Entity && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "text-red-500 text-sm mt-1",
                        children: errors.Entity
                    }, void 0, false, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 157,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 136,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row md:items-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-full gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Category ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                        lineNumber: 165,
                                        columnNumber: 22
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 164,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                value: expenseFormData.Category || "",
                                placeholder: "Categorise Transaction",
                                type: "text",
                                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black font-bold ${errors.Category ? "border-2 border-red-500" : ""}`,
                                onChange: (e)=>{
                                    updateExpenseFormData("Category", e.target.value);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                }
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 167,
                                columnNumber: 11
                            }, undefined),
                            errors.Category && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Category
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 184,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 163,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex items-center justify-around gap-2 -mt-1 w-full md:mt-6",
                        children: [
                            "Bills \uD83D\uDCC3",
                            "Food \uD83D\uDE0B",
                            "Transfers \uD83D\uDCB8"
                        ].map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "border-2 border-white py-1 px-2 md:px-6 rounded-lg cursor-pointer md:pt-2 hover:bg-blue-500 transition-colors",
                                onClick: ()=>{
                                    updateExpenseFormData("Category", item.split(" ")[0]);
                                    if (errors.Category) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Category;
                                        setErrors(newErrors);
                                    }
                                },
                                children: item
                            }, index, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 189,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 187,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 162,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-start justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Date ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                        lineNumber: 211,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 210,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Date",
                                type: "date",
                                value: expenseFormData.Date || "",
                                onChange: (e)=>{
                                    updateExpenseFormData("Date", e.target.value);
                                    if (errors.Date) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Date;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Date ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 213,
                                columnNumber: 11
                            }, undefined),
                            errors.Date && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Date
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 230,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 209,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col items-end justify-center w-1/2 gap-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                className: "font-semibold",
                                children: [
                                    "Time ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "text-red-500",
                                        children: "*"
                                    }, void 0, false, {
                                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                        lineNumber: 235,
                                        columnNumber: 18
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 234,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                placeholder: "Enter Time",
                                type: "time",
                                value: expenseFormData.Time || "",
                                onChange: (e)=>{
                                    updateExpenseFormData("Time", e.target.value);
                                    if (errors.Time) {
                                        const newErrors = {
                                            ...errors
                                        };
                                        delete newErrors.Time;
                                        setErrors(newErrors);
                                    }
                                },
                                className: `bg-gray-100 px-3 py-3 w-full rounded-lg text-black font-bold ${errors.Time ? "border-2 border-red-500" : ""}`
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 237,
                                columnNumber: 11
                            }, undefined),
                            errors.Time && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-red-500 text-sm mt-1",
                                children: errors.Time
                            }, void 0, false, {
                                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                lineNumber: 254,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/AddExpense/AddExpenseForm.js",
                        lineNumber: 233,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                type: "button",
                className: "bg-blue-500 w-full py-3 rounded-md font-semibold cursor-pointer hover:bg-blue-600 transition-colors",
                onClick: handleSubmitClick,
                children: "Submit"
            }, void 0, false, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 260,
                columnNumber: 7
            }, undefined),
            showConfirmation && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "bg-white rounded-lg p-6 max-w-md w-full",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-lg font-bold text-black mb-4",
                            children: "Confirm Expense"
                        }, void 0, false, {
                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                            lineNumber: 272,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "text-black mb-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Amount:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                            lineNumber: 277,
                                            columnNumber: 17
                                        }, undefined),
                                        " \u20B9",
                                        expenseFormData.Amount
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 276,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "To:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                            lineNumber: 281,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        expenseFormData.Entity
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 280,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Category:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                            lineNumber: 285,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        expenseFormData.Category
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 284,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Date:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                            lineNumber: 289,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        expenseFormData.Date
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 288,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                            className: "font-semibold",
                                            children: "Time:"
                                        }, void 0, false, {
                                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                            lineNumber: 293,
                                            columnNumber: 17
                                        }, undefined),
                                        " ",
                                        expenseFormData.Time
                                    ]
                                }, void 0, true, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 292,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                            lineNumber: 275,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-gray-300 text-black px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-gray-400 transition-colors",
                                    onClick: cancelSubmit,
                                    children: "Cancel"
                                }, void 0, false, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 298,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    className: "bg-green-500 text-white px-4 py-2 rounded-md font-semibold w-1/2 hover:bg-green-600 transition-colors",
                                    onClick: confirmSubmit,
                                    children: "Confirm"
                                }, void 0, false, {
                                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                                    lineNumber: 304,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/Components/AddExpense/AddExpenseForm.js",
                            lineNumber: 297,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/AddExpense/AddExpenseForm.js",
                    lineNumber: 271,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/AddExpense/AddExpenseForm.js",
                lineNumber: 270,
                columnNumber: 9
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/AddExpense/AddExpenseForm.js",
        lineNumber: 88,
        columnNumber: 5
    }, undefined);
};
_s(AddExpenseForm, "shSgwedpkcgfmycmWDkMZKYmN20=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = AddExpenseForm;
exports.default = AddExpenseForm;
var _c;
$RefreshReg$(_c, "AddExpenseForm");

  $parcel$ReactRefreshHelpers$daba.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"1tmvP":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$e0f9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$e0f9.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$e0f9.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _appContext = require("../../Context/AppContext");
var _profileMainCard = require("../../Components/ProfileMainCard/ProfileMainCard");
var _profileMainCardDefault = parcelHelpers.interopDefault(_profileMainCard);
var _personalDetails = require("../../Components/PersonalDetails/PersonalDetails");
var _personalDetailsDefault = parcelHelpers.interopDefault(_personalDetails);
var _s = $RefreshSig$();
const Profile = ({ shimmer })=>{
    _s();
    const { isLoading, isSignedUp } = (0, _appContext.useAppContext)();
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `px-4 md:px-80 py-2 flex flex-col ${shimmer ? "gap-0" : "gap-4"}`,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `flex items-center sticky top-0 bg-white z-10 py-4 w-full px-4 opacity-90 ${!isLoading && isSignedUp ? "justify-between" : "justify-center"}`,
                children: [
                    !isLoading && isSignedUp && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "w-8 h-8 border rounded-full flex items-center justify-center",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "bi bi-arrow-left mt-1"
                            }, void 0, false, {
                                fileName: "src/Pages/Profile/Profile.js",
                                lineNumber: 20,
                                columnNumber: 15
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/Pages/Profile/Profile.js",
                            lineNumber: 19,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Profile/Profile.js",
                        lineNumber: 18,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold text-xl md:text-3xl",
                        children: "My Profile"
                    }, void 0, false, {
                        fileName: "src/Pages/Profile/Profile.js",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Profile/Profile.js",
                lineNumber: 12,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _profileMainCardDefault.default), {
                shimmer: shimmer
            }, void 0, false, {
                fileName: "src/Pages/Profile/Profile.js",
                lineNumber: 26,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetailsDefault.default), {}, void 0, false, {
                fileName: "src/Pages/Profile/Profile.js",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Pages/Profile/Profile.js",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_s(Profile, "WVaGvC/x+yz55HGmynWi9PQpRaw=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = Profile;
exports.default = Profile;
var _c;
$RefreshReg$(_c, "Profile");

  $parcel$ReactRefreshHelpers$e0f9.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","../../Context/AppContext":"iTmt5","../../Components/ProfileMainCard/ProfileMainCard":"gI0L1","../../Components/PersonalDetails/PersonalDetails":"4xT7Z","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"gI0L1":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c538 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c538.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c538.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _userProfilePic1Png = require("url:../../../public/media/images/UserProfilePic1.png");
var _userProfilePic1PngDefault = parcelHelpers.interopDefault(_userProfilePic1Png);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const ProfileMainCard = ({ shimmer })=>{
    _s();
    const { formData } = (0, _appContext.useAppContext)();
    return shimmer ? "" : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "mt-2",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "w-full mt-6 h-[175px] rounded-3xl bg-[#121826] flex items-center justify-center gap-4 relative",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "absolute -top-8",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        src: (0, _userProfilePic1PngDefault.default),
                        className: "w-28 h-28 rounded-full"
                    }, void 0, false, {
                        fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
                        lineNumber: 13,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
                    lineNumber: 12,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-white flex flex-col items-center justify-center pt-12 mt-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "font-semibold text-3xl",
                            children: formData.Name
                        }, void 0, false, {
                            fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
                            lineNumber: 16,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            children: formData.Designation
                        }, void 0, false, {
                            fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
                            lineNumber: 17,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
                    lineNumber: 15,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
            lineNumber: 11,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/Components/ProfileMainCard/ProfileMainCard.js",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_s(ProfileMainCard, "59IdF8nsipO+RackScyfR1pyxtQ=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = ProfileMainCard;
exports.default = ProfileMainCard;
var _c;
$RefreshReg$(_c, "ProfileMainCard");

  $parcel$ReactRefreshHelpers$c538.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","url:../../../public/media/images/UserProfilePic1.png":"dqvpE","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"4xT7Z":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$d91d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$d91d.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$d91d.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _personalDetail = require("./PersonalDetail");
var _personalDetailDefault = parcelHelpers.interopDefault(_personalDetail);
var _s = $RefreshSig$();
const PersonalDetails = ()=>{
    _s();
    const { handleSignUp, setIsEdit, isEdit, isSignedUp, formData } = (0, _appContext.useAppContext)();
    const [formErrors, setFormErrors] = (0, _react.useState)({});
    const [isFormValid, setIsFormValid] = (0, _react.useState)(false);
    const handleEditToggle = ()=>{
        setIsEdit(!isEdit);
    };
    const validationRules = {
        Name: {
            required: true
        },
        Email: {
            required: true,
            pattern: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
            message: "Please enter a valid email address"
        },
        Age: {
            required: true,
            min: 18,
            max: 100
        },
        Designation: {
            required: true
        },
        CurrentBalance: {
            required: true,
            min: 1000
        },
        Income: {
            required: true
        }
    };
    const validateForm = ()=>{
        const errors = {};
        let valid = true;
        if (!formData.Name) {
            errors.Name = "Name is required";
            valid = false;
        }
        if (!formData.Email) {
            errors.Email = "Email is required";
            valid = false;
        } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.Email)) {
            errors.Email = "Please enter a valid email address";
            valid = false;
        }
        if (!formData.Age) {
            errors.Age = "Age is required";
            valid = false;
        } else if (Number(formData.Age) < 18) {
            errors.Age = "Age must be at least 18";
            valid = false;
        } else if (Number(formData.Age) > 100) {
            errors.Age = "Age must be at most 100";
            valid = false;
        }
        if (!formData.Designation) {
            errors.Designation = "Designation is required";
            valid = false;
        }
        if (!formData.CurrentBalance) {
            errors.CurrentBalance = "Current Balance is required";
            valid = false;
        } else if (Number(formData.CurrentBalance) < 1000) {
            errors.CurrentBalance = "Current Balance must be at least \u20B91,000";
            valid = false;
        }
        if (!formData.Income) {
            errors.Income = "Income is required";
            valid = false;
        }
        setFormErrors(errors);
        setIsFormValid(valid);
        return valid;
    };
    (0, _react.useEffect)(()=>{
        validateForm();
    }, [
        formData
    ]);
    const handleSubmit = ()=>{
        const isValid = validateForm();
        if (isValid) handleSignUp();
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "mt-2 flex flex-col gap-4 px-4 md:pb-10",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "text-lg font-semibold",
                        children: "Personal Details"
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 106,
                        columnNumber: 9
                    }, undefined),
                    isSignedUp && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "text-sm underline cursor-pointer",
                        onClick: handleEditToggle,
                        children: isEdit ? "Edit" : "Save"
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 108,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                lineNumber: 105,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col items-start justify-center gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetailDefault.default), {
                        field: "Name",
                        placeholder: "John Doe",
                        validationRules: validationRules.Name
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 117,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetailDefault.default), {
                        field: "Email",
                        placeholder: "johndoe@abc.com",
                        validationRules: validationRules.Email
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 122,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "w-full flex gap-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "w-1/4",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetail.NumericField), {
                                    field: "Age",
                                    placeholder: "25",
                                    validationRules: validationRules.Age
                                }, void 0, false, {
                                    fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                                    lineNumber: 129,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                                lineNumber: 128,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "w-3/4",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetailDefault.default), {
                                    field: "Designation",
                                    placeholder: "SDE",
                                    validationRules: validationRules.Designation
                                }, void 0, false, {
                                    fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                                    lineNumber: 136,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                                lineNumber: 135,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 127,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetail.NumericField), {
                        field: "CurrentBalance",
                        placeholder: "10000",
                        validationRules: validationRules.CurrentBalance
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 143,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _personalDetail.IncomeField), {
                        validationRules: validationRules.Income
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                        lineNumber: 148,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                lineNumber: 116,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                type: "submit",
                className: `w-full py-3 rounded-md font-semibold text-white cursor-pointer ${isFormValid ? "bg-[#0171ff]" : "bg-gray-400"}`,
                onClick: handleSubmit,
                disabled: !isFormValid,
                children: "Submit"
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetails.js",
                lineNumber: 150,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/PersonalDetails/PersonalDetails.js",
        lineNumber: 104,
        columnNumber: 5
    }, undefined);
};
_s(PersonalDetails, "q56aNyYLhTX2s6wVm2x0xU2qxDw=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = PersonalDetails;
exports.default = PersonalDetails;
var _c;
$RefreshReg$(_c, "PersonalDetails");

  $parcel$ReactRefreshHelpers$d91d.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","./PersonalDetail":"anT0c","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"anT0c":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$3fb2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$3fb2.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$3fb2.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NumericField", ()=>NumericField);
parcelHelpers.export(exports, "IncomeField", ()=>IncomeField);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();
const ErrorMessage = ({ message })=>{
    if (!message) return null;
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "text-xs text-red-500 mt-1",
        children: message
    }, void 0, false, {
        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
        lineNumber: 6,
        columnNumber: 10
    }, undefined);
};
_c = ErrorMessage;
const PersonalDetail = ({ field, placeholder, validationRules })=>{
    _s();
    const { formData, updateFormData, isEdit } = (0, _appContext.useAppContext)();
    const [error, setError] = (0, _react.useState)("");
    const validate = (value)=>{
        if (!validationRules) return "";
        if (validationRules.required && !value) return `${field} is required`;
        if (validationRules.pattern && value && !validationRules.pattern.test(value)) return validationRules.message || `Invalid ${field}`;
        return "";
    };
    const handleChange = (e)=>{
        const value = e.target.value;
        updateFormData(`${field}`, value);
        setError(validate(value));
    };
    (0, _react.useEffect)(()=>{
        setError(validate(formData[field]));
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex flex-col items-start justify-center w-full gap-1",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                className: "font-semibold",
                children: field
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 43,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                value: formData[field] || "",
                onChange: handleChange,
                onBlur: ()=>setError(validate(formData[field])),
                placeholder: placeholder,
                required: true,
                disabled: isEdit,
                type: "text",
                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg text-black placeholder:text-black/25 ${error ? "border border-red-500" : ""}`
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 44,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(ErrorMessage, {
                message: error
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 56,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
        lineNumber: 42,
        columnNumber: 5
    }, undefined);
};
_s(PersonalDetail, "X1QwcbnlaPgvsiVV69uxzYeTzw8=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c1 = PersonalDetail;
const NumericField = ({ field, placeholder, validationRules })=>{
    _s1();
    const { formData, updateFormData, isEdit } = (0, _appContext.useAppContext)();
    const [error, setError] = (0, _react.useState)("");
    const validate = (value)=>{
        if (!validationRules) return "";
        if (validationRules.required && !value) return `${field} is required`;
        if (validationRules.min !== undefined && value && Number(value) < validationRules.min) return `${field} must be at least ${validationRules.min}`;
        if (validationRules.max !== undefined && value && Number(value) > validationRules.max) return `${field} must be at most ${validationRules.max}`;
        return "";
    };
    const handleChange = (e)=>{
        const value = e.target.value;
        updateFormData(`${field}`, value);
        setError(validate(value));
    };
    (0, _react.useEffect)(()=>{
        setError(validate(formData[field]));
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex flex-col items-start justify-center w-full gap-1",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                className: "font-semibold",
                children: field
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 102,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                value: formData[field] || "",
                onChange: handleChange,
                onBlur: ()=>setError(validate(formData[field])),
                placeholder: placeholder,
                required: true,
                disabled: isEdit,
                type: "number",
                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg placeholder:text-black/25 ${error ? "border border-red-500" : ""}`
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(ErrorMessage, {
                message: error
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 115,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
        lineNumber: 101,
        columnNumber: 5
    }, undefined);
};
_s1(NumericField, "X1QwcbnlaPgvsiVV69uxzYeTzw8=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c2 = NumericField;
const IncomeField = ({ validationRules })=>{
    _s2();
    const { formData, updateFormData, isEdit } = (0, _appContext.useAppContext)();
    const [income, setIncome] = (0, _react.useState)(formData.Income || "");
    const [error, setError] = (0, _react.useState)("");
    const validate = (value)=>{
        if (!validationRules) return "";
        if (validationRules.required && !value) return "Income is required";
        return "";
    };
    const handleChange = (e)=>{
        const value = e.target.value;
        updateFormData("Income", value);
        setIncome(value);
        setError(validate(value));
    };
    (0, _react.useEffect)(()=>{
        setError(validate(formData.Income));
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex flex-col items-start justify-center w-full gap-1",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                className: "font-semibold",
                children: "Income"
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `bg-gray-100 pl-4 py-3 w-full rounded-lg text-lg ${income ? "text-black" : "text-black/25"} ${error ? "border border-red-500" : ""}`,
                children: income ? `\u{20B9}${income}` : "Drag the Slider"
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 149,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full relative",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                        value: formData.Income || "",
                        onChange: handleChange,
                        onBlur: ()=>setError(validate(formData.Income)),
                        required: true,
                        disabled: isEdit,
                        type: "range",
                        className: "py-3 w-full",
                        step: 1000,
                        min: 1000,
                        max: 25000
                    }, void 0, false, {
                        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                        lineNumber: 157,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex justify-between w-full px-1 -mt-4 text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "bi bi-caret-up-fill",
                                children: " \u20B91,000"
                            }, void 0, false, {
                                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                                lineNumber: 170,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                children: [
                                    "\u20B925,000 ",
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                        className: "bi bi-caret-up-fill"
                                    }, void 0, false, {
                                        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                                        lineNumber: 172,
                                        columnNumber: 21
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                                lineNumber: 171,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                        lineNumber: 169,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 156,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(ErrorMessage, {
                message: error
            }, void 0, false, {
                fileName: "src/Components/PersonalDetails/PersonalDetail.js",
                lineNumber: 176,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/PersonalDetails/PersonalDetail.js",
        lineNumber: 147,
        columnNumber: 5
    }, undefined);
};
_s2(IncomeField, "2xfYasBNEFSOVq6/L6g68KLz848=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c3 = IncomeField;
exports.default = PersonalDetail;
var _c, _c1, _c2, _c3;
$RefreshReg$(_c, "ErrorMessage");
$RefreshReg$(_c1, "PersonalDetail");
$RefreshReg$(_c2, "NumericField");
$RefreshReg$(_c3, "IncomeField");

  $parcel$ReactRefreshHelpers$3fb2.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"ggL6I":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$bce5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$bce5.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$bce5.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _notificationsMainCard = require("../../Components/NotificationsMainCard/NotificationsMainCard");
var _notificationsMainCardDefault = parcelHelpers.interopDefault(_notificationsMainCard);
var _notification = require("../../Components/Notification/Notification");
var _notificationDefault = parcelHelpers.interopDefault(_notification);
const Notifications = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "py-4 flex flex-col gap-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-between sticky top-0 bg-white z-10 py-4 w-full px-4 opacity-90",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "w-8 h-8 border rounded-full flex items-center justify-center",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "bi bi-arrow-left mt-1"
                            }, void 0, false, {
                                fileName: "src/Pages/Notifications/Notifications.js",
                                lineNumber: 12,
                                columnNumber: 13
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/Pages/Notifications/Notifications.js",
                            lineNumber: 11,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 10,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold text-xl",
                        children: "Notifications"
                    }, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 15,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Notifications/Notifications.js",
                lineNumber: 9,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationsMainCardDefault.default), {}, void 0, false, {
                fileName: "src/Pages/Notifications/Notifications.js",
                lineNumber: 17,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col gap-4 px-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 20,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 21,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 22,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 23,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 26,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 27,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 28,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 29,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 30,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _notificationDefault.default), {}, void 0, false, {
                        fileName: "src/Pages/Notifications/Notifications.js",
                        lineNumber: 32,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Notifications/Notifications.js",
                lineNumber: 18,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Pages/Notifications/Notifications.js",
        lineNumber: 8,
        columnNumber: 5
    }, undefined);
};
_c = Notifications;
exports.default = Notifications;
var _c;
$RefreshReg$(_c, "Notifications");

  $parcel$ReactRefreshHelpers$bce5.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","../../Components/NotificationsMainCard/NotificationsMainCard":"jefBx","../../Components/Notification/Notification":"lnIQl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"jefBx":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c342 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c342.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c342.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _notificationPng = require("url:../../../public/media/images/Notification.png");
var _notificationPngDefault = parcelHelpers.interopDefault(_notificationPng);
const NotificationsMainCard = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "mt-2 px-4",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "w-full mt-4 h-[140px] rounded-3xl bg-[#121826] flex items-center justify-center gap-4 relative",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "absolute -top-8",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        src: (0, _notificationPngDefault.default),
                        className: "w-28 h-28 rounded-full"
                    }, void 0, false, {
                        fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
                        lineNumber: 9,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
                    lineNumber: 8,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-2xl mt-18 text-center text-white",
                    children: [
                        "See what all you ",
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                            className: "italic font-semibold",
                            children: "Missed "
                        }, void 0, false, {
                            fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
                            lineNumber: 12,
                            columnNumber: 28
                        }, undefined),
                        "!"
                    ]
                }, void 0, true, {
                    fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
                    lineNumber: 11,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
            lineNumber: 7,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/Components/NotificationsMainCard/NotificationsMainCard.js",
        lineNumber: 6,
        columnNumber: 5
    }, undefined);
};
_c = NotificationsMainCard;
exports.default = NotificationsMainCard;
var _c;
$RefreshReg$(_c, "NotificationsMainCard");

  $parcel$ReactRefreshHelpers$c342.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","url:../../../public/media/images/Notification.png":"LqDAl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"LqDAl":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("Notification.069a2c15.png") + "?" + Date.now();

},{}],"lnIQl":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$6548 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$6548.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$6548.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Notification = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex items-center justify-start px-4 py-5 bg-[#0171ff] rounded-xl w-[98%] gap-4 text-white relative",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                src: "",
                className: "w-16 h-16 rounded-full bg-white"
            }, void 0, false, {
                fileName: "src/Components/Notification/Notification.js",
                lineNumber: 6,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-[75%] leading-tight",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                        className: "font-semibold",
                        children: "Low balance alert"
                    }, void 0, false, {
                        fileName: "src/Components/Notification/Notification.js",
                        lineNumber: 8,
                        columnNumber: 9
                    }, undefined),
                    ": Your tracked balance is below your \u20B95,000 threshold."
                ]
            }, void 0, true, {
                fileName: "src/Components/Notification/Notification.js",
                lineNumber: 7,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-center bg-[#121826] rounded-full py-[2px] px-2 absolute -top-4 -right-4 scale-75",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                    className: "bi bi-x text-2xl mt-1"
                }, void 0, false, {
                    fileName: "src/Components/Notification/Notification.js",
                    lineNumber: 11,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/Components/Notification/Notification.js",
                lineNumber: 10,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Components/Notification/Notification.js",
        lineNumber: 5,
        columnNumber: 5
    }, undefined);
};
_c = Notification;
exports.default = Notification;
var _c;
$RefreshReg$(_c, "Notification");

  $parcel$ReactRefreshHelpers$6548.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"auQZz":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$17c1 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$17c1.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$17c1.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouter = require("react-router");
var _chart = require("../../Components/Chart/Chart");
var _chartDefault = parcelHelpers.interopDefault(_chart);
var _recentTransactions = require("../../Components/RecentTransactions/RecentTransactions");
var _recentTransactionsDefault = parcelHelpers.interopDefault(_recentTransactions);
var _allTransactions = require("../../Components/AllTransactions/AllTransactions");
var _allTransactionsDefault = parcelHelpers.interopDefault(_allTransactions);
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
const Dashboard = ()=>{
    _s();
    const [allTransactions, setAllTransactions] = (0, _react.useState)(false);
    const { totalData, incomeTransactions, expenseTransactions, investmentTransactions } = (0, _appContext.useAppContext)();
    const [clickedTab, setClickedTab] = (0, _react.useState)("Income");
    const fullMonths = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    ];
    const currentSystemMonth = new Date().getMonth();
    const months = fullMonths.slice(0, currentSystemMonth + 1);
    const [currentMonthIndex, setCurrentMonthIndex] = (0, _react.useState)(currentSystemMonth);
    const [currentMonth, setCurrentMonth] = (0, _react.useState)(`${months[currentSystemMonth]} 25`);
    const handleRightClick = ()=>{
        setCurrentMonthIndex((prevIndex)=>{
            const newIndex = prevIndex < months.length - 1 ? prevIndex + 1 : prevIndex;
            setCurrentMonth(`${months[newIndex]} 25`);
            return newIndex;
        });
    };
    const handleLeftClick = ()=>{
        setCurrentMonthIndex((prevIndex)=>{
            const newIndex = prevIndex > 0 ? prevIndex - 1 : prevIndex;
            setCurrentMonth(`${months[newIndex]} 25`);
            return newIndex;
        });
    };
    const handleSelectChange = (e)=>{
        const selectedValue = e.target.value;
        const selectedMonth = selectedValue.split(" ")[0];
        const index = months.findIndex((month)=>month === selectedMonth);
        setCurrentMonthIndex(index);
        setCurrentMonth(selectedValue);
    };
    const [isMobile, setIsMobile] = (0, _react.useState)(true);
    (0, _react.useEffect)(()=>{
        const checkScreenSize = ()=>{
            setIsMobile(window.innerWidth < 768);
        };
        checkScreenSize();
        window.addEventListener("resize", checkScreenSize);
        return ()=>window.removeEventListener("resize", checkScreenSize);
    }, []);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "py-4 flex flex-col gap-4 w-full h-full relative md:px-40",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex items-center justify-between sticky top-0 bg-white z-10 py-4 w-full opacity-90 px-4 ",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouter.Link), {
                        to: "/",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "w-8 h-8 border rounded-full flex items-center justify-center",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                className: "bi bi-arrow-left mt-1"
                            }, void 0, false, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 87,
                                columnNumber: 13
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/Pages/Dashboard/Dashboard.js",
                            lineNumber: 86,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "font-semibold text-xl",
                        children: "Dashboard"
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 90,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Dashboard/Dashboard.js",
                lineNumber: 84,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between text-2xl font-semibold px-4 ",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "bi bi-chevron-left cursor-pointer",
                        onClick: handleLeftClick
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 93,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("select", {
                        value: currentMonth,
                        onChange: handleSelectChange,
                        className: "text-center",
                        children: months.map((month, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("option", {
                                className: "text-sm",
                                children: `${month} 25`
                            }, index, false, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 104,
                                columnNumber: 13
                            }, undefined))
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 98,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "bi bi-chevron-right cursor-pointer",
                        onClick: handleRightClick
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 108,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Dashboard/Dashboard.js",
                lineNumber: 92,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full flex items-center justify-between px-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: `w-1/3 rounded-l-md py-4 md:py-2 flex flex-col items-center justify-center border-2 border-black border-r-0 ${clickedTab == "Income" ? "bg-[#0171ff] text-white" : ""} cursor-pointer`,
                        onClick: ()=>{
                            setClickedTab("Income");
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-lg font-semibold",
                                children: "Income"
                            }, void 0, false, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 123,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-sm",
                                children: [
                                    "\u20B9",
                                    totalData[0]
                                ]
                            }, void 0, true, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 124,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 115,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: `w-1/3 py-4 md:py-2 flex flex-col items-center justify-center border-2 border-black border-x- ${clickedTab == "Investment" ? "bg-[#0171ff] text-white" : ""} cursor-pointer`,
                        onClick: ()=>{
                            setClickedTab("Investment");
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-lg font-semibold",
                                children: "Savings"
                            }, void 0, false, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 135,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-sm",
                                children: [
                                    "\u20B9",
                                    totalData[1]
                                ]
                            }, void 0, true, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 136,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 127,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: `w-1/3 py-4 md:py-2 flex flex-col items-center justify-center border-2 border-black border-l-0 rounded-r-md ${clickedTab == "Expense" ? "bg-[#0171ff] text-white" : ""} cursor-pointer`,
                        onClick: ()=>{
                            setClickedTab("Expense");
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-lg font-semibold",
                                children: "Expenses"
                            }, void 0, false, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 147,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-sm",
                                children: [
                                    "\u20B9",
                                    totalData[2]
                                ]
                            }, void 0, true, {
                                fileName: "src/Pages/Dashboard/Dashboard.js",
                                lineNumber: 148,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 139,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Dashboard/Dashboard.js",
                lineNumber: 114,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "px-4 md:w-1/2",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _chartDefault.default), {
                            clickedTab: clickedTab
                        }, void 0, false, {
                            fileName: "src/Pages/Dashboard/Dashboard.js",
                            lineNumber: 153,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 152,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "md:w-1/2 md:pr-4",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recentTransactionsDefault.default), {
                            ctrlHeight: !isMobile,
                            setAllTransactions: setAllTransactions,
                            renderList: clickedTab == "Income" ? incomeTransactions : clickedTab == "Investment" ? investmentTransactions : expenseTransactions,
                            webLength: clickedTab == "Income" ? incomeTransactions.length : clickedTab == "Investment" ? investmentTransactions.length : expenseTransactions.length
                        }, void 0, false, {
                            fileName: "src/Pages/Dashboard/Dashboard.js",
                            lineNumber: 156,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 155,
                        columnNumber: 9
                    }, undefined),
                    isMobile && allTransactions && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _allTransactionsDefault.default), {
                        setAllTransactions: setAllTransactions,
                        ctrlPosition: true,
                        renderList: clickedTab == "Income" ? incomeTransactions : clickedTab == "Investment" ? investmentTransactions : expenseTransactions
                    }, void 0, false, {
                        fileName: "src/Pages/Dashboard/Dashboard.js",
                        lineNumber: 176,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/Pages/Dashboard/Dashboard.js",
                lineNumber: 151,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/Pages/Dashboard/Dashboard.js",
        lineNumber: 83,
        columnNumber: 5
    }, undefined);
};
_s(Dashboard, "9wb61fMe2EAiv7vyekBV3DdVQs0=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = Dashboard;
exports.default = Dashboard;
var _c;
$RefreshReg$(_c, "Dashboard");

  $parcel$ReactRefreshHelpers$17c1.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-router":"2jawN","../../Components/Chart/Chart":"2wVuu","../../Components/RecentTransactions/RecentTransactions":"5P0C6","../../Components/AllTransactions/AllTransactions":"3P15P","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"2wVuu":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$9ad8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$9ad8.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$9ad8.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Chart);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _lineChart = require("@mui/x-charts/LineChart");
var _appContext = require("../../Context/AppContext");
var _s = $RefreshSig$();
function Chart({ clickedTab }) {
    _s();
    const margin = {
        left: 0,
        bottom: 0
    };
    const label = clickedTab;
    const { incomeTransactions, investmentTransactions, expenseTransactions } = (0, _appContext.useAppContext)();
    const daysInMonth = 30;
    // Initialize dailyAmounts with null
    const dailyAmounts = Array(daysInMonth).fill(null);
    // Get current date to determine which days should be 0 vs null
    const currentDate = new Date();
    const currentDay = currentDate.getDate();
    // Set past days with no transactions to 0, leave future days as null
    for(let i = 0; i < daysInMonth; i++)if (i < currentDay) dailyAmounts[i] = 0;
    let clickedTabTransactions;
    switch(clickedTab){
        case "Income":
            clickedTabTransactions = incomeTransactions;
            break;
        case "Investment":
            clickedTabTransactions = investmentTransactions;
            break;
        case "Expense":
            clickedTabTransactions = expenseTransactions;
            break;
        default:
            clickedTabTransactions = incomeTransactions;
            break;
    }
    clickedTabTransactions.forEach((transaction)=>{
        const transactionDate = new Date(transaction.Date);
        const day = transactionDate.getDate() - 1;
        // Make sure the day index is valid
        if (day >= 0 && day < daysInMonth) {
            // If this is the first transaction for this day, initialize to 0 first
            if (dailyAmounts[day] === null) dailyAmounts[day] = 0;
            dailyAmounts[day] += parseFloat(transaction.Amount);
        }
    });
    const xAxisData = Array.from({
        length: daysInMonth
    }, (_, i)=>i + 1);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full border-2 border-black rounded-md flex items-center justify-center text-white py-2",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lineChart.LineChart), {
            xAxis: [
                {
                    data: xAxisData
                }
            ],
            series: [
                {
                    label: label,
                    data: dailyAmounts,
                    area: true,
                    color: "#0171ff"
                }
            ],
            height: 300,
            margin: margin,
            grid: {
                vertical: true,
                horizontal: true
            },
            yAxis: [
                {
                    colorMap: {
                        type: "piecewise",
                        thresholds: [
                            0,
                            Math.max(...dailyAmounts, 10)
                        ],
                        colors: [
                            "white",
                            "#0171ff"
                        ]
                    }
                }
            ]
        }, void 0, false, {
            fileName: "src/Components/Chart/Chart.js",
            lineNumber: 65,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/Components/Chart/Chart.js",
        lineNumber: 64,
        columnNumber: 5
    }, this);
}
_s(Chart, "wyDhy4CKm2cY1M/7ESVCYDi90iI=", false, function() {
    return [
        (0, _appContext.useAppContext)
    ];
});
_c = Chart;
var _c;
$RefreshReg$(_c, "Chart");

  $parcel$ReactRefreshHelpers$9ad8.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@mui/x-charts/LineChart":"l7Iul","../../Context/AppContext":"iTmt5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"l7Iul":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    getMarkElementUtilityClass: true,
    markElementClasses: true
};
Object.defineProperty(exports, "getMarkElementUtilityClass", {
    enumerable: true,
    get: function() {
        return _markElementClasses.getMarkElementUtilityClass;
    }
});
Object.defineProperty(exports, "markElementClasses", {
    enumerable: true,
    get: function() {
        return _markElementClasses.markElementClasses;
    }
});
var _LineChart = require("371a93c833f50e5c");
Object.keys(_LineChart).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _LineChart[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _LineChart[key];
        }
    });
});
var _LinePlot = require("6f2189ccd2c566ae");
Object.keys(_LinePlot).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _LinePlot[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _LinePlot[key];
        }
    });
});
var _AreaPlot = require("9c8498a5f0de13da");
Object.keys(_AreaPlot).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AreaPlot[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _AreaPlot[key];
        }
    });
});
var _MarkPlot = require("2c6ce9c5d128d68");
Object.keys(_MarkPlot).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _MarkPlot[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _MarkPlot[key];
        }
    });
});
var _LineHighlightPlot = require("ef2cfef458da5384");
Object.keys(_LineHighlightPlot).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _LineHighlightPlot[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _LineHighlightPlot[key];
        }
    });
});
var _AreaElement = require("9941404dfd756e02");
Object.keys(_AreaElement).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AreaElement[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _AreaElement[key];
        }
    });
});
var _AnimatedArea = require("53a783238d36087b");
Object.keys(_AnimatedArea).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AnimatedArea[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _AnimatedArea[key];
        }
    });
});
var _LineElement = require("5dad78c8c72c7a01");
Object.keys(_LineElement).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _LineElement[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _LineElement[key];
        }
    });
});
var _AnimatedLine = require("d351fec73f4895c8");
Object.keys(_AnimatedLine).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AnimatedLine[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _AnimatedLine[key];
        }
    });
});
var _MarkElement = require("d3f060c6776b77c2");
Object.keys(_MarkElement).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _MarkElement[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _MarkElement[key];
        }
    });
});
var _LineHighlightElement = require("ab4b9d68e67e4329");
Object.keys(_LineHighlightElement).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _LineHighlightElement[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _LineHighlightElement[key];
        }
    });
});
var _markElementClasses = require("86c6712904e6fccf");

},{"371a93c833f50e5c":"ldqKh","6f2189ccd2c566ae":"f6SFl","9c8498a5f0de13da":"1HQ4x","2c6ce9c5d128d68":"jy13i","ef2cfef458da5384":"cisN1","9941404dfd756e02":"fpCUT","53a783238d36087b":"ipIWo","5dad78c8c72c7a01":"iQ0Vf","d351fec73f4895c8":"lqeRY","d3f060c6776b77c2":"jgXTd","ab4b9d68e67e4329":"bigPa","86c6712904e6fccf":"8Buob"}],"ldqKh":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("3c6d5a055306682b").default;
var _interopRequireDefault = require("d910e3aaaff00de8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LineChart = void 0;
var _extends2 = _interopRequireDefault(require("77729fef7a4aa72"));
var React = _interopRequireWildcard(require("47a642a4533e0fd2"));
var _propTypes = _interopRequireDefault(require("64c054e7971f485"));
var _styles = require("b45bb4c33c7012a7");
var _AreaPlot = require("937a7ed98ae7be87");
var _LinePlot = require("1431332f2ca24238");
var _MarkPlot = require("9226f9e597f9fbe1");
var _ChartsAxis = require("fa440660ff11556");
var _ChartsTooltip = require("14cb3511f21e04ba");
var _ChartsLegend = require("52b90d3670dbbe75");
var _ChartsAxisHighlight = require("608d28a2d6b4848b");
var _ChartsClipPath = require("37311a180e6b39b4");
var _LineHighlightPlot = require("5ee149bde0c9c9c");
var _ChartsGrid = require("50f776d77a68cb3f");
var _ChartsOverlay = require("427d9235cb8d55d6");
var _useLineChartProps = require("a05e7c2fe8fbd98a");
var _useChartContainerProps = require("18dd9b1ec02404b7");
var _ChartDataProvider = require("9440ef94202f66e7");
var _ChartsSurface = require("accb7c10309959bb");
var _ChartsWrapper = require("bbf1f1bbe6a7e26f");
var _jsxRuntime = require("ec4067286aff0747");
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LineChart API](https://mui.com/x/api/charts/line-chart/)
 */ const LineChart = exports.LineChart = /*#__PURE__*/ React.forwardRef(function LineChart(inProps, ref) {
    const props = (0, _styles.useThemeProps)({
        props: inProps,
        name: 'MuiLineChart'
    });
    const { chartsWrapperProps, chartContainerProps, gridProps, clipPathProps, clipPathGroupProps, areaPlotProps, linePlotProps, markPlotProps, overlayProps, chartsAxisProps, axisHighlightProps, lineHighlightPlotProps, legendProps, children } = (0, _useLineChartProps.useLineChartProps)(props);
    const { chartDataProviderProps, chartsSurfaceProps } = (0, _useChartContainerProps.useChartContainerProps)(chartContainerProps, ref);
    const Tooltip = props.slots?.tooltip ?? _ChartsTooltip.ChartsTooltip;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartDataProvider.ChartDataProvider, (0, _extends2.default)({}, chartDataProviderProps, {
        children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsWrapper.ChartsWrapper, (0, _extends2.default)({}, chartsWrapperProps, {
            children: [
                !props.hideLegend && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLegend.ChartsLegend, (0, _extends2.default)({}, legendProps)),
                /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsSurface.ChartsSurface, (0, _extends2.default)({}, chartsSurfaceProps, {
                    children: [
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsGrid.ChartsGrid, (0, _extends2.default)({}, gridProps)),
                        /*#__PURE__*/ (0, _jsxRuntime.jsxs)("g", (0, _extends2.default)({}, clipPathGroupProps, {
                            children: [
                                /*#__PURE__*/ (0, _jsxRuntime.jsx)(_AreaPlot.AreaPlot, (0, _extends2.default)({}, areaPlotProps)),
                                /*#__PURE__*/ (0, _jsxRuntime.jsx)(_LinePlot.LinePlot, (0, _extends2.default)({}, linePlotProps)),
                                /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsOverlay.ChartsOverlay, (0, _extends2.default)({}, overlayProps)),
                                /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisHighlight.ChartsAxisHighlight, (0, _extends2.default)({}, axisHighlightProps))
                            ]
                        })),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxis.ChartsAxis, (0, _extends2.default)({}, chartsAxisProps)),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", {
                            "data-drawing-container": true,
                            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_MarkPlot.MarkPlot, (0, _extends2.default)({}, markPlotProps))
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_LineHighlightPlot.LineHighlightPlot, (0, _extends2.default)({}, lineHighlightPlotProps)),
                        !props.loading && /*#__PURE__*/ (0, _jsxRuntime.jsx)(Tooltip, (0, _extends2.default)({}, props.slotProps?.tooltip)),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsClipPath.ChartsClipPath, (0, _extends2.default)({}, clipPathProps)),
                        children
                    ]
                }))
            ]
        }))
    }));
});
LineChart.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    apiRef: _propTypes.default.shape({
        current: _propTypes.default.object
    }),
    /**
   * The configuration of axes highlight.
   * @see See {@link https://mui.com/x/react-charts/highlighting/ highlighting docs} for more details.
   * @default { x: 'line' }
   */ axisHighlight: _propTypes.default.shape({
        x: _propTypes.default.oneOf([
            'band',
            'line',
            'none'
        ]),
        y: _propTypes.default.oneOf([
            'band',
            'line',
            'none'
        ])
    }),
    children: _propTypes.default.node,
    className: _propTypes.default.string,
    /**
   * Color palette used to colorize multiple series.
   * @default rainbowSurgePalette
   */ colors: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.string),
        _propTypes.default.func
    ]),
    /**
   * An array of objects that can be used to populate series and axes data using their `dataKey` property.
   */ dataset: _propTypes.default.arrayOf(_propTypes.default.object),
    desc: _propTypes.default.string,
    /**
   * If `true`, the charts will not listen to the mouse move event.
   * It might break interactive features, but will improve performance.
   * @default false
   */ disableAxisListener: _propTypes.default.bool,
    /**
   * If `true`, render the line highlight item.
   */ disableLineItemHighlight: _propTypes.default.bool,
    /**
   * Option to display a cartesian grid in the background.
   */ grid: _propTypes.default.shape({
        horizontal: _propTypes.default.bool,
        vertical: _propTypes.default.bool
    }),
    /**
   * The height of the chart in px. If not defined, it takes the height of the parent element.
   */ height: _propTypes.default.number,
    /**
   * If `true`, the legend is not rendered.
   */ hideLegend: _propTypes.default.bool,
    /**
   * The highlighted item.
   * Used when the highlight is controlled.
   */ highlightedItem: _propTypes.default.shape({
        dataIndex: _propTypes.default.number,
        seriesId: _propTypes.default.oneOfType([
            _propTypes.default.number,
            _propTypes.default.string
        ]).isRequired
    }),
    /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */ id: _propTypes.default.string,
    /**
   * If `true`, a loading overlay is displayed.
   * @default false
   */ loading: _propTypes.default.bool,
    /**
   * Localized text for chart components.
   */ localeText: _propTypes.default.object,
    /**
   * The margin between the SVG and the drawing area.
   * It's used for leaving some space for extra information such as the x- and y-axis or legend.
   *
   * Accepts a `number` to be used on all sides or an object with the optional properties: `top`, `bottom`, `left`, and `right`.
   */ margin: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.shape({
            bottom: _propTypes.default.number,
            left: _propTypes.default.number,
            right: _propTypes.default.number,
            top: _propTypes.default.number
        })
    ]),
    /**
   * Callback fired when an area element is clicked.
   */ onAreaClick: _propTypes.default.func,
    /**
   * The function called for onClick events.
   * The second argument contains information about all line/bar elements at the current mouse position.
   * @param {MouseEvent} event The mouse event recorded on the `<svg/>` element.
   * @param {null | ChartsAxisData} data The data about the clicked axis and items associated with it.
   */ onAxisClick: _propTypes.default.func,
    /**
   * The callback fired when the highlighted item changes.
   *
   * @param {HighlightItemData | null} highlightedItem  The newly highlighted item.
   */ onHighlightChange: _propTypes.default.func,
    /**
   * Callback fired when a line element is clicked.
   */ onLineClick: _propTypes.default.func,
    /**
   * Callback fired when a mark element is clicked.
   */ onMarkClick: _propTypes.default.func,
    /**
   * The series to display in the line chart.
   * An array of [[LineSeriesType]] objects.
   */ series: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    theme: _propTypes.default.oneOf([
        'dark',
        'light'
    ]),
    title: _propTypes.default.string,
    /**
   * The width of the chart in px. If not defined, it takes the width of the parent element.
   */ width: _propTypes.default.number,
    /**
   * The configuration of the x-axes.
   * If not provided, a default axis config is used.
   * An array of [[AxisConfig]] objects.
   */ xAxis: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            barGapRatio: _propTypes.default.number,
            categoryGapRatio: _propTypes.default.number,
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    type: _propTypes.default.oneOf([
                        'ordinal'
                    ]).isRequired,
                    unknownColor: _propTypes.default.string,
                    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number,
                        _propTypes.default.string
                    ]).isRequired)
                }),
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'band'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    type: _propTypes.default.oneOf([
                        'ordinal'
                    ]).isRequired,
                    unknownColor: _propTypes.default.string,
                    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number,
                        _propTypes.default.string
                    ]).isRequired)
                }),
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'point'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'log'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'pow'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'sqrt'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'time'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'utc'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'x'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            height: _propTypes.default.number,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'bottom',
                'none',
                'top'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'linear'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelMinGap: _propTypes.default.number,
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func
        })
    ]).isRequired),
    /**
   * The configuration of the y-axes.
   * If not provided, a default axis config is used.
   * An array of [[AxisConfig]] objects.
   */ yAxis: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            barGapRatio: _propTypes.default.number,
            categoryGapRatio: _propTypes.default.number,
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    type: _propTypes.default.oneOf([
                        'ordinal'
                    ]).isRequired,
                    unknownColor: _propTypes.default.string,
                    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number,
                        _propTypes.default.string
                    ]).isRequired)
                }),
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'band'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    type: _propTypes.default.oneOf([
                        'ordinal'
                    ]).isRequired,
                    unknownColor: _propTypes.default.string,
                    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number,
                        _propTypes.default.string
                    ]).isRequired)
                }),
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'point'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'log'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'pow'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'sqrt'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'time'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'utc'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        }),
        _propTypes.default.shape({
            axis: _propTypes.default.oneOf([
                'y'
            ]),
            classes: _propTypes.default.object,
            colorMap: _propTypes.default.oneOfType([
                _propTypes.default.shape({
                    color: _propTypes.default.oneOfType([
                        _propTypes.default.arrayOf(_propTypes.default.string.isRequired),
                        _propTypes.default.func
                    ]).isRequired,
                    max: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    min: _propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]),
                    type: _propTypes.default.oneOf([
                        'continuous'
                    ]).isRequired
                }),
                _propTypes.default.shape({
                    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
                    thresholds: _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                        _propTypes.default.instanceOf(Date),
                        _propTypes.default.number
                    ]).isRequired).isRequired,
                    type: _propTypes.default.oneOf([
                        'piecewise'
                    ]).isRequired
                })
            ]),
            data: _propTypes.default.array,
            dataKey: _propTypes.default.string,
            disableLine: _propTypes.default.bool,
            disableTicks: _propTypes.default.bool,
            domainLimit: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'nice',
                    'strict'
                ]),
                _propTypes.default.func
            ]),
            fill: _propTypes.default.string,
            hideTooltip: _propTypes.default.bool,
            id: _propTypes.default.oneOfType([
                _propTypes.default.number,
                _propTypes.default.string
            ]),
            ignoreTooltip: _propTypes.default.bool,
            label: _propTypes.default.string,
            labelStyle: _propTypes.default.object,
            max: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            min: _propTypes.default.oneOfType([
                _propTypes.default.instanceOf(Date),
                _propTypes.default.number
            ]),
            offset: _propTypes.default.number,
            position: _propTypes.default.oneOf([
                'left',
                'none',
                'right'
            ]),
            reverse: _propTypes.default.bool,
            scaleType: _propTypes.default.oneOf([
                'linear'
            ]),
            slotProps: _propTypes.default.object,
            slots: _propTypes.default.object,
            stroke: _propTypes.default.string,
            sx: _propTypes.default.oneOfType([
                _propTypes.default.arrayOf(_propTypes.default.oneOfType([
                    _propTypes.default.func,
                    _propTypes.default.object,
                    _propTypes.default.bool
                ])),
                _propTypes.default.func,
                _propTypes.default.object
            ]),
            tickInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.array,
                _propTypes.default.func
            ]),
            tickLabelInterval: _propTypes.default.oneOfType([
                _propTypes.default.oneOf([
                    'auto'
                ]),
                _propTypes.default.func
            ]),
            tickLabelPlacement: _propTypes.default.oneOf([
                'middle',
                'tick'
            ]),
            tickLabelStyle: _propTypes.default.object,
            tickMaxStep: _propTypes.default.number,
            tickMinStep: _propTypes.default.number,
            tickNumber: _propTypes.default.number,
            tickPlacement: _propTypes.default.oneOf([
                'end',
                'extremities',
                'middle',
                'start'
            ]),
            tickSize: _propTypes.default.number,
            valueFormatter: _propTypes.default.func,
            width: _propTypes.default.number
        })
    ]).isRequired)
};

},{"3c6d5a055306682b":"6TFJp","d910e3aaaff00de8":"1P3rZ","77729fef7a4aa72":"lKa0J","47a642a4533e0fd2":"jMk1U","64c054e7971f485":"GNqOQ","b45bb4c33c7012a7":"7eExx","937a7ed98ae7be87":"1HQ4x","1431332f2ca24238":"f6SFl","9226f9e597f9fbe1":"jy13i","fa440660ff11556":"1btmG","14cb3511f21e04ba":"feJPJ","52b90d3670dbbe75":"b9W6N","608d28a2d6b4848b":"gy2mI","37311a180e6b39b4":"jqVGn","5ee149bde0c9c9c":"cisN1","50f776d77a68cb3f":"cfHRT","427d9235cb8d55d6":"fcpxR","a05e7c2fe8fbd98a":"a8Lym","18dd9b1ec02404b7":"ko43C","9440ef94202f66e7":"bHiZW","accb7c10309959bb":"9iwL6","bbf1f1bbe6a7e26f":"bXUZW","ec4067286aff0747":"05iiF"}],"6TFJp":[function(require,module,exports,__globalThis) {
var _typeof = require("41c629e90a135a51")["default"];
function _interopRequireWildcard(e, t) {
    if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap();
    return (module.exports = _interopRequireWildcard = function _interopRequireWildcard(e, t) {
        if (!t && e && e.__esModule) return e;
        var o, i, f = {
            __proto__: null,
            "default": e
        };
        if (null === e || "object" != _typeof(e) && "function" != typeof e) return f;
        if (o = t ? n : r) {
            if (o.has(e)) return o.get(e);
            o.set(e, f);
        }
        for(var _t in e)"default" !== _t && ({}).hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
        return f;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports)(e, t);
}
module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"41c629e90a135a51":"7EL9t"}],"7EL9t":[function(require,module,exports,__globalThis) {
function _typeof(o) {
    "@babel/helpers - typeof";
    return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"1P3rZ":[function(require,module,exports,__globalThis) {
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"lKa0J":[function(require,module,exports,__globalThis) {
function _extends() {
    return module.exports = _extends = Object.assign ? Object.assign.bind() : function(n) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e];
            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _extends.apply(null, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"GNqOQ":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"dmkDW","cb216452e2171041":"32b0h"}],"dmkDW":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ad47820528c6facb");

},{"ad47820528c6facb":"8ZhZ7"}],"8ZhZ7":[function(require,module,exports,__globalThis) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"32b0h":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"dmkDW","c067a60101d8520c":"grVLZ","74a0f89a70b9f3c2":"ggXkd","18441b11647bc78":"cnEYJ","bec3f6ff89f0b072":"gaN1l"}],"grVLZ":[function(require,module,exports,__globalThis) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"ggXkd":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"cnEYJ":[function(require,module,exports,__globalThis) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"gaN1l":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"ggXkd","898bc82f39d83f7c":"cnEYJ"}],"7eExx":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("9e0b4dc971269a3").default;
var _interopRequireDefault = require("2d7e4e1648158fbb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    experimental_sx: true,
    THEME_ID: true,
    adaptV4Theme: true,
    hexToRgb: true,
    rgbToHex: true,
    hslToRgb: true,
    decomposeColor: true,
    recomposeColor: true,
    getContrastRatio: true,
    getLuminance: true,
    emphasize: true,
    alpha: true,
    darken: true,
    lighten: true,
    css: true,
    keyframes: true,
    StyledEngineProvider: true,
    unstable_createBreakpoints: true,
    createTheme: true,
    unstable_createMuiStrictModeTheme: true,
    createStyles: true,
    unstable_getUnit: true,
    unstable_toUnitless: true,
    responsiveFontSizes: true,
    createTransitions: true,
    duration: true,
    easing: true,
    createColorScheme: true,
    useTheme: true,
    useThemeProps: true,
    styled: true,
    ThemeProvider: true,
    makeStyles: true,
    withStyles: true,
    withTheme: true,
    extendTheme: true,
    experimental_extendTheme: true,
    getOverlayAlpha: true,
    shouldSkipGeneratingVar: true,
    private_createTypography: true,
    private_createMixins: true,
    private_excludeVariablesFromRoot: true
};
Object.defineProperty(exports, "StyledEngineProvider", {
    enumerable: true,
    get: function() {
        return _system.StyledEngineProvider;
    }
});
Object.defineProperty(exports, "THEME_ID", {
    enumerable: true,
    get: function() {
        return _identifier.default;
    }
});
Object.defineProperty(exports, "ThemeProvider", {
    enumerable: true,
    get: function() {
        return _ThemeProvider.default;
    }
});
Object.defineProperty(exports, "adaptV4Theme", {
    enumerable: true,
    get: function() {
        return _adaptV4Theme.default;
    }
});
Object.defineProperty(exports, "alpha", {
    enumerable: true,
    get: function() {
        return _system.alpha;
    }
});
Object.defineProperty(exports, "createColorScheme", {
    enumerable: true,
    get: function() {
        return _createColorScheme.default;
    }
});
Object.defineProperty(exports, "createStyles", {
    enumerable: true,
    get: function() {
        return _createStyles.default;
    }
});
Object.defineProperty(exports, "createTheme", {
    enumerable: true,
    get: function() {
        return _createTheme.default;
    }
});
Object.defineProperty(exports, "createTransitions", {
    enumerable: true,
    get: function() {
        return _createTransitions.default;
    }
});
Object.defineProperty(exports, "css", {
    enumerable: true,
    get: function() {
        return _system.css;
    }
});
Object.defineProperty(exports, "darken", {
    enumerable: true,
    get: function() {
        return _system.darken;
    }
});
Object.defineProperty(exports, "decomposeColor", {
    enumerable: true,
    get: function() {
        return _system.decomposeColor;
    }
});
Object.defineProperty(exports, "duration", {
    enumerable: true,
    get: function() {
        return _createTransitions.duration;
    }
});
Object.defineProperty(exports, "easing", {
    enumerable: true,
    get: function() {
        return _createTransitions.easing;
    }
});
Object.defineProperty(exports, "emphasize", {
    enumerable: true,
    get: function() {
        return _system.emphasize;
    }
});
Object.defineProperty(exports, "experimental_extendTheme", {
    enumerable: true,
    get: function() {
        return _experimental_extendTheme.default;
    }
});
exports.experimental_sx = experimental_sx;
Object.defineProperty(exports, "extendTheme", {
    enumerable: true,
    get: function() {
        return _createThemeWithVars.default;
    }
});
Object.defineProperty(exports, "getContrastRatio", {
    enumerable: true,
    get: function() {
        return _system.getContrastRatio;
    }
});
Object.defineProperty(exports, "getLuminance", {
    enumerable: true,
    get: function() {
        return _system.getLuminance;
    }
});
Object.defineProperty(exports, "getOverlayAlpha", {
    enumerable: true,
    get: function() {
        return _getOverlayAlpha.default;
    }
});
Object.defineProperty(exports, "hexToRgb", {
    enumerable: true,
    get: function() {
        return _system.hexToRgb;
    }
});
Object.defineProperty(exports, "hslToRgb", {
    enumerable: true,
    get: function() {
        return _system.hslToRgb;
    }
});
Object.defineProperty(exports, "keyframes", {
    enumerable: true,
    get: function() {
        return _system.keyframes;
    }
});
Object.defineProperty(exports, "lighten", {
    enumerable: true,
    get: function() {
        return _system.lighten;
    }
});
Object.defineProperty(exports, "makeStyles", {
    enumerable: true,
    get: function() {
        return _makeStyles.default;
    }
});
Object.defineProperty(exports, "private_createMixins", {
    enumerable: true,
    get: function() {
        return _createMixins.default;
    }
});
Object.defineProperty(exports, "private_createTypography", {
    enumerable: true,
    get: function() {
        return _createTypography.default;
    }
});
Object.defineProperty(exports, "private_excludeVariablesFromRoot", {
    enumerable: true,
    get: function() {
        return _excludeVariablesFromRoot.default;
    }
});
Object.defineProperty(exports, "recomposeColor", {
    enumerable: true,
    get: function() {
        return _system.recomposeColor;
    }
});
Object.defineProperty(exports, "responsiveFontSizes", {
    enumerable: true,
    get: function() {
        return _responsiveFontSizes.default;
    }
});
Object.defineProperty(exports, "rgbToHex", {
    enumerable: true,
    get: function() {
        return _system.rgbToHex;
    }
});
Object.defineProperty(exports, "shouldSkipGeneratingVar", {
    enumerable: true,
    get: function() {
        return _shouldSkipGeneratingVar.default;
    }
});
Object.defineProperty(exports, "styled", {
    enumerable: true,
    get: function() {
        return _styled.default;
    }
});
Object.defineProperty(exports, "unstable_createBreakpoints", {
    enumerable: true,
    get: function() {
        return _createBreakpoints.unstable_createBreakpoints;
    }
});
Object.defineProperty(exports, "unstable_createMuiStrictModeTheme", {
    enumerable: true,
    get: function() {
        return _createMuiStrictModeTheme.default;
    }
});
Object.defineProperty(exports, "unstable_getUnit", {
    enumerable: true,
    get: function() {
        return _cssUtils.getUnit;
    }
});
Object.defineProperty(exports, "unstable_toUnitless", {
    enumerable: true,
    get: function() {
        return _cssUtils.toUnitless;
    }
});
Object.defineProperty(exports, "useTheme", {
    enumerable: true,
    get: function() {
        return _useTheme.default;
    }
});
Object.defineProperty(exports, "useThemeProps", {
    enumerable: true,
    get: function() {
        return _useThemeProps.default;
    }
});
Object.defineProperty(exports, "withStyles", {
    enumerable: true,
    get: function() {
        return _withStyles.default;
    }
});
Object.defineProperty(exports, "withTheme", {
    enumerable: true,
    get: function() {
        return _withTheme.default;
    }
});
var _formatMuiErrorMessage = _interopRequireDefault(require("1426be4a4155a7db"));
var _identifier = _interopRequireDefault(require("60e446a07e752fc1"));
var _adaptV4Theme = _interopRequireDefault(require("4e01c7764d7ad72b"));
var _system = require("50a86352ec4c604d");
var _createBreakpoints = require("fc745d3a8e6128b6");
var _createTheme = _interopRequireDefault(require("c02345c0d2fe9c26"));
var _createMuiStrictModeTheme = _interopRequireDefault(require("325a3b3f8eefd8c8"));
var _createStyles = _interopRequireDefault(require("bf76f6a96f96ef46"));
var _cssUtils = require("d74cc28e333acb9c");
var _responsiveFontSizes = _interopRequireDefault(require("996875b8cae62043"));
var _createTransitions = _interopRequireWildcard(require("c5eb00d594046f72"));
var _createColorScheme = _interopRequireDefault(require("4050e24442ae9870"));
var _useTheme = _interopRequireDefault(require("be60b7a50df0d204"));
var _useThemeProps = _interopRequireDefault(require("9ef0b9dc8ad1fc2a"));
var _styled = _interopRequireDefault(require("7525de448df38c88"));
var _ThemeProvider = _interopRequireDefault(require("755dbd5cca9108e5"));
var _makeStyles = _interopRequireDefault(require("4ca70a1175195400"));
var _withStyles = _interopRequireDefault(require("6a3fda33b23d335a"));
var _withTheme = _interopRequireDefault(require("de95f5b02dd259e3"));
var _ThemeProviderWithVars = require("597fd1722bc1e31a");
Object.keys(_ThemeProviderWithVars).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ThemeProviderWithVars[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ThemeProviderWithVars[key];
        }
    });
});
var _createThemeWithVars = _interopRequireDefault(require("c58e64473d69acc5"));
var _experimental_extendTheme = _interopRequireDefault(require("7b6ebb63ac28ee0a"));
var _getOverlayAlpha = _interopRequireDefault(require("24dd3ab8b230fd52"));
var _shouldSkipGeneratingVar = _interopRequireDefault(require("9ccd3464d7f82d2f"));
var _createTypography = _interopRequireDefault(require("1935a726b59862c"));
var _createMixins = _interopRequireDefault(require("1388ea8ab0baac7a"));
var _excludeVariablesFromRoot = _interopRequireDefault(require("37713734b0c1956"));
// TODO: Remove this function in v6.
// eslint-disable-next-line @typescript-eslint/naming-convention
function experimental_sx() {
    throw new Error("MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.For more details, see https://github.com/mui/material-ui/pull/35150.");
} // The legacy utilities from @mui/styles
 // These are just empty functions that throws when invoked
 // TODO: Remove in v7
 // Private methods for creating parts of the theme

},{"9e0b4dc971269a3":"6TFJp","2d7e4e1648158fbb":"1P3rZ","1426be4a4155a7db":"cXsuk","60e446a07e752fc1":"6SSma","4e01c7764d7ad72b":"8FKfg","50a86352ec4c604d":"1WaIj","fc745d3a8e6128b6":"9ZDyZ","c02345c0d2fe9c26":"a1TKj","325a3b3f8eefd8c8":"8fLO4","bf76f6a96f96ef46":"e3r46","d74cc28e333acb9c":"btihx","996875b8cae62043":"6wsxG","c5eb00d594046f72":"kquFJ","4050e24442ae9870":"4jSXe","be60b7a50df0d204":"03DWO","9ef0b9dc8ad1fc2a":"iFNHX","7525de448df38c88":"gU1yq","755dbd5cca9108e5":"6exTj","4ca70a1175195400":"7KmGh","6a3fda33b23d335a":"hJccm","de95f5b02dd259e3":"bQ1k9","597fd1722bc1e31a":"kXiIm","c58e64473d69acc5":"asCkD","7b6ebb63ac28ee0a":"48VoL","24dd3ab8b230fd52":"gVmXd","9ccd3464d7f82d2f":"4q7TV","1935a726b59862c":"iYA5e","1388ea8ab0baac7a":"2RmTc","37713734b0c1956":"bxBFd"}],"cXsuk":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3789a633fdd91012").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _formatMuiErrorMessage.default;
    }
});
var _formatMuiErrorMessage = _interopRequireDefault(require("dea94008ecf6d708"));

},{"3789a633fdd91012":"1P3rZ","dea94008ecf6d708":"kH35D"}],"kH35D":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = formatMuiErrorMessage;
/**
 * WARNING: Don't import this directly. It's imported by the code generated by
 * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`
 * constructors to ensure the plugin works as expected. Supported patterns include:
 *   throw new Error('My message');
 *   throw new Error(`My message: ${foo}`);
 *   throw new Error(`My message: ${foo}` + 'another string');
 *   ...
 * @param {number} code
 */ function formatMuiErrorMessage(code, ...args) {
    const url = new URL(`https://mui.com/production-error/?code=${code}`);
    args.forEach((arg)=>url.searchParams.append('args[]', arg));
    return `Minified MUI error #${code}; visit ${url} for the full message.`;
}

},{}],"6SSma":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = exports.default = '$$material';

},{}],"8FKfg":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = adaptV4Theme;
var _system = require("3242de34b3b788aa");
function adaptV4Theme(inputTheme) {
    console.warn([
        'MUI: adaptV4Theme() is deprecated.',
        'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'
    ].join('\n'));
    const { defaultProps = {}, mixins = {}, overrides = {}, palette = {}, props = {}, styleOverrides = {}, ...other } = inputTheme;
    const theme = {
        ...other,
        components: {}
    };
    // default props
    Object.keys(defaultProps).forEach((component)=>{
        const componentValue = theme.components[component] || {};
        componentValue.defaultProps = defaultProps[component];
        theme.components[component] = componentValue;
    });
    Object.keys(props).forEach((component)=>{
        const componentValue = theme.components[component] || {};
        componentValue.defaultProps = props[component];
        theme.components[component] = componentValue;
    });
    // CSS overrides
    Object.keys(styleOverrides).forEach((component)=>{
        const componentValue = theme.components[component] || {};
        componentValue.styleOverrides = styleOverrides[component];
        theme.components[component] = componentValue;
    });
    Object.keys(overrides).forEach((component)=>{
        const componentValue = theme.components[component] || {};
        componentValue.styleOverrides = overrides[component];
        theme.components[component] = componentValue;
    });
    // theme.spacing
    theme.spacing = (0, _system.createSpacing)(inputTheme.spacing);
    // theme.mixins.gutters
    const breakpoints = (0, _system.createBreakpoints)(inputTheme.breakpoints || {});
    const spacing = theme.spacing;
    theme.mixins = {
        gutters: (styles = {})=>{
            return {
                paddingLeft: spacing(2),
                paddingRight: spacing(2),
                ...styles,
                [breakpoints.up('sm')]: {
                    paddingLeft: spacing(3),
                    paddingRight: spacing(3),
                    ...styles[breakpoints.up('sm')]
                }
            };
        },
        ...mixins
    };
    const { type: typeInput, mode: modeInput, ...paletteRest } = palette;
    const finalMode = modeInput || typeInput || 'light';
    theme.palette = {
        // theme.palette.text.hint
        text: {
            hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'
        },
        mode: finalMode,
        type: finalMode,
        ...paletteRest
    };
    return theme;
}

},{"3242de34b3b788aa":"1WaIj"}],"1WaIj":[function(require,module,exports,__globalThis) {
/**
 * @mui/system v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "css", ()=>(0, _styledEngine.css));
parcelHelpers.export(exports, "keyframes", ()=>(0, _styledEngine.keyframes));
parcelHelpers.export(exports, "StyledEngineProvider", ()=>(0, _styledEngine.StyledEngineProvider));
parcelHelpers.export(exports, "GlobalStyles", ()=>(0, _indexJsDefault.default));
parcelHelpers.export(exports, "borders", ()=>(0, _indexJsDefault1.default));
parcelHelpers.export(exports, "breakpoints", ()=>(0, _indexJsDefault2.default));
parcelHelpers.export(exports, "cssContainerQueries", ()=>(0, _indexJsDefault3.default));
parcelHelpers.export(exports, "handleBreakpoints", ()=>(0, _indexJs2.handleBreakpoints));
parcelHelpers.export(exports, "mergeBreakpointsInOrder", ()=>(0, _indexJs2.mergeBreakpointsInOrder));
parcelHelpers.export(exports, "unstable_resolveBreakpointValues", ()=>(0, _indexJs2.resolveBreakpointValues));
parcelHelpers.export(exports, "compose", ()=>(0, _indexJsDefault4.default));
parcelHelpers.export(exports, "display", ()=>(0, _indexJsDefault5.default));
parcelHelpers.export(exports, "flexbox", ()=>(0, _indexJsDefault6.default));
parcelHelpers.export(exports, "grid", ()=>(0, _indexJsDefault7.default));
parcelHelpers.export(exports, "palette", ()=>(0, _indexJsDefault8.default));
parcelHelpers.export(exports, "positions", ()=>(0, _indexJsDefault9.default));
parcelHelpers.export(exports, "shadows", ()=>(0, _indexJsDefault10.default));
parcelHelpers.export(exports, "sizing", ()=>(0, _indexJsDefault11.default));
parcelHelpers.export(exports, "spacing", ()=>(0, _indexJsDefault12.default));
parcelHelpers.export(exports, "style", ()=>(0, _indexJsDefault13.default));
parcelHelpers.export(exports, "getPath", ()=>(0, _indexJs13.getPath));
parcelHelpers.export(exports, "getStyleValue", ()=>(0, _indexJs13.getStyleValue));
parcelHelpers.export(exports, "typography", ()=>(0, _indexJsDefault14.default));
parcelHelpers.export(exports, "unstable_styleFunctionSx", ()=>(0, _indexJsDefault15.default));
parcelHelpers.export(exports, "unstable_createStyleFunctionSx", ()=>(0, _indexJs15.unstable_createStyleFunctionSx));
parcelHelpers.export(exports, "unstable_extendSxProp", ()=>(0, _indexJs15.extendSxProp));
parcelHelpers.export(exports, "unstable_defaultSxConfig", ()=>(0, _indexJs15.unstable_defaultSxConfig));
parcelHelpers.export(exports, "unstable_getThemeValue", ()=>(0, _indexJsDefault16.default));
parcelHelpers.export(exports, "Box", ()=>(0, _indexJsDefault17.default));
parcelHelpers.export(exports, "createBox", ()=>(0, _indexJsDefault18.default));
parcelHelpers.export(exports, "createStyled", ()=>(0, _indexJsDefault19.default));
parcelHelpers.export(exports, "styled", ()=>(0, _indexJsDefault20.default));
parcelHelpers.export(exports, "createTheme", ()=>(0, _indexJsDefault21.default));
parcelHelpers.export(exports, "createBreakpoints", ()=>(0, _createBreakpointsJsDefault.default));
parcelHelpers.export(exports, "createSpacing", ()=>(0, _createSpacingJsDefault.default));
parcelHelpers.export(exports, "shape", ()=>(0, _shapeJsDefault.default));
parcelHelpers.export(exports, "useThemeProps", ()=>(0, _indexJsDefault22.default));
parcelHelpers.export(exports, "getThemeProps", ()=>(0, _indexJs22.getThemeProps));
parcelHelpers.export(exports, "useTheme", ()=>(0, _indexJsDefault23.default));
parcelHelpers.export(exports, "useThemeWithoutDefault", ()=>(0, _indexJsDefault24.default));
parcelHelpers.export(exports, "useMediaQuery", ()=>(0, _indexJsDefault25.default));
parcelHelpers.export(exports, "ThemeProvider", ()=>(0, _indexJsDefault26.default));
parcelHelpers.export(exports, "unstable_memoTheme", ()=>(0, _memoThemeJsDefault.default));
parcelHelpers.export(exports, "unstable_createCssVarsProvider", ()=>(0, _createCssVarsProviderJsDefault.default));
parcelHelpers.export(exports, "unstable_createGetCssVar", ()=>(0, _createGetCssVarJsDefault.default));
parcelHelpers.export(exports, "unstable_cssVarsParser", ()=>(0, _cssVarsParserJsDefault.default));
parcelHelpers.export(exports, "unstable_prepareCssVars", ()=>(0, _prepareCssVarsJsDefault.default));
parcelHelpers.export(exports, "unstable_createCssVarsTheme", ()=>(0, _createCssVarsThemeJsDefault.default));
parcelHelpers.export(exports, "responsivePropType", ()=>(0, _indexJsDefault27.default));
parcelHelpers.export(exports, "RtlProvider", ()=>(0, _indexJsDefault28.default));
/** ----------------- */ /** Layout components */ parcelHelpers.export(exports, "createContainer", ()=>(0, _createContainerJsDefault.default));
parcelHelpers.export(exports, "Container", ()=>(0, _indexJsDefault29.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _gridJsDefault.default));
parcelHelpers.export(exports, "Stack", ()=>(0, _stackJsDefault.default));
// TODO: Remove this function in v6
// eslint-disable-next-line @typescript-eslint/naming-convention
parcelHelpers.export(exports, "experimental_sx", ()=>experimental_sx);
var _formatMuiErrorMessage = require("@mui/utils/formatMuiErrorMessage");
var _formatMuiErrorMessageDefault = parcelHelpers.interopDefault(_formatMuiErrorMessage);
var _styledEngine = require("@mui/styled-engine");
var _indexJs = require("./GlobalStyles/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./borders/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
parcelHelpers.exportAll(_indexJs1, exports);
var _indexJs2 = require("./breakpoints/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("./cssContainerQueries/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("./compose/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("./display/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("./flexbox/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
parcelHelpers.exportAll(_indexJs6, exports);
var _indexJs7 = require("./cssGrid/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
parcelHelpers.exportAll(_indexJs7, exports);
var _indexJs8 = require("./palette/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
parcelHelpers.exportAll(_indexJs8, exports);
var _indexJs9 = require("./positions/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
parcelHelpers.exportAll(_indexJs9, exports);
var _indexJs10 = require("./shadows/index.js");
var _indexJsDefault10 = parcelHelpers.interopDefault(_indexJs10);
var _indexJs11 = require("./sizing/index.js");
var _indexJsDefault11 = parcelHelpers.interopDefault(_indexJs11);
parcelHelpers.exportAll(_indexJs11, exports);
var _indexJs12 = require("./spacing/index.js");
var _indexJsDefault12 = parcelHelpers.interopDefault(_indexJs12);
parcelHelpers.exportAll(_indexJs12, exports);
var _indexJs13 = require("./style/index.js");
var _indexJsDefault13 = parcelHelpers.interopDefault(_indexJs13);
var _indexJs14 = require("./typography/index.js");
var _indexJsDefault14 = parcelHelpers.interopDefault(_indexJs14);
parcelHelpers.exportAll(_indexJs14, exports);
var _indexJs15 = require("./styleFunctionSx/index.js");
var _indexJsDefault15 = parcelHelpers.interopDefault(_indexJs15);
var _indexJs16 = require("./getThemeValue/index.js");
var _indexJsDefault16 = parcelHelpers.interopDefault(_indexJs16);
var _indexJs17 = require("./Box/index.js");
var _indexJsDefault17 = parcelHelpers.interopDefault(_indexJs17);
var _indexJs18 = require("./createBox/index.js");
var _indexJsDefault18 = parcelHelpers.interopDefault(_indexJs18);
var _indexJs19 = require("./createStyled/index.js");
var _indexJsDefault19 = parcelHelpers.interopDefault(_indexJs19);
parcelHelpers.exportAll(_indexJs19, exports);
var _indexJs20 = require("./styled/index.js");
var _indexJsDefault20 = parcelHelpers.interopDefault(_indexJs20);
var _indexJs21 = require("./createTheme/index.js");
var _indexJsDefault21 = parcelHelpers.interopDefault(_indexJs21);
var _createBreakpointsJs = require("./createBreakpoints/createBreakpoints.js");
var _createBreakpointsJsDefault = parcelHelpers.interopDefault(_createBreakpointsJs);
var _createSpacingJs = require("./createTheme/createSpacing.js");
var _createSpacingJsDefault = parcelHelpers.interopDefault(_createSpacingJs);
var _shapeJs = require("./createTheme/shape.js");
var _shapeJsDefault = parcelHelpers.interopDefault(_shapeJs);
var _indexJs22 = require("./useThemeProps/index.js");
var _indexJsDefault22 = parcelHelpers.interopDefault(_indexJs22);
var _indexJs23 = require("./useTheme/index.js");
var _indexJsDefault23 = parcelHelpers.interopDefault(_indexJs23);
var _indexJs24 = require("./useThemeWithoutDefault/index.js");
var _indexJsDefault24 = parcelHelpers.interopDefault(_indexJs24);
var _indexJs25 = require("./useMediaQuery/index.js");
var _indexJsDefault25 = parcelHelpers.interopDefault(_indexJs25);
var _indexJs26 = require("./colorManipulator/index.js");
parcelHelpers.exportAll(_indexJs26, exports);
var _indexJs27 = require("./ThemeProvider/index.js");
var _indexJsDefault26 = parcelHelpers.interopDefault(_indexJs27);
var _memoThemeJs = require("./memoTheme.js");
var _memoThemeJsDefault = parcelHelpers.interopDefault(_memoThemeJs);
var _createCssVarsProviderJs = require("./cssVars/createCssVarsProvider.js");
var _createCssVarsProviderJsDefault = parcelHelpers.interopDefault(_createCssVarsProviderJs);
var _createGetCssVarJs = require("./cssVars/createGetCssVar.js");
var _createGetCssVarJsDefault = parcelHelpers.interopDefault(_createGetCssVarJs);
var _cssVarsParserJs = require("./cssVars/cssVarsParser.js");
var _cssVarsParserJsDefault = parcelHelpers.interopDefault(_cssVarsParserJs);
var _prepareCssVarsJs = require("./cssVars/prepareCssVars.js");
var _prepareCssVarsJsDefault = parcelHelpers.interopDefault(_prepareCssVarsJs);
var _createCssVarsThemeJs = require("./cssVars/createCssVarsTheme.js");
var _createCssVarsThemeJsDefault = parcelHelpers.interopDefault(_createCssVarsThemeJs);
var _indexJs28 = require("./responsivePropType/index.js");
var _indexJsDefault27 = parcelHelpers.interopDefault(_indexJs28);
var _indexJs29 = require("./RtlProvider/index.js");
var _indexJsDefault28 = parcelHelpers.interopDefault(_indexJs29);
parcelHelpers.exportAll(_indexJs29, exports);
var _indexJs30 = require("./version/index.js");
parcelHelpers.exportAll(_indexJs30, exports);
var _createContainerJs = require("./Container/createContainer.js");
var _createContainerJsDefault = parcelHelpers.interopDefault(_createContainerJs);
var _indexJs31 = require("./Container/index.js");
var _indexJsDefault29 = parcelHelpers.interopDefault(_indexJs31);
parcelHelpers.exportAll(_indexJs31, exports);
var _gridJs = require("./Grid/Grid.js");
var _gridJsDefault = parcelHelpers.interopDefault(_gridJs);
var _indexJs32 = require("./Grid/index.js");
parcelHelpers.exportAll(_indexJs32, exports);
var _stackJs = require("./Stack/Stack.js");
var _stackJsDefault = parcelHelpers.interopDefault(_stackJs);
var _indexJs33 = require("./Stack/index.js");
parcelHelpers.exportAll(_indexJs33, exports);
function experimental_sx() {
    throw new Error("MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.For more details, see https://github.com/mui/material-ui/pull/35150.");
}

},{"@mui/utils/formatMuiErrorMessage":"cXsuk","@mui/styled-engine":"g3Wsb","./GlobalStyles/index.js":"gydLr","./borders/index.js":"9ZCIV","./breakpoints/index.js":"w58nR","./cssContainerQueries/index.js":"rHSbd","./compose/index.js":"bceMB","./display/index.js":"6lF7N","./flexbox/index.js":"9tYy0","./cssGrid/index.js":"23cb0","./palette/index.js":"kne7J","./positions/index.js":"8tI3x","./shadows/index.js":"lTcah","./sizing/index.js":"fO9AT","./spacing/index.js":"aFm0j","./style/index.js":"ehG9v","./typography/index.js":"etsE0","./styleFunctionSx/index.js":"aRtza","./getThemeValue/index.js":"3EmuA","./Box/index.js":"aPBZ3","./createBox/index.js":"id06V","./createStyled/index.js":"2Rv1y","./styled/index.js":"kdyDN","./createTheme/index.js":"iH9Ok","./createBreakpoints/createBreakpoints.js":"j9n13","./createTheme/createSpacing.js":"kfQyL","./createTheme/shape.js":"2tX7J","./useThemeProps/index.js":"l2Red","./useTheme/index.js":"dQKAT","./useThemeWithoutDefault/index.js":"hKnql","./useMediaQuery/index.js":"1lD2b","./colorManipulator/index.js":"8ygAL","./ThemeProvider/index.js":"dkyK0","./memoTheme.js":"d9QFz","./cssVars/createCssVarsProvider.js":"6Is3L","./cssVars/createGetCssVar.js":"fpIeq","./cssVars/cssVarsParser.js":"gOzRn","./cssVars/prepareCssVars.js":"hhBD3","./cssVars/createCssVarsTheme.js":"lDyPq","./responsivePropType/index.js":"gnPYs","./RtlProvider/index.js":"6SZXq","./version/index.js":"kruVi","./Container/createContainer.js":"fsMkV","./Container/index.js":"9ueIq","./Grid/Grid.js":"8BkV8","./Grid/index.js":"dXOvW","./Stack/Stack.js":"25xkO","./Stack/index.js":"KT4MP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g3Wsb":[function(require,module,exports,__globalThis) {
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeContext", ()=>(0, _react.ThemeContext));
parcelHelpers.export(exports, "keyframes", ()=>(0, _react.keyframes));
parcelHelpers.export(exports, "css", ()=>(0, _react.css));
parcelHelpers.export(exports, "StyledEngineProvider", ()=>(0, _indexJsDefault.default));
parcelHelpers.export(exports, "GlobalStyles", ()=>(0, _indexJsDefault1.default));
parcelHelpers.export(exports, "default", ()=>styled);
// eslint-disable-next-line @typescript-eslint/naming-convention
parcelHelpers.export(exports, "internal_mutateStyles", ()=>internal_mutateStyles);
// eslint-disable-next-line @typescript-eslint/naming-convention
parcelHelpers.export(exports, "internal_serializeStyles", ()=>internal_serializeStyles);
/* eslint-disable no-underscore-dangle */ var _styled = require("@emotion/styled");
var _styledDefault = parcelHelpers.interopDefault(_styled);
var _serialize = require("@emotion/serialize");
var _react = require("@emotion/react");
var _indexJs = require("./StyledEngineProvider/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./GlobalStyles/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
'use client';
function styled(tag, options) {
    const stylesFactory = (0, _styledDefault.default)(tag, options);
    return (...styles)=>{
        const component = typeof tag === 'string' ? `"${tag}"` : 'component';
        if (styles.length === 0) console.error([
            `MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`,
            'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'
        ].join('\n'));
        else if (styles.some((style)=>style === undefined)) console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
        return stylesFactory(...styles);
    };
}
function internal_mutateStyles(tag, processor) {
    // Emotion attaches all the styles as `__emotion_styles`.
    // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
    if (Array.isArray(tag.__emotion_styles)) tag.__emotion_styles = processor(tag.__emotion_styles);
}
// Emotion only accepts an array, but we want to avoid allocations
const wrapper = [];
function internal_serializeStyles(styles) {
    wrapper[0] = styles;
    return (0, _serialize.serializeStyles)(wrapper);
}

},{"@emotion/styled":"5FnKv","@emotion/serialize":"4vIHo","@emotion/react":"cLTfV","./StyledEngineProvider/index.js":"c8dr0","./GlobalStyles/index.js":"63bLm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5FnKv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>newStyled);
var _emotionStyledBaseEsmJs = require("../base/dist/emotion-styled-base.esm.js");
var _emotionStyledBaseEsmJsDefault = parcelHelpers.interopDefault(_emotionStyledBaseEsmJs);
var _extends = require("@babel/runtime/helpers/extends");
var _react = require("@emotion/react");
var _serialize = require("@emotion/serialize");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var _utils = require("@emotion/utils");
var _react1 = require("react");
var _isPropValid = require("@emotion/is-prop-valid");
var tags = [
    'a',
    'abbr',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'base',
    'bdi',
    'bdo',
    'big',
    'blockquote',
    'body',
    'br',
    'button',
    'canvas',
    'caption',
    'cite',
    'code',
    'col',
    'colgroup',
    'data',
    'datalist',
    'dd',
    'del',
    'details',
    'dfn',
    'dialog',
    'div',
    'dl',
    'dt',
    'em',
    'embed',
    'fieldset',
    'figcaption',
    'figure',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'iframe',
    'img',
    'input',
    'ins',
    'kbd',
    'keygen',
    'label',
    'legend',
    'li',
    'link',
    'main',
    'map',
    'mark',
    'marquee',
    'menu',
    'menuitem',
    'meta',
    'meter',
    'nav',
    'noscript',
    'object',
    'ol',
    'optgroup',
    'option',
    'output',
    'p',
    'param',
    'picture',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'script',
    'section',
    'select',
    'small',
    'source',
    'span',
    'strong',
    'style',
    'sub',
    'summary',
    'sup',
    'table',
    'tbody',
    'td',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'title',
    'tr',
    'track',
    'u',
    'ul',
    'var',
    'video',
    'wbr',
    'circle',
    'clipPath',
    'defs',
    'ellipse',
    'foreignObject',
    'g',
    'image',
    'line',
    'linearGradient',
    'mask',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialGradient',
    'rect',
    'stop',
    'svg',
    'text',
    'tspan'
];
// bind it to avoid mutating the original function
var newStyled = (0, _emotionStyledBaseEsmJsDefault.default).bind(null);
tags.forEach(function(tagName) {
    newStyled[tagName] = newStyled(tagName);
});

},{"../base/dist/emotion-styled-base.esm.js":"2iZ47","@babel/runtime/helpers/extends":"lKa0J","@emotion/react":"cLTfV","@emotion/serialize":"4vIHo","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@emotion/utils":"cQ0xH","react":"jMk1U","@emotion/is-prop-valid":"64e9S","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2iZ47":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createStyled);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("@emotion/react");
var _serialize = require("@emotion/serialize");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var _utils = require("@emotion/utils");
var _react1 = require("react");
var _isPropValid = require("@emotion/is-prop-valid");
var _isPropValidDefault = parcelHelpers.interopDefault(_isPropValid);
var isBrowser = typeof document !== 'undefined';
var isDevelopment = false;
var testOmitPropsOnStringTag = (0, _isPropValidDefault.default);
var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
    return key !== 'theme';
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
    return typeof tag === 'string' && // 96 is one less than the char code
    // for "a" so this is checking that
    // it's a lowercase character
    tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {
    var shouldForwardProp;
    if (options) {
        var optionsShouldForwardProp = options.shouldForwardProp;
        shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
            return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
        } : optionsShouldForwardProp;
    }
    if (typeof shouldForwardProp !== 'function' && isReal) shouldForwardProp = tag.__emotion_forwardProp;
    return shouldForwardProp;
};
var Insertion = function Insertion(_ref) {
    var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;
    (0, _utils.registerStyles)(cache, serialized, isStringTag);
    var rules = (0, _useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback)(function() {
        return (0, _utils.insertStyles)(cache, serialized, isStringTag);
    });
    if (!isBrowser && rules !== undefined) {
        var _ref2;
        var serializedNames = serialized.name;
        var next = serialized.next;
        while(next !== undefined){
            serializedNames += ' ' + next.name;
            next = next.next;
        }
        return /*#__PURE__*/ _react1.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref2.nonce = cache.sheet.nonce, _ref2));
    }
    return null;
};
var createStyled = function createStyled(tag, options) {
    var isReal = tag.__emotion_real === tag;
    var baseTag = isReal && tag.__emotion_base || tag;
    var identifierName;
    var targetClassName;
    if (options !== undefined) {
        identifierName = options.label;
        targetClassName = options.target;
    }
    var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);
    var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
    var shouldUseAs = !defaultShouldForwardProp('as');
    return function() {
        // eslint-disable-next-line prefer-rest-params
        var args = arguments;
        var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];
        if (identifierName !== undefined) styles.push("label:" + identifierName + ";");
        if (args[0] == null || args[0].raw === undefined) // eslint-disable-next-line prefer-spread
        styles.push.apply(styles, args);
        else {
            var templateStringsArr = args[0];
            styles.push(templateStringsArr[0]);
            var len = args.length;
            var i = 1;
            for(; i < len; i++)styles.push(args[i], templateStringsArr[i]);
        }
        var Styled = (0, _react.withEmotionCache)(function(props, cache, ref) {
            var FinalTag = shouldUseAs && props.as || baseTag;
            var className = '';
            var classInterpolations = [];
            var mergedProps = props;
            if (props.theme == null) {
                mergedProps = {};
                for(var key in props)mergedProps[key] = props[key];
                mergedProps.theme = _react1.useContext((0, _react.ThemeContext));
            }
            if (typeof props.className === 'string') className = (0, _utils.getRegisteredStyles)(cache.registered, classInterpolations, props.className);
            else if (props.className != null) className = props.className + " ";
            var serialized = (0, _serialize.serializeStyles)(styles.concat(classInterpolations), cache.registered, mergedProps);
            className += cache.key + "-" + serialized.name;
            if (targetClassName !== undefined) className += " " + targetClassName;
            var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
            var newProps = {};
            for(var _key in props){
                if (shouldUseAs && _key === 'as') continue;
                if (finalShouldForwardProp(_key)) newProps[_key] = props[_key];
            }
            newProps.className = className;
            if (ref) newProps.ref = ref;
            return /*#__PURE__*/ _react1.createElement(_react1.Fragment, null, /*#__PURE__*/ _react1.createElement(Insertion, {
                cache: cache,
                serialized: serialized,
                isStringTag: typeof FinalTag === 'string'
            }), /*#__PURE__*/ _react1.createElement(FinalTag, newProps));
        });
        Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
        Styled.defaultProps = tag.defaultProps;
        Styled.__emotion_real = Styled;
        Styled.__emotion_base = baseTag;
        Styled.__emotion_styles = styles;
        Styled.__emotion_forwardProp = shouldForwardProp;
        Object.defineProperty(Styled, 'toString', {
            value: function value() {
                if (targetClassName === undefined && isDevelopment) return 'NO_COMPONENT_SELECTOR';
                return "." + targetClassName;
            }
        });
        Styled.withComponent = function(nextTag, nextOptions) {
            var newStyled = createStyled(nextTag, (0, _extendsDefault.default)({}, options, nextOptions, {
                shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
            }));
            return newStyled.apply(void 0, styles);
        };
        return Styled;
    };
};

},{"@babel/runtime/helpers/esm/extends":"20my9","@emotion/react":"cLTfV","@emotion/serialize":"4vIHo","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@emotion/utils":"cQ0xH","react":"jMk1U","@emotion/is-prop-valid":"64e9S","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"20my9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_extends);
function _extends() {
    return _extends = Object.assign ? Object.assign.bind() : function(n) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e];
            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }, _extends.apply(null, arguments);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cLTfV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CacheProvider", ()=>(0, _emotionElementD59E098FEsmJs.C));
parcelHelpers.export(exports, "ThemeContext", ()=>(0, _emotionElementD59E098FEsmJs.T));
parcelHelpers.export(exports, "ThemeProvider", ()=>(0, _emotionElementD59E098FEsmJs.b));
parcelHelpers.export(exports, "__unsafe_useEmotionCache", ()=>(0, _emotionElementD59E098FEsmJs._));
parcelHelpers.export(exports, "useTheme", ()=>(0, _emotionElementD59E098FEsmJs.u));
parcelHelpers.export(exports, "withEmotionCache", ()=>(0, _emotionElementD59E098FEsmJs.w));
parcelHelpers.export(exports, "withTheme", ()=>(0, _emotionElementD59E098FEsmJs.d));
parcelHelpers.export(exports, "ClassNames", ()=>ClassNames);
parcelHelpers.export(exports, "Global", ()=>Global);
parcelHelpers.export(exports, "createElement", ()=>jsx);
parcelHelpers.export(exports, "css", ()=>css);
parcelHelpers.export(exports, "jsx", ()=>jsx);
parcelHelpers.export(exports, "keyframes", ()=>keyframes);
var _emotionElementD59E098FEsmJs = require("./emotion-element-d59e098f.esm.js");
var _react = require("react");
var _utils = require("@emotion/utils");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var _serialize = require("@emotion/serialize");
var _cache = require("@emotion/cache");
var _extends = require("@babel/runtime/helpers/extends");
var _weakMemoize = require("@emotion/weak-memoize");
var _emotionReactIsolatedHnrsEsmJs = require("../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js");
var _hoistNonReactStatics = require("hoist-non-react-statics");
var jsx = function jsx(type, props) {
    // eslint-disable-next-line prefer-rest-params
    var args = arguments;
    if (props == null || !(0, _emotionElementD59E098FEsmJs.h).call(props, 'css')) return _react.createElement.apply(undefined, args);
    var argsLength = args.length;
    var createElementArgArray = new Array(argsLength);
    createElementArgArray[0] = (0, _emotionElementD59E098FEsmJs.E);
    createElementArgArray[1] = (0, _emotionElementD59E098FEsmJs.c)(type, props);
    for(var i = 2; i < argsLength; i++)createElementArgArray[i] = args[i];
    return _react.createElement.apply(null, createElementArgArray);
};
(function(_jsx) {
    var JSX;
    JSX || (JSX = _jsx.JSX || (_jsx.JSX = {}));
})(jsx || (jsx = {}));
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag
var Global = /* #__PURE__ */ (0, _emotionElementD59E098FEsmJs.w)(function(props, cache) {
    var styles = props.styles;
    var serialized = (0, _serialize.serializeStyles)([
        styles
    ], undefined, _react.useContext((0, _emotionElementD59E098FEsmJs.T)));
    if (!(0, _emotionElementD59E098FEsmJs.i)) {
        var _ref;
        var serializedNames = serialized.name;
        var serializedStyles = serialized.styles;
        var next = serialized.next;
        while(next !== undefined){
            serializedNames += ' ' + next.name;
            serializedStyles += next.styles;
            next = next.next;
        }
        var shouldCache = cache.compat === true;
        var rules = cache.insert("", {
            name: serializedNames,
            styles: serializedStyles
        }, cache.sheet, shouldCache);
        if (shouldCache) return null;
        return /*#__PURE__*/ _react.createElement("style", (_ref = {}, _ref["data-emotion"] = cache.key + "-global " + serializedNames, _ref.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref.nonce = cache.sheet.nonce, _ref));
    } // yes, i know these hooks are used conditionally
    // but it is based on a constant that will never change at runtime
    // it's effectively like having two implementations and switching them out
    // so it's not actually breaking anything
    var sheetRef = _react.useRef();
    (0, _useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback)(function() {
        var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675
        var sheet = new cache.sheet.constructor({
            key: key,
            nonce: cache.sheet.nonce,
            container: cache.sheet.container,
            speedy: cache.sheet.isSpeedy
        });
        var rehydrating = false;
        var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
        if (cache.sheet.tags.length) sheet.before = cache.sheet.tags[0];
        if (node !== null) {
            rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s
            node.setAttribute('data-emotion', key);
            sheet.hydrate([
                node
            ]);
        }
        sheetRef.current = [
            sheet,
            rehydrating
        ];
        return function() {
            sheet.flush();
        };
    }, [
        cache
    ]);
    (0, _useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback)(function() {
        var sheetRefCurrent = sheetRef.current;
        var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
        if (rehydrating) {
            sheetRefCurrent[1] = false;
            return;
        }
        if (serialized.next !== undefined) // insert keyframes
        (0, _utils.insertStyles)(cache, serialized.next, true);
        if (sheet.tags.length) {
            // if this doesn't exist then it will be null so the style element will be appended
            var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
            sheet.before = element;
            sheet.flush();
        }
        cache.insert("", serialized, sheet, false);
    }, [
        cache,
        serialized.name
    ]);
    return null;
});
function css() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    return (0, _serialize.serializeStyles)(args);
}
function keyframes() {
    var insertable = css.apply(void 0, arguments);
    var name = "animation-" + insertable.name;
    return {
        name: name,
        styles: "@keyframes " + name + "{" + insertable.styles + "}",
        anim: 1,
        toString: function toString() {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
        }
    };
}
var classnames = function classnames(args) {
    var len = args.length;
    var i = 0;
    var cls = '';
    for(; i < len; i++){
        var arg = args[i];
        if (arg == null) continue;
        var toAdd = void 0;
        switch(typeof arg){
            case 'boolean':
                break;
            case 'object':
                if (Array.isArray(arg)) toAdd = classnames(arg);
                else {
                    toAdd = '';
                    for(var k in arg)if (arg[k] && k) {
                        toAdd && (toAdd += ' ');
                        toAdd += k;
                    }
                }
                break;
            default:
                toAdd = arg;
        }
        if (toAdd) {
            cls && (cls += ' ');
            cls += toAdd;
        }
    }
    return cls;
};
function merge(registered, css, className) {
    var registeredStyles = [];
    var rawClassName = (0, _utils.getRegisteredStyles)(registered, registeredStyles, className);
    if (registeredStyles.length < 2) return className;
    return rawClassName + css(registeredStyles);
}
var Insertion = function Insertion(_ref) {
    var cache = _ref.cache, serializedArr = _ref.serializedArr;
    var rules = (0, _useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback)(function() {
        var rules = '';
        for(var i = 0; i < serializedArr.length; i++){
            var res = (0, _utils.insertStyles)(cache, serializedArr[i], false);
            if (!(0, _emotionElementD59E098FEsmJs.i) && res !== undefined) rules += res;
        }
        if (!(0, _emotionElementD59E098FEsmJs.i)) return rules;
    });
    if (!(0, _emotionElementD59E098FEsmJs.i) && rules.length !== 0) {
        var _ref2;
        return /*#__PURE__*/ _react.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedArr.map(function(serialized) {
            return serialized.name;
        }).join(' '), _ref2.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref2.nonce = cache.sheet.nonce, _ref2));
    }
    return null;
};
var ClassNames = /* #__PURE__ */ (0, _emotionElementD59E098FEsmJs.w)(function(props, cache) {
    var hasRendered = false;
    var serializedArr = [];
    var css = function css() {
        if (hasRendered && (0, _emotionElementD59E098FEsmJs.a)) throw new Error('css can only be used during render');
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        var serialized = (0, _serialize.serializeStyles)(args, cache.registered);
        serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`
        (0, _utils.registerStyles)(cache, serialized, false);
        return cache.key + "-" + serialized.name;
    };
    var cx = function cx() {
        if (hasRendered && (0, _emotionElementD59E098FEsmJs.a)) throw new Error('cx can only be used during render');
        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
        return merge(cache.registered, css, classnames(args));
    };
    var content = {
        css: css,
        cx: cx,
        theme: _react.useContext((0, _emotionElementD59E098FEsmJs.T))
    };
    var ele = props.children(content);
    hasRendered = true;
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(Insertion, {
        cache: cache,
        serializedArr: serializedArr
    }), ele);
});

},{"./emotion-element-d59e098f.esm.js":"9DJEV","react":"jMk1U","@emotion/utils":"cQ0xH","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@emotion/serialize":"4vIHo","@emotion/cache":"4A5M2","@babel/runtime/helpers/extends":"lKa0J","@emotion/weak-memoize":"hrHkX","../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js":"d7gCT","hoist-non-react-statics":"h7WK5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9DJEV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "C", ()=>CacheProvider);
parcelHelpers.export(exports, "E", ()=>Emotion$1);
parcelHelpers.export(exports, "T", ()=>ThemeContext);
parcelHelpers.export(exports, "_", ()=>__unsafe_useEmotionCache);
parcelHelpers.export(exports, "a", ()=>isDevelopment);
parcelHelpers.export(exports, "b", ()=>ThemeProvider);
parcelHelpers.export(exports, "c", ()=>createEmotionProps);
parcelHelpers.export(exports, "d", ()=>withTheme);
parcelHelpers.export(exports, "h", ()=>hasOwn);
parcelHelpers.export(exports, "i", ()=>isBrowser);
parcelHelpers.export(exports, "u", ()=>useTheme);
parcelHelpers.export(exports, "w", ()=>withEmotionCache);
var _react = require("react");
var _cache = require("@emotion/cache");
var _cacheDefault = parcelHelpers.interopDefault(_cache);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _weakMemoize = require("@emotion/weak-memoize");
var _weakMemoizeDefault = parcelHelpers.interopDefault(_weakMemoize);
var _emotionReactIsolatedHnrsEsmJs = require("../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js");
var _emotionReactIsolatedHnrsEsmJsDefault = parcelHelpers.interopDefault(_emotionReactIsolatedHnrsEsmJs);
var _utils = require("@emotion/utils");
var _serialize = require("@emotion/serialize");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var isDevelopment = false;
var isBrowser = typeof document !== 'undefined';
var EmotionCacheContext = /* #__PURE__ */ _react.createContext(// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? /* #__PURE__ */ (0, _cacheDefault.default)({
    key: 'css'
}) : null);
var CacheProvider = EmotionCacheContext.Provider;
var __unsafe_useEmotionCache = function useEmotionCache() {
    return (0, _react.useContext)(EmotionCacheContext);
};
var withEmotionCache = function withEmotionCache(func) {
    return /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
        // the cache will never be null in the browser
        var cache = (0, _react.useContext)(EmotionCacheContext);
        return func(props, cache, ref);
    });
};
if (!isBrowser) withEmotionCache = function withEmotionCache(func) {
    return function(props) {
        var cache = (0, _react.useContext)(EmotionCacheContext);
        if (cache === null) {
            // yes, we're potentially creating this on every render
            // it doesn't actually matter though since it's only on the server
            // so there will only every be a single render
            // that could change in the future because of suspense and etc. but for now,
            // this works and i don't want to optimise for a future thing that we aren't sure about
            cache = (0, _cacheDefault.default)({
                key: 'css'
            });
            return /*#__PURE__*/ _react.createElement(EmotionCacheContext.Provider, {
                value: cache
            }, func(props, cache));
        } else return func(props, cache);
    };
};
var ThemeContext = /* #__PURE__ */ _react.createContext({});
var useTheme = function useTheme() {
    return _react.useContext(ThemeContext);
};
var getTheme = function getTheme(outerTheme, theme) {
    if (typeof theme === 'function') {
        var mergedTheme = theme(outerTheme);
        return mergedTheme;
    }
    return (0, _extendsDefault.default)({}, outerTheme, theme);
};
var createCacheWithTheme = /* #__PURE__ */ (0, _weakMemoizeDefault.default)(function(outerTheme) {
    return (0, _weakMemoizeDefault.default)(function(theme) {
        return getTheme(outerTheme, theme);
    });
});
var ThemeProvider = function ThemeProvider(props) {
    var theme = _react.useContext(ThemeContext);
    if (props.theme !== theme) theme = createCacheWithTheme(theme)(props.theme);
    return /*#__PURE__*/ _react.createElement(ThemeContext.Provider, {
        value: theme
    }, props.children);
};
function withTheme(Component) {
    var componentName = Component.displayName || Component.name || 'Component';
    var WithTheme = /*#__PURE__*/ _react.forwardRef(function render(props, ref) {
        var theme = _react.useContext(ThemeContext);
        return /*#__PURE__*/ _react.createElement(Component, (0, _extendsDefault.default)({
            theme: theme,
            ref: ref
        }, props));
    });
    WithTheme.displayName = "WithTheme(" + componentName + ")";
    return (0, _emotionReactIsolatedHnrsEsmJsDefault.default)(WithTheme, Component);
}
var hasOwn = {}.hasOwnProperty;
var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var createEmotionProps = function createEmotionProps(type, props) {
    var newProps = {};
    for(var _key in props)if (hasOwn.call(props, _key)) newProps[_key] = props[_key];
    newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:
    return newProps;
};
var Insertion = function Insertion(_ref) {
    var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;
    (0, _utils.registerStyles)(cache, serialized, isStringTag);
    var rules = (0, _useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback)(function() {
        return (0, _utils.insertStyles)(cache, serialized, isStringTag);
    });
    if (!isBrowser && rules !== undefined) {
        var _ref2;
        var serializedNames = serialized.name;
        var next = serialized.next;
        while(next !== undefined){
            serializedNames += ' ' + next.name;
            next = next.next;
        }
        return /*#__PURE__*/ _react.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref2.nonce = cache.sheet.nonce, _ref2));
    }
    return null;
};
var Emotion = /* #__PURE__ */ withEmotionCache(function(props, cache, ref) {
    var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
    // not passing the registered cache to serializeStyles because it would
    // make certain babel optimisations not possible
    if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) cssProp = cache.registered[cssProp];
    var WrappedComponent = props[typePropName];
    var registeredStyles = [
        cssProp
    ];
    var className = '';
    if (typeof props.className === 'string') className = (0, _utils.getRegisteredStyles)(cache.registered, registeredStyles, props.className);
    else if (props.className != null) className = props.className + " ";
    var serialized = (0, _serialize.serializeStyles)(registeredStyles, undefined, _react.useContext(ThemeContext));
    className += cache.key + "-" + serialized.name;
    var newProps = {};
    for(var _key2 in props)if (hasOwn.call(props, _key2) && _key2 !== 'css' && _key2 !== typePropName && !isDevelopment) newProps[_key2] = props[_key2];
    newProps.className = className;
    if (ref) newProps.ref = ref;
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(Insertion, {
        cache: cache,
        serialized: serialized,
        isStringTag: typeof WrappedComponent === 'string'
    }), /*#__PURE__*/ _react.createElement(WrappedComponent, newProps));
});
var Emotion$1 = Emotion;

},{"react":"jMk1U","@emotion/cache":"4A5M2","@babel/runtime/helpers/esm/extends":"20my9","@emotion/weak-memoize":"hrHkX","../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js":"d7gCT","@emotion/utils":"cQ0xH","@emotion/serialize":"4vIHo","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4A5M2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createCache);
var _sheet = require("@emotion/sheet");
var _stylis = require("stylis");
var _weakMemoize = require("@emotion/weak-memoize");
var _weakMemoizeDefault = parcelHelpers.interopDefault(_weakMemoize);
var _memoize = require("@emotion/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
var isBrowser = typeof document !== 'undefined';
var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
    var previous = 0;
    var character = 0;
    while(true){
        previous = character;
        character = (0, _stylis.peek)(); // &\f
        if (previous === 38 && character === 12) points[index] = 1;
        if ((0, _stylis.token)(character)) break;
        (0, _stylis.next)();
    }
    return (0, _stylis.slice)(begin, (0, _stylis.position));
};
var toRules = function toRules(parsed, points) {
    // pretend we've started with a comma
    var index = -1;
    var character = 44;
    do switch((0, _stylis.token)(character)){
        case 0:
            // &\f
            if (character === 38 && (0, _stylis.peek)() === 12) // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
            // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
            // and when it should just concatenate the outer and inner selectors
            // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
            points[index] = 1;
            parsed[index] += identifierWithPointTracking((0, _stylis.position) - 1, points, index);
            break;
        case 2:
            parsed[index] += (0, _stylis.delimit)(character);
            break;
        case 4:
            // comma
            if (character === 44) {
                // colon
                parsed[++index] = (0, _stylis.peek)() === 58 ? '&\f' : '';
                points[index] = parsed[index].length;
                break;
            }
        // fallthrough
        default:
            parsed[index] += (0, _stylis.from)(character);
    }
    while (character = (0, _stylis.next)());
    return parsed;
};
var getRules = function getRules(value, points) {
    return (0, _stylis.dealloc)(toRules((0, _stylis.alloc)(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11
var fixedElements = /* #__PURE__ */ new WeakMap();
var compat = function compat(element) {
    if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo
    // negative .length indicates that this rule has been already prefixed
    element.length < 1) return;
    var value = element.value;
    var parent = element.parent;
    var isImplicitRule = element.column === parent.column && element.line === parent.line;
    while(parent.type !== 'rule'){
        parent = parent.parent;
        if (!parent) return;
    } // short-circuit for the simplest case
    if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) return;
     // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
    // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"
    if (isImplicitRule) return;
    fixedElements.set(element, true);
    var points = [];
    var rules = getRules(value, points);
    var parentRules = parent.props;
    for(var i = 0, k = 0; i < rules.length; i++)for(var j = 0; j < parentRules.length; j++, k++)element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
};
var removeLabel = function removeLabel(element) {
    if (element.type === 'decl') {
        var value = element.value;
        if (value.charCodeAt(0) === 108 && // charcode for b
        value.charCodeAt(2) === 98) {
            // this ignores label
            element["return"] = '';
            element.value = '';
        }
    }
};
/* eslint-disable no-fallthrough */ function prefix(value, length) {
    switch((0, _stylis.hash)(value, length)){
        // color-adjust
        case 5103:
            return (0, _stylis.WEBKIT) + 'print-' + value + value;
        // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
        case 5737:
        case 4201:
        case 3177:
        case 3433:
        case 1641:
        case 4457:
        case 2921:
        case 5572:
        case 6356:
        case 5844:
        case 3191:
        case 6645:
        case 3005:
        case 6391:
        case 5879:
        case 5623:
        case 6135:
        case 4599:
        case 4855:
        case 4215:
        case 6389:
        case 5109:
        case 5365:
        case 5621:
        case 3829:
            return (0, _stylis.WEBKIT) + value + value;
        // appearance, user-select, transform, hyphens, text-size-adjust
        case 5349:
        case 4246:
        case 4810:
        case 6968:
        case 2756:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MOZ) + value + (0, _stylis.MS) + value + value;
        // flex, flex-direction
        case 6828:
        case 4268:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + value + value;
        // order
        case 6165:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-' + value + value;
        // align-items
        case 5187:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.replace)(value, /(\w+).+(:[^]+)/, (0, _stylis.WEBKIT) + 'box-$1$2' + (0, _stylis.MS) + 'flex-$1$2') + value;
        // align-self
        case 5443:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-item-' + (0, _stylis.replace)(value, /flex-|-self/, '') + value;
        // align-content
        case 4675:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-line-pack' + (0, _stylis.replace)(value, /align-content|flex-|-self/, '') + value;
        // flex-shrink
        case 5548:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'shrink', 'negative') + value;
        // flex-basis
        case 5292:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'basis', 'preferred-size') + value;
        // flex-grow
        case 6060:
            return (0, _stylis.WEBKIT) + 'box-' + (0, _stylis.replace)(value, '-grow', '') + (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'grow', 'positive') + value;
        // transition
        case 4554:
            return (0, _stylis.WEBKIT) + (0, _stylis.replace)(value, /([^-])(transform)/g, '$1' + (0, _stylis.WEBKIT) + '$2') + value;
        // cursor
        case 6187:
            return (0, _stylis.replace)((0, _stylis.replace)((0, _stylis.replace)(value, /(zoom-|grab)/, (0, _stylis.WEBKIT) + '$1'), /(image-set)/, (0, _stylis.WEBKIT) + '$1'), value, '') + value;
        // background, background-image
        case 5495:
        case 3959:
            return (0, _stylis.replace)(value, /(image-set\([^]*)/, (0, _stylis.WEBKIT) + '$1' + '$`$1');
        // justify-content
        case 4968:
            return (0, _stylis.replace)((0, _stylis.replace)(value, /(.+:)(flex-)?(.*)/, (0, _stylis.WEBKIT) + 'box-pack:$3' + (0, _stylis.MS) + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + (0, _stylis.WEBKIT) + value + value;
        // (margin|padding)-inline-(start|end)
        case 4095:
        case 3583:
        case 4068:
        case 2532:
            return (0, _stylis.replace)(value, /(.+)-inline(.+)/, (0, _stylis.WEBKIT) + '$1$2') + value;
        // (min|max)?(width|height|inline-size|block-size)
        case 8116:
        case 7059:
        case 5753:
        case 5535:
        case 5445:
        case 5701:
        case 4933:
        case 4677:
        case 5533:
        case 5789:
        case 5021:
        case 4765:
            // stretch, max-content, min-content, fill-available
            if ((0, _stylis.strlen)(value) - 1 - length > 6) switch((0, _stylis.charat)(value, length + 1)){
                // (m)ax-content, (m)in-content
                case 109:
                    // -
                    if ((0, _stylis.charat)(value, length + 4) !== 45) break;
                // (f)ill-available, (f)it-content
                case 102:
                    return (0, _stylis.replace)(value, /(.+:)(.+)-([^]+)/, '$1' + (0, _stylis.WEBKIT) + '$2-$3' + '$1' + (0, _stylis.MOZ) + ((0, _stylis.charat)(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
                // (s)tretch
                case 115:
                    return ~(0, _stylis.indexof)(value, 'stretch') ? prefix((0, _stylis.replace)(value, 'stretch', 'fill-available'), length) + value : value;
            }
            break;
        // position: sticky
        case 4949:
            // (s)ticky?
            if ((0, _stylis.charat)(value, length + 1) !== 115) break;
        // display: (flex|inline-flex)
        case 6444:
            switch((0, _stylis.charat)(value, (0, _stylis.strlen)(value) - 3 - (~(0, _stylis.indexof)(value, '!important') && 10))){
                // stic(k)y
                case 107:
                    return (0, _stylis.replace)(value, ':', ':' + (0, _stylis.WEBKIT)) + value;
                // (inline-)?fl(e)x
                case 101:
                    return (0, _stylis.replace)(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + (0, _stylis.WEBKIT) + ((0, _stylis.charat)(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + (0, _stylis.WEBKIT) + '$2$3' + '$1' + (0, _stylis.MS) + '$2box$3') + value;
            }
            break;
        // writing-mode
        case 5936:
            switch((0, _stylis.charat)(value, length + 11)){
                // vertical-l(r)
                case 114:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
                // vertical-r(l)
                case 108:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
                // horizontal(-)tb
                case 45:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
            }
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + value + value;
    }
    return value;
}
var prefixer = function prefixer(element, index, children, callback) {
    if (element.length > -1) {
        if (!element["return"]) switch(element.type){
            case 0, _stylis.DECLARATION:
                element["return"] = prefix(element.value, element.length);
                break;
            case 0, _stylis.KEYFRAMES:
                return (0, _stylis.serialize)([
                    (0, _stylis.copy)(element, {
                        value: (0, _stylis.replace)(element.value, '@', '@' + (0, _stylis.WEBKIT))
                    })
                ], callback);
            case 0, _stylis.RULESET:
                if (element.length) return (0, _stylis.combine)(element.props, function(value) {
                    switch((0, _stylis.match)(value, /(::plac\w+|:read-\w+)/)){
                        // :read-(only|write)
                        case ':read-only':
                        case ':read-write':
                            return (0, _stylis.serialize)([
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(read-\w+)/, ':' + (0, _stylis.MOZ) + '$1')
                                    ]
                                })
                            ], callback);
                        // :placeholder
                        case '::placeholder':
                            return (0, _stylis.serialize)([
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, ':' + (0, _stylis.WEBKIT) + 'input-$1')
                                    ]
                                }),
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, ':' + (0, _stylis.MOZ) + '$1')
                                    ]
                                }),
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, (0, _stylis.MS) + 'input-$1')
                                    ]
                                })
                            ], callback);
                    }
                    return '';
                });
        }
    }
};
var getServerStylisCache = isBrowser ? undefined : (0, _weakMemoizeDefault.default)(function() {
    return (0, _memoizeDefault.default)(function() {
        return {};
    });
});
var defaultStylisPlugins = [
    prefixer
];
var createCache = function createCache(options) {
    var key = options.key;
    if (isBrowser && key === 'css') {
        var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
        // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
        // note this very very intentionally targets all style elements regardless of the key to ensure
        // that creating a cache works inside of render of a React component
        Array.prototype.forEach.call(ssrStyles, function(node) {
            // we want to only move elements which have a space in the data-emotion attribute value
            // because that indicates that it is an Emotion 11 server-side rendered style elements
            // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
            // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
            // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
            // will not result in the Emotion 10 styles being destroyed
            var dataEmotionAttribute = node.getAttribute('data-emotion');
            if (dataEmotionAttribute.indexOf(' ') === -1) return;
            document.head.appendChild(node);
            node.setAttribute('data-s', '');
        });
    }
    var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
    var inserted = {};
    var container;
    var nodesToHydrate = [];
    if (isBrowser) {
        container = options.container || document.head;
        Array.prototype.forEach.call(// means that the style elements we're looking at are only Emotion 11 server-rendered style elements
        document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function(node) {
            var attrib = node.getAttribute("data-emotion").split(' ');
            for(var i = 1; i < attrib.length; i++)inserted[attrib[i]] = true;
            nodesToHydrate.push(node);
        });
    }
    var _insert;
    var omnipresentPlugins = [
        compat,
        removeLabel
    ];
    if (!getServerStylisCache) {
        var currentSheet;
        var finalizingPlugins = [
            (0, _stylis.stringify),
            (0, _stylis.rulesheet)(function(rule) {
                currentSheet.insert(rule);
            })
        ];
        var serializer = (0, _stylis.middleware)(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
        var stylis = function stylis(styles) {
            return (0, _stylis.serialize)((0, _stylis.compile)(styles), serializer);
        };
        _insert = function insert(selector, serialized, sheet, shouldCache) {
            currentSheet = sheet;
            stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
            if (shouldCache) cache.inserted[serialized.name] = true;
        };
    } else {
        var _finalizingPlugins = [
            (0, _stylis.stringify)
        ];
        var _serializer = (0, _stylis.middleware)(omnipresentPlugins.concat(stylisPlugins, _finalizingPlugins));
        var _stylis1 = function _stylis1(styles) {
            return (0, _stylis.serialize)((0, _stylis.compile)(styles), _serializer);
        };
        var serverStylisCache = getServerStylisCache(stylisPlugins)(key);
        var getRules = function getRules(selector, serialized) {
            var name = serialized.name;
            if (serverStylisCache[name] === undefined) serverStylisCache[name] = _stylis1(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
            return serverStylisCache[name];
        };
        _insert = function _insert(selector, serialized, sheet, shouldCache) {
            var name = serialized.name;
            var rules = getRules(selector, serialized);
            if (cache.compat === undefined) {
                // in regular mode, we don't set the styles on the inserted cache
                // since we don't need to and that would be wasting memory
                // we return them so that they are rendered in a style tag
                if (shouldCache) cache.inserted[name] = true;
                return rules;
            } else {
                // in compat mode, we put the styles on the inserted cache so
                // that emotion-server can pull out the styles
                // except when we don't want to cache it which was in Global but now
                // is nowhere but we don't want to do a major right now
                // and just in case we're going to leave the case here
                // it's also not affecting client side bundle size
                // so it's really not a big deal
                if (shouldCache) cache.inserted[name] = rules;
                else return rules;
            }
        };
    }
    var cache = {
        key: key,
        sheet: new (0, _sheet.StyleSheet)({
            key: key,
            container: container,
            nonce: options.nonce,
            speedy: options.speedy,
            prepend: options.prepend,
            insertionPoint: options.insertionPoint
        }),
        nonce: options.nonce,
        inserted: inserted,
        registered: {},
        insert: _insert
    };
    cache.sheet.hydrate(nodesToHydrate);
    return cache;
};

},{"@emotion/sheet":"5xfHB","stylis":"jLaPU","@emotion/weak-memoize":"hrHkX","@emotion/memoize":"a2LeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5xfHB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleSheet", ()=>StyleSheet);
var isDevelopment = false;
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/ function sheetForTag(tag) {
    if (tag.sheet) return tag.sheet;
     // this weirdness brought to you by firefox
    /* istanbul ignore next */ for(var i = 0; i < document.styleSheets.length; i++){
        if (document.styleSheets[i].ownerNode === tag) return document.styleSheets[i];
    } // this function should always return with a value
    // TS can't understand it though so we make it stop complaining here
    return undefined;
}
function createStyleElement(options) {
    var tag = document.createElement('style');
    tag.setAttribute('data-emotion', options.key);
    if (options.nonce !== undefined) tag.setAttribute('nonce', options.nonce);
    tag.appendChild(document.createTextNode(''));
    tag.setAttribute('data-s', '');
    return tag;
}
var StyleSheet = /*#__PURE__*/ function() {
    // Using Node instead of HTMLElement since container may be a ShadowRoot
    function StyleSheet(options) {
        var _this = this;
        this._insertTag = function(tag) {
            var before;
            if (_this.tags.length === 0) {
                if (_this.insertionPoint) before = _this.insertionPoint.nextSibling;
                else if (_this.prepend) before = _this.container.firstChild;
                else before = _this.before;
            } else before = _this.tags[_this.tags.length - 1].nextSibling;
            _this.container.insertBefore(tag, before);
            _this.tags.push(tag);
        };
        this.isSpeedy = options.speedy === undefined ? !isDevelopment : options.speedy;
        this.tags = [];
        this.ctr = 0;
        this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets
        this.key = options.key;
        this.container = options.container;
        this.prepend = options.prepend;
        this.insertionPoint = options.insertionPoint;
        this.before = null;
    }
    var _proto = StyleSheet.prototype;
    _proto.hydrate = function hydrate(nodes) {
        nodes.forEach(this._insertTag);
    };
    _proto.insert = function insert(rule) {
        // the max length is how many rules we have per style tag, it's 65000 in speedy mode
        // it's 1 in dev because we insert source maps that map a single rule to a location
        // and you can only have one source map per style tag
        if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) this._insertTag(createStyleElement(this));
        var tag = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
            var sheet = sheetForTag(tag);
            try {
                // this is the ultrafast version, works across browsers
                // the big drawback is that the css won't be editable in devtools
                sheet.insertRule(rule, sheet.cssRules.length);
            } catch (e) {}
        } else tag.appendChild(document.createTextNode(rule));
        this.ctr++;
    };
    _proto.flush = function flush() {
        this.tags.forEach(function(tag) {
            var _tag$parentNode;
            return (_tag$parentNode = tag.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag);
        });
        this.tags = [];
        this.ctr = 0;
    };
    return StyleSheet;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jLaPU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CHARSET", ()=>f);
parcelHelpers.export(exports, "COMMENT", ()=>n);
parcelHelpers.export(exports, "COUNTER_STYLE", ()=>w);
parcelHelpers.export(exports, "DECLARATION", ()=>s);
parcelHelpers.export(exports, "DOCUMENT", ()=>v);
parcelHelpers.export(exports, "FONT_FACE", ()=>b);
parcelHelpers.export(exports, "FONT_FEATURE_VALUES", ()=>d);
parcelHelpers.export(exports, "IMPORT", ()=>i);
parcelHelpers.export(exports, "KEYFRAMES", ()=>h);
parcelHelpers.export(exports, "LAYER", ()=>$);
parcelHelpers.export(exports, "MEDIA", ()=>u);
parcelHelpers.export(exports, "MOZ", ()=>r);
parcelHelpers.export(exports, "MS", ()=>e);
parcelHelpers.export(exports, "NAMESPACE", ()=>p);
parcelHelpers.export(exports, "PAGE", ()=>t);
parcelHelpers.export(exports, "RULESET", ()=>c);
parcelHelpers.export(exports, "SUPPORTS", ()=>l);
parcelHelpers.export(exports, "VIEWPORT", ()=>o);
parcelHelpers.export(exports, "WEBKIT", ()=>a);
parcelHelpers.export(exports, "abs", ()=>g);
parcelHelpers.export(exports, "alloc", ()=>V);
parcelHelpers.export(exports, "append", ()=>q);
parcelHelpers.export(exports, "assign", ()=>m);
parcelHelpers.export(exports, "caret", ()=>R);
parcelHelpers.export(exports, "char", ()=>L);
parcelHelpers.export(exports, "character", ()=>H);
parcelHelpers.export(exports, "characters", ()=>I);
parcelHelpers.export(exports, "charat", ()=>O);
parcelHelpers.export(exports, "column", ()=>E);
parcelHelpers.export(exports, "combine", ()=>B);
parcelHelpers.export(exports, "comment", ()=>ue);
parcelHelpers.export(exports, "commenter", ()=>ae);
parcelHelpers.export(exports, "compile", ()=>ce);
parcelHelpers.export(exports, "copy", ()=>K);
parcelHelpers.export(exports, "dealloc", ()=>W);
parcelHelpers.export(exports, "declaration", ()=>ie);
parcelHelpers.export(exports, "delimit", ()=>X);
parcelHelpers.export(exports, "delimiter", ()=>re);
parcelHelpers.export(exports, "escaping", ()=>ee);
parcelHelpers.export(exports, "from", ()=>k);
parcelHelpers.export(exports, "hash", ()=>x);
parcelHelpers.export(exports, "identifier", ()=>ne);
parcelHelpers.export(exports, "indexof", ()=>C);
parcelHelpers.export(exports, "length", ()=>F);
parcelHelpers.export(exports, "line", ()=>D);
parcelHelpers.export(exports, "match", ()=>j);
parcelHelpers.export(exports, "middleware", ()=>ve);
parcelHelpers.export(exports, "namespace", ()=>be);
parcelHelpers.export(exports, "next", ()=>P);
parcelHelpers.export(exports, "node", ()=>J);
parcelHelpers.export(exports, "parse", ()=>se);
parcelHelpers.export(exports, "peek", ()=>Q);
parcelHelpers.export(exports, "position", ()=>G);
parcelHelpers.export(exports, "prefix", ()=>fe);
parcelHelpers.export(exports, "prefixer", ()=>he);
parcelHelpers.export(exports, "prev", ()=>N);
parcelHelpers.export(exports, "replace", ()=>z);
parcelHelpers.export(exports, "ruleset", ()=>te);
parcelHelpers.export(exports, "rulesheet", ()=>pe);
parcelHelpers.export(exports, "serialize", ()=>oe);
parcelHelpers.export(exports, "sizeof", ()=>S);
parcelHelpers.export(exports, "slice", ()=>T);
parcelHelpers.export(exports, "stringify", ()=>le);
parcelHelpers.export(exports, "strlen", ()=>M);
parcelHelpers.export(exports, "substr", ()=>A);
parcelHelpers.export(exports, "token", ()=>U);
parcelHelpers.export(exports, "tokenize", ()=>Y);
parcelHelpers.export(exports, "tokenizer", ()=>_);
parcelHelpers.export(exports, "trim", ()=>y);
parcelHelpers.export(exports, "whitespace", ()=>Z);
var e = "-ms-";
var r = "-moz-";
var a = "-webkit-";
var n = "comm";
var c = "rule";
var s = "decl";
var t = "@page";
var u = "@media";
var i = "@import";
var f = "@charset";
var o = "@viewport";
var l = "@supports";
var v = "@document";
var p = "@namespace";
var h = "@keyframes";
var b = "@font-face";
var w = "@counter-style";
var d = "@font-feature-values";
var $ = "@layer";
var g = Math.abs;
var k = String.fromCharCode;
var m = Object.assign;
function x(e, r) {
    return O(e, 0) ^ 45 ? (((r << 2 ^ O(e, 0)) << 2 ^ O(e, 1)) << 2 ^ O(e, 2)) << 2 ^ O(e, 3) : 0;
}
function y(e) {
    return e.trim();
}
function j(e, r) {
    return (e = r.exec(e)) ? e[0] : e;
}
function z(e, r, a) {
    return e.replace(r, a);
}
function C(e, r) {
    return e.indexOf(r);
}
function O(e, r) {
    return e.charCodeAt(r) | 0;
}
function A(e, r, a) {
    return e.slice(r, a);
}
function M(e) {
    return e.length;
}
function S(e) {
    return e.length;
}
function q(e, r) {
    return r.push(e), e;
}
function B(e, r) {
    return e.map(r).join("");
}
var D = 1;
var E = 1;
var F = 0;
var G = 0;
var H = 0;
var I = "";
function J(e, r, a, n, c, s, t) {
    return {
        value: e,
        root: r,
        parent: a,
        type: n,
        props: c,
        children: s,
        line: D,
        column: E,
        length: t,
        return: ""
    };
}
function K(e, r) {
    return m(J("", null, null, "", null, null, 0), e, {
        length: -e.length
    }, r);
}
function L() {
    return H;
}
function N() {
    H = G > 0 ? O(I, --G) : 0;
    if (E--, H === 10) E = 1, D--;
    return H;
}
function P() {
    H = G < F ? O(I, G++) : 0;
    if (E++, H === 10) E = 1, D++;
    return H;
}
function Q() {
    return O(I, G);
}
function R() {
    return G;
}
function T(e, r) {
    return A(I, e, r);
}
function U(e) {
    switch(e){
        case 0:
        case 9:
        case 10:
        case 13:
        case 32:
            return 5;
        case 33:
        case 43:
        case 44:
        case 47:
        case 62:
        case 64:
        case 126:
        case 59:
        case 123:
        case 125:
            return 4;
        case 58:
            return 3;
        case 34:
        case 39:
        case 40:
        case 91:
            return 2;
        case 41:
        case 93:
            return 1;
    }
    return 0;
}
function V(e) {
    return D = E = 1, F = M(I = e), G = 0, [];
}
function W(e) {
    return I = "", e;
}
function X(e) {
    return y(T(G - 1, re(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Y(e) {
    return W(_(V(e)));
}
function Z(e) {
    while(H = Q())if (H < 33) P();
    else break;
    return U(e) > 2 || U(H) > 3 ? "" : " ";
}
function _(e) {
    while(P())switch(U(H)){
        case 0:
            q(ne(G - 1), e);
            break;
        case 2:
            q(X(H), e);
            break;
        default:
            q(k(H), e);
    }
    return e;
}
function ee(e, r) {
    while(--r && P())if (H < 48 || H > 102 || H > 57 && H < 65 || H > 70 && H < 97) break;
    return T(e, R() + (r < 6 && Q() == 32 && P() == 32));
}
function re(e) {
    while(P())switch(H){
        case e:
            return G;
        case 34:
        case 39:
            if (e !== 34 && e !== 39) re(H);
            break;
        case 40:
            if (e === 41) re(e);
            break;
        case 92:
            P();
            break;
    }
    return G;
}
function ae(e, r) {
    while(P())if (e + H === 57) break;
    else if (e + H === 84 && Q() === 47) break;
    return "/*" + T(r, G - 1) + "*" + k(e === 47 ? e : P());
}
function ne(e) {
    while(!U(Q()))P();
    return T(e, G);
}
function ce(e) {
    return W(se("", null, null, null, [
        ""
    ], e = V(e), 0, [
        0
    ], e));
}
function se(e, r, a, n, c, s, t, u, i) {
    var f = 0;
    var o = 0;
    var l = t;
    var v = 0;
    var p = 0;
    var h = 0;
    var b = 1;
    var w = 1;
    var d = 1;
    var $ = 0;
    var g = "";
    var m = c;
    var x = s;
    var y = n;
    var j = g;
    while(w)switch(h = $, $ = P()){
        case 40:
            if (h != 108 && O(j, l - 1) == 58) {
                if (C(j += z(X($), "&", "&\f"), "&\f") != -1) d = -1;
                break;
            }
        case 34:
        case 39:
        case 91:
            j += X($);
            break;
        case 9:
        case 10:
        case 13:
        case 32:
            j += Z(h);
            break;
        case 92:
            j += ee(R() - 1, 7);
            continue;
        case 47:
            switch(Q()){
                case 42:
                case 47:
                    q(ue(ae(P(), R()), r, a), i);
                    break;
                default:
                    j += "/";
            }
            break;
        case 123 * b:
            u[f++] = M(j) * d;
        case 125 * b:
        case 59:
        case 0:
            switch($){
                case 0:
                case 125:
                    w = 0;
                case 59 + o:
                    if (d == -1) j = z(j, /\f/g, "");
                    if (p > 0 && M(j) - l) q(p > 32 ? ie(j + ";", n, a, l - 1) : ie(z(j, " ", "") + ";", n, a, l - 2), i);
                    break;
                case 59:
                    j += ";";
                default:
                    q(y = te(j, r, a, f, o, c, u, g, m = [], x = [], l), s);
                    if ($ === 123) {
                        if (o === 0) se(j, r, y, y, m, s, l, u, x);
                        else switch(v === 99 && O(j, 3) === 110 ? 100 : v){
                            case 100:
                            case 108:
                            case 109:
                            case 115:
                                se(e, y, y, n && q(te(e, y, y, 0, 0, c, u, g, c, m = [], l), x), c, x, l, u, n ? m : x);
                                break;
                            default:
                                se(j, y, y, y, [
                                    ""
                                ], x, 0, u, x);
                        }
                    }
            }
            f = o = p = 0, b = d = 1, g = j = "", l = t;
            break;
        case 58:
            l = 1 + M(j), p = h;
        default:
            if (b < 1) {
                if ($ == 123) --b;
                else if ($ == 125 && b++ == 0 && N() == 125) continue;
            }
            switch(j += k($), $ * b){
                case 38:
                    d = o > 0 ? 1 : (j += "\f", -1);
                    break;
                case 44:
                    u[f++] = (M(j) - 1) * d, d = 1;
                    break;
                case 64:
                    if (Q() === 45) j += X(P());
                    v = Q(), o = l = M(g = j += ne(R())), $++;
                    break;
                case 45:
                    if (h === 45 && M(j) == 2) b = 0;
            }
    }
    return s;
}
function te(e, r, a, n, s, t, u, i, f, o, l) {
    var v = s - 1;
    var p = s === 0 ? t : [
        ""
    ];
    var h = S(p);
    for(var b = 0, w = 0, d = 0; b < n; ++b)for(var $ = 0, k = A(e, v + 1, v = g(w = u[b])), m = e; $ < h; ++$)if (m = y(w > 0 ? p[$] + " " + k : z(k, /&\f/g, p[$]))) f[d++] = m;
    return J(e, r, a, s === 0 ? c : i, f, o, l);
}
function ue(e, r, a) {
    return J(e, r, a, n, k(L()), A(e, 2, -2), 0);
}
function ie(e, r, a, n) {
    return J(e, r, a, s, A(e, 0, n), A(e, n + 1, -1), n);
}
function fe(n, c, s) {
    switch(x(n, c)){
        case 5103:
            return a + "print-" + n + n;
        case 5737:
        case 4201:
        case 3177:
        case 3433:
        case 1641:
        case 4457:
        case 2921:
        case 5572:
        case 6356:
        case 5844:
        case 3191:
        case 6645:
        case 3005:
        case 6391:
        case 5879:
        case 5623:
        case 6135:
        case 4599:
        case 4855:
        case 4215:
        case 6389:
        case 5109:
        case 5365:
        case 5621:
        case 3829:
            return a + n + n;
        case 4789:
            return r + n + n;
        case 5349:
        case 4246:
        case 4810:
        case 6968:
        case 2756:
            return a + n + r + n + e + n + n;
        case 5936:
            switch(O(n, c + 11)){
                case 114:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "tb") + n;
                case 108:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "tb-rl") + n;
                case 45:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "lr") + n;
            }
        case 6828:
        case 4268:
        case 2903:
            return a + n + e + n + n;
        case 6165:
            return a + n + e + "flex-" + n + n;
        case 5187:
            return a + n + z(n, /(\w+).+(:[^]+)/, a + "box-$1$2" + e + "flex-$1$2") + n;
        case 5443:
            return a + n + e + "flex-item-" + z(n, /flex-|-self/g, "") + (!j(n, /flex-|baseline/) ? e + "grid-row-" + z(n, /flex-|-self/g, "") : "") + n;
        case 4675:
            return a + n + e + "flex-line-pack" + z(n, /align-content|flex-|-self/g, "") + n;
        case 5548:
            return a + n + e + z(n, "shrink", "negative") + n;
        case 5292:
            return a + n + e + z(n, "basis", "preferred-size") + n;
        case 6060:
            return a + "box-" + z(n, "-grow", "") + a + n + e + z(n, "grow", "positive") + n;
        case 4554:
            return a + z(n, /([^-])(transform)/g, "$1" + a + "$2") + n;
        case 6187:
            return z(z(z(n, /(zoom-|grab)/, a + "$1"), /(image-set)/, a + "$1"), n, "") + n;
        case 5495:
        case 3959:
            return z(n, /(image-set\([^]*)/, a + "$1" + "$`$1");
        case 4968:
            return z(z(n, /(.+:)(flex-)?(.*)/, a + "box-pack:$3" + e + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + a + n + n;
        case 4200:
            if (!j(n, /flex-|baseline/)) return e + "grid-column-align" + A(n, c) + n;
            break;
        case 2592:
        case 3360:
            return e + z(n, "template-", "") + n;
        case 4384:
        case 3616:
            if (s && s.some(function(e, r) {
                return c = r, j(e.props, /grid-\w+-end/);
            })) return ~C(n + (s = s[c].value), "span") ? n : e + z(n, "-start", "") + n + e + "grid-row-span:" + (~C(s, "span") ? j(s, /\d+/) : +j(s, /\d+/) - +j(n, /\d+/)) + ";";
            return e + z(n, "-start", "") + n;
        case 4896:
        case 4128:
            return s && s.some(function(e) {
                return j(e.props, /grid-\w+-start/);
            }) ? n : e + z(z(n, "-end", "-span"), "span ", "") + n;
        case 4095:
        case 3583:
        case 4068:
        case 2532:
            return z(n, /(.+)-inline(.+)/, a + "$1$2") + n;
        case 8116:
        case 7059:
        case 5753:
        case 5535:
        case 5445:
        case 5701:
        case 4933:
        case 4677:
        case 5533:
        case 5789:
        case 5021:
        case 4765:
            if (M(n) - 1 - c > 6) switch(O(n, c + 1)){
                case 109:
                    if (O(n, c + 4) !== 45) break;
                case 102:
                    return z(n, /(.+:)(.+)-([^]+)/, "$1" + a + "$2-$3" + "$1" + r + (O(n, c + 3) == 108 ? "$3" : "$2-$3")) + n;
                case 115:
                    return ~C(n, "stretch") ? fe(z(n, "stretch", "fill-available"), c, s) + n : n;
            }
            break;
        case 5152:
        case 5920:
            return z(n, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function(r, a, c, s, t, u, i) {
                return e + a + ":" + c + i + (s ? e + a + "-span:" + (t ? u : +u - +c) + i : "") + n;
            });
        case 4949:
            if (O(n, c + 6) === 121) return z(n, ":", ":" + a) + n;
            break;
        case 6444:
            switch(O(n, O(n, 14) === 45 ? 18 : 11)){
                case 120:
                    return z(n, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, "$1" + a + (O(n, 14) === 45 ? "inline-" : "") + "box$3" + "$1" + a + "$2$3" + "$1" + e + "$2box$3") + n;
                case 100:
                    return z(n, ":", ":" + e) + n;
            }
            break;
        case 5719:
        case 2647:
        case 2135:
        case 3927:
        case 2391:
            return z(n, "scroll-", "scroll-snap-") + n;
    }
    return n;
}
function oe(e, r) {
    var a = "";
    var n = S(e);
    for(var c = 0; c < n; c++)a += r(e[c], c, e, r) || "";
    return a;
}
function le(e, r, a, t) {
    switch(e.type){
        case $:
            if (e.children.length) break;
        case i:
        case s:
            return e.return = e.return || e.value;
        case n:
            return "";
        case h:
            return e.return = e.value + "{" + oe(e.children, t) + "}";
        case c:
            e.value = e.props.join(",");
    }
    return M(a = oe(e.children, t)) ? e.return = e.value + "{" + a + "}" : "";
}
function ve(e) {
    var r = S(e);
    return function(a, n, c, s) {
        var t = "";
        for(var u = 0; u < r; u++)t += e[u](a, n, c, s) || "";
        return t;
    };
}
function pe(e) {
    return function(r) {
        if (!r.root) {
            if (r = r.return) e(r);
        }
    };
}
function he(n, t, u, i) {
    if (n.length > -1) {
        if (!n.return) switch(n.type){
            case s:
                n.return = fe(n.value, n.length, u);
                return;
            case h:
                return oe([
                    K(n, {
                        value: z(n.value, "@", "@" + a)
                    })
                ], i);
            case c:
                if (n.length) return B(n.props, function(c) {
                    switch(j(c, /(::plac\w+|:read-\w+)/)){
                        case ":read-only":
                        case ":read-write":
                            return oe([
                                K(n, {
                                    props: [
                                        z(c, /:(read-\w+)/, ":" + r + "$1")
                                    ]
                                })
                            ], i);
                        case "::placeholder":
                            return oe([
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, ":" + a + "input-$1")
                                    ]
                                }),
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, ":" + r + "$1")
                                    ]
                                }),
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, e + "input-$1")
                                    ]
                                })
                            ], i);
                    }
                    return "";
                });
        }
    }
}
function be(e) {
    switch(e.type){
        case c:
            e.props = e.props.map(function(r) {
                return B(Y(r), function(r, a, n) {
                    switch(O(r, 0)){
                        case 12:
                            return A(r, 1, M(r));
                        case 0:
                        case 40:
                        case 43:
                        case 62:
                        case 126:
                            return r;
                        case 58:
                            if (n[++a] === "global") n[a] = "", n[++a] = "\f" + A(n[a], a = 1, -1);
                        case 32:
                            return a === 1 ? "" : r;
                        default:
                            switch(a){
                                case 0:
                                    e = r;
                                    return S(n) > 1 ? "" : r;
                                case a = S(n) - 1:
                                case 2:
                                    return a === 2 ? r + e + e : r + e;
                                default:
                                    return r;
                            }
                    }
                });
            });
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrHkX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>weakMemoize);
var weakMemoize = function weakMemoize(func) {
    var cache = new WeakMap();
    return function(arg) {
        if (cache.has(arg)) // Use non-null assertion because we just checked that the cache `has` it
        // This allows us to remove `undefined` from the return value
        return cache.get(arg);
        var ret = func(arg);
        cache.set(arg, ret);
        return ret;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a2LeB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>memoize);
function memoize(fn) {
    var cache = Object.create(null);
    return function(arg) {
        if (cache[arg] === undefined) cache[arg] = fn(arg);
        return cache[arg];
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d7gCT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>hoistNonReactStatics);
var _hoistNonReactStatics = require("hoist-non-react-statics");
var _hoistNonReactStaticsDefault = parcelHelpers.interopDefault(_hoistNonReactStatics);
// this file isolates this package that is not tree-shakeable
// and if this module doesn't actually contain any logic of its own
// then Rollup just use 'hoist-non-react-statics' directly in other chunks
var hoistNonReactStatics = function(targetComponent, sourceComponent) {
    return (0, _hoistNonReactStaticsDefault.default)(targetComponent, sourceComponent);
};

},{"hoist-non-react-statics":"h7WK5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h7WK5":[function(require,module,exports,__globalThis) {
'use strict';
var reactIs = require("c03b486d83967636");
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */ var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};
var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};
var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};
var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
    // React v16.11 and below
    if (reactIs.isMemo(component)) return MEMO_STATICS;
     // React v16.12 and above
    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
        // don't hoist over string (html) components
        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for(var i = 0; i < keys.length; ++i){
            var key = keys[i];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }
    }
    return targetComponent;
}
module.exports = hoistNonReactStatics;

},{"c03b486d83967636":"aR4fD"}],"aR4fD":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("cffb0a4e8f761a01");

},{"cffb0a4e8f761a01":"f7umo"}],"f7umo":[function(require,module,exports,__globalThis) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"cQ0xH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getRegisteredStyles", ()=>getRegisteredStyles);
parcelHelpers.export(exports, "insertStyles", ()=>insertStyles);
parcelHelpers.export(exports, "registerStyles", ()=>registerStyles);
var isBrowser = typeof document !== 'undefined';
function getRegisteredStyles(registered, registeredStyles, classNames) {
    var rawClassName = '';
    classNames.split(' ').forEach(function(className) {
        if (registered[className] !== undefined) registeredStyles.push(registered[className] + ";");
        else if (className) rawClassName += className + " ";
    });
    return rawClassName;
}
var registerStyles = function registerStyles(cache, serialized, isStringTag) {
    var className = cache.key + "-" + serialized.name;
    if (// class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    (isStringTag === false || // we need to always store it if we're in compat mode and
    // in node since emotion-server relies on whether a style is in
    // the registered cache to know whether a style is global or not
    // also, note that this check will be dead code eliminated in the browser
    isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) cache.registered[className] = serialized.styles;
};
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
    registerStyles(cache, serialized, isStringTag);
    var className = cache.key + "-" + serialized.name;
    if (cache.inserted[serialized.name] === undefined) {
        var stylesForSSR = '';
        var current = serialized;
        do {
            var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
            if (!isBrowser && maybeStyles !== undefined) stylesForSSR += maybeStyles;
            current = current.next;
        }while (current !== undefined);
        if (!isBrowser && stylesForSSR.length !== 0) return stylesForSSR;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4vIHo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "serializeStyles", ()=>serializeStyles);
var _hash = require("@emotion/hash");
var _hashDefault = parcelHelpers.interopDefault(_hash);
var _unitless = require("@emotion/unitless");
var _unitlessDefault = parcelHelpers.interopDefault(_unitless);
var _memoize = require("@emotion/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
var isDevelopment = false;
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty(property) {
    return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue(value) {
    return value != null && typeof value !== 'boolean';
};
var processStyleName = /* #__PURE__ */ (0, _memoizeDefault.default)(function(styleName) {
    return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});
var processStyleValue = function processStyleValue(key, value) {
    switch(key){
        case 'animation':
        case 'animationName':
            if (typeof value === 'string') return value.replace(animationRegex, function(match, p1, p2) {
                cursor = {
                    name: p1,
                    styles: p2,
                    next: cursor
                };
                return p1;
            });
    }
    if ((0, _unitlessDefault.default)[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) return value + 'px';
    return value;
};
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
    if (interpolation == null) return '';
    var componentSelector = interpolation;
    if (componentSelector.__emotion_styles !== undefined) return componentSelector;
    switch(typeof interpolation){
        case 'boolean':
            return '';
        case 'object':
            var keyframes = interpolation;
            if (keyframes.anim === 1) {
                cursor = {
                    name: keyframes.name,
                    styles: keyframes.styles,
                    next: cursor
                };
                return keyframes.name;
            }
            var serializedStyles = interpolation;
            if (serializedStyles.styles !== undefined) {
                var next = serializedStyles.next;
                if (next !== undefined) // not the most efficient thing ever but this is a pretty rare case
                // and there will be very few iterations of this generally
                while(next !== undefined){
                    cursor = {
                        name: next.name,
                        styles: next.styles,
                        next: cursor
                    };
                    next = next.next;
                }
                var styles = serializedStyles.styles + ";";
                return styles;
            }
            return createStringFromObject(mergedProps, registered, interpolation);
        case 'function':
            if (mergedProps !== undefined) {
                var previousCursor = cursor;
                var result = interpolation(mergedProps);
                cursor = previousCursor;
                return handleInterpolation(mergedProps, registered, result);
            }
            break;
    } // finalize string values (regular strings and functions interpolated into css calls)
    var asString = interpolation;
    if (registered == null) return asString;
    var cached = registered[asString];
    return cached !== undefined ? cached : asString;
}
function createStringFromObject(mergedProps, registered, obj) {
    var string = '';
    if (Array.isArray(obj)) for(var i = 0; i < obj.length; i++)string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    else for(var key in obj){
        var value = obj[key];
        if (typeof value !== 'object') {
            var asString = value;
            if (registered != null && registered[asString] !== undefined) string += key + "{" + registered[asString] + "}";
            else if (isProcessableValue(asString)) string += processStyleName(key) + ":" + processStyleValue(key, asString) + ";";
        } else {
            if (key === 'NO_COMPONENT_SELECTOR' && isDevelopment) throw new Error(noComponentSelectorMessage);
            if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
                for(var _i = 0; _i < value.length; _i++)if (isProcessableValue(value[_i])) string += processStyleName(key) + ":" + processStyleValue(key, value[_i]) + ";";
            } else {
                var interpolated = handleInterpolation(mergedProps, registered, value);
                switch(key){
                    case 'animation':
                    case 'animationName':
                        string += processStyleName(key) + ":" + interpolated + ";";
                        break;
                    default:
                        string += key + "{" + interpolated + "}";
                }
            }
        }
    }
    return string;
}
var labelPattern = /label:\s*([^\s;{]+)\s*(;|$)/g; // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list
var cursor;
function serializeStyles(args, registered, mergedProps) {
    if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) return args[0];
    var stringMode = true;
    var styles = '';
    cursor = undefined;
    var strings = args[0];
    if (strings == null || strings.raw === undefined) {
        stringMode = false;
        styles += handleInterpolation(mergedProps, registered, strings);
    } else {
        var asTemplateStringsArr = strings;
        styles += asTemplateStringsArr[0];
    } // we start at 1 since we've already handled the first arg
    for(var i = 1; i < args.length; i++){
        styles += handleInterpolation(mergedProps, registered, args[i]);
        if (stringMode) {
            var templateStringsArr = strings;
            styles += templateStringsArr[i];
        }
    } // using a global regex with .exec is stateful so lastIndex has to be reset each time
    labelPattern.lastIndex = 0;
    var identifierName = '';
    var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5
    while((match = labelPattern.exec(styles)) !== null)identifierName += '-' + match[1];
    var name = (0, _hashDefault.default)(styles) + identifierName;
    return {
        name: name,
        styles: styles,
        next: cursor
    };
}

},{"@emotion/hash":"45L46","@emotion/unitless":"kL23J","@emotion/memoize":"a2LeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"45L46":[function(require,module,exports,__globalThis) {
/* eslint-disable */ // Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>murmur2);
function murmur2(str) {
    // 'm' and 'r' are mixing constants generated offline.
    // They're not really 'magic', they just happen to work well.
    // const m = 0x5bd1e995;
    // const r = 24;
    // Initialize the hash
    var h = 0; // Mix 4 bytes at a time into the hash
    var k, i = 0, len = str.length;
    for(; len >= 4; ++i, len -= 4){
        k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
        k = /* Math.imul(k, m): */ (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
        k ^= /* k >>> r: */ k >>> 24;
        h = /* Math.imul(k, m): */ (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    } // Handle the last few bytes of the input array
    switch(len){
        case 3:
            h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
        case 2:
            h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
        case 1:
            h ^= str.charCodeAt(i) & 0xff;
            h = /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    } // Do a few final mixes of the hash to ensure the last few
    // bytes are well-incorporated.
    h ^= h >>> 13;
    h = /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    return ((h ^ h >>> 15) >>> 0).toString(36);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kL23J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>unitlessKeys);
var unitlessKeys = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    scale: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fImkp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useInsertionEffectAlwaysWithSyncFallback", ()=>useInsertionEffectAlwaysWithSyncFallback);
parcelHelpers.export(exports, "useInsertionEffectWithLayoutFallback", ()=>useInsertionEffectWithLayoutFallback);
var _react = require("react");
var isBrowser = typeof document !== 'undefined';
var syncFallback = function syncFallback(create) {
    return create();
};
var useInsertionEffect = _react["useInsertionEffect"] ? _react["useInsertionEffect"] : false;
var useInsertionEffectAlwaysWithSyncFallback = !isBrowser ? syncFallback : useInsertionEffect || syncFallback;
var useInsertionEffectWithLayoutFallback = useInsertionEffect || _react.useLayoutEffect;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"64e9S":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isPropValid);
var _memoize = require("@emotion/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
// eslint-disable-next-line no-undef
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23
var isPropValid = /* #__PURE__ */ (0, _memoizeDefault.default)(function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
});

},{"@emotion/memoize":"a2LeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c8dr0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _styledEngineProviderJsDefault.default));
var _styledEngineProviderJs = require("./StyledEngineProvider.js");
var _styledEngineProviderJsDefault = parcelHelpers.interopDefault(_styledEngineProviderJs);

},{"./StyledEngineProvider.js":"5asLO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5asLO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TEST_INTERNALS_DO_NOT_USE", ()=>TEST_INTERNALS_DO_NOT_USE);
parcelHelpers.export(exports, "default", ()=>StyledEngineProvider);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react1 = require("@emotion/react");
var _cache = require("@emotion/cache");
var _cacheDefault = parcelHelpers.interopDefault(_cache);
var _sheet = require("@emotion/sheet");
// To fix [Jest performance](https://github.com/mui/material-ui/issues/45638).
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const cacheMap = new Map();
const TEST_INTERNALS_DO_NOT_USE = {
    /**
   * to intercept the generated CSS before inserting to the style tag, so that we can check the generated CSS.
   *
   * let rule;
   * TEST_INTERNALS_DO_NOT_USE.insert = (...args) => {
   *    rule = args[0];
   * };
   *
   * expect(rule).to.equal(...);
   */ insert: undefined
};
// We might be able to remove this when this issue is fixed:
// https://github.com/emotion-js/emotion/issues/2790
const createEmotionCache = (options, CustomSheet)=>{
    const cache = (0, _cacheDefault.default)(options);
    // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245
    cache.sheet = new CustomSheet({
        key: cache.key,
        nonce: cache.sheet.nonce,
        container: cache.sheet.container,
        speedy: cache.sheet.isSpeedy,
        prepend: cache.sheet.prepend,
        insertionPoint: cache.sheet.insertionPoint
    });
    return cache;
};
let insertionPoint;
if (typeof document === 'object') {
    // Use `insertionPoint` over `prepend`(deprecated) because it can be controlled for GlobalStyles injection order
    // For more information, see https://github.com/mui/material-ui/issues/44597
    insertionPoint = document.querySelector('[name="emotion-insertion-point"]');
    if (!insertionPoint) {
        insertionPoint = document.createElement('meta');
        insertionPoint.setAttribute('name', 'emotion-insertion-point');
        insertionPoint.setAttribute('content', '');
        const head = document.querySelector('head');
        if (head) head.prepend(insertionPoint);
    }
}
function getCache(injectFirst, enableCssLayer) {
    if (injectFirst || enableCssLayer) {
        /**
     * This is for client-side apps only.
     * A custom sheet is required to make the GlobalStyles API injected above the insertion point.
     * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.
     */ class MyStyleSheet extends (0, _sheet.StyleSheet) {
            insert(rule, options) {
                if (TEST_INTERNALS_DO_NOT_USE.insert) return TEST_INTERNALS_DO_NOT_USE.insert(rule, options);
                if (this.key && this.key.endsWith('global')) this.before = insertionPoint;
                return super.insert(rule, options);
            }
        }
        const emotionCache = createEmotionCache({
            key: 'css',
            insertionPoint: injectFirst ? insertionPoint : undefined
        }, MyStyleSheet);
        if (enableCssLayer) {
            const prevInsert = emotionCache.insert;
            emotionCache.insert = (...args)=>{
                if (!args[1].styles.startsWith('@layer')) // avoid nested @layer
                args[1].styles = `@layer mui {${args[1].styles}}`;
                return prevInsert(...args);
            };
        }
        return emotionCache;
    }
    return undefined;
}
function StyledEngineProvider(props) {
    const { injectFirst, enableCssLayer, children } = props;
    const cache = _react.useMemo(()=>{
        const cacheKey = `${injectFirst}-${enableCssLayer}`;
        if (cacheMap.has(cacheKey)) return cacheMap.get(cacheKey);
        const fresh = getCache(injectFirst, enableCssLayer);
        cacheMap.set(cacheKey, fresh);
        return fresh;
    }, [
        injectFirst,
        enableCssLayer
    ]);
    return cache ? /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _react1.CacheProvider), {
        value: cache,
        children: children
    }) : children;
}
StyledEngineProvider.propTypes = {
    /**
   * Your component tree.
   */ children: (0, _propTypesDefault.default).node,
    /**
   * If `true`, the styles are wrapped in `@layer mui`.
   * Learn more about [Cascade layers](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Cascade_layers).
   */ enableCssLayer: (0, _propTypesDefault.default).bool,
    /**
   * By default, the styles are injected last in the <head> element of the page.
   * As a result, they gain more specificity than any other style sheet.
   * If you want to override MUI's styles, set this prop.
   */ injectFirst: (0, _propTypesDefault.default).bool
};

},{"react":"jMk1U","prop-types":"GNqOQ","@emotion/react":"cLTfV","@emotion/cache":"4A5M2","@emotion/sheet":"5xfHB","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"05iiF":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("c4c10cbba9862d5f");

},{"c4c10cbba9862d5f":"gKzlX"}],"gKzlX":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) {
            if (isStaticChildren) {
                if (isArrayImpl(children)) {
                    for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
                    Object.freeze && Object.freeze(children);
                } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            } else validateChildKeys(children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey, debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = require("593632ccebda0d3a"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        "react-stack-bottom-frame": function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React["react-stack-bottom-frame"].bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsx = function(type, config, maybeKey, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, !1, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
    exports.jsxs = function(type, config, maybeKey, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, !0, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
})();

},{"593632ccebda0d3a":"jMk1U"}],"63bLm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _globalStylesJsDefault.default));
var _globalStylesJs = require("./GlobalStyles.js");
var _globalStylesJsDefault = parcelHelpers.interopDefault(_globalStylesJs);

},{"./GlobalStyles.js":"hrszd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrszd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>GlobalStyles);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react1 = require("@emotion/react");
var _jsxRuntime = require("react/jsx-runtime");
'use client';
function isEmpty(obj) {
    return obj === undefined || obj === null || Object.keys(obj).length === 0;
}
function GlobalStyles(props) {
    const { styles, defaultTheme = {} } = props;
    const globalStyles = typeof styles === 'function' ? (themeInput)=>styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _react1.Global), {
        styles: globalStyles
    });
}
GlobalStyles.propTypes = {
    defaultTheme: (0, _propTypesDefault.default).object,
    styles: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).array,
        (0, _propTypesDefault.default).string,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).func
    ])
};

},{"react":"jMk1U","prop-types":"GNqOQ","@emotion/react":"cLTfV","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gydLr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _globalStylesJsDefault.default));
var _globalStylesJs = require("./GlobalStyles.js");
var _globalStylesJsDefault = parcelHelpers.interopDefault(_globalStylesJs);
parcelHelpers.exportAll(_globalStylesJs, exports);

},{"./GlobalStyles.js":"kJ0Et","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kJ0Et":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _styledEngine = require("@mui/styled-engine");
var _indexJs = require("../useTheme/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
function GlobalStyles({ styles, themeId, defaultTheme = {} }) {
    const upperTheme = (0, _indexJsDefault.default)(defaultTheme);
    const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _styledEngine.GlobalStyles), {
        styles: globalStyles
    });
}
GlobalStyles.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ defaultTheme: (0, _propTypesDefault.default).object,
    /**
   * @ignore
   */ styles: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).array,
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string,
        (0, _propTypesDefault.default).bool
    ]),
    /**
   * @ignore
   */ themeId: (0, _propTypesDefault.default).string
};
exports.default = GlobalStyles;

},{"react":"jMk1U","prop-types":"GNqOQ","@mui/styled-engine":"g3Wsb","../useTheme/index.js":"dQKAT","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dQKAT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useThemeJsDefault.default));
var _useThemeJs = require("./useTheme.js");
var _useThemeJsDefault = parcelHelpers.interopDefault(_useThemeJs);
parcelHelpers.exportAll(_useThemeJs, exports);

},{"./useTheme.js":"jbSzY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jbSzY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "systemDefaultTheme", ()=>systemDefaultTheme);
var _indexJs = require("../createTheme/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../useThemeWithoutDefault/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
'use client';
const systemDefaultTheme = (0, _indexJsDefault.default)();
function useTheme(defaultTheme = systemDefaultTheme) {
    return (0, _indexJsDefault1.default)(defaultTheme);
}
exports.default = useTheme;

},{"../createTheme/index.js":"iH9Ok","../useThemeWithoutDefault/index.js":"hKnql","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iH9Ok":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _createThemeJsDefault.default));
parcelHelpers.export(exports, "private_createBreakpoints", ()=>(0, _createBreakpointsJsDefault.default));
parcelHelpers.export(exports, "unstable_applyStyles", ()=>(0, _applyStylesJsDefault.default));
var _createThemeJs = require("./createTheme.js");
var _createThemeJsDefault = parcelHelpers.interopDefault(_createThemeJs);
var _createBreakpointsJs = require("../createBreakpoints/createBreakpoints.js");
var _createBreakpointsJsDefault = parcelHelpers.interopDefault(_createBreakpointsJs);
var _applyStylesJs = require("./applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);

},{"./createTheme.js":"bp00i","../createBreakpoints/createBreakpoints.js":false,"./applyStyles.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bp00i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _deepmerge = require("@mui/utils/deepmerge");
var _deepmergeDefault = parcelHelpers.interopDefault(_deepmerge);
var _createBreakpointsJs = require("../createBreakpoints/createBreakpoints.js");
var _createBreakpointsJsDefault = parcelHelpers.interopDefault(_createBreakpointsJs);
var _indexJs = require("../cssContainerQueries/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _shapeJs = require("./shape.js");
var _shapeJsDefault = parcelHelpers.interopDefault(_shapeJs);
var _createSpacingJs = require("./createSpacing.js");
var _createSpacingJsDefault = parcelHelpers.interopDefault(_createSpacingJs);
var _styleFunctionSxJs = require("../styleFunctionSx/styleFunctionSx.js");
var _styleFunctionSxJsDefault = parcelHelpers.interopDefault(_styleFunctionSxJs);
var _defaultSxConfigJs = require("../styleFunctionSx/defaultSxConfig.js");
var _defaultSxConfigJsDefault = parcelHelpers.interopDefault(_defaultSxConfigJs);
var _applyStylesJs = require("./applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
function createTheme(options = {}, ...args) {
    const { breakpoints: breakpointsInput = {}, palette: paletteInput = {}, spacing: spacingInput, shape: shapeInput = {}, ...other } = options;
    const breakpoints = (0, _createBreakpointsJsDefault.default)(breakpointsInput);
    const spacing = (0, _createSpacingJsDefault.default)(spacingInput);
    let muiTheme = (0, _deepmergeDefault.default)({
        breakpoints,
        direction: 'ltr',
        components: {},
        // Inject component definitions.
        palette: {
            mode: 'light',
            ...paletteInput
        },
        spacing,
        shape: {
            ...(0, _shapeJsDefault.default),
            ...shapeInput
        }
    }, other);
    muiTheme = (0, _indexJsDefault.default)(muiTheme);
    muiTheme.applyStyles = (0, _applyStylesJsDefault.default);
    muiTheme = args.reduce((acc, argument)=>(0, _deepmergeDefault.default)(acc, argument), muiTheme);
    muiTheme.unstable_sxConfig = {
        ...(0, _defaultSxConfigJsDefault.default),
        ...other?.unstable_sxConfig
    };
    muiTheme.unstable_sx = function sx(props) {
        return (0, _styleFunctionSxJsDefault.default)({
            sx: props,
            theme: this
        });
    };
    return muiTheme;
}
exports.default = createTheme;

},{"@mui/utils/deepmerge":"bLPf1","../createBreakpoints/createBreakpoints.js":"j9n13","../cssContainerQueries/index.js":"rHSbd","./shape.js":"2tX7J","./createSpacing.js":"kfQyL","../styleFunctionSx/styleFunctionSx.js":"feC9L","../styleFunctionSx/defaultSxConfig.js":"2J5LT","./applyStyles.js":"lE7To","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bLPf1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("be266a6c32a542a8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _deepmerge.default;
    }
});
var _deepmerge = _interopRequireWildcard(require("8cfea4a5b2a8b14f"));
Object.keys(_deepmerge).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _deepmerge[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _deepmerge[key];
        }
    });
});

},{"be266a6c32a542a8":"6TFJp","8cfea4a5b2a8b14f":"g09X3"}],"g09X3":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("1d13046138688e9e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = deepmerge;
exports.isPlainObject = isPlainObject;
var React = _interopRequireWildcard(require("4493c42670b8e346"));
var _reactIs = require("f08e6f02d91d21a3");
// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js
function isPlainObject(item) {
    if (typeof item !== 'object' || item === null) return false;
    const prototype = Object.getPrototypeOf(item);
    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);
}
function deepClone(source) {
    if (/*#__PURE__*/ React.isValidElement(source) || (0, _reactIs.isValidElementType)(source) || !isPlainObject(source)) return source;
    const output = {};
    Object.keys(source).forEach((key)=>{
        output[key] = deepClone(source[key]);
    });
    return output;
}
/**
 * Merge objects deeply.
 * It will shallow copy React elements.
 *
 * If `options.clone` is set to `false` the source object will be merged directly into the target object.
 *
 * @example
 * ```ts
 * deepmerge({ a: { b: 1 }, d: 2 }, { a: { c: 2 }, d: 4 });
 * // => { a: { b: 1, c: 2 }, d: 4 }
 * ````
 *
 * @param target The target object.
 * @param source The source object.
 * @param options The merge options.
 * @param options.clone Set to `false` to merge the source object directly into the target object.
 * @returns The merged object.
 */ function deepmerge(target, source, options = {
    clone: true
}) {
    const output = options.clone ? {
        ...target
    } : target;
    if (isPlainObject(target) && isPlainObject(source)) Object.keys(source).forEach((key)=>{
        if (/*#__PURE__*/ React.isValidElement(source[key]) || (0, _reactIs.isValidElementType)(source[key])) output[key] = source[key];
        else if (isPlainObject(source[key]) && // Avoid prototype pollution
        Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
        else if (options.clone) output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
        else output[key] = source[key];
    });
    return output;
}

},{"1d13046138688e9e":"6TFJp","4493c42670b8e346":"jMk1U","f08e6f02d91d21a3":"59S9B"}],"59S9B":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("2255125a8e8b1051");

},{"2255125a8e8b1051":"dFjTC"}],"dFjTC":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function typeOf(object) {
        if ("object" === typeof object && null !== object) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    switch(object = object.type, object){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                        case REACT_VIEW_TRANSITION_TYPE:
                            return object;
                        default:
                            switch(object = object && object.$$typeof, object){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                    return object;
                                case REACT_CONSUMER_TYPE:
                                    return object;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
    }
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    exports.ContextConsumer = REACT_CONSUMER_TYPE;
    exports.ContextProvider = REACT_CONTEXT_TYPE;
    exports.Element = REACT_ELEMENT_TYPE;
    exports.ForwardRef = REACT_FORWARD_REF_TYPE;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Lazy = REACT_LAZY_TYPE;
    exports.Memo = REACT_MEMO_TYPE;
    exports.Portal = REACT_PORTAL_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
    exports.isContextConsumer = function(object) {
        return typeOf(object) === REACT_CONSUMER_TYPE;
    };
    exports.isContextProvider = function(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    };
    exports.isElement = function(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    exports.isForwardRef = function(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    };
    exports.isFragment = function(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    };
    exports.isLazy = function(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    };
    exports.isMemo = function(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    };
    exports.isPortal = function(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    };
    exports.isProfiler = function(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    };
    exports.isStrictMode = function(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    };
    exports.isSuspense = function(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    };
    exports.isSuspenseList = function(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
    };
    exports.isValidElementType = function(type) {
        return "string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || void 0 !== type.getModuleId) ? !0 : !1;
    };
    exports.typeOf = typeOf;
})();

},{}],"j9n13":[function(require,module,exports,__globalThis) {
// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "breakpointKeys", ()=>breakpointKeys);
parcelHelpers.export(exports, "default", ()=>createBreakpoints);
const breakpointKeys = [
    'xs',
    'sm',
    'md',
    'lg',
    'xl'
];
const sortBreakpointsValues = (values)=>{
    const breakpointsAsArray = Object.keys(values).map((key)=>({
            key,
            val: values[key]
        })) || [];
    // Sort in ascending order
    breakpointsAsArray.sort((breakpoint1, breakpoint2)=>breakpoint1.val - breakpoint2.val);
    return breakpointsAsArray.reduce((acc, obj)=>{
        return {
            ...acc,
            [obj.key]: obj.val
        };
    }, {});
};
function createBreakpoints(breakpoints) {
    const { // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values = {
        xs: 0,
        // phone
        sm: 600,
        // tablet
        md: 900,
        // small laptop
        lg: 1200,
        // desktop
        xl: 1536 // large screen
    }, unit = 'px', step = 5, ...other } = breakpoints;
    const sortedValues = sortBreakpointsValues(values);
    const keys = Object.keys(sortedValues);
    function up(key) {
        const value = typeof values[key] === 'number' ? values[key] : key;
        return `@media (min-width:${value}${unit})`;
    }
    function down(key) {
        const value = typeof values[key] === 'number' ? values[key] : key;
        return `@media (max-width:${value - step / 100}${unit})`;
    }
    function between(start, end) {
        const endIndex = keys.indexOf(end);
        return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;
    }
    function only(key) {
        if (keys.indexOf(key) + 1 < keys.length) return between(key, keys[keys.indexOf(key) + 1]);
        return up(key);
    }
    function not(key) {
        // handle first and last key separately, for better readability
        const keyIndex = keys.indexOf(key);
        if (keyIndex === 0) return up(keys[1]);
        if (keyIndex === keys.length - 1) return down(keys[keyIndex]);
        return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
    }
    return {
        keys,
        values: sortedValues,
        up,
        down,
        between,
        only,
        not,
        unit,
        ...other
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"rHSbd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _cssContainerQueriesJsDefault.default));
parcelHelpers.export(exports, "isCqShorthand", ()=>(0, _cssContainerQueriesJs.isCqShorthand));
parcelHelpers.export(exports, "getContainerQuery", ()=>(0, _cssContainerQueriesJs.getContainerQuery));
parcelHelpers.export(exports, "sortContainerQueries", ()=>(0, _cssContainerQueriesJs.sortContainerQueries));
var _cssContainerQueriesJs = require("./cssContainerQueries.js");
var _cssContainerQueriesJsDefault = parcelHelpers.interopDefault(_cssContainerQueriesJs);

},{"./cssContainerQueries.js":"jg5UE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jg5UE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * For using in `sx` prop to sort the breakpoint from low to high.
 * Note: this function does not work and will not support multiple units.
 *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }
 *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px
 */ parcelHelpers.export(exports, "sortContainerQueries", ()=>sortContainerQueries);
parcelHelpers.export(exports, "isCqShorthand", ()=>isCqShorthand);
parcelHelpers.export(exports, "getContainerQuery", ()=>getContainerQuery);
parcelHelpers.export(exports, "default", ()=>cssContainerQueries);
var _formatMuiErrorMessage = require("@mui/utils/formatMuiErrorMessage");
var _formatMuiErrorMessageDefault = parcelHelpers.interopDefault(_formatMuiErrorMessage);
function sortContainerQueries(theme, css) {
    if (!theme.containerQueries) return css;
    const sorted = Object.keys(css).filter((key)=>key.startsWith('@container')).sort((a, b)=>{
        const regex = /min-width:\s*([0-9.]+)/;
        return +(a.match(regex)?.[1] || 0) - +(b.match(regex)?.[1] || 0);
    });
    if (!sorted.length) return css;
    return sorted.reduce((acc, key)=>{
        const value = css[key];
        delete acc[key];
        acc[key] = value;
        return acc;
    }, {
        ...css
    });
}
function isCqShorthand(breakpointKeys, value) {
    return value === '@' || value.startsWith('@') && (breakpointKeys.some((key)=>value.startsWith(`@${key}`)) || !!value.match(/^@\d/));
}
function getContainerQuery(theme, shorthand) {
    const matches = shorthand.match(/^@([^/]+)?\/?(.+)?$/);
    if (!matches) throw new Error(`MUI: The provided shorthand ${`(${shorthand})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.\n` + 'For example, `@sm` or `@600` or `@40rem/sidebar`.');
    const [, containerQuery, containerName] = matches;
    const value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;
    return theme.containerQueries(containerName).up(value);
}
function cssContainerQueries(themeInput) {
    const toContainerQuery = (mediaQuery, name)=>mediaQuery.replace('@media', name ? `@container ${name}` : '@container');
    function attachCq(node, name) {
        node.up = (...args)=>toContainerQuery(themeInput.breakpoints.up(...args), name);
        node.down = (...args)=>toContainerQuery(themeInput.breakpoints.down(...args), name);
        node.between = (...args)=>toContainerQuery(themeInput.breakpoints.between(...args), name);
        node.only = (...args)=>toContainerQuery(themeInput.breakpoints.only(...args), name);
        node.not = (...args)=>{
            const result = toContainerQuery(themeInput.breakpoints.not(...args), name);
            if (result.includes('not all and')) // `@container` does not work with `not all and`, so need to invert the logic
            return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');
            return result;
        };
    }
    const node = {};
    const containerQueries = (name)=>{
        attachCq(node, name);
        return node;
    };
    attachCq(containerQueries);
    return {
        ...themeInput,
        containerQueries
    };
}

},{"@mui/utils/formatMuiErrorMessage":"cXsuk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2tX7J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const shape = {
    borderRadius: 4
};
exports.default = shape;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kfQyL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createSpacing);
var _indexJs = require("../spacing/index.js");
function createSpacing(spacingInput = 8, // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
// Smaller components, such as icons, can align to a 4dp grid.
// https://m2.material.io/design/layout/understanding-layout.html
transform = (0, _indexJs.createUnarySpacing)({
    spacing: spacingInput
})) {
    // Already transformed.
    if (spacingInput.mui) return spacingInput;
    const spacing = (...argsInput)=>{
        if (!(argsInput.length <= 4)) console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
        const args = argsInput.length === 0 ? [
            1
        ] : argsInput;
        return args.map((argument)=>{
            const output = transform(argument);
            return typeof output === 'number' ? `${output}px` : output;
        }).join(' ');
    };
    spacing.mui = true;
    return spacing;
}

},{"../spacing/index.js":"aFm0j","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aFm0j":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _spacingJsDefault.default));
var _spacingJs = require("./spacing.js");
var _spacingJsDefault = parcelHelpers.interopDefault(_spacingJs);
parcelHelpers.exportAll(_spacingJs, exports);

},{"./spacing.js":"trEav","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"trEav":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "marginKeys", ()=>marginKeys);
parcelHelpers.export(exports, "paddingKeys", ()=>paddingKeys);
parcelHelpers.export(exports, "createUnaryUnit", ()=>createUnaryUnit);
parcelHelpers.export(exports, "createUnarySpacing", ()=>createUnarySpacing);
parcelHelpers.export(exports, "getValue", ()=>getValue);
parcelHelpers.export(exports, "getStyleFromPropValue", ()=>getStyleFromPropValue);
parcelHelpers.export(exports, "margin", ()=>margin);
parcelHelpers.export(exports, "padding", ()=>padding);
var _indexJs = require("../responsivePropType/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../breakpoints/index.js");
var _indexJs2 = require("../style/index.js");
var _indexJs3 = require("../merge/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../memoize/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs4);
const properties = {
    m: 'margin',
    p: 'padding'
};
const directions = {
    t: 'Top',
    r: 'Right',
    b: 'Bottom',
    l: 'Left',
    x: [
        'Left',
        'Right'
    ],
    y: [
        'Top',
        'Bottom'
    ]
};
const aliases = {
    marginX: 'mx',
    marginY: 'my',
    paddingX: 'px',
    paddingY: 'py'
};
// memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec
const getCssProperties = (0, _indexJsDefault2.default)((prop)=>{
    // It's not a shorthand notation.
    if (prop.length > 2) {
        if (aliases[prop]) prop = aliases[prop];
        else return [
            prop
        ];
    }
    const [a, b] = prop.split('');
    const property = properties[a];
    const direction = directions[b] || '';
    return Array.isArray(direction) ? direction.map((dir)=>property + dir) : [
        property + direction
    ];
});
const marginKeys = [
    'm',
    'mt',
    'mr',
    'mb',
    'ml',
    'mx',
    'my',
    'margin',
    'marginTop',
    'marginRight',
    'marginBottom',
    'marginLeft',
    'marginX',
    'marginY',
    'marginInline',
    'marginInlineStart',
    'marginInlineEnd',
    'marginBlock',
    'marginBlockStart',
    'marginBlockEnd'
];
const paddingKeys = [
    'p',
    'pt',
    'pr',
    'pb',
    'pl',
    'px',
    'py',
    'padding',
    'paddingTop',
    'paddingRight',
    'paddingBottom',
    'paddingLeft',
    'paddingX',
    'paddingY',
    'paddingInline',
    'paddingInlineStart',
    'paddingInlineEnd',
    'paddingBlock',
    'paddingBlockStart',
    'paddingBlockEnd'
];
const spacingKeys = [
    ...marginKeys,
    ...paddingKeys
];
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
    const themeSpacing = (0, _indexJs2.getPath)(theme, themeKey, true) ?? defaultValue;
    if (typeof themeSpacing === 'number' || typeof themeSpacing === 'string') return (val)=>{
        if (typeof val === 'string') return val;
        if (typeof val !== 'number') console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${val}.`);
        if (typeof themeSpacing === 'string') {
            if (themeSpacing.startsWith('var(') && val === 0) return 0;
            if (themeSpacing.startsWith('var(') && val === 1) return themeSpacing;
            return `calc(${val} * ${themeSpacing})`;
        }
        return themeSpacing * val;
    };
    if (Array.isArray(themeSpacing)) return (val)=>{
        if (typeof val === 'string') return val;
        const abs = Math.abs(val);
        if (!Number.isInteger(abs)) console.error([
            `MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`
        ].join('\n'));
        else if (abs > themeSpacing.length - 1) console.error([
            `MUI: The value provided (${abs}) overflows.`,
            `The supported values are: ${JSON.stringify(themeSpacing)}.`,
            `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`
        ].join('\n'));
        const transformed = themeSpacing[abs];
        if (val >= 0) return transformed;
        if (typeof transformed === 'number') return -transformed;
        if (typeof transformed === 'string' && transformed.startsWith('var(')) return `calc(-1 * ${transformed})`;
        return `-${transformed}`;
    };
    if (typeof themeSpacing === 'function') return themeSpacing;
    console.error([
        `MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`,
        'It should be a number, an array or a function.'
    ].join('\n'));
    return ()=>undefined;
}
function createUnarySpacing(theme) {
    return createUnaryUnit(theme, 'spacing', 8, 'spacing');
}
function getValue(transformer, propValue) {
    if (typeof propValue === 'string' || propValue == null) return propValue;
    return transformer(propValue);
}
function getStyleFromPropValue(cssProperties, transformer) {
    return (propValue)=>cssProperties.reduce((acc, cssProperty)=>{
            acc[cssProperty] = getValue(transformer, propValue);
            return acc;
        }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
    // Using a hash computation over an array iteration could be faster, but with only 28 items,
    // it's doesn't worth the bundle size.
    if (!keys.includes(prop)) return null;
    const cssProperties = getCssProperties(prop);
    const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
    const propValue = props[prop];
    return (0, _indexJs1.handleBreakpoints)(props, propValue, styleFromPropValue);
}
function style(props, keys) {
    const transformer = createUnarySpacing(props.theme);
    return Object.keys(props).map((prop)=>resolveCssProperty(props, keys, prop, transformer)).reduce((0, _indexJsDefault1.default), {});
}
function margin(props) {
    return style(props, marginKeys);
}
margin.propTypes = marginKeys.reduce((obj, key)=>{
    obj[key] = (0, _indexJsDefault.default);
    return obj;
}, {});
margin.filterProps = marginKeys;
function padding(props) {
    return style(props, paddingKeys);
}
padding.propTypes = paddingKeys.reduce((obj, key)=>{
    obj[key] = (0, _indexJsDefault.default);
    return obj;
}, {});
padding.filterProps = paddingKeys;
function spacing(props) {
    return style(props, spacingKeys);
}
spacing.propTypes = spacingKeys.reduce((obj, key)=>{
    obj[key] = (0, _indexJsDefault.default);
    return obj;
}, {});
spacing.filterProps = spacingKeys;
exports.default = spacing;

},{"../responsivePropType/index.js":"gnPYs","../breakpoints/index.js":"w58nR","../style/index.js":"ehG9v","../merge/index.js":"3VP2g","../memoize/index.js":"9RVMM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gnPYs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _responsivePropTypeJsDefault.default));
var _responsivePropTypeJs = require("./responsivePropType.js");
var _responsivePropTypeJsDefault = parcelHelpers.interopDefault(_responsivePropTypeJs);

},{"./responsivePropType.js":"8FaLo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8FaLo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
const responsivePropType = (0, _propTypesDefault.default).oneOfType([
    (0, _propTypesDefault.default).number,
    (0, _propTypesDefault.default).string,
    (0, _propTypesDefault.default).object,
    (0, _propTypesDefault.default).array
]);
exports.default = responsivePropType;

},{"prop-types":"GNqOQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"w58nR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _breakpointsJsDefault.default));
var _breakpointsJs = require("./breakpoints.js");
var _breakpointsJsDefault = parcelHelpers.interopDefault(_breakpointsJs);
parcelHelpers.exportAll(_breakpointsJs, exports);

},{"./breakpoints.js":"3T6KU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3T6KU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "values", ()=>values);
parcelHelpers.export(exports, "handleBreakpoints", ()=>handleBreakpoints);
parcelHelpers.export(exports, "createEmptyBreakpointObject", ()=>createEmptyBreakpointObject);
parcelHelpers.export(exports, "removeUnusedBreakpoints", ()=>removeUnusedBreakpoints);
parcelHelpers.export(exports, "mergeBreakpointsInOrder", ()=>mergeBreakpointsInOrder);
// compute base for responsive values; e.g.,
// [1,2,3] => {xs: true, sm: true, md: true}
// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}
parcelHelpers.export(exports, "computeBreakpointsBase", ()=>computeBreakpointsBase);
parcelHelpers.export(exports, "resolveBreakpointValues", ()=>resolveBreakpointValues);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _deepmerge = require("@mui/utils/deepmerge");
var _deepmergeDefault = parcelHelpers.interopDefault(_deepmerge);
var _indexJs = require("../merge/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../cssContainerQueries/index.js");
const values = {
    xs: 0,
    // phone
    sm: 600,
    // tablet
    md: 900,
    // small laptop
    lg: 1200,
    // desktop
    xl: 1536 // large screen
};
const defaultBreakpoints = {
    // Sorted ASC by size. That's important.
    // It can't be configured as it's used statically for propTypes.
    keys: [
        'xs',
        'sm',
        'md',
        'lg',
        'xl'
    ],
    up: (key)=>`@media (min-width:${values[key]}px)`
};
const defaultContainerQueries = {
    containerQueries: (containerName)=>({
            up: (key)=>{
                let result = typeof key === 'number' ? key : values[key] || key;
                if (typeof result === 'number') result = `${result}px`;
                return containerName ? `@container ${containerName} (min-width:${result})` : `@container (min-width:${result})`;
            }
        })
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
    const theme = props.theme || {};
    if (Array.isArray(propValue)) {
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        return propValue.reduce((acc, item, index)=>{
            acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
            return acc;
        }, {});
    }
    if (typeof propValue === 'object') {
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        return Object.keys(propValue).reduce((acc, breakpoint)=>{
            if ((0, _indexJs1.isCqShorthand)(themeBreakpoints.keys, breakpoint)) {
                const containerKey = (0, _indexJs1.getContainerQuery)(theme.containerQueries ? theme : defaultContainerQueries, breakpoint);
                if (containerKey) acc[containerKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
            } else if (Object.keys(themeBreakpoints.values || values).includes(breakpoint)) {
                const mediaKey = themeBreakpoints.up(breakpoint);
                acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
            } else {
                const cssKey = breakpoint;
                acc[cssKey] = propValue[cssKey];
            }
            return acc;
        }, {});
    }
    const output = styleFromPropValue(propValue);
    return output;
}
function breakpoints(styleFunction) {
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const newStyleFunction = (props)=>{
        const theme = props.theme || {};
        const base = styleFunction(props);
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        const extended = themeBreakpoints.keys.reduce((acc, key)=>{
            if (props[key]) {
                acc = acc || {};
                acc[themeBreakpoints.up(key)] = styleFunction({
                    theme,
                    ...props[key]
                });
            }
            return acc;
        }, null);
        return (0, _indexJsDefault.default)(base, extended);
    };
    newStyleFunction.propTypes = {
        ...styleFunction.propTypes,
        xs: (0, _propTypesDefault.default).object,
        sm: (0, _propTypesDefault.default).object,
        md: (0, _propTypesDefault.default).object,
        lg: (0, _propTypesDefault.default).object,
        xl: (0, _propTypesDefault.default).object
    };
    newStyleFunction.filterProps = [
        'xs',
        'sm',
        'md',
        'lg',
        'xl',
        ...styleFunction.filterProps
    ];
    return newStyleFunction;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
    const breakpointsInOrder = breakpointsInput.keys?.reduce((acc, key)=>{
        const breakpointStyleKey = breakpointsInput.up(key);
        acc[breakpointStyleKey] = {};
        return acc;
    }, {});
    return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style) {
    return breakpointKeys.reduce((acc, key)=>{
        const breakpointOutput = acc[key];
        const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
        if (isBreakpointUnused) delete acc[key];
        return acc;
    }, style);
}
function mergeBreakpointsInOrder(breakpointsInput, ...styles) {
    const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);
    const mergedOutput = [
        emptyBreakpoints,
        ...styles
    ].reduce((prev, next)=>(0, _deepmergeDefault.default)(prev, next), {});
    return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
}
function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
    // fixed value
    if (typeof breakpointValues !== 'object') return {};
    const base = {};
    const breakpointsKeys = Object.keys(themeBreakpoints);
    if (Array.isArray(breakpointValues)) breakpointsKeys.forEach((breakpoint, i)=>{
        if (i < breakpointValues.length) base[breakpoint] = true;
    });
    else breakpointsKeys.forEach((breakpoint)=>{
        if (breakpointValues[breakpoint] != null) base[breakpoint] = true;
    });
    return base;
}
function resolveBreakpointValues({ values: breakpointValues, breakpoints: themeBreakpoints, base: customBase }) {
    const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
    const keys = Object.keys(base);
    if (keys.length === 0) return breakpointValues;
    let previous;
    return keys.reduce((acc, breakpoint, i)=>{
        if (Array.isArray(breakpointValues)) {
            acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];
            previous = i;
        } else if (typeof breakpointValues === 'object') {
            acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];
            previous = breakpoint;
        } else acc[breakpoint] = breakpointValues;
        return acc;
    }, {});
}
exports.default = breakpoints;

},{"prop-types":"GNqOQ","@mui/utils/deepmerge":"bLPf1","../merge/index.js":"3VP2g","../cssContainerQueries/index.js":"rHSbd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3VP2g":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _mergeJsDefault.default));
var _mergeJs = require("./merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);

},{"./merge.js":"7ZblL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7ZblL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _deepmerge = require("@mui/utils/deepmerge");
var _deepmergeDefault = parcelHelpers.interopDefault(_deepmerge);
function merge(acc, item) {
    if (!item) return acc;
    return (0, _deepmergeDefault.default)(acc, item, {
        clone: false // No need to clone deep, it's way faster.
    });
}
exports.default = merge;

},{"@mui/utils/deepmerge":"bLPf1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ehG9v":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _styleJsDefault.default));
var _styleJs = require("./style.js");
var _styleJsDefault = parcelHelpers.interopDefault(_styleJs);
parcelHelpers.exportAll(_styleJs, exports);

},{"./style.js":"4yB8z","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4yB8z":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPath", ()=>getPath);
parcelHelpers.export(exports, "getStyleValue", ()=>getStyleValue);
var _capitalize = require("@mui/utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _indexJs = require("../responsivePropType/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../breakpoints/index.js");
function getPath(obj, path, checkVars = true) {
    if (!path || typeof path !== 'string') return null;
    // Check if CSS variables are used
    if (obj && obj.vars && checkVars) {
        const val = `vars.${path}`.split('.').reduce((acc, item)=>acc && acc[item] ? acc[item] : null, obj);
        if (val != null) return val;
    }
    return path.split('.').reduce((acc, item)=>{
        if (acc && acc[item] != null) return acc[item];
        return null;
    }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
    let value;
    if (typeof themeMapping === 'function') value = themeMapping(propValueFinal);
    else if (Array.isArray(themeMapping)) value = themeMapping[propValueFinal] || userValue;
    else value = getPath(themeMapping, propValueFinal) || userValue;
    if (transform) value = transform(value, userValue, themeMapping);
    return value;
}
function style(options) {
    const { prop, cssProperty = options.prop, themeKey, transform } = options;
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const fn = (props)=>{
        if (props[prop] == null) return null;
        const propValue = props[prop];
        const theme = props.theme;
        const themeMapping = getPath(theme, themeKey) || {};
        const styleFromPropValue = (propValueFinal)=>{
            let value = getStyleValue(themeMapping, transform, propValueFinal);
            if (propValueFinal === value && typeof propValueFinal === 'string') // Haven't found value
            value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalizeDefault.default)(propValueFinal)}`, propValueFinal);
            if (cssProperty === false) return value;
            return {
                [cssProperty]: value
            };
        };
        return (0, _indexJs1.handleBreakpoints)(props, propValue, styleFromPropValue);
    };
    fn.propTypes = {
        [prop]: (0, _indexJsDefault.default)
    };
    fn.filterProps = [
        prop
    ];
    return fn;
}
exports.default = style;

},{"@mui/utils/capitalize":"igOKi","../responsivePropType/index.js":"gnPYs","../breakpoints/index.js":"w58nR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"igOKi":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f33d5c34454e99d8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _capitalize.default;
    }
});
var _capitalize = _interopRequireDefault(require("925664e156164044"));

},{"f33d5c34454e99d8":"1P3rZ","925664e156164044":"jRJMj"}],"jRJMj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d039b89513d81de0").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = capitalize;
var _formatMuiErrorMessage = _interopRequireDefault(require("a23f41b4ce1c9118"));
// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
//
// A strict capitalization should uppercase the first letter of each word in the sentence.
// We only handle the first word.
function capitalize(string) {
    if (typeof string !== 'string') throw new Error('MUI: `capitalize(string)` expects a string argument.');
    return string.charAt(0).toUpperCase() + string.slice(1);
}

},{"d039b89513d81de0":"1P3rZ","a23f41b4ce1c9118":"cXsuk"}],"9RVMM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _memoizeJsDefault.default));
var _memoizeJs = require("./memoize.js");
var _memoizeJsDefault = parcelHelpers.interopDefault(_memoizeJs);

},{"./memoize.js":"jKIdv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jKIdv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>memoize);
function memoize(fn) {
    const cache = {};
    return (arg)=>{
        if (cache[arg] === undefined) cache[arg] = fn(arg);
        return cache[arg];
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"feC9L":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// eslint-disable-next-line @typescript-eslint/naming-convention
parcelHelpers.export(exports, "unstable_createStyleFunctionSx", ()=>unstable_createStyleFunctionSx);
var _capitalize = require("@mui/utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _indexJs = require("../merge/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../style/index.js");
var _indexJs2 = require("../breakpoints/index.js");
var _indexJs3 = require("../cssContainerQueries/index.js");
var _defaultSxConfigJs = require("./defaultSxConfig.js");
var _defaultSxConfigJsDefault = parcelHelpers.interopDefault(_defaultSxConfigJs);
function objectsHaveSameKeys(...objects) {
    const allKeys = objects.reduce((keys, object)=>keys.concat(Object.keys(object)), []);
    const union = new Set(allKeys);
    return objects.every((object)=>union.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
    return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
}
function unstable_createStyleFunctionSx() {
    function getThemeValue(prop, val, theme, config) {
        const props = {
            [prop]: val,
            theme
        };
        const options = config[prop];
        if (!options) return {
            [prop]: val
        };
        const { cssProperty = prop, themeKey, transform, style } = options;
        if (val == null) return null;
        // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123
        if (themeKey === 'typography' && val === 'inherit') return {
            [prop]: val
        };
        const themeMapping = (0, _indexJs1.getPath)(theme, themeKey) || {};
        if (style) return style(props);
        const styleFromPropValue = (propValueFinal)=>{
            let value = (0, _indexJs1.getStyleValue)(themeMapping, transform, propValueFinal);
            if (propValueFinal === value && typeof propValueFinal === 'string') // Haven't found value
            value = (0, _indexJs1.getStyleValue)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalizeDefault.default)(propValueFinal)}`, propValueFinal);
            if (cssProperty === false) return value;
            return {
                [cssProperty]: value
            };
        };
        return (0, _indexJs2.handleBreakpoints)(props, val, styleFromPropValue);
    }
    function styleFunctionSx(props) {
        const { sx, theme = {} } = props || {};
        if (!sx) return null; // Emotion & styled-components will neglect null
        const config = theme.unstable_sxConfig ?? (0, _defaultSxConfigJsDefault.default);
        /*
     * Receive `sxInput` as object or callback
     * and then recursively check keys & values to create media query object styles.
     * (the result will be used in `styled`)
     */ function traverse(sxInput) {
            let sxObject = sxInput;
            if (typeof sxInput === 'function') sxObject = sxInput(theme);
            else if (typeof sxInput !== 'object') // value
            return sxInput;
            if (!sxObject) return null;
            const emptyBreakpoints = (0, _indexJs2.createEmptyBreakpointObject)(theme.breakpoints);
            const breakpointsKeys = Object.keys(emptyBreakpoints);
            let css = emptyBreakpoints;
            Object.keys(sxObject).forEach((styleKey)=>{
                const value = callIfFn(sxObject[styleKey], theme);
                if (value !== null && value !== undefined) {
                    if (typeof value === 'object') {
                        if (config[styleKey]) css = (0, _indexJsDefault.default)(css, getThemeValue(styleKey, value, theme, config));
                        else {
                            const breakpointsValues = (0, _indexJs2.handleBreakpoints)({
                                theme
                            }, value, (x)=>({
                                    [styleKey]: x
                                }));
                            if (objectsHaveSameKeys(breakpointsValues, value)) css[styleKey] = styleFunctionSx({
                                sx: value,
                                theme
                            });
                            else css = (0, _indexJsDefault.default)(css, breakpointsValues);
                        }
                    } else css = (0, _indexJsDefault.default)(css, getThemeValue(styleKey, value, theme, config));
                }
            });
            return (0, _indexJs3.sortContainerQueries)(theme, (0, _indexJs2.removeUnusedBreakpoints)(breakpointsKeys, css));
        }
        return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
    }
    return styleFunctionSx;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = [
    'sx'
];
exports.default = styleFunctionSx;

},{"@mui/utils/capitalize":"igOKi","../merge/index.js":"3VP2g","../style/index.js":"ehG9v","../breakpoints/index.js":"w58nR","../cssContainerQueries/index.js":"rHSbd","./defaultSxConfig.js":"2J5LT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2J5LT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../spacing/index.js");
var _indexJs1 = require("../borders/index.js");
var _indexJs2 = require("../cssGrid/index.js");
var _indexJs3 = require("../palette/index.js");
var _indexJs4 = require("../sizing/index.js");
const defaultSxConfig = {
    // borders
    border: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    borderTop: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    borderRight: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    borderBottom: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    borderLeft: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    borderColor: {
        themeKey: 'palette'
    },
    borderTopColor: {
        themeKey: 'palette'
    },
    borderRightColor: {
        themeKey: 'palette'
    },
    borderBottomColor: {
        themeKey: 'palette'
    },
    borderLeftColor: {
        themeKey: 'palette'
    },
    outline: {
        themeKey: 'borders',
        transform: (0, _indexJs1.borderTransform)
    },
    outlineColor: {
        themeKey: 'palette'
    },
    borderRadius: {
        themeKey: 'shape.borderRadius',
        style: (0, _indexJs1.borderRadius)
    },
    // palette
    color: {
        themeKey: 'palette',
        transform: (0, _indexJs3.paletteTransform)
    },
    bgcolor: {
        themeKey: 'palette',
        cssProperty: 'backgroundColor',
        transform: (0, _indexJs3.paletteTransform)
    },
    backgroundColor: {
        themeKey: 'palette',
        transform: (0, _indexJs3.paletteTransform)
    },
    // spacing
    p: {
        style: (0, _indexJs.padding)
    },
    pt: {
        style: (0, _indexJs.padding)
    },
    pr: {
        style: (0, _indexJs.padding)
    },
    pb: {
        style: (0, _indexJs.padding)
    },
    pl: {
        style: (0, _indexJs.padding)
    },
    px: {
        style: (0, _indexJs.padding)
    },
    py: {
        style: (0, _indexJs.padding)
    },
    padding: {
        style: (0, _indexJs.padding)
    },
    paddingTop: {
        style: (0, _indexJs.padding)
    },
    paddingRight: {
        style: (0, _indexJs.padding)
    },
    paddingBottom: {
        style: (0, _indexJs.padding)
    },
    paddingLeft: {
        style: (0, _indexJs.padding)
    },
    paddingX: {
        style: (0, _indexJs.padding)
    },
    paddingY: {
        style: (0, _indexJs.padding)
    },
    paddingInline: {
        style: (0, _indexJs.padding)
    },
    paddingInlineStart: {
        style: (0, _indexJs.padding)
    },
    paddingInlineEnd: {
        style: (0, _indexJs.padding)
    },
    paddingBlock: {
        style: (0, _indexJs.padding)
    },
    paddingBlockStart: {
        style: (0, _indexJs.padding)
    },
    paddingBlockEnd: {
        style: (0, _indexJs.padding)
    },
    m: {
        style: (0, _indexJs.margin)
    },
    mt: {
        style: (0, _indexJs.margin)
    },
    mr: {
        style: (0, _indexJs.margin)
    },
    mb: {
        style: (0, _indexJs.margin)
    },
    ml: {
        style: (0, _indexJs.margin)
    },
    mx: {
        style: (0, _indexJs.margin)
    },
    my: {
        style: (0, _indexJs.margin)
    },
    margin: {
        style: (0, _indexJs.margin)
    },
    marginTop: {
        style: (0, _indexJs.margin)
    },
    marginRight: {
        style: (0, _indexJs.margin)
    },
    marginBottom: {
        style: (0, _indexJs.margin)
    },
    marginLeft: {
        style: (0, _indexJs.margin)
    },
    marginX: {
        style: (0, _indexJs.margin)
    },
    marginY: {
        style: (0, _indexJs.margin)
    },
    marginInline: {
        style: (0, _indexJs.margin)
    },
    marginInlineStart: {
        style: (0, _indexJs.margin)
    },
    marginInlineEnd: {
        style: (0, _indexJs.margin)
    },
    marginBlock: {
        style: (0, _indexJs.margin)
    },
    marginBlockStart: {
        style: (0, _indexJs.margin)
    },
    marginBlockEnd: {
        style: (0, _indexJs.margin)
    },
    // display
    displayPrint: {
        cssProperty: false,
        transform: (value)=>({
                '@media print': {
                    display: value
                }
            })
    },
    display: {},
    overflow: {},
    textOverflow: {},
    visibility: {},
    whiteSpace: {},
    // flexbox
    flexBasis: {},
    flexDirection: {},
    flexWrap: {},
    justifyContent: {},
    alignItems: {},
    alignContent: {},
    order: {},
    flex: {},
    flexGrow: {},
    flexShrink: {},
    alignSelf: {},
    justifyItems: {},
    justifySelf: {},
    // grid
    gap: {
        style: (0, _indexJs2.gap)
    },
    rowGap: {
        style: (0, _indexJs2.rowGap)
    },
    columnGap: {
        style: (0, _indexJs2.columnGap)
    },
    gridColumn: {},
    gridRow: {},
    gridAutoFlow: {},
    gridAutoColumns: {},
    gridAutoRows: {},
    gridTemplateColumns: {},
    gridTemplateRows: {},
    gridTemplateAreas: {},
    gridArea: {},
    // positions
    position: {},
    zIndex: {
        themeKey: 'zIndex'
    },
    top: {},
    right: {},
    bottom: {},
    left: {},
    // shadows
    boxShadow: {
        themeKey: 'shadows'
    },
    // sizing
    width: {
        transform: (0, _indexJs4.sizingTransform)
    },
    maxWidth: {
        style: (0, _indexJs4.maxWidth)
    },
    minWidth: {
        transform: (0, _indexJs4.sizingTransform)
    },
    height: {
        transform: (0, _indexJs4.sizingTransform)
    },
    maxHeight: {
        transform: (0, _indexJs4.sizingTransform)
    },
    minHeight: {
        transform: (0, _indexJs4.sizingTransform)
    },
    boxSizing: {},
    // typography
    font: {
        themeKey: 'font'
    },
    fontFamily: {
        themeKey: 'typography'
    },
    fontSize: {
        themeKey: 'typography'
    },
    fontStyle: {
        themeKey: 'typography'
    },
    fontWeight: {
        themeKey: 'typography'
    },
    letterSpacing: {},
    textTransform: {},
    lineHeight: {},
    textAlign: {},
    typography: {
        cssProperty: false,
        themeKey: 'typography'
    }
};
exports.default = defaultSxConfig;

},{"../spacing/index.js":"aFm0j","../borders/index.js":"9ZCIV","../cssGrid/index.js":"23cb0","../palette/index.js":"kne7J","../sizing/index.js":"fO9AT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ZCIV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _bordersJsDefault.default));
var _bordersJs = require("./borders.js");
var _bordersJsDefault = parcelHelpers.interopDefault(_bordersJs);
parcelHelpers.exportAll(_bordersJs, exports);

},{"./borders.js":"6bLYH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6bLYH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "borderTransform", ()=>borderTransform);
parcelHelpers.export(exports, "border", ()=>border);
parcelHelpers.export(exports, "borderTop", ()=>borderTop);
parcelHelpers.export(exports, "borderRight", ()=>borderRight);
parcelHelpers.export(exports, "borderBottom", ()=>borderBottom);
parcelHelpers.export(exports, "borderLeft", ()=>borderLeft);
parcelHelpers.export(exports, "borderColor", ()=>borderColor);
parcelHelpers.export(exports, "borderTopColor", ()=>borderTopColor);
parcelHelpers.export(exports, "borderRightColor", ()=>borderRightColor);
parcelHelpers.export(exports, "borderBottomColor", ()=>borderBottomColor);
parcelHelpers.export(exports, "borderLeftColor", ()=>borderLeftColor);
parcelHelpers.export(exports, "outline", ()=>outline);
parcelHelpers.export(exports, "outlineColor", ()=>outlineColor);
parcelHelpers.export(exports, "borderRadius", ()=>borderRadius);
var _indexJs = require("../responsivePropType/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../style/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../compose/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../spacing/index.js");
var _indexJs4 = require("../breakpoints/index.js");
function borderTransform(value) {
    if (typeof value !== 'number') return value;
    return `${value}px solid`;
}
function createBorderStyle(prop, transform) {
    return (0, _indexJsDefault1.default)({
        prop,
        themeKey: 'borders',
        transform
    });
}
const border = createBorderStyle('border', borderTransform);
const borderTop = createBorderStyle('borderTop', borderTransform);
const borderRight = createBorderStyle('borderRight', borderTransform);
const borderBottom = createBorderStyle('borderBottom', borderTransform);
const borderLeft = createBorderStyle('borderLeft', borderTransform);
const borderColor = createBorderStyle('borderColor');
const borderTopColor = createBorderStyle('borderTopColor');
const borderRightColor = createBorderStyle('borderRightColor');
const borderBottomColor = createBorderStyle('borderBottomColor');
const borderLeftColor = createBorderStyle('borderLeftColor');
const outline = createBorderStyle('outline', borderTransform);
const outlineColor = createBorderStyle('outlineColor');
const borderRadius = (props)=>{
    if (props.borderRadius !== undefined && props.borderRadius !== null) {
        const transformer = (0, _indexJs3.createUnaryUnit)(props.theme, 'shape.borderRadius', 4, 'borderRadius');
        const styleFromPropValue = (propValue)=>({
                borderRadius: (0, _indexJs3.getValue)(transformer, propValue)
            });
        return (0, _indexJs4.handleBreakpoints)(props, props.borderRadius, styleFromPropValue);
    }
    return null;
};
borderRadius.propTypes = {
    borderRadius: (0, _indexJsDefault.default)
};
borderRadius.filterProps = [
    'borderRadius'
];
const borders = (0, _indexJsDefault2.default)(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);
exports.default = borders;

},{"../responsivePropType/index.js":"gnPYs","../style/index.js":"ehG9v","../compose/index.js":"bceMB","../spacing/index.js":"aFm0j","../breakpoints/index.js":"w58nR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bceMB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _composeJsDefault.default));
var _composeJs = require("./compose.js");
var _composeJsDefault = parcelHelpers.interopDefault(_composeJs);

},{"./compose.js":"gS7C0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gS7C0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../merge/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function compose(...styles) {
    const handlers = styles.reduce((acc, style)=>{
        style.filterProps.forEach((prop)=>{
            acc[prop] = style;
        });
        return acc;
    }, {});
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const fn = (props)=>{
        return Object.keys(props).reduce((acc, prop)=>{
            if (handlers[prop]) return (0, _indexJsDefault.default)(acc, handlers[prop](props));
            return acc;
        }, {});
    };
    fn.propTypes = styles.reduce((acc, style)=>Object.assign(acc, style.propTypes), {});
    fn.filterProps = styles.reduce((acc, style)=>acc.concat(style.filterProps), []);
    return fn;
}
exports.default = compose;

},{"../merge/index.js":"3VP2g","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"23cb0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _cssGridJsDefault.default));
var _cssGridJs = require("./cssGrid.js");
var _cssGridJsDefault = parcelHelpers.interopDefault(_cssGridJs);
parcelHelpers.exportAll(_cssGridJs, exports);

},{"./cssGrid.js":"1J1L8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1J1L8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "gap", ()=>gap);
parcelHelpers.export(exports, "columnGap", ()=>columnGap);
parcelHelpers.export(exports, "rowGap", ()=>rowGap);
parcelHelpers.export(exports, "gridColumn", ()=>gridColumn);
parcelHelpers.export(exports, "gridRow", ()=>gridRow);
parcelHelpers.export(exports, "gridAutoFlow", ()=>gridAutoFlow);
parcelHelpers.export(exports, "gridAutoColumns", ()=>gridAutoColumns);
parcelHelpers.export(exports, "gridAutoRows", ()=>gridAutoRows);
parcelHelpers.export(exports, "gridTemplateColumns", ()=>gridTemplateColumns);
parcelHelpers.export(exports, "gridTemplateRows", ()=>gridTemplateRows);
parcelHelpers.export(exports, "gridTemplateAreas", ()=>gridTemplateAreas);
parcelHelpers.export(exports, "gridArea", ()=>gridArea);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../spacing/index.js");
var _indexJs3 = require("../breakpoints/index.js");
var _indexJs4 = require("../responsivePropType/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs4);
const gap = (props)=>{
    if (props.gap !== undefined && props.gap !== null) {
        const transformer = (0, _indexJs2.createUnaryUnit)(props.theme, 'spacing', 8, 'gap');
        const styleFromPropValue = (propValue)=>({
                gap: (0, _indexJs2.getValue)(transformer, propValue)
            });
        return (0, _indexJs3.handleBreakpoints)(props, props.gap, styleFromPropValue);
    }
    return null;
};
gap.propTypes = {
    gap: (0, _indexJsDefault2.default)
};
gap.filterProps = [
    'gap'
];
const columnGap = (props)=>{
    if (props.columnGap !== undefined && props.columnGap !== null) {
        const transformer = (0, _indexJs2.createUnaryUnit)(props.theme, 'spacing', 8, 'columnGap');
        const styleFromPropValue = (propValue)=>({
                columnGap: (0, _indexJs2.getValue)(transformer, propValue)
            });
        return (0, _indexJs3.handleBreakpoints)(props, props.columnGap, styleFromPropValue);
    }
    return null;
};
columnGap.propTypes = {
    columnGap: (0, _indexJsDefault2.default)
};
columnGap.filterProps = [
    'columnGap'
];
const rowGap = (props)=>{
    if (props.rowGap !== undefined && props.rowGap !== null) {
        const transformer = (0, _indexJs2.createUnaryUnit)(props.theme, 'spacing', 8, 'rowGap');
        const styleFromPropValue = (propValue)=>({
                rowGap: (0, _indexJs2.getValue)(transformer, propValue)
            });
        return (0, _indexJs3.handleBreakpoints)(props, props.rowGap, styleFromPropValue);
    }
    return null;
};
rowGap.propTypes = {
    rowGap: (0, _indexJsDefault2.default)
};
rowGap.filterProps = [
    'rowGap'
];
const gridColumn = (0, _indexJsDefault.default)({
    prop: 'gridColumn'
});
const gridRow = (0, _indexJsDefault.default)({
    prop: 'gridRow'
});
const gridAutoFlow = (0, _indexJsDefault.default)({
    prop: 'gridAutoFlow'
});
const gridAutoColumns = (0, _indexJsDefault.default)({
    prop: 'gridAutoColumns'
});
const gridAutoRows = (0, _indexJsDefault.default)({
    prop: 'gridAutoRows'
});
const gridTemplateColumns = (0, _indexJsDefault.default)({
    prop: 'gridTemplateColumns'
});
const gridTemplateRows = (0, _indexJsDefault.default)({
    prop: 'gridTemplateRows'
});
const gridTemplateAreas = (0, _indexJsDefault.default)({
    prop: 'gridTemplateAreas'
});
const gridArea = (0, _indexJsDefault.default)({
    prop: 'gridArea'
});
const grid = (0, _indexJsDefault1.default)(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
exports.default = grid;

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","../spacing/index.js":"aFm0j","../breakpoints/index.js":"w58nR","../responsivePropType/index.js":"gnPYs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kne7J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _paletteJsDefault.default));
var _paletteJs = require("./palette.js");
var _paletteJsDefault = parcelHelpers.interopDefault(_paletteJs);
parcelHelpers.exportAll(_paletteJs, exports);

},{"./palette.js":"5rDLI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5rDLI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "paletteTransform", ()=>paletteTransform);
parcelHelpers.export(exports, "color", ()=>color);
parcelHelpers.export(exports, "bgcolor", ()=>bgcolor);
parcelHelpers.export(exports, "backgroundColor", ()=>backgroundColor);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function paletteTransform(value, userValue) {
    if (userValue === 'grey') return userValue;
    return value;
}
const color = (0, _indexJsDefault.default)({
    prop: 'color',
    themeKey: 'palette',
    transform: paletteTransform
});
const bgcolor = (0, _indexJsDefault.default)({
    prop: 'bgcolor',
    cssProperty: 'backgroundColor',
    themeKey: 'palette',
    transform: paletteTransform
});
const backgroundColor = (0, _indexJsDefault.default)({
    prop: 'backgroundColor',
    themeKey: 'palette',
    transform: paletteTransform
});
const palette = (0, _indexJsDefault1.default)(color, bgcolor, backgroundColor);
exports.default = palette;

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fO9AT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _sizingJsDefault.default));
var _sizingJs = require("./sizing.js");
var _sizingJsDefault = parcelHelpers.interopDefault(_sizingJs);
parcelHelpers.exportAll(_sizingJs, exports);

},{"./sizing.js":"9eIhj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9eIhj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sizingTransform", ()=>sizingTransform);
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "maxWidth", ()=>maxWidth);
parcelHelpers.export(exports, "minWidth", ()=>minWidth);
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "maxHeight", ()=>maxHeight);
parcelHelpers.export(exports, "minHeight", ()=>minHeight);
parcelHelpers.export(exports, "sizeWidth", ()=>sizeWidth);
parcelHelpers.export(exports, "sizeHeight", ()=>sizeHeight);
parcelHelpers.export(exports, "boxSizing", ()=>boxSizing);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../breakpoints/index.js");
function sizingTransform(value) {
    return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = (0, _indexJsDefault.default)({
    prop: 'width',
    transform: sizingTransform
});
const maxWidth = (props)=>{
    if (props.maxWidth !== undefined && props.maxWidth !== null) {
        const styleFromPropValue = (propValue)=>{
            const breakpoint = props.theme?.breakpoints?.values?.[propValue] || (0, _indexJs2.values)[propValue];
            if (!breakpoint) return {
                maxWidth: sizingTransform(propValue)
            };
            if (props.theme?.breakpoints?.unit !== 'px') return {
                maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`
            };
            return {
                maxWidth: breakpoint
            };
        };
        return (0, _indexJs2.handleBreakpoints)(props, props.maxWidth, styleFromPropValue);
    }
    return null;
};
maxWidth.filterProps = [
    'maxWidth'
];
const minWidth = (0, _indexJsDefault.default)({
    prop: 'minWidth',
    transform: sizingTransform
});
const height = (0, _indexJsDefault.default)({
    prop: 'height',
    transform: sizingTransform
});
const maxHeight = (0, _indexJsDefault.default)({
    prop: 'maxHeight',
    transform: sizingTransform
});
const minHeight = (0, _indexJsDefault.default)({
    prop: 'minHeight',
    transform: sizingTransform
});
const sizeWidth = (0, _indexJsDefault.default)({
    prop: 'size',
    cssProperty: 'width',
    transform: sizingTransform
});
const sizeHeight = (0, _indexJsDefault.default)({
    prop: 'size',
    cssProperty: 'height',
    transform: sizingTransform
});
const boxSizing = (0, _indexJsDefault.default)({
    prop: 'boxSizing'
});
const sizing = (0, _indexJsDefault1.default)(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
exports.default = sizing;

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","../breakpoints/index.js":"w58nR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lE7To":[function(require,module,exports,__globalThis) {
/**
 * A universal utility to style components with multiple color modes. Always use it from the theme object.
 * It works with:
 *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)
 *  - [CSS theme variables](https://mui.com/material-ui/customization/css-theme-variables/overview/)
 *  - Zero-runtime engine
 *
 * Tips: Use an array over object spread and place `theme.applyStyles()` last.
 *
 * With the styled function:
 * ✅ [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]
 * 🚫 { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}
 *
 * With the sx prop:
 * ✅ [{ background: '#e5e5e5' }, theme => theme.applyStyles('dark', { background: '#1c1c1c' })]
 * 🚫 { background: '#e5e5e5', ...theme => theme.applyStyles('dark', { background: '#1c1c1c' })}
 *
 * @example
 * 1. using with `styled`:
 * ```jsx
 *   const Component = styled('div')(({ theme }) => [
 *     { background: '#e5e5e5' },
 *     theme.applyStyles('dark', {
 *       background: '#1c1c1c',
 *       color: '#fff',
 *     }),
 *   ]);
 * ```
 *
 * @example
 * 2. using with `sx` prop:
 * ```jsx
 *   <Box sx={[
 *     { background: '#e5e5e5' },
 *     theme => theme.applyStyles('dark', {
 *        background: '#1c1c1c',
 *        color: '#fff',
 *      }),
 *     ]}
 *   />
 * ```
 *
 * @example
 * 3. theming a component:
 * ```jsx
 *   extendTheme({
 *     components: {
 *       MuiButton: {
 *         styleOverrides: {
 *           root: ({ theme }) => [
 *             { background: '#e5e5e5' },
 *             theme.applyStyles('dark', {
 *               background: '#1c1c1c',
 *               color: '#fff',
 *             }),
 *           ],
 *         },
 *       }
 *     }
 *   })
 *```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>applyStyles);
function applyStyles(key, styles) {
    // @ts-expect-error this is 'any' type
    const theme = this;
    if (theme.vars) {
        if (!theme.colorSchemes?.[key] || typeof theme.getColorSchemeSelector !== 'function') return {};
        // If CssVarsProvider is used as a provider, returns '*:where({selector}) &'
        let selector = theme.getColorSchemeSelector(key);
        if (selector === '&') return styles;
        if (selector.includes('data-') || selector.includes('.')) // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)
        selector = `*:where(${selector.replace(/\s*&$/, '')}) &`;
        return {
            [selector]: styles
        };
    }
    if (theme.palette.mode === key) return styles;
    return {};
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hKnql":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useThemeWithoutDefaultJsDefault.default));
var _useThemeWithoutDefaultJs = require("./useThemeWithoutDefault.js");
var _useThemeWithoutDefaultJsDefault = parcelHelpers.interopDefault(_useThemeWithoutDefaultJs);

},{"./useThemeWithoutDefault.js":"86RIU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"86RIU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _styledEngine = require("@mui/styled-engine");
'use client';
function isObjectEmpty(obj) {
    return Object.keys(obj).length === 0;
}
function useTheme(defaultTheme = null) {
    const contextTheme = _react.useContext((0, _styledEngine.ThemeContext));
    return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
}
exports.default = useTheme;

},{"react":"jMk1U","@mui/styled-engine":"g3Wsb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6lF7N":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _displayJsDefault.default));
var _displayJs = require("./display.js");
var _displayJsDefault = parcelHelpers.interopDefault(_displayJs);
parcelHelpers.exportAll(_displayJs, exports);

},{"./display.js":"dMXe9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dMXe9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "displayPrint", ()=>displayPrint);
parcelHelpers.export(exports, "displayRaw", ()=>displayRaw);
parcelHelpers.export(exports, "overflow", ()=>overflow);
parcelHelpers.export(exports, "textOverflow", ()=>textOverflow);
parcelHelpers.export(exports, "visibility", ()=>visibility);
parcelHelpers.export(exports, "whiteSpace", ()=>whiteSpace);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
const displayPrint = (0, _indexJsDefault.default)({
    prop: 'displayPrint',
    cssProperty: false,
    transform: (value)=>({
            '@media print': {
                display: value
            }
        })
});
const displayRaw = (0, _indexJsDefault.default)({
    prop: 'display'
});
const overflow = (0, _indexJsDefault.default)({
    prop: 'overflow'
});
const textOverflow = (0, _indexJsDefault.default)({
    prop: 'textOverflow'
});
const visibility = (0, _indexJsDefault.default)({
    prop: 'visibility'
});
const whiteSpace = (0, _indexJsDefault.default)({
    prop: 'whiteSpace'
});
exports.default = (0, _indexJsDefault1.default)(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9tYy0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _flexboxJsDefault.default));
var _flexboxJs = require("./flexbox.js");
var _flexboxJsDefault = parcelHelpers.interopDefault(_flexboxJs);
parcelHelpers.exportAll(_flexboxJs, exports);

},{"./flexbox.js":"e1dj2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e1dj2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "flexBasis", ()=>flexBasis);
parcelHelpers.export(exports, "flexDirection", ()=>flexDirection);
parcelHelpers.export(exports, "flexWrap", ()=>flexWrap);
parcelHelpers.export(exports, "justifyContent", ()=>justifyContent);
parcelHelpers.export(exports, "alignItems", ()=>alignItems);
parcelHelpers.export(exports, "alignContent", ()=>alignContent);
parcelHelpers.export(exports, "order", ()=>order);
parcelHelpers.export(exports, "flex", ()=>flex);
parcelHelpers.export(exports, "flexGrow", ()=>flexGrow);
parcelHelpers.export(exports, "flexShrink", ()=>flexShrink);
parcelHelpers.export(exports, "alignSelf", ()=>alignSelf);
parcelHelpers.export(exports, "justifyItems", ()=>justifyItems);
parcelHelpers.export(exports, "justifySelf", ()=>justifySelf);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
const flexBasis = (0, _indexJsDefault.default)({
    prop: 'flexBasis'
});
const flexDirection = (0, _indexJsDefault.default)({
    prop: 'flexDirection'
});
const flexWrap = (0, _indexJsDefault.default)({
    prop: 'flexWrap'
});
const justifyContent = (0, _indexJsDefault.default)({
    prop: 'justifyContent'
});
const alignItems = (0, _indexJsDefault.default)({
    prop: 'alignItems'
});
const alignContent = (0, _indexJsDefault.default)({
    prop: 'alignContent'
});
const order = (0, _indexJsDefault.default)({
    prop: 'order'
});
const flex = (0, _indexJsDefault.default)({
    prop: 'flex'
});
const flexGrow = (0, _indexJsDefault.default)({
    prop: 'flexGrow'
});
const flexShrink = (0, _indexJsDefault.default)({
    prop: 'flexShrink'
});
const alignSelf = (0, _indexJsDefault.default)({
    prop: 'alignSelf'
});
const justifyItems = (0, _indexJsDefault.default)({
    prop: 'justifyItems'
});
const justifySelf = (0, _indexJsDefault.default)({
    prop: 'justifySelf'
});
const flexbox = (0, _indexJsDefault1.default)(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
exports.default = flexbox;

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8tI3x":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _positionsJsDefault.default));
var _positionsJs = require("./positions.js");
var _positionsJsDefault = parcelHelpers.interopDefault(_positionsJs);
parcelHelpers.exportAll(_positionsJs, exports);

},{"./positions.js":"bcdtB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bcdtB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "position", ()=>position);
parcelHelpers.export(exports, "zIndex", ()=>zIndex);
parcelHelpers.export(exports, "top", ()=>top);
parcelHelpers.export(exports, "right", ()=>right);
parcelHelpers.export(exports, "bottom", ()=>bottom);
parcelHelpers.export(exports, "left", ()=>left);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
const position = (0, _indexJsDefault.default)({
    prop: 'position'
});
const zIndex = (0, _indexJsDefault.default)({
    prop: 'zIndex',
    themeKey: 'zIndex'
});
const top = (0, _indexJsDefault.default)({
    prop: 'top'
});
const right = (0, _indexJsDefault.default)({
    prop: 'right'
});
const bottom = (0, _indexJsDefault.default)({
    prop: 'bottom'
});
const left = (0, _indexJsDefault.default)({
    prop: 'left'
});
exports.default = (0, _indexJsDefault1.default)(position, zIndex, top, right, bottom, left);

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lTcah":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _shadowsJsDefault.default));
var _shadowsJs = require("./shadows.js");
var _shadowsJsDefault = parcelHelpers.interopDefault(_shadowsJs);

},{"./shadows.js":"lF7kl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lF7kl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
const boxShadow = (0, _indexJsDefault.default)({
    prop: 'boxShadow',
    themeKey: 'shadows'
});
exports.default = boxShadow;

},{"../style/index.js":"ehG9v","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"etsE0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _typographyJsDefault.default));
var _typographyJs = require("./typography.js");
var _typographyJsDefault = parcelHelpers.interopDefault(_typographyJs);
parcelHelpers.exportAll(_typographyJs, exports);

},{"./typography.js":"7Q0Tg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7Q0Tg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fontFamily", ()=>fontFamily);
parcelHelpers.export(exports, "fontSize", ()=>fontSize);
parcelHelpers.export(exports, "fontStyle", ()=>fontStyle);
parcelHelpers.export(exports, "fontWeight", ()=>fontWeight);
parcelHelpers.export(exports, "letterSpacing", ()=>letterSpacing);
parcelHelpers.export(exports, "textTransform", ()=>textTransform);
parcelHelpers.export(exports, "lineHeight", ()=>lineHeight);
parcelHelpers.export(exports, "textAlign", ()=>textAlign);
parcelHelpers.export(exports, "typographyVariant", ()=>typographyVariant);
var _indexJs = require("../style/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compose/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
const fontFamily = (0, _indexJsDefault.default)({
    prop: 'fontFamily',
    themeKey: 'typography'
});
const fontSize = (0, _indexJsDefault.default)({
    prop: 'fontSize',
    themeKey: 'typography'
});
const fontStyle = (0, _indexJsDefault.default)({
    prop: 'fontStyle',
    themeKey: 'typography'
});
const fontWeight = (0, _indexJsDefault.default)({
    prop: 'fontWeight',
    themeKey: 'typography'
});
const letterSpacing = (0, _indexJsDefault.default)({
    prop: 'letterSpacing'
});
const textTransform = (0, _indexJsDefault.default)({
    prop: 'textTransform'
});
const lineHeight = (0, _indexJsDefault.default)({
    prop: 'lineHeight'
});
const textAlign = (0, _indexJsDefault.default)({
    prop: 'textAlign'
});
const typographyVariant = (0, _indexJsDefault.default)({
    prop: 'typography',
    cssProperty: false,
    themeKey: 'typography'
});
const typography = (0, _indexJsDefault1.default)(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform);
exports.default = typography;

},{"../style/index.js":"ehG9v","../compose/index.js":"bceMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aRtza":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _styleFunctionSxJsDefault.default));
parcelHelpers.export(exports, "unstable_createStyleFunctionSx", ()=>(0, _styleFunctionSxJs.unstable_createStyleFunctionSx));
parcelHelpers.export(exports, "extendSxProp", ()=>(0, _extendSxPropJsDefault.default));
parcelHelpers.export(exports, "unstable_defaultSxConfig", ()=>(0, _defaultSxConfigJsDefault.default));
var _styleFunctionSxJs = require("./styleFunctionSx.js");
var _styleFunctionSxJsDefault = parcelHelpers.interopDefault(_styleFunctionSxJs);
var _extendSxPropJs = require("./extendSxProp.js");
var _extendSxPropJsDefault = parcelHelpers.interopDefault(_extendSxPropJs);
var _defaultSxConfigJs = require("./defaultSxConfig.js");
var _defaultSxConfigJsDefault = parcelHelpers.interopDefault(_defaultSxConfigJs);

},{"./styleFunctionSx.js":"feC9L","./extendSxProp.js":"eMYm1","./defaultSxConfig.js":"2J5LT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eMYm1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>extendSxProp);
var _deepmerge = require("@mui/utils/deepmerge");
var _defaultSxConfigJs = require("./defaultSxConfig.js");
var _defaultSxConfigJsDefault = parcelHelpers.interopDefault(_defaultSxConfigJs);
const splitProps = (props)=>{
    const result = {
        systemProps: {},
        otherProps: {}
    };
    const config = props?.theme?.unstable_sxConfig ?? (0, _defaultSxConfigJsDefault.default);
    Object.keys(props).forEach((prop)=>{
        if (config[prop]) result.systemProps[prop] = props[prop];
        else result.otherProps[prop] = props[prop];
    });
    return result;
};
function extendSxProp(props) {
    const { sx: inSx, ...other } = props;
    const { systemProps, otherProps } = splitProps(other);
    let finalSx;
    if (Array.isArray(inSx)) finalSx = [
        systemProps,
        ...inSx
    ];
    else if (typeof inSx === 'function') finalSx = (...args)=>{
        const result = inSx(...args);
        if (!(0, _deepmerge.isPlainObject)(result)) return systemProps;
        return {
            ...systemProps,
            ...result
        };
    };
    else finalSx = {
        ...systemProps,
        ...inSx
    };
    return {
        ...otherProps,
        sx: finalSx
    };
}

},{"@mui/utils/deepmerge":"bLPf1","./defaultSxConfig.js":"2J5LT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3EmuA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getThemeValueJsDefault.default));
var _getThemeValueJs = require("./getThemeValue.js");
var _getThemeValueJsDefault = parcelHelpers.interopDefault(_getThemeValueJs);
parcelHelpers.exportAll(_getThemeValueJs, exports);

},{"./getThemeValue.js":"ifFVX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ifFVX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleFunctionMapping", ()=>styleFunctionMapping);
parcelHelpers.export(exports, "propToStyleFunction", ()=>propToStyleFunction);
var _indexJs = require("../borders/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../display/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../flexbox/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../cssGrid/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../positions/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../palette/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../shadows/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("../sizing/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("../spacing/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("../typography/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
const filterPropsMapping = {
    borders: (0, _indexJsDefault.default).filterProps,
    display: (0, _indexJsDefault1.default).filterProps,
    flexbox: (0, _indexJsDefault2.default).filterProps,
    grid: (0, _indexJsDefault3.default).filterProps,
    positions: (0, _indexJsDefault4.default).filterProps,
    palette: (0, _indexJsDefault5.default).filterProps,
    shadows: (0, _indexJsDefault6.default).filterProps,
    sizing: (0, _indexJsDefault7.default).filterProps,
    spacing: (0, _indexJsDefault8.default).filterProps,
    typography: (0, _indexJsDefault9.default).filterProps
};
const styleFunctionMapping = {
    borders: (0, _indexJsDefault.default),
    display: (0, _indexJsDefault1.default),
    flexbox: (0, _indexJsDefault2.default),
    grid: (0, _indexJsDefault3.default),
    positions: (0, _indexJsDefault4.default),
    palette: (0, _indexJsDefault5.default),
    shadows: (0, _indexJsDefault6.default),
    sizing: (0, _indexJsDefault7.default),
    spacing: (0, _indexJsDefault8.default),
    typography: (0, _indexJsDefault9.default)
};
const propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName)=>{
    filterPropsMapping[styleFnName].forEach((propName)=>{
        acc[propName] = styleFunctionMapping[styleFnName];
    });
    return acc;
}, {});
function getThemeValue(prop, value, theme) {
    const inputProps = {
        [prop]: value,
        theme
    };
    const styleFunction = propToStyleFunction[prop];
    return styleFunction ? styleFunction(inputProps) : {
        [prop]: value
    };
}
exports.default = getThemeValue;

},{"../borders/index.js":"9ZCIV","../display/index.js":"6lF7N","../flexbox/index.js":"9tYy0","../cssGrid/index.js":"23cb0","../positions/index.js":"8tI3x","../palette/index.js":"kne7J","../shadows/index.js":"lTcah","../sizing/index.js":"fO9AT","../spacing/index.js":"aFm0j","../typography/index.js":"etsE0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aPBZ3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "boxClasses", ()=>(0, _boxClassesJsDefault.default));
var _boxJs = require("./Box.js");
var _boxJsDefault = parcelHelpers.interopDefault(_boxJs);
var _boxClassesJs = require("./boxClasses.js");
var _boxClassesJsDefault = parcelHelpers.interopDefault(_boxClassesJs);
parcelHelpers.exportAll(_boxClassesJs, exports);

},{"./Box.js":"7C2so","./boxClasses.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7C2so":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _classNameGenerator = require("@mui/utils/ClassNameGenerator");
var _classNameGeneratorDefault = parcelHelpers.interopDefault(_classNameGenerator);
var _indexJs = require("../createBox/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _boxClassesJs = require("./boxClasses.js");
var _boxClassesJsDefault = parcelHelpers.interopDefault(_boxClassesJs);
'use client';
const Box = (0, _indexJsDefault.default)({
    defaultClassName: (0, _boxClassesJsDefault.default).root,
    generateClassName: (0, _classNameGeneratorDefault.default).generate
});
Box.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: (0, _propTypesDefault.default).node,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: (0, _propTypesDefault.default).elementType,
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).bool
        ])),
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).object
    ])
};
exports.default = Box;

},{"prop-types":"GNqOQ","@mui/utils/ClassNameGenerator":"16RUE","../createBox/index.js":"id06V","./boxClasses.js":"imUlw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"16RUE":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("df424a7de586c49b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _ClassNameGenerator.default;
    }
});
var _ClassNameGenerator = _interopRequireDefault(require("7e3b9dcb9e23db8f"));

},{"df424a7de586c49b":"1P3rZ","7e3b9dcb9e23db8f":"7ywQd"}],"7ywQd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const defaultGenerator = (componentName)=>componentName;
const createClassNameGenerator = ()=>{
    let generate = defaultGenerator;
    return {
        configure (generator) {
            generate = generator;
        },
        generate (componentName) {
            return generate(componentName);
        },
        reset () {
            generate = defaultGenerator;
        }
    };
};
const ClassNameGenerator = createClassNameGenerator();
var _default = exports.default = ClassNameGenerator;

},{}],"id06V":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _createBoxJsDefault.default));
var _createBoxJs = require("./createBox.js");
var _createBoxJsDefault = parcelHelpers.interopDefault(_createBoxJs);

},{"./createBox.js":"4W0QT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4W0QT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createBox);
var _react = require("react");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _styledEngine = require("@mui/styled-engine");
var _styledEngineDefault = parcelHelpers.interopDefault(_styledEngine);
var _indexJs = require("../styleFunctionSx/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../useTheme/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
function createBox(options = {}) {
    const { themeId, defaultTheme, defaultClassName = 'MuiBox-root', generateClassName } = options;
    const BoxRoot = (0, _styledEngineDefault.default)('div', {
        shouldForwardProp: (prop)=>prop !== 'theme' && prop !== 'sx' && prop !== 'as'
    })((0, _indexJsDefault.default));
    const Box = /*#__PURE__*/ _react.forwardRef(function Box(inProps, ref) {
        const theme = (0, _indexJsDefault1.default)(defaultTheme);
        const { className, component = 'div', ...other } = (0, _indexJs.extendSxProp)(inProps);
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(BoxRoot, {
            as: component,
            ref: ref,
            className: (0, _clsxDefault.default)(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
            theme: themeId ? theme[themeId] || theme : theme,
            ...other
        });
    });
    return Box;
}

},{"react":"jMk1U","clsx":"dOSJC","@mui/styled-engine":"g3Wsb","../styleFunctionSx/index.js":"aRtza","../useTheme/index.js":"dQKAT","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOSJC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clsx", ()=>clsx);
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) {
        if (Array.isArray(e)) {
            var o = e.length;
            for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
        } else for(f in e)e[f] && (n && (n += " "), n += f);
    }
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
exports.default = clsx;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"imUlw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _generateUtilityClasses = require("@mui/utils/generateUtilityClasses");
var _generateUtilityClassesDefault = parcelHelpers.interopDefault(_generateUtilityClasses);
const boxClasses = (0, _generateUtilityClassesDefault.default)('MuiBox', [
    'root'
]);
exports.default = boxClasses;

},{"@mui/utils/generateUtilityClasses":"3J0Rs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3J0Rs":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5b5466efb44e16fa").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _generateUtilityClasses.default;
    }
});
var _generateUtilityClasses = _interopRequireDefault(require("2fda49e444604093"));

},{"5b5466efb44e16fa":"1P3rZ","2fda49e444604093":"jlzri"}],"jlzri":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ace5c1a216171e4d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = generateUtilityClasses;
var _generateUtilityClass = _interopRequireDefault(require("1c98b4da23a2701a"));
function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {
    const result = {};
    slots.forEach((slot)=>{
        result[slot] = (0, _generateUtilityClass.default)(componentName, slot, globalStatePrefix);
    });
    return result;
}

},{"ace5c1a216171e4d":"1P3rZ","1c98b4da23a2701a":"iAc9p"}],"iAc9p":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("982aadf77fb2f660").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _generateUtilityClass.default;
    }
});
var _generateUtilityClass = _interopRequireWildcard(require("f12031ccb7ca5241"));
Object.keys(_generateUtilityClass).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _generateUtilityClass[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _generateUtilityClass[key];
        }
    });
});

},{"982aadf77fb2f660":"6TFJp","f12031ccb7ca5241":"fuc4A"}],"fuc4A":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e208e65ce194841a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = generateUtilityClass;
exports.globalStateClasses = void 0;
exports.isGlobalState = isGlobalState;
var _ClassNameGenerator = _interopRequireDefault(require("99373aa8fc6e45eb"));
const globalStateClasses = exports.globalStateClasses = {
    active: 'active',
    checked: 'checked',
    completed: 'completed',
    disabled: 'disabled',
    error: 'error',
    expanded: 'expanded',
    focused: 'focused',
    focusVisible: 'focusVisible',
    open: 'open',
    readOnly: 'readOnly',
    required: 'required',
    selected: 'selected'
};
function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {
    const globalStateClass = globalStateClasses[slot];
    return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${_ClassNameGenerator.default.generate(componentName)}-${slot}`;
}
function isGlobalState(slot) {
    return globalStateClasses[slot] !== undefined;
}

},{"e208e65ce194841a":"1P3rZ","99373aa8fc6e45eb":"16RUE"}],"2Rv1y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _createStyledJsDefault.default));
var _createStyledJs = require("./createStyled.js");
var _createStyledJsDefault = parcelHelpers.interopDefault(_createStyledJs);
parcelHelpers.exportAll(_createStyledJs, exports);

},{"./createStyled.js":"hzYrT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hzYrT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "systemDefaultTheme", ()=>systemDefaultTheme);
// Update /system/styled/#api in case if this changes
parcelHelpers.export(exports, "shouldForwardProp", ()=>shouldForwardProp);
parcelHelpers.export(exports, "default", ()=>createStyled);
var _styledEngine = require("@mui/styled-engine");
var _styledEngineDefault = parcelHelpers.interopDefault(_styledEngine);
var _deepmerge = require("@mui/utils/deepmerge");
var _capitalize = require("@mui/utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _getDisplayName = require("@mui/utils/getDisplayName");
var _getDisplayNameDefault = parcelHelpers.interopDefault(_getDisplayName);
var _indexJs = require("../createTheme/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../styleFunctionSx/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _preprocessStylesJs = require("../preprocessStyles.js");
var _preprocessStylesJsDefault = parcelHelpers.interopDefault(_preprocessStylesJs);
const systemDefaultTheme = (0, _indexJsDefault.default)();
function shouldForwardProp(prop) {
    return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
function defaultOverridesResolver(slot) {
    if (!slot) return null;
    return (_props, styles)=>styles[slot];
}
function attachTheme(props, themeId, defaultTheme) {
    props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;
}
function processStyle(props, style) {
    /*
   * Style types:
   *  - null/undefined
   *  - string
   *  - CSS style object: { [cssKey]: [cssValue], variants }
   *  - Processed style object: { style, variants, isProcessed: true }
   *  - Array of any of the above
   */ const resolvedStyle = typeof style === 'function' ? style(props) : style;
    if (Array.isArray(resolvedStyle)) return resolvedStyle.flatMap((subStyle)=>processStyle(props, subStyle));
    if (Array.isArray(resolvedStyle?.variants)) {
        let rootStyle;
        if (resolvedStyle.isProcessed) rootStyle = resolvedStyle.style;
        else {
            const { variants, ...otherStyles } = resolvedStyle;
            rootStyle = otherStyles;
        }
        return processStyleVariants(props, resolvedStyle.variants, [
            rootStyle
        ]);
    }
    if (resolvedStyle?.isProcessed) return resolvedStyle.style;
    return resolvedStyle;
}
function processStyleVariants(props, variants, results = []) {
    let mergedState; // We might not need it, initialized lazily
    variantLoop: for(let i = 0; i < variants.length; i += 1){
        const variant = variants[i];
        if (typeof variant.props === 'function') {
            mergedState ??= {
                ...props,
                ...props.ownerState,
                ownerState: props.ownerState
            };
            if (!variant.props(mergedState)) continue;
        } else for(const key in variant.props){
            if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) continue variantLoop;
        }
        if (typeof variant.style === 'function') {
            mergedState ??= {
                ...props,
                ...props.ownerState,
                ownerState: props.ownerState
            };
            results.push(variant.style(mergedState));
        } else results.push(variant.style);
    }
    return results;
}
function createStyled(input = {}) {
    const { themeId, defaultTheme = systemDefaultTheme, rootShouldForwardProp = shouldForwardProp, slotShouldForwardProp = shouldForwardProp } = input;
    function styleAttachTheme(props) {
        attachTheme(props, themeId, defaultTheme);
    }
    const styled = (tag, inputOptions = {})=>{
        // If `tag` is already a styled component, filter out the `sx` style function
        // to prevent unnecessary styles generated by the composite components.
        (0, _styledEngine.internal_mutateStyles)(tag, (styles)=>styles.filter((style)=>style !== (0, _indexJsDefault1.default)));
        const { name: componentName, slot: componentSlot, skipVariantsResolver: inputSkipVariantsResolver, skipSx: inputSkipSx, // TODO v6: remove `lowercaseFirstLetter()` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)), ...options } = inputOptions;
        // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
        const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : // TODO v6: remove `Root` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;
        const skipSx = inputSkipSx || false;
        let shouldForwardPropOption = shouldForwardProp;
        // TODO v6: remove `Root` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        if (componentSlot === 'Root' || componentSlot === 'root') shouldForwardPropOption = rootShouldForwardProp;
        else if (componentSlot) // any other slot specified
        shouldForwardPropOption = slotShouldForwardProp;
        else if (isStringTag(tag)) // for string (html) tag, preserve the behavior in emotion & styled-components.
        shouldForwardPropOption = undefined;
        const defaultStyledResolver = (0, _styledEngineDefault.default)(tag, {
            shouldForwardProp: shouldForwardPropOption,
            label: generateStyledLabel(componentName, componentSlot),
            ...options
        });
        const transformStyle = (style)=>{
            // On the server Emotion doesn't use React.forwardRef for creating components, so the created
            // component stays as a function. This condition makes sure that we do not interpolate functions
            // which are basically components used as a selectors.
            if (typeof style === 'function' && style.__emotion_real !== style) return function styleFunctionProcessor(props) {
                return processStyle(props, style);
            };
            if ((0, _deepmerge.isPlainObject)(style)) {
                const serialized = (0, _preprocessStylesJsDefault.default)(style);
                if (!serialized.variants) return serialized.style;
                return function styleObjectProcessor(props) {
                    return processStyle(props, serialized);
                };
            }
            return style;
        };
        const muiStyledResolver = (...expressionsInput)=>{
            const expressionsHead = [];
            const expressionsBody = expressionsInput.map(transformStyle);
            const expressionsTail = [];
            // Preprocess `props` to set the scoped theme value.
            // This must run before any other expression.
            expressionsHead.push(styleAttachTheme);
            if (componentName && overridesResolver) expressionsTail.push(function styleThemeOverrides(props) {
                const theme = props.theme;
                const styleOverrides = theme.components?.[componentName]?.styleOverrides;
                if (!styleOverrides) return null;
                const resolvedStyleOverrides = {};
                // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly
                // eslint-disable-next-line guard-for-in
                for(const slotKey in styleOverrides)resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey]);
                return overridesResolver(props, resolvedStyleOverrides);
            });
            if (componentName && !skipVariantsResolver) expressionsTail.push(function styleThemeVariants(props) {
                const theme = props.theme;
                const themeVariants = theme?.components?.[componentName]?.variants;
                if (!themeVariants) return null;
                return processStyleVariants(props, themeVariants);
            });
            if (!skipSx) expressionsTail.push((0, _indexJsDefault1.default));
            // This function can be called as a tagged template, so the first argument would contain
            // CSS `string[]` values.
            if (Array.isArray(expressionsBody[0])) {
                const inputStrings = expressionsBody.shift();
                // We need to add placeholders in the tagged template for the custom functions we have
                // possibly added (attachTheme, overrides, variants, and sx).
                const placeholdersHead = new Array(expressionsHead.length).fill('');
                const placeholdersTail = new Array(expressionsTail.length).fill('');
                let outputStrings;
                outputStrings = [
                    ...placeholdersHead,
                    ...inputStrings,
                    ...placeholdersTail
                ];
                outputStrings.raw = [
                    ...placeholdersHead,
                    ...inputStrings.raw,
                    ...placeholdersTail
                ];
                // The only case where we put something before `attachTheme`
                expressionsHead.unshift(outputStrings);
            }
            const expressions = [
                ...expressionsHead,
                ...expressionsBody,
                ...expressionsTail
            ];
            const Component = defaultStyledResolver(...expressions);
            if (tag.muiName) Component.muiName = tag.muiName;
            Component.displayName = generateDisplayName(componentName, componentSlot, tag);
            return Component;
        };
        if (defaultStyledResolver.withConfig) muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
        return muiStyledResolver;
    };
    return styled;
}
function generateDisplayName(componentName, componentSlot, tag) {
    if (componentName) return `${componentName}${(0, _capitalizeDefault.default)(componentSlot || '')}`;
    return `Styled(${(0, _getDisplayNameDefault.default)(tag)})`;
}
function generateStyledLabel(componentName, componentSlot) {
    let label;
    if (componentName) // TODO v6: remove `lowercaseFirstLetter()` in the next major release
    // For more details: https://github.com/mui/material-ui/pull/37908
    label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;
    return label;
}
function isObjectEmpty(object) {
    // eslint-disable-next-line
    for(const _ in object)return false;
    return true;
}
// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
function isStringTag(tag) {
    return typeof tag === 'string' && // 96 is one less than the char code
    // for "a" so this is checking that
    // it's a lowercase character
    tag.charCodeAt(0) > 96;
}
function lowercaseFirstLetter(string) {
    if (!string) return string;
    return string.charAt(0).toLowerCase() + string.slice(1);
}

},{"@mui/styled-engine":"g3Wsb","@mui/utils/deepmerge":"bLPf1","@mui/utils/capitalize":"igOKi","@mui/utils/getDisplayName":"jMnwf","../createTheme/index.js":"iH9Ok","../styleFunctionSx/index.js":"aRtza","../preprocessStyles.js":"ihQDo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jMnwf":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("42855b97e1633561").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _getDisplayName.default;
    }
});
var _getDisplayName = _interopRequireDefault(require("c6a5af84938e8b8d"));

},{"42855b97e1633561":"1P3rZ","c6a5af84938e8b8d":"8OhlI"}],"8OhlI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getDisplayName;
var _reactIs = require("cc24738cf5c901a6");
function getFunctionComponentName(Component, fallback = '') {
    return Component.displayName || Component.name || fallback;
}
function getWrappedName(outerType, innerType, wrapperName) {
    const functionName = getFunctionComponentName(innerType);
    return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);
}
/**
 * cherry-pick from
 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
 * originally forked from recompose/getDisplayName
 */ function getDisplayName(Component) {
    if (Component == null) return undefined;
    if (typeof Component === 'string') return Component;
    if (typeof Component === 'function') return getFunctionComponentName(Component, 'Component');
    // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`
    if (typeof Component === 'object') switch(Component.$$typeof){
        case _reactIs.ForwardRef:
            return getWrappedName(Component, Component.render, 'ForwardRef');
        case _reactIs.Memo:
            return getWrappedName(Component, Component.type, 'memo');
        default:
            return undefined;
    }
    return undefined;
}

},{"cc24738cf5c901a6":"59S9B"}],"ihQDo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>preprocessStyles);
var _styledEngine = require("@mui/styled-engine");
function preprocessStyles(input) {
    const { variants, ...style } = input;
    const result = {
        variants,
        style: (0, _styledEngine.internal_serializeStyles)(style),
        isProcessed: true
    };
    // Not supported on styled-components
    if (result.style === style) return result;
    if (variants) variants.forEach((variant)=>{
        if (typeof variant.style !== 'function') variant.style = (0, _styledEngine.internal_serializeStyles)(variant.style);
    });
    return result;
}

},{"@mui/styled-engine":"g3Wsb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kdyDN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _styledJsDefault.default));
var _styledJs = require("./styled.js");
var _styledJsDefault = parcelHelpers.interopDefault(_styledJs);

},{"./styled.js":"61jn1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"61jn1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../createStyled/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
const styled = (0, _indexJsDefault.default)();
exports.default = styled;

},{"../createStyled/index.js":"2Rv1y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l2Red":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useThemePropsJsDefault.default));
parcelHelpers.export(exports, "getThemeProps", ()=>(0, _getThemePropsJsDefault.default));
var _useThemePropsJs = require("./useThemeProps.js");
var _useThemePropsJsDefault = parcelHelpers.interopDefault(_useThemePropsJs);
var _getThemePropsJs = require("./getThemeProps.js");
var _getThemePropsJsDefault = parcelHelpers.interopDefault(_getThemePropsJs);

},{"./useThemeProps.js":"k3mSz","./getThemeProps.js":"bHHaH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k3mSz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useThemeProps);
var _getThemePropsJs = require("./getThemeProps.js");
var _getThemePropsJsDefault = parcelHelpers.interopDefault(_getThemePropsJs);
var _indexJs = require("../useTheme/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
'use client';
function useThemeProps({ props, name, defaultTheme, themeId }) {
    let theme = (0, _indexJsDefault.default)(defaultTheme);
    if (themeId) theme = theme[themeId] || theme;
    return (0, _getThemePropsJsDefault.default)({
        theme,
        name,
        props
    });
}

},{"./getThemeProps.js":"bHHaH","../useTheme/index.js":"dQKAT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bHHaH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getThemeProps);
var _resolveProps = require("@mui/utils/resolveProps");
var _resolvePropsDefault = parcelHelpers.interopDefault(_resolveProps);
function getThemeProps(params) {
    const { theme, name, props } = params;
    if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) return props;
    return (0, _resolvePropsDefault.default)(theme.components[name].defaultProps, props);
}

},{"@mui/utils/resolveProps":"hO4GV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hO4GV":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3f6928a0993e3b8c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _resolveProps.default;
    }
});
var _resolveProps = _interopRequireDefault(require("aef0274c88251f01"));

},{"3f6928a0993e3b8c":"1P3rZ","aef0274c88251f01":"cFC2p"}],"cFC2p":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = resolveProps;
/**
 * Add keys, values of `defaultProps` that does not exist in `props`
 * @param defaultProps
 * @param props
 * @returns resolved props
 */ function resolveProps(defaultProps, props) {
    const output = {
        ...props
    };
    for(const key in defaultProps)if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {
        const propName = key;
        if (propName === 'components' || propName === 'slots') output[propName] = {
            ...defaultProps[propName],
            ...output[propName]
        };
        else if (propName === 'componentsProps' || propName === 'slotProps') {
            const defaultSlotProps = defaultProps[propName];
            const slotProps = props[propName];
            if (!slotProps) output[propName] = defaultSlotProps || {};
            else if (!defaultSlotProps) output[propName] = slotProps;
            else {
                output[propName] = {
                    ...slotProps
                };
                for(const slotKey in defaultSlotProps)if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {
                    const slotPropName = slotKey;
                    output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
                }
            }
        } else if (output[propName] === undefined) output[propName] = defaultProps[propName];
    }
    return output;
}

},{}],"1lD2b":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useMediaQueryJsDefault.default));
var _useMediaQueryJs = require("./useMediaQuery.js");
var _useMediaQueryJsDefault = parcelHelpers.interopDefault(_useMediaQueryJs);
parcelHelpers.exportAll(_useMediaQueryJs, exports);

},{"./useMediaQuery.js":"7yDZs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7yDZs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// eslint-disable-next-line @typescript-eslint/naming-convention
parcelHelpers.export(exports, "unstable_createUseMediaQuery", ()=>unstable_createUseMediaQuery);
var _react = require("react");
var _useEnhancedEffect = require("@mui/utils/useEnhancedEffect");
var _useEnhancedEffectDefault = parcelHelpers.interopDefault(_useEnhancedEffect);
var _indexJs = require("../useThemeProps/index.js");
var _indexJs1 = require("../useThemeWithoutDefault/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs1);
'use client';
// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed
function useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
    const [match, setMatch] = _react.useState(()=>{
        if (noSsr && matchMedia) return matchMedia(query).matches;
        if (ssrMatchMedia) return ssrMatchMedia(query).matches;
        // Once the component is mounted, we rely on the
        // event listeners to return the correct matches value.
        return defaultMatches;
    });
    (0, _useEnhancedEffectDefault.default)(()=>{
        if (!matchMedia) return undefined;
        const queryList = matchMedia(query);
        const updateMatch = ()=>{
            setMatch(queryList.matches);
        };
        updateMatch();
        queryList.addEventListener('change', updateMatch);
        return ()=>{
            queryList.removeEventListener('change', updateMatch);
        };
    }, [
        query,
        matchMedia
    ]);
    return match;
}
// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why
const safeReact = {
    ..._react
};
const maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;
function useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
    const getDefaultSnapshot = _react.useCallback(()=>defaultMatches, [
        defaultMatches
    ]);
    const getServerSnapshot = _react.useMemo(()=>{
        if (noSsr && matchMedia) return ()=>matchMedia(query).matches;
        if (ssrMatchMedia !== null) {
            const { matches } = ssrMatchMedia(query);
            return ()=>matches;
        }
        return getDefaultSnapshot;
    }, [
        getDefaultSnapshot,
        query,
        ssrMatchMedia,
        noSsr,
        matchMedia
    ]);
    const [getSnapshot, subscribe] = _react.useMemo(()=>{
        if (matchMedia === null) return [
            getDefaultSnapshot,
            ()=>()=>{}
        ];
        const mediaQueryList = matchMedia(query);
        return [
            ()=>mediaQueryList.matches,
            (notify)=>{
                mediaQueryList.addEventListener('change', notify);
                return ()=>{
                    mediaQueryList.removeEventListener('change', notify);
                };
            }
        ];
    }, [
        getDefaultSnapshot,
        matchMedia,
        query
    ]);
    const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    return match;
}
function unstable_createUseMediaQuery(params = {}) {
    const { themeId } = params;
    return function useMediaQuery(queryInput, options = {}) {
        let theme = (0, _indexJsDefault.default)();
        if (theme && themeId) theme = theme[themeId] || theme;
        // Wait for jsdom to support the match media feature.
        // All the browsers MUI support have this built-in.
        // This defensive check is here for simplicity.
        // Most of the time, the match media logic isn't central to people tests.
        const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';
        const { defaultMatches = false, matchMedia = supportMatchMedia ? window.matchMedia : null, ssrMatchMedia = null, noSsr = false } = (0, _indexJs.getThemeProps)({
            name: 'MuiUseMediaQuery',
            props: options,
            theme
        });
        if (typeof queryInput === 'function' && theme === null) console.error([
            'MUI: The `query` argument provided is invalid.',
            'You are providing a function without a theme in the context.',
            'One of the parent elements needs to use a ThemeProvider.'
        ].join('\n'));
        let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;
        query = query.replace(/^@media( ?)/m, '');
        const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;
        const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);
        // eslint-disable-next-line react-hooks/rules-of-hooks
        _react.useDebugValue({
            query,
            match
        });
        return match;
    };
}
const useMediaQuery = unstable_createUseMediaQuery();
exports.default = useMediaQuery;

},{"react":"jMk1U","@mui/utils/useEnhancedEffect":"egHZg","../useThemeProps/index.js":"l2Red","../useThemeWithoutDefault/index.js":"hKnql","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"egHZg":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5b2184198e37aa64").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useEnhancedEffect.default;
    }
});
var _useEnhancedEffect = _interopRequireDefault(require("8f8a7b5a80fae0b2"));

},{"5b2184198e37aa64":"1P3rZ","8f8a7b5a80fae0b2":"6O69A"}],"6O69A":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("278d2b4895ae89f8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("c37b032de779b244"));
/**
 * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.
 * This is useful for effects that are only needed for client-side rendering but not for SSR.
 *
 * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * and confirm it doesn't apply to your use-case.
 */ const useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;
var _default = exports.default = useEnhancedEffect;

},{"278d2b4895ae89f8":"6TFJp","c37b032de779b244":"jMk1U"}],"8ygAL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _colorManipulatorJs = require("./colorManipulator.js");
parcelHelpers.exportAll(_colorManipulatorJs, exports);

},{"./colorManipulator.js":"iBgyS","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iBgyS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Converts a color from CSS hex format to CSS rgb format.
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */ parcelHelpers.export(exports, "hexToRgb", ()=>hexToRgb);
/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */ parcelHelpers.export(exports, "decomposeColor", ()=>decomposeColor);
parcelHelpers.export(exports, "colorChannel", ()=>colorChannel);
parcelHelpers.export(exports, "private_safeColorChannel", ()=>private_safeColorChannel);
/**
 * Converts a color object with type and values to a string.
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */ parcelHelpers.export(exports, "recomposeColor", ()=>recomposeColor);
/**
 * Converts a color from CSS rgb format to CSS hex format.
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */ parcelHelpers.export(exports, "rgbToHex", ()=>rgbToHex);
/**
 * Converts a color from hsl format to rgb format.
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */ parcelHelpers.export(exports, "hslToRgb", ()=>hslToRgb);
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */ parcelHelpers.export(exports, "getLuminance", ()=>getLuminance);
/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */ parcelHelpers.export(exports, "getContrastRatio", ()=>getContrastRatio);
/**
 * Sets the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} value - value to set the alpha channel to in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ parcelHelpers.export(exports, "alpha", ()=>alpha);
parcelHelpers.export(exports, "private_safeAlpha", ()=>private_safeAlpha);
/**
 * Darkens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ parcelHelpers.export(exports, "darken", ()=>darken);
parcelHelpers.export(exports, "private_safeDarken", ()=>private_safeDarken);
/**
 * Lightens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ parcelHelpers.export(exports, "lighten", ()=>lighten);
parcelHelpers.export(exports, "private_safeLighten", ()=>private_safeLighten);
/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ parcelHelpers.export(exports, "emphasize", ()=>emphasize);
parcelHelpers.export(exports, "private_safeEmphasize", ()=>private_safeEmphasize);
/**
 * Blend a transparent overlay color with a background color, resulting in a single
 * RGB color.
 * @param {string} background - CSS color
 * @param {string} overlay - CSS color
 * @param {number} opacity - Opacity multiplier in the range 0 - 1
 * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.
 */ parcelHelpers.export(exports, "blend", ()=>blend);
var _formatMuiErrorMessage = require("@mui/utils/formatMuiErrorMessage");
var _formatMuiErrorMessageDefault = parcelHelpers.interopDefault(_formatMuiErrorMessage);
/* eslint-disable @typescript-eslint/naming-convention */ var _clamp = require("@mui/utils/clamp");
var _clampDefault = parcelHelpers.interopDefault(_clamp);
/**
 * Returns a number whose value is limited to the given range.
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */ function clampWrapper(value, min = 0, max = 1) {
    if (value < min || value > max) console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
    return (0, _clampDefault.default)(value, min, max);
}
function hexToRgb(color) {
    color = color.slice(1);
    const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');
    let colors = color.match(re);
    if (colors && colors[0].length === 1) colors = colors.map((n)=>n + n);
    if (color.length !== color.trim().length) console.error(`MUI: The color: "${color}" is invalid. Make sure the color input doesn't contain leading/trailing space.`);
    return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index)=>{
        return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
    }).join(', ')})` : '';
}
function intToHex(int) {
    const hex = int.toString(16);
    return hex.length === 1 ? `0${hex}` : hex;
}
function decomposeColor(color) {
    // Idempotent
    if (color.type) return color;
    if (color.charAt(0) === '#') return decomposeColor(hexToRgb(color));
    const marker = color.indexOf('(');
    const type = color.substring(0, marker);
    if (![
        'rgb',
        'rgba',
        'hsl',
        'hsla',
        'color'
    ].includes(type)) throw new Error(`MUI: Unsupported \`${color}\` color.\n` + 'The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().');
    let values = color.substring(marker + 1, color.length - 1);
    let colorSpace;
    if (type === 'color') {
        values = values.split(' ');
        colorSpace = values.shift();
        if (values.length === 4 && values[3].charAt(0) === '/') values[3] = values[3].slice(1);
        if (![
            'srgb',
            'display-p3',
            'a98-rgb',
            'prophoto-rgb',
            'rec-2020'
        ].includes(colorSpace)) throw new Error(`MUI: unsupported \`${colorSpace}\` color space.\n` + 'The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.');
    } else values = values.split(',');
    values = values.map((value)=>parseFloat(value));
    return {
        type,
        values,
        colorSpace
    };
}
const colorChannel = (color)=>{
    const decomposedColor = decomposeColor(color);
    return decomposedColor.values.slice(0, 3).map((val, idx)=>decomposedColor.type.includes('hsl') && idx !== 0 ? `${val}%` : val).join(' ');
};
const private_safeColorChannel = (color, warning)=>{
    try {
        return colorChannel(color);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
};
function recomposeColor(color) {
    const { type, colorSpace } = color;
    let { values } = color;
    if (type.includes('rgb')) // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map((n, i)=>i < 3 ? parseInt(n, 10) : n);
    else if (type.includes('hsl')) {
        values[1] = `${values[1]}%`;
        values[2] = `${values[2]}%`;
    }
    if (type.includes('color')) values = `${colorSpace} ${values.join(' ')}`;
    else values = `${values.join(', ')}`;
    return `${type}(${values})`;
}
function rgbToHex(color) {
    // Idempotent
    if (color.startsWith('#')) return color;
    const { values } = decomposeColor(color);
    return `#${values.map((n, i)=>intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;
}
function hslToRgb(color) {
    color = decomposeColor(color);
    const { values } = color;
    const h = values[0];
    const s = values[1] / 100;
    const l = values[2] / 100;
    const a = s * Math.min(l, 1 - l);
    const f = (n, k = (n + h / 30) % 12)=>l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
    let type = 'rgb';
    const rgb = [
        Math.round(f(0) * 255),
        Math.round(f(8) * 255),
        Math.round(f(4) * 255)
    ];
    if (color.type === 'hsla') {
        type += 'a';
        rgb.push(values[3]);
    }
    return recomposeColor({
        type,
        values: rgb
    });
}
function getLuminance(color) {
    color = decomposeColor(color);
    let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
    rgb = rgb.map((val)=>{
        if (color.type !== 'color') val /= 255; // normalized
        return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
    });
    // Truncate at 3 digits
    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
function getContrastRatio(foreground, background) {
    const lumA = getLuminance(foreground);
    const lumB = getLuminance(background);
    return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
function alpha(color, value) {
    color = decomposeColor(color);
    value = clampWrapper(value);
    if (color.type === 'rgb' || color.type === 'hsl') color.type += 'a';
    if (color.type === 'color') color.values[3] = `/${value}`;
    else color.values[3] = value;
    return recomposeColor(color);
}
function private_safeAlpha(color, value, warning) {
    try {
        return alpha(color, value);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
function darken(color, coefficient) {
    color = decomposeColor(color);
    coefficient = clampWrapper(coefficient);
    if (color.type.includes('hsl')) color.values[2] *= 1 - coefficient;
    else if (color.type.includes('rgb') || color.type.includes('color')) for(let i = 0; i < 3; i += 1)color.values[i] *= 1 - coefficient;
    return recomposeColor(color);
}
function private_safeDarken(color, coefficient, warning) {
    try {
        return darken(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
function lighten(color, coefficient) {
    color = decomposeColor(color);
    coefficient = clampWrapper(coefficient);
    if (color.type.includes('hsl')) color.values[2] += (100 - color.values[2]) * coefficient;
    else if (color.type.includes('rgb')) for(let i = 0; i < 3; i += 1)color.values[i] += (255 - color.values[i]) * coefficient;
    else if (color.type.includes('color')) for(let i = 0; i < 3; i += 1)color.values[i] += (1 - color.values[i]) * coefficient;
    return recomposeColor(color);
}
function private_safeLighten(color, coefficient, warning) {
    try {
        return lighten(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
function emphasize(color, coefficient = 0.15) {
    return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}
function private_safeEmphasize(color, coefficient, warning) {
    try {
        return emphasize(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
function blend(background, overlay, opacity, gamma = 1.0) {
    const blendChannel = (b, o)=>Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);
    const backgroundColor = decomposeColor(background);
    const overlayColor = decomposeColor(overlay);
    const rgb = [
        blendChannel(backgroundColor.values[0], overlayColor.values[0]),
        blendChannel(backgroundColor.values[1], overlayColor.values[1]),
        blendChannel(backgroundColor.values[2], overlayColor.values[2])
    ];
    return recomposeColor({
        type: 'rgb',
        values: rgb
    });
}

},{"@mui/utils/formatMuiErrorMessage":"cXsuk","@mui/utils/clamp":"bju8l","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bju8l":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2c1dbec64e810f4a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _clamp.default;
    }
});
var _clamp = _interopRequireDefault(require("4e47c829b3573509"));

},{"2c1dbec64e810f4a":"1P3rZ","4e47c829b3573509":"f9RMU"}],"f9RMU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {
    return Math.max(min, Math.min(val, max));
}
var _default = exports.default = clamp;

},{}],"dkyK0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _themeProviderJsDefault.default));
var _themeProviderJs = require("./ThemeProvider.js");
var _themeProviderJsDefault = parcelHelpers.interopDefault(_themeProviderJs);

},{"./ThemeProvider.js":"9vxTK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9vxTK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _privateTheming = require("@mui/private-theming");
var _exactProp = require("@mui/utils/exactProp");
var _exactPropDefault = parcelHelpers.interopDefault(_exactProp);
var _styledEngine = require("@mui/styled-engine");
var _indexJs = require("../useThemeWithoutDefault/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../RtlProvider/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../DefaultPropsProvider/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const EMPTY_THEME = {};
function useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {
    return _react.useMemo(()=>{
        const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;
        if (typeof localTheme === 'function') {
            const mergedTheme = localTheme(resolvedTheme);
            const result = themeId ? {
                ...upperTheme,
                [themeId]: mergedTheme
            } : mergedTheme;
            // must return a function for the private theme to NOT merge with the upper theme.
            // see the test case "use provided theme from a callback" in ThemeProvider.test.js
            if (isPrivate) return ()=>result;
            return result;
        }
        return themeId ? {
            ...upperTheme,
            [themeId]: localTheme
        } : {
            ...upperTheme,
            ...localTheme
        };
    }, [
        themeId,
        upperTheme,
        localTheme,
        isPrivate
    ]);
}
/**
 * This component makes the `theme` available down the React tree.
 * It should preferably be used at **the root of your component tree**.
 *
 * <ThemeProvider theme={theme}> // existing use case
 * <ThemeProvider theme={{ id: theme }}> // theme scoping
 */ function ThemeProvider(props) {
    const { children, theme: localTheme, themeId } = props;
    const upperTheme = (0, _indexJsDefault.default)(EMPTY_THEME);
    const upperPrivateTheme = (0, _privateTheming.useTheme)() || EMPTY_THEME;
    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') console.error([
        'MUI: You are providing a theme function prop to the ThemeProvider component:',
        '<ThemeProvider theme={outerTheme => outerTheme} />',
        '',
        'However, no outer theme is present.',
        "Make sure a theme is already injected higher in the React tree or provide a theme object."
    ].join('\n'));
    const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);
    const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);
    const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _privateTheming.ThemeProvider), {
        theme: privateTheme,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _styledEngine.ThemeContext).Provider, {
            value: engineTheme,
            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _indexJsDefault1.default), {
                value: rtlValue,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _indexJsDefault2.default), {
                    value: themeId ? engineTheme[themeId].components : engineTheme.components,
                    children: children
                })
            })
        })
    });
}
ThemeProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * Your component tree.
   */ children: (0, _propTypesDefault.default).node,
    /**
   * A theme object. You can provide a function to extend the outer theme.
   */ theme: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).object
    ]).isRequired,
    /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */ themeId: (0, _propTypesDefault.default).string
};
ThemeProvider.propTypes = (0, _exactPropDefault.default)(ThemeProvider.propTypes);
exports.default = ThemeProvider;

},{"react":"jMk1U","prop-types":"GNqOQ","@mui/private-theming":"aNwkL","@mui/utils/exactProp":"l3gvy","@mui/styled-engine":"g3Wsb","../useThemeWithoutDefault/index.js":"hKnql","../RtlProvider/index.js":"6SZXq","../DefaultPropsProvider/index.js":"epp2S","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aNwkL":[function(require,module,exports,__globalThis) {
/**
 * @mui/private-theming v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeProvider", ()=>(0, _indexJsDefault.default));
parcelHelpers.export(exports, "useTheme", ()=>(0, _indexJsDefault1.default));
var _indexJs = require("./ThemeProvider/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
parcelHelpers.exportAll(_indexJs, exports);
var _indexJs1 = require("./useTheme/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);

},{"./ThemeProvider/index.js":"aHttu","./useTheme/index.js":"6KaGw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aHttu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _themeProviderJsDefault.default));
parcelHelpers.export(exports, "unstable_nested", ()=>(0, _nestedJsDefault.default));
var _themeProviderJs = require("./ThemeProvider.js");
var _themeProviderJsDefault = parcelHelpers.interopDefault(_themeProviderJs);
var _nestedJs = require("./nested.js");
var _nestedJsDefault = parcelHelpers.interopDefault(_nestedJs);

},{"./ThemeProvider.js":"8wFsy","./nested.js":"kklEr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8wFsy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@mui/utils");
var _themeContextJs = require("../useTheme/ThemeContext.js");
var _themeContextJsDefault = parcelHelpers.interopDefault(_themeContextJs);
var _indexJs = require("../useTheme/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _nestedJs = require("./nested.js");
var _nestedJsDefault = parcelHelpers.interopDefault(_nestedJs);
// To support composition of theme.
var _jsxRuntime = require("react/jsx-runtime");
function mergeOuterLocalTheme(outerTheme, localTheme) {
    if (typeof localTheme === 'function') {
        const mergedTheme = localTheme(outerTheme);
        if (!mergedTheme) console.error([
            'MUI: You should return an object from your theme function, i.e.',
            '<ThemeProvider theme={() => ({})} />'
        ].join('\n'));
        return mergedTheme;
    }
    return {
        ...outerTheme,
        ...localTheme
    };
}
/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */ function ThemeProvider(props) {
    const { children, theme: localTheme } = props;
    const outerTheme = (0, _indexJsDefault.default)();
    if (outerTheme === null && typeof localTheme === 'function') console.error([
        'MUI: You are providing a theme function prop to the ThemeProvider component:',
        '<ThemeProvider theme={outerTheme => outerTheme} />',
        '',
        'However, no outer theme is present.',
        "Make sure a theme is already injected higher in the React tree or provide a theme object."
    ].join('\n'));
    const theme = _react.useMemo(()=>{
        const output = outerTheme === null ? {
            ...localTheme
        } : mergeOuterLocalTheme(outerTheme, localTheme);
        if (output != null) output[0, _nestedJsDefault.default] = outerTheme !== null;
        return output;
    }, [
        localTheme,
        outerTheme
    ]);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _themeContextJsDefault.default).Provider, {
        value: theme,
        children: children
    });
}
ThemeProvider.propTypes = {
    /**
   * Your component tree.
   */ children: (0, _propTypesDefault.default).node,
    /**
   * A theme object. You can provide a function to extend the outer theme.
   */ theme: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).func
    ]).isRequired
};
ThemeProvider.propTypes = (0, _utils.exactProp)(ThemeProvider.propTypes);
exports.default = ThemeProvider;

},{"react":"jMk1U","prop-types":"GNqOQ","@mui/utils":"4hufy","../useTheme/ThemeContext.js":"iMD2K","../useTheme/index.js":"6KaGw","./nested.js":"kklEr","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4hufy":[function(require,module,exports,__globalThis) {
/**
 * @mui/utils v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "chainPropTypes", ()=>(0, _indexJsDefault.default));
parcelHelpers.export(exports, "deepmerge", ()=>(0, _indexJsDefault1.default));
parcelHelpers.export(exports, "isPlainObject", ()=>(0, _indexJs1.isPlainObject));
parcelHelpers.export(exports, "elementAcceptingRef", ()=>(0, _indexJsDefault2.default));
parcelHelpers.export(exports, "elementTypeAcceptingRef", ()=>(0, _indexJsDefault3.default));
parcelHelpers.export(exports, "exactProp", ()=>(0, _indexJsDefault4.default));
parcelHelpers.export(exports, "formatMuiErrorMessage", ()=>(0, _indexJsDefault5.default));
parcelHelpers.export(exports, "getDisplayName", ()=>(0, _indexJsDefault6.default));
parcelHelpers.export(exports, "HTMLElementType", ()=>(0, _indexJsDefault7.default));
parcelHelpers.export(exports, "ponyfillGlobal", ()=>(0, _indexJsDefault8.default));
parcelHelpers.export(exports, "refType", ()=>(0, _indexJsDefault9.default));
parcelHelpers.export(exports, "unstable_capitalize", ()=>(0, _indexJsDefault10.default));
parcelHelpers.export(exports, "unstable_createChainedFunction", ()=>(0, _indexJsDefault11.default));
parcelHelpers.export(exports, "unstable_debounce", ()=>(0, _indexJsDefault12.default));
parcelHelpers.export(exports, "unstable_deprecatedPropType", ()=>(0, _indexJsDefault13.default));
parcelHelpers.export(exports, "unstable_isMuiElement", ()=>(0, _indexJsDefault14.default));
parcelHelpers.export(exports, "unstable_ownerDocument", ()=>(0, _indexJsDefault15.default));
parcelHelpers.export(exports, "unstable_ownerWindow", ()=>(0, _indexJsDefault16.default));
parcelHelpers.export(exports, "unstable_requirePropFactory", ()=>(0, _indexJsDefault17.default));
parcelHelpers.export(exports, "unstable_setRef", ()=>(0, _indexJsDefault18.default));
parcelHelpers.export(exports, "unstable_useEnhancedEffect", ()=>(0, _indexJsDefault19.default));
parcelHelpers.export(exports, "unstable_useId", ()=>(0, _indexJsDefault20.default));
parcelHelpers.export(exports, "unstable_unsupportedProp", ()=>(0, _indexJsDefault21.default));
parcelHelpers.export(exports, "unstable_useControlled", ()=>(0, _indexJsDefault22.default));
parcelHelpers.export(exports, "unstable_useEventCallback", ()=>(0, _indexJsDefault23.default));
parcelHelpers.export(exports, "unstable_useForkRef", ()=>(0, _indexJsDefault24.default));
parcelHelpers.export(exports, "unstable_useLazyRef", ()=>(0, _indexJsDefault25.default));
parcelHelpers.export(exports, "unstable_useTimeout", ()=>(0, _indexJsDefault26.default));
parcelHelpers.export(exports, "unstable_Timeout", ()=>(0, _indexJs26.Timeout));
parcelHelpers.export(exports, "unstable_useOnMount", ()=>(0, _indexJsDefault27.default));
parcelHelpers.export(exports, "unstable_useIsFocusVisible", ()=>(0, _indexJsDefault28.default));
parcelHelpers.export(exports, "unstable_isFocusVisible", ()=>(0, _indexJsDefault29.default));
parcelHelpers.export(exports, "unstable_getScrollbarSize", ()=>(0, _indexJsDefault30.default));
parcelHelpers.export(exports, "usePreviousProps", ()=>(0, _indexJsDefault31.default));
parcelHelpers.export(exports, "getValidReactChildren", ()=>(0, _indexJsDefault32.default));
parcelHelpers.export(exports, "visuallyHidden", ()=>(0, _indexJsDefault33.default));
parcelHelpers.export(exports, "integerPropType", ()=>(0, _indexJsDefault34.default));
parcelHelpers.export(exports, "internal_resolveProps", ()=>(0, _indexJsDefault35.default));
parcelHelpers.export(exports, "unstable_composeClasses", ()=>(0, _indexJsDefault36.default));
parcelHelpers.export(exports, "unstable_generateUtilityClass", ()=>(0, _indexJsDefault37.default));
parcelHelpers.export(exports, "unstable_isGlobalState", ()=>(0, _indexJs37.isGlobalState));
parcelHelpers.export(exports, "unstable_generateUtilityClasses", ()=>(0, _indexJsDefault38.default));
parcelHelpers.export(exports, "unstable_ClassNameGenerator", ()=>(0, _indexJsDefault39.default));
parcelHelpers.export(exports, "clamp", ()=>(0, _indexJsDefault40.default));
parcelHelpers.export(exports, "unstable_useSlotProps", ()=>(0, _indexJsDefault41.default));
parcelHelpers.export(exports, "unstable_resolveComponentProps", ()=>(0, _indexJsDefault42.default));
parcelHelpers.export(exports, "unstable_extractEventHandlers", ()=>(0, _indexJsDefault43.default));
parcelHelpers.export(exports, "unstable_getReactNodeRef", ()=>(0, _indexJsDefault44.default));
parcelHelpers.export(exports, "unstable_getReactElementRef", ()=>(0, _indexJsDefault45.default));
var _indexJs = require("./chainPropTypes/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./deepmerge/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("./elementAcceptingRef/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("./elementTypeAcceptingRef/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("./exactProp/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("./formatMuiErrorMessage/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("./getDisplayName/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("./HTMLElementType/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("./ponyfillGlobal/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("./refType/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
var _indexJs10 = require("./capitalize/index.js");
var _indexJsDefault10 = parcelHelpers.interopDefault(_indexJs10);
var _indexJs11 = require("./createChainedFunction/index.js");
var _indexJsDefault11 = parcelHelpers.interopDefault(_indexJs11);
var _indexJs12 = require("./debounce/index.js");
var _indexJsDefault12 = parcelHelpers.interopDefault(_indexJs12);
var _indexJs13 = require("./deprecatedPropType/index.js");
var _indexJsDefault13 = parcelHelpers.interopDefault(_indexJs13);
var _indexJs14 = require("./isMuiElement/index.js");
var _indexJsDefault14 = parcelHelpers.interopDefault(_indexJs14);
var _indexJs15 = require("./ownerDocument/index.js");
var _indexJsDefault15 = parcelHelpers.interopDefault(_indexJs15);
var _indexJs16 = require("./ownerWindow/index.js");
var _indexJsDefault16 = parcelHelpers.interopDefault(_indexJs16);
var _indexJs17 = require("./requirePropFactory/index.js");
var _indexJsDefault17 = parcelHelpers.interopDefault(_indexJs17);
var _indexJs18 = require("./setRef/index.js");
var _indexJsDefault18 = parcelHelpers.interopDefault(_indexJs18);
var _indexJs19 = require("./useEnhancedEffect/index.js");
var _indexJsDefault19 = parcelHelpers.interopDefault(_indexJs19);
var _indexJs20 = require("./useId/index.js");
var _indexJsDefault20 = parcelHelpers.interopDefault(_indexJs20);
var _indexJs21 = require("./unsupportedProp/index.js");
var _indexJsDefault21 = parcelHelpers.interopDefault(_indexJs21);
var _indexJs22 = require("./useControlled/index.js");
var _indexJsDefault22 = parcelHelpers.interopDefault(_indexJs22);
var _indexJs23 = require("./useEventCallback/index.js");
var _indexJsDefault23 = parcelHelpers.interopDefault(_indexJs23);
var _indexJs24 = require("./useForkRef/index.js");
var _indexJsDefault24 = parcelHelpers.interopDefault(_indexJs24);
var _indexJs25 = require("./useLazyRef/index.js");
var _indexJsDefault25 = parcelHelpers.interopDefault(_indexJs25);
var _indexJs26 = require("./useTimeout/index.js");
var _indexJsDefault26 = parcelHelpers.interopDefault(_indexJs26);
var _indexJs27 = require("./useOnMount/index.js");
var _indexJsDefault27 = parcelHelpers.interopDefault(_indexJs27);
var _indexJs28 = require("./useIsFocusVisible/index.js");
var _indexJsDefault28 = parcelHelpers.interopDefault(_indexJs28);
var _indexJs29 = require("./isFocusVisible/index.js");
var _indexJsDefault29 = parcelHelpers.interopDefault(_indexJs29);
var _indexJs30 = require("./getScrollbarSize/index.js");
var _indexJsDefault30 = parcelHelpers.interopDefault(_indexJs30);
var _indexJs31 = require("./usePreviousProps/index.js");
var _indexJsDefault31 = parcelHelpers.interopDefault(_indexJs31);
var _indexJs32 = require("./getValidReactChildren/index.js");
var _indexJsDefault32 = parcelHelpers.interopDefault(_indexJs32);
var _indexJs33 = require("./visuallyHidden/index.js");
var _indexJsDefault33 = parcelHelpers.interopDefault(_indexJs33);
var _indexJs34 = require("./integerPropType/index.js");
var _indexJsDefault34 = parcelHelpers.interopDefault(_indexJs34);
var _indexJs35 = require("./resolveProps/index.js");
var _indexJsDefault35 = parcelHelpers.interopDefault(_indexJs35);
var _indexJs36 = require("./composeClasses/index.js");
var _indexJsDefault36 = parcelHelpers.interopDefault(_indexJs36);
var _indexJs37 = require("./generateUtilityClass/index.js");
var _indexJsDefault37 = parcelHelpers.interopDefault(_indexJs37);
parcelHelpers.exportAll(_indexJs37, exports);
var _indexJs38 = require("./generateUtilityClasses/index.js");
var _indexJsDefault38 = parcelHelpers.interopDefault(_indexJs38);
var _indexJs39 = require("./ClassNameGenerator/index.js");
var _indexJsDefault39 = parcelHelpers.interopDefault(_indexJs39);
var _indexJs40 = require("./clamp/index.js");
var _indexJsDefault40 = parcelHelpers.interopDefault(_indexJs40);
var _indexJs41 = require("./useSlotProps/index.js");
var _indexJsDefault41 = parcelHelpers.interopDefault(_indexJs41);
var _indexJs42 = require("./resolveComponentProps/index.js");
var _indexJsDefault42 = parcelHelpers.interopDefault(_indexJs42);
var _indexJs43 = require("./extractEventHandlers/index.js");
var _indexJsDefault43 = parcelHelpers.interopDefault(_indexJs43);
var _indexJs44 = require("./getReactNodeRef/index.js");
var _indexJsDefault44 = parcelHelpers.interopDefault(_indexJs44);
var _indexJs45 = require("./getReactElementRef/index.js");
var _indexJsDefault45 = parcelHelpers.interopDefault(_indexJs45);
var _indexJs46 = require("./types/index.js");
parcelHelpers.exportAll(_indexJs46, exports);

},{"./chainPropTypes/index.js":"iMBqb","./deepmerge/index.js":"jXpIR","./elementAcceptingRef/index.js":"ft8Dv","./elementTypeAcceptingRef/index.js":"hhhja","./exactProp/index.js":"35ddC","./formatMuiErrorMessage/index.js":"1j6HB","./getDisplayName/index.js":"irCBE","./HTMLElementType/index.js":"d4aB9","./ponyfillGlobal/index.js":"kbbBp","./refType/index.js":"46DUK","./capitalize/index.js":"2SUcG","./createChainedFunction/index.js":"7C9IC","./debounce/index.js":"lT7w6","./deprecatedPropType/index.js":"fPBUT","./isMuiElement/index.js":"gmTwb","./ownerDocument/index.js":"9cLN7","./ownerWindow/index.js":"6LjG1","./requirePropFactory/index.js":"8D8Tu","./setRef/index.js":"7kNp9","./useEnhancedEffect/index.js":"eelWA","./useId/index.js":"6pjxY","./unsupportedProp/index.js":"4l2TE","./useControlled/index.js":"b15qx","./useEventCallback/index.js":"5oliy","./useForkRef/index.js":"i2MXF","./useLazyRef/index.js":"1cFZC","./useTimeout/index.js":"3S1Z7","./useOnMount/index.js":"eaUFJ","./useIsFocusVisible/index.js":"hzt0h","./isFocusVisible/index.js":"f66gw","./getScrollbarSize/index.js":"U2dj6","./usePreviousProps/index.js":"k5CgB","./getValidReactChildren/index.js":"lTonA","./visuallyHidden/index.js":"dgqin","./integerPropType/index.js":"9wOwj","./resolveProps/index.js":"90xNp","./composeClasses/index.js":"kWa9t","./generateUtilityClass/index.js":"jjg4W","./generateUtilityClasses/index.js":"7FCO4","./ClassNameGenerator/index.js":"8i4Qx","./clamp/index.js":"esPUR","./useSlotProps/index.js":"eX91S","./resolveComponentProps/index.js":"bxe2O","./extractEventHandlers/index.js":"138X0","./getReactNodeRef/index.js":"bUseI","./getReactElementRef/index.js":"e4YUR","./types/index.js":"3gAER","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iMBqb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _chainPropTypesJsDefault.default));
var _chainPropTypesJs = require("./chainPropTypes.js");
var _chainPropTypesJsDefault = parcelHelpers.interopDefault(_chainPropTypesJs);

},{"./chainPropTypes.js":"c7LZH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c7LZH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>chainPropTypes);
function chainPropTypes(propType1, propType2) {
    return function validate(...args) {
        return propType1(...args) || propType2(...args);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jXpIR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _deepmergeJsDefault.default));
var _deepmergeJs = require("./deepmerge.js");
var _deepmergeJsDefault = parcelHelpers.interopDefault(_deepmergeJs);
parcelHelpers.exportAll(_deepmergeJs, exports);

},{"./deepmerge.js":"lxJTe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lxJTe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js
parcelHelpers.export(exports, "isPlainObject", ()=>isPlainObject);
parcelHelpers.export(exports, "default", ()=>deepmerge);
var _react = require("react");
var _reactIs = require("react-is");
function isPlainObject(item) {
    if (typeof item !== 'object' || item === null) return false;
    const prototype = Object.getPrototypeOf(item);
    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);
}
function deepClone(source) {
    if (/*#__PURE__*/ _react.isValidElement(source) || (0, _reactIs.isValidElementType)(source) || !isPlainObject(source)) return source;
    const output = {};
    Object.keys(source).forEach((key)=>{
        output[key] = deepClone(source[key]);
    });
    return output;
}
function deepmerge(target, source, options = {
    clone: true
}) {
    const output = options.clone ? {
        ...target
    } : target;
    if (isPlainObject(target) && isPlainObject(source)) Object.keys(source).forEach((key)=>{
        if (/*#__PURE__*/ _react.isValidElement(source[key]) || (0, _reactIs.isValidElementType)(source[key])) output[key] = source[key];
        else if (isPlainObject(source[key]) && // Avoid prototype pollution
        Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
        else if (options.clone) output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
        else output[key] = source[key];
    });
    return output;
}

},{"react":"jMk1U","react-is":"59S9B","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ft8Dv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _elementAcceptingRefJsDefault.default));
var _elementAcceptingRefJs = require("./elementAcceptingRef.js");
var _elementAcceptingRefJsDefault = parcelHelpers.interopDefault(_elementAcceptingRefJs);

},{"./elementAcceptingRef.js":"5s1zr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5s1zr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _indexJs = require("../chainPropTypes/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function isClassComponent(elementType) {
    // elementType.prototype?.isReactComponent
    const { prototype = {} } = elementType;
    return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName, location, propFullName) {
    const element = props[propName];
    const safePropName = propFullName || propName;
    if (element == null || // When server-side rendering React doesn't warn either.
    // This is not an accurate check for SSR.
    // This is only in place for Emotion compat.
    // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
    typeof window === 'undefined') return null;
    let warningHint;
    const elementType = element.type;
    /**
   * Blacklisting instead of whitelisting
   *
   * Blacklisting will miss some components, such as React.Fragment. Those will at least
   * trigger a warning in React.
   * We can't whitelist because there is no safe way to detect React.forwardRef
   * or class components. "Safe" means there's no public API.
   *
   */ if (typeof elementType === 'function' && !isClassComponent(elementType)) warningHint = 'Did you accidentally use a plain function component for an element instead?';
    if (warningHint !== undefined) return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');
    return null;
}
const elementAcceptingRef = (0, _indexJsDefault.default)((0, _propTypesDefault.default).element, acceptingRef);
elementAcceptingRef.isRequired = (0, _indexJsDefault.default)((0, _propTypesDefault.default).element.isRequired, acceptingRef);
exports.default = elementAcceptingRef;

},{"prop-types":"GNqOQ","../chainPropTypes/index.js":"iMBqb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hhhja":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _elementTypeAcceptingRefJsDefault.default));
var _elementTypeAcceptingRefJs = require("./elementTypeAcceptingRef.js");
var _elementTypeAcceptingRefJsDefault = parcelHelpers.interopDefault(_elementTypeAcceptingRefJs);

},{"./elementTypeAcceptingRef.js":"5ldlE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5ldlE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _indexJs = require("../chainPropTypes/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function isClassComponent(elementType) {
    // elementType.prototype?.isReactComponent
    const { prototype = {} } = elementType;
    return Boolean(prototype.isReactComponent);
}
function elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {
    const propValue = props[propName];
    const safePropName = propFullName || propName;
    if (propValue == null || // When server-side rendering React doesn't warn either.
    // This is not an accurate check for SSR.
    // This is only in place for emotion compat.
    // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
    typeof window === 'undefined') return null;
    let warningHint;
    /**
   * Blacklisting instead of whitelisting
   *
   * Blacklisting will miss some components, such as React.Fragment. Those will at least
   * trigger a warning in React.
   * We can't whitelist because there is no safe way to detect React.forwardRef
   * or class components. "Safe" means there's no public API.
   *
   */ if (typeof propValue === 'function' && !isClassComponent(propValue)) warningHint = 'Did you accidentally provide a plain function component instead?';
    if (warningHint !== undefined) return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');
    return null;
}
exports.default = (0, _indexJsDefault.default)((0, _propTypesDefault.default).elementType, elementTypeAcceptingRef);

},{"prop-types":"GNqOQ","../chainPropTypes/index.js":"iMBqb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"35ddC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _exactPropJsDefault.default));
var _exactPropJs = require("./exactProp.js");
var _exactPropJsDefault = parcelHelpers.interopDefault(_exactPropJs);

},{"./exactProp.js":"eaMWf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eaMWf":[function(require,module,exports,__globalThis) {
// This module is based on https://github.com/airbnb/prop-types-exact repository.
// However, in order to reduce the number of dependencies and to remove some extra safe checks
// the module was forked.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>exactProp);
const specialProperty = 'exact-prop: \u200b';
function exactProp(propTypes) {
    return {
        ...propTypes,
        [specialProperty]: (props)=>{
            const unsupportedProps = Object.keys(props).filter((prop)=>!propTypes.hasOwnProperty(prop));
            if (unsupportedProps.length > 0) return new Error(`The following props are not supported: ${unsupportedProps.map((prop)=>`\`${prop}\``).join(', ')}. Please remove them.`);
            return null;
        }
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1j6HB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _formatMuiErrorMessageJsDefault.default));
var _formatMuiErrorMessageJs = require("./formatMuiErrorMessage.js");
var _formatMuiErrorMessageJsDefault = parcelHelpers.interopDefault(_formatMuiErrorMessageJs);

},{"./formatMuiErrorMessage.js":"8Ioau","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8Ioau":[function(require,module,exports,__globalThis) {
/**
 * WARNING: Don't import this directly. It's imported by the code generated by
 * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`
 * constructors to ensure the plugin works as expected. Supported patterns include:
 *   throw new Error('My message');
 *   throw new Error(`My message: ${foo}`);
 *   throw new Error(`My message: ${foo}` + 'another string');
 *   ...
 * @param {number} code
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>formatMuiErrorMessage);
function formatMuiErrorMessage(code, ...args) {
    const url = new URL(`https://mui.com/production-error/?code=${code}`);
    args.forEach((arg)=>url.searchParams.append('args[]', arg));
    return `Minified MUI error #${code}; visit ${url} for the full message.`;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"irCBE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getDisplayNameJsDefault.default));
var _getDisplayNameJs = require("./getDisplayName.js");
var _getDisplayNameJsDefault = parcelHelpers.interopDefault(_getDisplayNameJs);

},{"./getDisplayName.js":"iLIQP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iLIQP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getDisplayName);
var _reactIs = require("react-is");
function getFunctionComponentName(Component, fallback = '') {
    return Component.displayName || Component.name || fallback;
}
function getWrappedName(outerType, innerType, wrapperName) {
    const functionName = getFunctionComponentName(innerType);
    return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);
}
function getDisplayName(Component) {
    if (Component == null) return undefined;
    if (typeof Component === 'string') return Component;
    if (typeof Component === 'function') return getFunctionComponentName(Component, 'Component');
    // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`
    if (typeof Component === 'object') switch(Component.$$typeof){
        case 0, _reactIs.ForwardRef:
            return getWrappedName(Component, Component.render, 'ForwardRef');
        case 0, _reactIs.Memo:
            return getWrappedName(Component, Component.type, 'memo');
        default:
            return undefined;
    }
    return undefined;
}

},{"react-is":"59S9B","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d4aB9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _htmlelementTypeJsDefault.default));
var _htmlelementTypeJs = require("./HTMLElementType.js");
var _htmlelementTypeJsDefault = parcelHelpers.interopDefault(_htmlelementTypeJs);

},{"./HTMLElementType.js":"hI40x","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hI40x":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>HTMLElementType);
function HTMLElementType(props, propName, componentName, location, propFullName) {
    const propValue = props[propName];
    const safePropName = propFullName || propName;
    if (propValue == null) return null;
    if (propValue && propValue.nodeType !== 1) return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an HTMLElement.`);
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kbbBp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _ponyfillGlobalJsDefault.default));
var _ponyfillGlobalJs = require("./ponyfillGlobal.js");
var _ponyfillGlobalJsDefault = parcelHelpers.interopDefault(_ponyfillGlobalJs);

},{"./ponyfillGlobal.js":"4j4uh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4j4uh":[function(require,module,exports,__globalThis) {
/* eslint-disable */ /**
 * https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
 * @deprecated Use `globalThis` instead.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"46DUK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _refTypeJsDefault.default));
var _refTypeJs = require("./refType.js");
var _refTypeJsDefault = parcelHelpers.interopDefault(_refTypeJs);

},{"./refType.js":"1S6cw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1S6cw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
const refType = (0, _propTypesDefault.default).oneOfType([
    (0, _propTypesDefault.default).func,
    (0, _propTypesDefault.default).object
]);
exports.default = refType;

},{"prop-types":"GNqOQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2SUcG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _capitalizeJsDefault.default));
var _capitalizeJs = require("./capitalize.js");
var _capitalizeJsDefault = parcelHelpers.interopDefault(_capitalizeJs);

},{"./capitalize.js":"7QniD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7QniD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>capitalize);
var _formatMuiErrorMessage = require("@mui/utils/formatMuiErrorMessage");
var _formatMuiErrorMessageDefault = parcelHelpers.interopDefault(_formatMuiErrorMessage);
function capitalize(string) {
    if (typeof string !== 'string') throw new Error('MUI: `capitalize(string)` expects a string argument.');
    return string.charAt(0).toUpperCase() + string.slice(1);
}

},{"@mui/utils/formatMuiErrorMessage":"cXsuk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7C9IC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _createChainedFunctionJsDefault.default));
var _createChainedFunctionJs = require("./createChainedFunction.js");
var _createChainedFunctionJsDefault = parcelHelpers.interopDefault(_createChainedFunctionJs);

},{"./createChainedFunction.js":"g8iCQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g8iCQ":[function(require,module,exports,__globalThis) {
/**
 * Safe chained function.
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createChainedFunction);
function createChainedFunction(...funcs) {
    return funcs.reduce((acc, func)=>{
        if (func == null) return acc;
        return function chainedFunction(...args) {
            acc.apply(this, args);
            func.apply(this, args);
        };
    }, ()=>{});
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lT7w6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _debounceJsDefault.default));
var _debounceJs = require("./debounce.js");
var _debounceJsDefault = parcelHelpers.interopDefault(_debounceJs);
parcelHelpers.exportAll(_debounceJs, exports);

},{"./debounce.js":"5LK7Y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5LK7Y":[function(require,module,exports,__globalThis) {
// Corresponds to 10 frames at 60 Hz.
// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>debounce);
function debounce(func, wait = 166) {
    let timeout;
    function debounced(...args) {
        const later = ()=>{
            // @ts-ignore
            func.apply(this, args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    }
    debounced.clear = ()=>{
        clearTimeout(timeout);
    };
    return debounced;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fPBUT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _deprecatedPropTypeJsDefault.default));
var _deprecatedPropTypeJs = require("./deprecatedPropType.js");
var _deprecatedPropTypeJsDefault = parcelHelpers.interopDefault(_deprecatedPropTypeJs);

},{"./deprecatedPropType.js":"hldbs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hldbs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>deprecatedPropType);
function deprecatedPropType(validator, reason) {
    return (props, propName, componentName, location, propFullName)=>{
        const componentNameSafe = componentName || '<<anonymous>>';
        const propFullNameSafe = propFullName || propName;
        if (typeof props[propName] !== 'undefined') return new Error(`The ${location} \`${propFullNameSafe}\` of ` + `\`${componentNameSafe}\` is deprecated. ${reason}`);
        return null;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gmTwb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _isMuiElementJsDefault.default));
var _isMuiElementJs = require("./isMuiElement.js");
var _isMuiElementJsDefault = parcelHelpers.interopDefault(_isMuiElementJs);

},{"./isMuiElement.js":"lwH4t","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lwH4t":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isMuiElement);
var _react = require("react");
function isMuiElement(element, muiNames) {
    return /*#__PURE__*/ _react.isValidElement(element) && muiNames.indexOf(// For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9cLN7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _ownerDocumentJsDefault.default));
var _ownerDocumentJs = require("./ownerDocument.js");
var _ownerDocumentJsDefault = parcelHelpers.interopDefault(_ownerDocumentJs);

},{"./ownerDocument.js":"hAyiC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hAyiC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ownerDocument);
function ownerDocument(node) {
    return node && node.ownerDocument || document;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6LjG1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _ownerWindowJsDefault.default));
var _ownerWindowJs = require("./ownerWindow.js");
var _ownerWindowJsDefault = parcelHelpers.interopDefault(_ownerWindowJs);

},{"./ownerWindow.js":"hyOiI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hyOiI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ownerWindow);
var _indexJs = require("../ownerDocument/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function ownerWindow(node) {
    const doc = (0, _indexJsDefault.default)(node);
    return doc.defaultView || window;
}

},{"../ownerDocument/index.js":"9cLN7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8D8Tu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _requirePropFactoryJsDefault.default));
var _requirePropFactoryJs = require("./requirePropFactory.js");
var _requirePropFactoryJsDefault = parcelHelpers.interopDefault(_requirePropFactoryJs);

},{"./requirePropFactory.js":"liRqm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"liRqm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>requirePropFactory);
function requirePropFactory(componentNameInError, Component) {
    // eslint-disable-next-line react/forbid-foreign-prop-types
    const prevPropTypes = Component ? {
        ...Component.propTypes
    } : null;
    const requireProp = (requiredProp)=>(props, propName, componentName, location, propFullName, ...args)=>{
            const propFullNameSafe = propFullName || propName;
            const defaultTypeChecker = prevPropTypes?.[propFullNameSafe];
            if (defaultTypeChecker) {
                const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);
                if (typeCheckerResult) return typeCheckerResult;
            }
            if (typeof props[propName] !== 'undefined' && !props[requiredProp]) return new Error(`The prop \`${propFullNameSafe}\` of ` + `\`${componentNameInError}\` can only be used together with the \`${requiredProp}\` prop.`);
            return null;
        };
    return requireProp;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7kNp9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _setRefJsDefault.default));
var _setRefJs = require("./setRef.js");
var _setRefJsDefault = parcelHelpers.interopDefault(_setRefJs);

},{"./setRef.js":"iul3h","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iul3h":[function(require,module,exports,__globalThis) {
/**
 * TODO v5: consider making it private
 *
 * passes {value} to {ref}
 *
 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
 * https://github.com/mui/material-ui/issues/13539
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>setRef);
function setRef(ref, value) {
    if (typeof ref === 'function') ref(value);
    else if (ref) ref.current = value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eelWA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useEnhancedEffectJsDefault.default));
var _useEnhancedEffectJs = require("./useEnhancedEffect.js");
var _useEnhancedEffectJsDefault = parcelHelpers.interopDefault(_useEnhancedEffectJs);

},{"./useEnhancedEffect.js":"ihN7y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ihN7y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
'use client';
/**
 * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.
 * This is useful for effects that are only needed for client-side rendering but not for SSR.
 *
 * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * and confirm it doesn't apply to your use-case.
 */ const useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
exports.default = useEnhancedEffect;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6pjxY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useIdJsDefault.default));
var _useIdJs = require("./useId.js");
var _useIdJsDefault = parcelHelpers.interopDefault(_useIdJs);

},{"./useId.js":"db2xz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"db2xz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useId);
var _react = require("react");
'use client';
let globalId = 0;
// TODO React 17: Remove `useGlobalId` once React 17 support is removed
function useGlobalId(idOverride) {
    const [defaultId, setDefaultId] = _react.useState(idOverride);
    const id = idOverride || defaultId;
    _react.useEffect(()=>{
        if (defaultId == null) {
            // Fallback to this default id when possible.
            // Use the incrementing value for client-side rendering only.
            // We can't use it server-side.
            // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
            globalId += 1;
            setDefaultId(`mui-${globalId}`);
        }
    }, [
        defaultId
    ]);
    return id;
}
// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why
const safeReact = {
    ..._react
};
const maybeReactUseId = safeReact.useId;
function useId(idOverride) {
    // React.useId() is only available from React 17.0.0.
    if (maybeReactUseId !== undefined) {
        const reactId = maybeReactUseId();
        return idOverride ?? reactId;
    }
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler
    // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.
    return useGlobalId(idOverride);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4l2TE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _unsupportedPropJsDefault.default));
var _unsupportedPropJs = require("./unsupportedProp.js");
var _unsupportedPropJsDefault = parcelHelpers.interopDefault(_unsupportedPropJs);

},{"./unsupportedProp.js":"3vuKl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3vuKl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>unsupportedProp);
function unsupportedProp(props, propName, componentName, location, propFullName) {
    const propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== 'undefined') return new Error(`The prop \`${propFullNameSafe}\` is not supported. Please remove it.`);
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b15qx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useControlledJsDefault.default));
var _useControlledJs = require("./useControlled.js");
var _useControlledJsDefault = parcelHelpers.interopDefault(_useControlledJs);

},{"./useControlled.js":"1diLu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1diLu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useControlled);
// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored
/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */ var _react = require("react");
'use client';
function useControlled({ controlled, default: defaultProp, name, state = 'value' }) {
    // isControlled is ignored in the hook dependency lists as it should never change.
    const { current: isControlled } = _react.useRef(controlled !== undefined);
    const [valueState, setValue] = _react.useState(defaultProp);
    const value = isControlled ? controlled : valueState;
    {
        _react.useEffect(()=>{
            if (isControlled !== (controlled !== undefined)) console.error([
                `MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`,
                'Elements should not switch from uncontrolled to controlled (or vice versa).',
                `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.',
                "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.",
                'More info: https://fb.me/react-controlled-components'
            ].join('\n'));
        }, [
            state,
            name,
            controlled
        ]);
        const { current: defaultValue } = _react.useRef(defaultProp);
        _react.useEffect(()=>{
            // Object.is() is not equivalent to the === operator.
            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.
            if (!isControlled && !Object.is(defaultValue, defaultProp)) console.error([
                `MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`
            ].join('\n'));
        }, [
            JSON.stringify(defaultProp)
        ]);
    }
    const setValueIfUncontrolled = _react.useCallback((newValue)=>{
        if (!isControlled) setValue(newValue);
    }, []);
    return [
        value,
        setValueIfUncontrolled
    ];
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5oliy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useEventCallbackJsDefault.default));
var _useEventCallbackJs = require("./useEventCallback.js");
var _useEventCallbackJsDefault = parcelHelpers.interopDefault(_useEventCallbackJs);

},{"./useEventCallback.js":"cNGus","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cNGus":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _indexJs = require("../useEnhancedEffect/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
'use client';
/**
 * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892
 * See RFC in https://github.com/reactjs/rfcs/pull/220
 */ function useEventCallback(fn) {
    const ref = _react.useRef(fn);
    (0, _indexJsDefault.default)(()=>{
        ref.current = fn;
    });
    return _react.useRef((...args)=>// @ts-expect-error hide `this`
        (0, ref.current)(...args)).current;
}
exports.default = useEventCallback;

},{"react":"jMk1U","../useEnhancedEffect/index.js":"eelWA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i2MXF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useForkRefJsDefault.default));
var _useForkRefJs = require("./useForkRef.js");
var _useForkRefJsDefault = parcelHelpers.interopDefault(_useForkRefJs);

},{"./useForkRef.js":"4o3Hx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4o3Hx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useForkRef);
var _react = require("react");
'use client';
function useForkRef(...refs) {
    const cleanupRef = _react.useRef(undefined);
    const refEffect = _react.useCallback((instance)=>{
        const cleanups = refs.map((ref)=>{
            if (ref == null) return null;
            if (typeof ref === 'function') {
                const refCallback = ref;
                const refCleanup = refCallback(instance);
                return typeof refCleanup === 'function' ? refCleanup : ()=>{
                    refCallback(null);
                };
            }
            ref.current = instance;
            return ()=>{
                ref.current = null;
            };
        });
        return ()=>{
            cleanups.forEach((refCleanup)=>refCleanup?.());
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, refs);
    return _react.useMemo(()=>{
        if (refs.every((ref)=>ref == null)) return null;
        return (value)=>{
            if (cleanupRef.current) {
                cleanupRef.current();
                cleanupRef.current = undefined;
            }
            if (value != null) cleanupRef.current = refEffect(value);
        };
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, refs);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1cFZC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useLazyRefJsDefault.default));
var _useLazyRefJs = require("./useLazyRef.js");
var _useLazyRefJsDefault = parcelHelpers.interopDefault(_useLazyRefJs);

},{"./useLazyRef.js":"g3rZg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g3rZg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useLazyRef);
var _react = require("react");
'use client';
const UNINITIALIZED = {};
function useLazyRef(init, initArg) {
    const ref = _react.useRef(UNINITIALIZED);
    if (ref.current === UNINITIALIZED) ref.current = init(initArg);
    return ref;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3S1Z7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useTimeoutJsDefault.default));
parcelHelpers.export(exports, "Timeout", ()=>(0, _useTimeoutJs.Timeout));
var _useTimeoutJs = require("./useTimeout.js");
var _useTimeoutJsDefault = parcelHelpers.interopDefault(_useTimeoutJs);

},{"./useTimeout.js":"i2CHQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i2CHQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Timeout", ()=>Timeout);
parcelHelpers.export(exports, "default", ()=>useTimeout);
var _useLazyRefJs = require("../useLazyRef/useLazyRef.js");
var _useLazyRefJsDefault = parcelHelpers.interopDefault(_useLazyRefJs);
var _useOnMountJs = require("../useOnMount/useOnMount.js");
var _useOnMountJsDefault = parcelHelpers.interopDefault(_useOnMountJs);
'use client';
class Timeout {
    static create() {
        return new Timeout();
    }
    currentId = null;
    /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */ start(delay, fn) {
        this.clear();
        this.currentId = setTimeout(()=>{
            this.currentId = null;
            fn();
        }, delay);
    }
    clear = ()=>{
        if (this.currentId !== null) {
            clearTimeout(this.currentId);
            this.currentId = null;
        }
    };
    disposeEffect = ()=>{
        return this.clear;
    };
}
function useTimeout() {
    const timeout = (0, _useLazyRefJsDefault.default)(Timeout.create).current;
    (0, _useOnMountJsDefault.default)(timeout.disposeEffect);
    return timeout;
}

},{"../useLazyRef/useLazyRef.js":"g3rZg","../useOnMount/useOnMount.js":"j5YhN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j5YhN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useOnMount);
var _react = require("react");
'use client';
const EMPTY = [];
function useOnMount(fn) {
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array
    /* eslint-disable react-hooks/exhaustive-deps */ _react.useEffect(fn, EMPTY);
/* eslint-enable react-hooks/exhaustive-deps */ }

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eaUFJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useOnMountJsDefault.default));
var _useOnMountJs = require("./useOnMount.js");
var _useOnMountJsDefault = parcelHelpers.interopDefault(_useOnMountJs);

},{"./useOnMount.js":"j5YhN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hzt0h":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useIsFocusVisibleJsDefault.default));
var _useIsFocusVisibleJs = require("./useIsFocusVisible.js");
var _useIsFocusVisibleJsDefault = parcelHelpers.interopDefault(_useIsFocusVisibleJs);
parcelHelpers.exportAll(_useIsFocusVisibleJs, exports);

},{"./useIsFocusVisible.js":"cL3V3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cL3V3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "teardown", ()=>teardown);
parcelHelpers.export(exports, "default", ()=>useIsFocusVisible);
// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js
var _react = require("react");
var _useTimeoutJs = require("../useTimeout/useTimeout.js");
'use client';
let hadKeyboardEvent = true;
let hadFocusVisibleRecently = false;
const hadFocusVisibleRecentlyTimeout = new (0, _useTimeoutJs.Timeout)();
const inputTypesWhitelist = {
    text: true,
    search: true,
    url: true,
    tel: true,
    email: true,
    password: true,
    number: true,
    date: true,
    month: true,
    week: true,
    time: true,
    datetime: true,
    'datetime-local': true
};
/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @returns {boolean}
 */ function focusTriggersKeyboardModality(node) {
    const { type, tagName } = node;
    if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) return true;
    if (tagName === 'TEXTAREA' && !node.readOnly) return true;
    if (node.isContentEditable) return true;
    return false;
}
/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */ function handleKeyDown(event) {
    if (event.metaKey || event.altKey || event.ctrlKey) return;
    hadKeyboardEvent = true;
}
/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */ function handlePointerDown() {
    hadKeyboardEvent = false;
}
function handleVisibilityChange() {
    if (this.visibilityState === 'hidden') // If the tab becomes active again, the browser will handle calling focus
    // on the element (Safari actually calls it twice).
    // If this tab change caused a blur on an element with focus-visible,
    // re-apply the class when the user switches back to the tab.
    {
        if (hadFocusVisibleRecently) hadKeyboardEvent = true;
    }
}
function prepare(doc) {
    doc.addEventListener('keydown', handleKeyDown, true);
    doc.addEventListener('mousedown', handlePointerDown, true);
    doc.addEventListener('pointerdown', handlePointerDown, true);
    doc.addEventListener('touchstart', handlePointerDown, true);
    doc.addEventListener('visibilitychange', handleVisibilityChange, true);
}
function teardown(doc) {
    doc.removeEventListener('keydown', handleKeyDown, true);
    doc.removeEventListener('mousedown', handlePointerDown, true);
    doc.removeEventListener('pointerdown', handlePointerDown, true);
    doc.removeEventListener('touchstart', handlePointerDown, true);
    doc.removeEventListener('visibilitychange', handleVisibilityChange, true);
}
function isFocusVisible(event) {
    const { target } = event;
    try {
        return target.matches(':focus-visible');
    } catch (error) {
    // Browsers not implementing :focus-visible will throw a SyntaxError.
    // We use our own heuristic for those browsers.
    // Rethrow might be better if it's not the expected error but do we really
    // want to crash if focus-visible malfunctioned?
    }
    // No need for validFocusTarget check. The user does that by attaching it to
    // focusable events only.
    return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
    const ref = _react.useCallback((node)=>{
        if (node != null) prepare(node.ownerDocument);
    }, []);
    const isFocusVisibleRef = _react.useRef(false);
    /**
   * Should be called if a blur event is fired
   */ function handleBlurVisible() {
        // checking against potential state variable does not suffice if we focus and blur synchronously.
        // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
        // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
        // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
        // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
        if (isFocusVisibleRef.current) {
            // To detect a tab/window switch, we look for a blur event followed
            // rapidly by a visibility change.
            // If we don't see a visibility change within 100ms, it's probably a
            // regular focus change.
            hadFocusVisibleRecently = true;
            hadFocusVisibleRecentlyTimeout.start(100, ()=>{
                hadFocusVisibleRecently = false;
            });
            isFocusVisibleRef.current = false;
            return true;
        }
        return false;
    }
    /**
   * Should be called if a blur event is fired
   */ function handleFocusVisible(event) {
        if (isFocusVisible(event)) {
            isFocusVisibleRef.current = true;
            return true;
        }
        return false;
    }
    return {
        isFocusVisibleRef,
        onFocus: handleFocusVisible,
        onBlur: handleBlurVisible,
        ref
    };
}

},{"react":"jMk1U","../useTimeout/useTimeout.js":"i2CHQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f66gw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _isFocusVisibleJsDefault.default));
var _isFocusVisibleJs = require("./isFocusVisible.js");
var _isFocusVisibleJsDefault = parcelHelpers.interopDefault(_isFocusVisibleJs);

},{"./isFocusVisible.js":"izKr3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"izKr3":[function(require,module,exports,__globalThis) {
/**
 * Returns a boolean indicating if the event's target has :focus-visible
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isFocusVisible);
function isFocusVisible(element) {
    try {
        return element.matches(':focus-visible');
    } catch (error) {
        // Do not warn on jsdom tests, otherwise all tests that rely on focus have to be skipped
        // Tests that rely on `:focus-visible` will still have to be skipped in jsdom
        if (!/jsdom/.test(window.navigator.userAgent)) console.warn([
            'MUI: The `:focus-visible` pseudo class is not supported in this browser.',
            'Some components rely on this feature to work properly.'
        ].join('\n'));
    }
    return false;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"U2dj6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getScrollbarSizeJsDefault.default));
var _getScrollbarSizeJs = require("./getScrollbarSize.js");
var _getScrollbarSizeJsDefault = parcelHelpers.interopDefault(_getScrollbarSizeJs);

},{"./getScrollbarSize.js":"eoU0i","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eoU0i":[function(require,module,exports,__globalThis) {
// A change of the browser zoom change the scrollbar size.
// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getScrollbarSize);
function getScrollbarSize(win = window) {
    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
    const documentWidth = win.document.documentElement.clientWidth;
    return win.innerWidth - documentWidth;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k5CgB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _usePreviousPropsJsDefault.default));
var _usePreviousPropsJs = require("./usePreviousProps.js");
var _usePreviousPropsJsDefault = parcelHelpers.interopDefault(_usePreviousPropsJs);

},{"./usePreviousProps.js":"eQAJ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eQAJ7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
'use client';
const usePreviousProps = (value)=>{
    const ref = _react.useRef({});
    _react.useEffect(()=>{
        ref.current = value;
    });
    return ref.current;
};
exports.default = usePreviousProps;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lTonA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getValidReactChildrenJsDefault.default));
var _getValidReactChildrenJs = require("./getValidReactChildren.js");
var _getValidReactChildrenJsDefault = parcelHelpers.interopDefault(_getValidReactChildrenJs);

},{"./getValidReactChildren.js":"eD4iz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eD4iz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getValidReactChildren);
var _react = require("react");
function getValidReactChildren(children) {
    return _react.Children.toArray(children).filter((child)=>/*#__PURE__*/ _react.isValidElement(child));
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dgqin":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _visuallyHiddenJsDefault.default));
var _visuallyHiddenJs = require("./visuallyHidden.js");
var _visuallyHiddenJsDefault = parcelHelpers.interopDefault(_visuallyHiddenJs);

},{"./visuallyHidden.js":"lb9QK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lb9QK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const visuallyHidden = {
    border: 0,
    clip: 'rect(0 0 0 0)',
    height: '1px',
    margin: '-1px',
    overflow: 'hidden',
    padding: 0,
    position: 'absolute',
    whiteSpace: 'nowrap',
    width: '1px'
};
exports.default = visuallyHidden;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9wOwj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _integerPropTypeJsDefault.default));
var _integerPropTypeJs = require("./integerPropType.js");
var _integerPropTypeJsDefault = parcelHelpers.interopDefault(_integerPropTypeJs);
parcelHelpers.exportAll(_integerPropTypeJs, exports);

},{"./integerPropType.js":"bhaaE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bhaaE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTypeByValue", ()=>getTypeByValue);
function getTypeByValue(value) {
    const valueType = typeof value;
    switch(valueType){
        case 'number':
            if (Number.isNaN(value)) return 'NaN';
            if (!Number.isFinite(value)) return 'Infinity';
            if (value !== Math.floor(value)) return 'float';
            return 'number';
        case 'object':
            if (value === null) return 'null';
            return value.constructor.name;
        default:
            return valueType;
    }
}
function requiredInteger(props, propName, componentName, location) {
    const propValue = props[propName];
    if (propValue == null || !Number.isInteger(propValue)) {
        const propType = getTypeByValue(propValue);
        return new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
    }
    return null;
}
function validator(props, propName, ...other) {
    const propValue = props[propName];
    if (propValue === undefined) return null;
    return requiredInteger(props, propName, ...other);
}
function validatorNoop() {
    return null;
}
validator.isRequired = requiredInteger;
validatorNoop.isRequired = validatorNoop;
exports.default = validator;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"90xNp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _resolvePropsJsDefault.default));
var _resolvePropsJs = require("./resolveProps.js");
var _resolvePropsJsDefault = parcelHelpers.interopDefault(_resolvePropsJs);

},{"./resolveProps.js":"cNpA5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cNpA5":[function(require,module,exports,__globalThis) {
/**
 * Add keys, values of `defaultProps` that does not exist in `props`
 * @param defaultProps
 * @param props
 * @returns resolved props
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>resolveProps);
function resolveProps(defaultProps, props) {
    const output = {
        ...props
    };
    for(const key in defaultProps)if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {
        const propName = key;
        if (propName === 'components' || propName === 'slots') output[propName] = {
            ...defaultProps[propName],
            ...output[propName]
        };
        else if (propName === 'componentsProps' || propName === 'slotProps') {
            const defaultSlotProps = defaultProps[propName];
            const slotProps = props[propName];
            if (!slotProps) output[propName] = defaultSlotProps || {};
            else if (!defaultSlotProps) output[propName] = slotProps;
            else {
                output[propName] = {
                    ...slotProps
                };
                for(const slotKey in defaultSlotProps)if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {
                    const slotPropName = slotKey;
                    output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
                }
            }
        } else if (output[propName] === undefined) output[propName] = defaultProps[propName];
    }
    return output;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kWa9t":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _composeClassesJsDefault.default));
var _composeClassesJs = require("./composeClasses.js");
var _composeClassesJsDefault = parcelHelpers.interopDefault(_composeClassesJs);

},{"./composeClasses.js":"2UFEU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2UFEU":[function(require,module,exports,__globalThis) {
/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0
   ---
   These rules are preventing the performance optimizations below.
 */ /**
 * Compose classes from multiple sources.
 *
 * @example
 * ```tsx
 * const slots = {
 *  root: ['root', 'primary'],
 *  label: ['label'],
 * };
 *
 * const getUtilityClass = (slot) => `MuiButton-${slot}`;
 *
 * const classes = {
 *   root: 'my-root-class',
 * };
 *
 * const output = composeClasses(slots, getUtilityClass, classes);
 * // {
 * //   root: 'MuiButton-root MuiButton-primary my-root-class',
 * //   label: 'MuiButton-label',
 * // }
 * ```
 *
 * @param slots a list of classes for each possible slot
 * @param getUtilityClass a function to resolve the class based on the slot name
 * @param classes the input classes from props
 * @returns the resolved classes for all slots
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>composeClasses);
function composeClasses(slots, getUtilityClass, classes) {
    const output = {};
    for(const slotName in slots){
        const slot = slots[slotName];
        let buffer = '';
        let start = true;
        for(let i = 0; i < slot.length; i += 1){
            const value = slot[i];
            if (value) {
                buffer += (start === true ? '' : ' ') + getUtilityClass(value);
                start = false;
                if (classes && classes[value]) buffer += ' ' + classes[value];
            }
        }
        output[slotName] = buffer;
    }
    return output;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jjg4W":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _generateUtilityClassJsDefault.default));
var _generateUtilityClassJs = require("./generateUtilityClass.js");
var _generateUtilityClassJsDefault = parcelHelpers.interopDefault(_generateUtilityClassJs);
parcelHelpers.exportAll(_generateUtilityClassJs, exports);

},{"./generateUtilityClass.js":"68j7m","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"68j7m":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "globalStateClasses", ()=>globalStateClasses);
parcelHelpers.export(exports, "default", ()=>generateUtilityClass);
parcelHelpers.export(exports, "isGlobalState", ()=>isGlobalState);
var _indexJs = require("../ClassNameGenerator/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
const globalStateClasses = {
    active: 'active',
    checked: 'checked',
    completed: 'completed',
    disabled: 'disabled',
    error: 'error',
    expanded: 'expanded',
    focused: 'focused',
    focusVisible: 'focusVisible',
    open: 'open',
    readOnly: 'readOnly',
    required: 'required',
    selected: 'selected'
};
function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {
    const globalStateClass = globalStateClasses[slot];
    return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${(0, _indexJsDefault.default).generate(componentName)}-${slot}`;
}
function isGlobalState(slot) {
    return globalStateClasses[slot] !== undefined;
}

},{"../ClassNameGenerator/index.js":"8i4Qx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8i4Qx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _classNameGeneratorJsDefault.default));
var _classNameGeneratorJs = require("./ClassNameGenerator.js");
var _classNameGeneratorJsDefault = parcelHelpers.interopDefault(_classNameGeneratorJs);

},{"./ClassNameGenerator.js":"hChY7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hChY7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const defaultGenerator = (componentName)=>componentName;
const createClassNameGenerator = ()=>{
    let generate = defaultGenerator;
    return {
        configure (generator) {
            generate = generator;
        },
        generate (componentName) {
            return generate(componentName);
        },
        reset () {
            generate = defaultGenerator;
        }
    };
};
const ClassNameGenerator = createClassNameGenerator();
exports.default = ClassNameGenerator;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7FCO4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _generateUtilityClassesJsDefault.default));
var _generateUtilityClassesJs = require("./generateUtilityClasses.js");
var _generateUtilityClassesJsDefault = parcelHelpers.interopDefault(_generateUtilityClassesJs);

},{"./generateUtilityClasses.js":"euknT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"euknT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>generateUtilityClasses);
var _indexJs = require("../generateUtilityClass/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {
    const result = {};
    slots.forEach((slot)=>{
        result[slot] = (0, _indexJsDefault.default)(componentName, slot, globalStatePrefix);
    });
    return result;
}

},{"../generateUtilityClass/index.js":"jjg4W","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"esPUR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _clampJsDefault.default));
var _clampJs = require("./clamp.js");
var _clampJsDefault = parcelHelpers.interopDefault(_clampJs);

},{"./clamp.js":"iJUXb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iJUXb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {
    return Math.max(min, Math.min(val, max));
}
exports.default = clamp;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eX91S":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useSlotPropsJsDefault.default));
var _useSlotPropsJs = require("./useSlotProps.js");
var _useSlotPropsJsDefault = parcelHelpers.interopDefault(_useSlotPropsJs);

},{"./useSlotProps.js":"65mRe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"65mRe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../useForkRef/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../appendOwnerState/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../mergeSlotProps/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../resolveComponentProps/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
'use client';
/**
 * @ignore - do not document.
 * Builds the props to be passed into the slot of an unstyled component.
 * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.
 * If the slot component is not a host component, it also merges in the `ownerState`.
 *
 * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.
 */ function useSlotProps(parameters) {
    const { elementType, externalSlotProps, ownerState, skipResolvingSlotProps = false, ...other } = parameters;
    const resolvedComponentsProps = skipResolvingSlotProps ? {} : (0, _indexJsDefault3.default)(externalSlotProps, ownerState);
    const { props: mergedProps, internalRef } = (0, _indexJsDefault2.default)({
        ...other,
        externalSlotProps: resolvedComponentsProps
    });
    const ref = (0, _indexJsDefault.default)(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);
    const props = (0, _indexJsDefault1.default)(elementType, {
        ...mergedProps,
        ref
    }, ownerState);
    return props;
}
exports.default = useSlotProps;

},{"../useForkRef/index.js":"i2MXF","../appendOwnerState/index.js":"39eCt","../mergeSlotProps/index.js":"1iOne","../resolveComponentProps/index.js":"bxe2O","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"39eCt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _appendOwnerStateJsDefault.default));
var _appendOwnerStateJs = require("./appendOwnerState.js");
var _appendOwnerStateJsDefault = parcelHelpers.interopDefault(_appendOwnerStateJs);

},{"./appendOwnerState.js":"4zgnS","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4zgnS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isHostComponent/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
/**
 * Type of the ownerState based on the type of an element it applies to.
 * This resolves to the provided OwnerState for React components and `undefined` for host components.
 * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.
 */ /**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.
 * @param otherProps Props of the element.
 * @param ownerState
 */ function appendOwnerState(elementType, otherProps, ownerState) {
    if (elementType === undefined || (0, _indexJsDefault.default)(elementType)) return otherProps;
    return {
        ...otherProps,
        ownerState: {
            ...otherProps.ownerState,
            ...ownerState
        }
    };
}
exports.default = appendOwnerState;

},{"../isHostComponent/index.js":"yME7G","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"yME7G":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _isHostComponentJsDefault.default));
var _isHostComponentJs = require("./isHostComponent.js");
var _isHostComponentJsDefault = parcelHelpers.interopDefault(_isHostComponentJs);

},{"./isHostComponent.js":"lcAb4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lcAb4":[function(require,module,exports,__globalThis) {
/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function isHostComponent(element) {
    return typeof element === 'string';
}
exports.default = isHostComponent;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1iOne":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _mergeSlotPropsJsDefault.default));
var _mergeSlotPropsJs = require("./mergeSlotProps.js");
var _mergeSlotPropsJsDefault = parcelHelpers.interopDefault(_mergeSlotPropsJs);

},{"./mergeSlotProps.js":"iZA7K","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iZA7K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _indexJs = require("../extractEventHandlers/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../omitEventHandlers/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
/**
 * Merges the slot component internal props (usually coming from a hook)
 * with the externally provided ones.
 *
 * The merge order is (the latter overrides the former):
 * 1. The internal props (specified as a getter function to work with get*Props hook result)
 * 2. Additional props (specified internally on a Base UI component)
 * 3. External props specified on the owner component. These should only be used on a root slot.
 * 4. External props specified in the `slotProps.*` prop.
 * 5. The `className` prop - combined from all the above.
 * @param parameters
 * @returns
 */ function mergeSlotProps(parameters) {
    const { getSlotProps, additionalProps, externalSlotProps, externalForwardedProps, className } = parameters;
    if (!getSlotProps) {
        // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,
        // so we can simply merge all the props without having to worry about extracting event handlers.
        const joinedClasses = (0, _clsxDefault.default)(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);
        const mergedStyle = {
            ...additionalProps?.style,
            ...externalForwardedProps?.style,
            ...externalSlotProps?.style
        };
        const props = {
            ...additionalProps,
            ...externalForwardedProps,
            ...externalSlotProps
        };
        if (joinedClasses.length > 0) props.className = joinedClasses;
        if (Object.keys(mergedStyle).length > 0) props.style = mergedStyle;
        return {
            props,
            internalRef: undefined
        };
    }
    // In this case, getSlotProps is responsible for calling the external event handlers.
    // We don't need to include them in the merged props because of this.
    const eventHandlers = (0, _indexJsDefault.default)({
        ...externalForwardedProps,
        ...externalSlotProps
    });
    const componentsPropsWithoutEventHandlers = (0, _indexJsDefault1.default)(externalSlotProps);
    const otherPropsWithoutEventHandlers = (0, _indexJsDefault1.default)(externalForwardedProps);
    const internalSlotProps = getSlotProps(eventHandlers);
    // The order of classes is important here.
    // Emotion (that we use in libraries consuming Base UI) depends on this order
    // to properly override style. It requires the most important classes to be last
    // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.
    const joinedClasses = (0, _clsxDefault.default)(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);
    const mergedStyle = {
        ...internalSlotProps?.style,
        ...additionalProps?.style,
        ...externalForwardedProps?.style,
        ...externalSlotProps?.style
    };
    const props = {
        ...internalSlotProps,
        ...additionalProps,
        ...otherPropsWithoutEventHandlers,
        ...componentsPropsWithoutEventHandlers
    };
    if (joinedClasses.length > 0) props.className = joinedClasses;
    if (Object.keys(mergedStyle).length > 0) props.style = mergedStyle;
    return {
        props,
        internalRef: internalSlotProps.ref
    };
}
exports.default = mergeSlotProps;

},{"clsx":"dOSJC","../extractEventHandlers/index.js":"138X0","../omitEventHandlers/index.js":"dLueC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"138X0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _extractEventHandlersJsDefault.default));
var _extractEventHandlersJs = require("./extractEventHandlers.js");
var _extractEventHandlersJsDefault = parcelHelpers.interopDefault(_extractEventHandlersJs);

},{"./extractEventHandlers.js":"C1F4X","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"C1F4X":[function(require,module,exports,__globalThis) {
/**
 * Extracts event handlers from a given object.
 * A prop is considered an event handler if it is a function and its name starts with `on`.
 *
 * @param object An object to extract event handlers from.
 * @param excludeKeys An array of keys to exclude from the returned object.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function extractEventHandlers(object, excludeKeys = []) {
    if (object === undefined) return {};
    const result = {};
    Object.keys(object).filter((prop)=>prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach((prop)=>{
        result[prop] = object[prop];
    });
    return result;
}
exports.default = extractEventHandlers;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dLueC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _omitEventHandlersJsDefault.default));
var _omitEventHandlersJs = require("./omitEventHandlers.js");
var _omitEventHandlersJsDefault = parcelHelpers.interopDefault(_omitEventHandlersJs);

},{"./omitEventHandlers.js":"l1UHm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l1UHm":[function(require,module,exports,__globalThis) {
/**
 * Removes event handlers from the given object.
 * A field is considered an event handler if it is a function with a name beginning with `on`.
 *
 * @param object Object to remove event handlers from.
 * @returns Object with event handlers removed.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function omitEventHandlers(object) {
    if (object === undefined) return {};
    const result = {};
    Object.keys(object).filter((prop)=>!(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach((prop)=>{
        result[prop] = object[prop];
    });
    return result;
}
exports.default = omitEventHandlers;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bxe2O":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _resolveComponentPropsJsDefault.default));
var _resolveComponentPropsJs = require("./resolveComponentProps.js");
var _resolveComponentPropsJsDefault = parcelHelpers.interopDefault(_resolveComponentPropsJs);

},{"./resolveComponentProps.js":"dQZPA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dQZPA":[function(require,module,exports,__globalThis) {
/**
 * If `componentProps` is a function, calls it with the provided `ownerState`.
 * Otherwise, just returns `componentProps`.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function resolveComponentProps(componentProps, ownerState, slotState) {
    if (typeof componentProps === 'function') return componentProps(ownerState, slotState);
    return componentProps;
}
exports.default = resolveComponentProps;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bUseI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getReactNodeRefJsDefault.default));
var _getReactNodeRefJs = require("./getReactNodeRef.js");
var _getReactNodeRefJsDefault = parcelHelpers.interopDefault(_getReactNodeRefJs);

},{"./getReactNodeRef.js":"eeK99","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eeK99":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getReactNodeRef);
var _react = require("react");
function getReactNodeRef(element) {
    if (!element || !/*#__PURE__*/ _react.isValidElement(element)) return null;
    // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions
    return element.props.propertyIsEnumerable('ref') ? element.props.ref : // @ts-expect-error element.ref is not included in the ReactElement type
    // We cannot check for it, but isValidElement is true at this point
    // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189
    element.ref;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e4YUR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _getReactElementRefJsDefault.default));
var _getReactElementRefJs = require("./getReactElementRef.js");
var _getReactElementRefJsDefault = parcelHelpers.interopDefault(_getReactElementRefJs);

},{"./getReactElementRef.js":"3XTxf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3XTxf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getReactElementRef);
var _react = require("react");
function getReactElementRef(element) {
    // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions
    if (parseInt(_react.version, 10) >= 19) return element?.props?.ref || null;
    // @ts-expect-error element.ref is not included in the ReactElement type
    // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189
    return element?.ref || null;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3gAER":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iMD2K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
'use client';
const ThemeContext = /*#__PURE__*/ _react.createContext(null);
ThemeContext.displayName = 'ThemeContext';
exports.default = ThemeContext;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6KaGw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _useThemeJsDefault.default));
var _useThemeJs = require("./useTheme.js");
var _useThemeJsDefault = parcelHelpers.interopDefault(_useThemeJs);

},{"./useTheme.js":"cNJ4B","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cNJ4B":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useTheme);
var _react = require("react");
var _themeContextJs = require("./ThemeContext.js");
var _themeContextJsDefault = parcelHelpers.interopDefault(_themeContextJs);
function useTheme() {
    const theme = _react.useContext((0, _themeContextJsDefault.default));
    // TODO: uncomment once we enable eslint-plugin-react-compiler eslint-disable-next-line react-compiler/react-compiler
    // eslint-disable-next-line react-hooks/rules-of-hooks -- It's not required to run React.useDebugValue in production
    _react.useDebugValue(theme);
    return theme;
}

},{"react":"jMk1U","./ThemeContext.js":"iMD2K","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kklEr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const hasSymbol = typeof Symbol === 'function' && Symbol.for;
exports.default = hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l3gvy":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("cff61de3e8b80eda").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _exactProp.default;
    }
});
var _exactProp = _interopRequireDefault(require("a9c5129b5b75c120"));

},{"cff61de3e8b80eda":"1P3rZ","a9c5129b5b75c120":"gv2xR"}],"gv2xR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exactProp;
// This module is based on https://github.com/airbnb/prop-types-exact repository.
// However, in order to reduce the number of dependencies and to remove some extra safe checks
// the module was forked.
const specialProperty = 'exact-prop: \u200b';
function exactProp(propTypes) {
    return {
        ...propTypes,
        [specialProperty]: (props)=>{
            const unsupportedProps = Object.keys(props).filter((prop)=>!propTypes.hasOwnProperty(prop));
            if (unsupportedProps.length > 0) return new Error(`The following props are not supported: ${unsupportedProps.map((prop)=>`\`${prop}\``).join(', ')}. Please remove them.`);
            return null;
        }
    };
}

},{}],"6SZXq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useRtl", ()=>useRtl);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const RtlContext = /*#__PURE__*/ _react.createContext();
function RtlProvider({ value, ...props }) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(RtlContext.Provider, {
        value: value ?? true,
        ...props
    });
}
RtlProvider.propTypes = {
    children: (0, _propTypesDefault.default).node,
    value: (0, _propTypesDefault.default).bool
};
const useRtl = ()=>{
    const value = _react.useContext(RtlContext);
    return value ?? false;
};
exports.default = RtlProvider;

},{"react":"jMk1U","prop-types":"GNqOQ","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"epp2S":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _defaultPropsProviderJsDefault.default));
parcelHelpers.export(exports, "useDefaultProps", ()=>(0, _defaultPropsProviderJs.useDefaultProps));
var _defaultPropsProviderJs = require("./DefaultPropsProvider.js");
var _defaultPropsProviderJsDefault = parcelHelpers.interopDefault(_defaultPropsProviderJs);

},{"./DefaultPropsProvider.js":"fTpbD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fTpbD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDefaultProps", ()=>useDefaultProps);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _resolveProps = require("@mui/utils/resolveProps");
var _resolvePropsDefault = parcelHelpers.interopDefault(_resolveProps);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const PropsContext = /*#__PURE__*/ _react.createContext(undefined);
function DefaultPropsProvider({ value, children }) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(PropsContext.Provider, {
        value: value,
        children: children
    });
}
DefaultPropsProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: (0, _propTypesDefault.default).node,
    /**
   * @ignore
   */ value: (0, _propTypesDefault.default).object
};
function getThemeProps(params) {
    const { theme, name, props } = params;
    if (!theme || !theme.components || !theme.components[name]) return props;
    const config = theme.components[name];
    if (config.defaultProps) // compatible with v5 signature
    return (0, _resolvePropsDefault.default)(config.defaultProps, props);
    if (!config.styleOverrides && !config.variants) // v6 signature, no property 'defaultProps'
    return (0, _resolvePropsDefault.default)(config, props);
    return props;
}
function useDefaultProps({ props, name }) {
    const ctx = _react.useContext(PropsContext);
    return getThemeProps({
        props,
        name,
        theme: {
            components: ctx
        }
    });
}
exports.default = DefaultPropsProvider;

},{"react":"jMk1U","prop-types":"GNqOQ","@mui/utils/resolveProps":"hO4GV","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d9QFz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>unstable_memoTheme);
var _preprocessStylesJs = require("./preprocessStyles.js");
var _preprocessStylesJsDefault = parcelHelpers.interopDefault(_preprocessStylesJs);
/* eslint-disable @typescript-eslint/naming-convention */ // We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to
// allocate more objects.
const arg = {
    theme: undefined
};
function unstable_memoTheme(styleFn) {
    let lastValue;
    let lastTheme;
    return function styleMemoized(props) {
        let value = lastValue;
        if (value === undefined || props.theme !== lastTheme) {
            arg.theme = props.theme;
            value = (0, _preprocessStylesJsDefault.default)(styleFn(arg));
            lastValue = value;
            lastTheme = props.theme;
        }
        return value;
    };
}

},{"./preprocessStyles.js":"ihQDo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6Is3L":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DISABLE_CSS_TRANSITION", ()=>DISABLE_CSS_TRANSITION);
parcelHelpers.export(exports, "default", ()=>createCssVarsProvider);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _styledEngine = require("@mui/styled-engine");
var _privateTheming = require("@mui/private-theming");
var _useEnhancedEffect = require("@mui/utils/useEnhancedEffect");
var _useEnhancedEffectDefault = parcelHelpers.interopDefault(_useEnhancedEffect);
var _indexJs = require("../ThemeProvider/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _initColorSchemeScriptJs = require("../InitColorSchemeScript/InitColorSchemeScript.js");
var _initColorSchemeScriptJsDefault = parcelHelpers.interopDefault(_initColorSchemeScriptJs);
var _useCurrentColorSchemeJs = require("./useCurrentColorScheme.js");
var _useCurrentColorSchemeJsDefault = parcelHelpers.interopDefault(_useCurrentColorSchemeJs);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';
function createCssVarsProvider(options) {
    const { themeId, /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */ theme: defaultTheme = {}, modeStorageKey: defaultModeStorageKey = (0, _initColorSchemeScriptJs.DEFAULT_MODE_STORAGE_KEY), colorSchemeStorageKey: defaultColorSchemeStorageKey = (0, _initColorSchemeScriptJs.DEFAULT_COLOR_SCHEME_STORAGE_KEY), disableTransitionOnChange: designSystemTransitionOnChange = false, defaultColorScheme, resolveTheme } = options;
    const defaultContext = {
        allColorSchemes: [],
        colorScheme: undefined,
        darkColorScheme: undefined,
        lightColorScheme: undefined,
        mode: undefined,
        setColorScheme: ()=>{},
        setMode: ()=>{},
        systemMode: undefined
    };
    const ColorSchemeContext = /*#__PURE__*/ _react.createContext(undefined);
    ColorSchemeContext.displayName = 'ColorSchemeContext';
    const useColorScheme = ()=>_react.useContext(ColorSchemeContext) || defaultContext;
    const defaultColorSchemes = {};
    const defaultComponents = {};
    function CssVarsProvider(props) {
        const { children, theme: themeProp, modeStorageKey = defaultModeStorageKey, colorSchemeStorageKey = defaultColorSchemeStorageKey, disableTransitionOnChange = designSystemTransitionOnChange, storageManager, storageWindow = typeof window === 'undefined' ? undefined : window, documentNode = typeof document === 'undefined' ? undefined : document, colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement, disableNestedContext = false, disableStyleSheetGeneration = false, defaultMode: initialMode = 'system', forceThemeRerender = false, noSsr } = props;
        const hasMounted = _react.useRef(false);
        const upperTheme = (0, _privateTheming.useTheme)();
        const ctx = _react.useContext(ColorSchemeContext);
        const nested = !!ctx && !disableNestedContext;
        const initialTheme = _react.useMemo(()=>{
            if (themeProp) return themeProp;
            return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;
        }, [
            themeProp
        ]);
        const scopedTheme = initialTheme[themeId];
        const restThemeProp = scopedTheme || initialTheme;
        const { colorSchemes = defaultColorSchemes, components = defaultComponents, cssVarPrefix } = restThemeProp;
        const joinedColorSchemes = Object.keys(colorSchemes).filter((k)=>!!colorSchemes[k]).join(',');
        const allColorSchemes = _react.useMemo(()=>joinedColorSchemes.split(','), [
            joinedColorSchemes
        ]);
        const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;
        const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;
        const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;
        // 1. Get the data about the `mode`, `colorScheme`, and setter functions.
        const { mode: stateMode, setMode, systemMode, lightColorScheme, darkColorScheme, colorScheme: stateColorScheme, setColorScheme } = (0, _useCurrentColorSchemeJsDefault.default)({
            supportedColorSchemes: allColorSchemes,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey,
            colorSchemeStorageKey,
            defaultMode,
            storageManager,
            storageWindow,
            noSsr
        });
        let mode = stateMode;
        let colorScheme = stateColorScheme;
        if (nested) {
            mode = ctx.mode;
            colorScheme = ctx.colorScheme;
        }
        if (forceThemeRerender && !restThemeProp.vars) console.warn([
            'MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.',
            'Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution.'
        ].join('\n'));
        // `colorScheme` is undefined on the server and hydration phase
        let calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;
        if (restThemeProp.vars && !forceThemeRerender) calculatedColorScheme = restThemeProp.defaultColorScheme;
        const memoTheme = _react.useMemo(()=>{
            // 2. get the `vars` object that refers to the CSS custom properties
            const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;
            // 3. Start composing the theme object
            const theme = {
                ...restThemeProp,
                components,
                colorSchemes,
                cssVarPrefix,
                vars: themeVars
            };
            if (typeof theme.generateSpacing === 'function') theme.spacing = theme.generateSpacing();
            // 4. Resolve the color scheme and merge it to the theme
            if (calculatedColorScheme) {
                const scheme = colorSchemes[calculatedColorScheme];
                if (scheme && typeof scheme === 'object') // 4.1 Merge the selected color scheme to the theme
                Object.keys(scheme).forEach((schemeKey)=>{
                    if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') // shallow merge the 1st level structure of the theme.
                    theme[schemeKey] = {
                        ...theme[schemeKey],
                        ...scheme[schemeKey]
                    };
                    else theme[schemeKey] = scheme[schemeKey];
                });
            }
            return resolveTheme ? resolveTheme(theme) : theme;
        }, [
            restThemeProp,
            calculatedColorScheme,
            components,
            colorSchemes,
            cssVarPrefix
        ]);
        // 5. Declaring effects
        // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.
        const colorSchemeSelector = restThemeProp.colorSchemeSelector;
        (0, _useEnhancedEffectDefault.default)(()=>{
            if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {
                const selector = colorSchemeSelector;
                let rule = colorSchemeSelector;
                if (selector === 'class') rule = `.%s`;
                if (selector === 'data') rule = `[data-%s]`;
                if (selector?.startsWith('data-') && !selector.includes('%s')) // 'data-mui-color-scheme' -> '[data-mui-color-scheme="%s"]'
                rule = `[${selector}="%s"]`;
                if (rule.startsWith('.')) {
                    colorSchemeNode.classList.remove(...allColorSchemes.map((scheme)=>rule.substring(1).replace('%s', scheme)));
                    colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));
                } else {
                    const matches = rule.replace('%s', colorScheme).match(/\[([^\]]+)\]/);
                    if (matches) {
                        const [attr, value] = matches[1].split('=');
                        if (!value) // for attributes like `data-theme-dark`, `data-theme-light`
                        // remove all the existing data attributes before setting the new one
                        allColorSchemes.forEach((scheme)=>{
                            colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));
                        });
                        colorSchemeNode.setAttribute(attr, value ? value.replace(/"|'/g, '') : '');
                    } else colorSchemeNode.setAttribute(rule, colorScheme);
                }
            }
        }, [
            colorScheme,
            colorSchemeSelector,
            colorSchemeNode,
            allColorSchemes
        ]);
        // 5.2 Remove the CSS transition when color scheme changes to create instant experience.
        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313
        _react.useEffect(()=>{
            let timer;
            if (disableTransitionOnChange && hasMounted.current && documentNode) {
                const css = documentNode.createElement('style');
                css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));
                documentNode.head.appendChild(css);
                // Force browser repaint
                (()=>window.getComputedStyle(documentNode.body))();
                timer = setTimeout(()=>{
                    documentNode.head.removeChild(css);
                }, 1);
            }
            return ()=>{
                clearTimeout(timer);
            };
        }, [
            colorScheme,
            disableTransitionOnChange,
            documentNode
        ]);
        _react.useEffect(()=>{
            hasMounted.current = true;
            return ()=>{
                hasMounted.current = false;
            };
        }, []);
        const contextValue = _react.useMemo(()=>({
                allColorSchemes,
                colorScheme,
                darkColorScheme,
                lightColorScheme,
                mode,
                setColorScheme,
                setMode: (newMode)=>{
                    if (memoTheme.colorSchemeSelector === 'media') console.error([
                        'MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).',
                        'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.',
                        'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'
                    ].join('\n'));
                    setMode(newMode);
                },
                systemMode
            }), [
            allColorSchemes,
            colorScheme,
            darkColorScheme,
            lightColorScheme,
            mode,
            setColorScheme,
            setMode,
            systemMode,
            memoTheme.colorSchemeSelector
        ]);
        let shouldGenerateStyleSheet = true;
        if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) shouldGenerateStyleSheet = false;
        const element = /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_react.Fragment, {
            children: [
                /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _indexJsDefault.default), {
                    themeId: scopedTheme ? themeId : undefined,
                    theme: memoTheme,
                    children: children
                }),
                shouldGenerateStyleSheet && /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _styledEngine.GlobalStyles), {
                    styles: memoTheme.generateStyleSheets?.() || []
                })
            ]
        });
        if (nested) return element;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {
            value: contextValue,
            children: element
        });
    }
    CssVarsProvider.propTypes = {
        /**
     * The component tree.
     */ children: (0, _propTypesDefault.default).node,
        /**
     * The node used to attach the color-scheme attribute
     */ colorSchemeNode: (0, _propTypesDefault.default).any,
        /**
     * localStorage key used to store `colorScheme`
     */ colorSchemeStorageKey: (0, _propTypesDefault.default).string,
        /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */ defaultMode: (0, _propTypesDefault.default).string,
        /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */ disableNestedContext: (0, _propTypesDefault.default).bool,
        /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */ disableStyleSheetGeneration: (0, _propTypesDefault.default).bool,
        /**
     * Disable CSS transitions when switching between modes or color schemes.
     */ disableTransitionOnChange: (0, _propTypesDefault.default).bool,
        /**
     * The document to attach the attribute to.
     */ documentNode: (0, _propTypesDefault.default).any,
        /**
     * If `true`, theme values are recalculated when the mode changes.
     */ forceThemeRerender: (0, _propTypesDefault.default).bool,
        /**
     * The key in the local storage used to store current color scheme.
     */ modeStorageKey: (0, _propTypesDefault.default).string,
        /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */ noSsr: (0, _propTypesDefault.default).bool,
        /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */ storageManager: (0, _propTypesDefault.default).func,
        /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */ storageWindow: (0, _propTypesDefault.default).any,
        /**
     * The calculated theme object that will be passed through context.
     */ theme: (0, _propTypesDefault.default).object
    };
    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;
    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;
    const getInitColorSchemeScript = (params)=>(0, _initColorSchemeScriptJsDefault.default)({
            colorSchemeStorageKey: defaultColorSchemeStorageKey,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey: defaultModeStorageKey,
            ...params
        });
    return {
        CssVarsProvider,
        useColorScheme,
        getInitColorSchemeScript
    };
}

},{"react":"jMk1U","prop-types":"GNqOQ","@mui/styled-engine":"g3Wsb","@mui/private-theming":"aNwkL","@mui/utils/useEnhancedEffect":"egHZg","../ThemeProvider/index.js":"dkyK0","../InitColorSchemeScript/InitColorSchemeScript.js":"3aLED","./useCurrentColorScheme.js":"jzzTv","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3aLED":[function(require,module,exports,__globalThis) {
/**
 * Split this component for RSC import
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DEFAULT_MODE_STORAGE_KEY", ()=>DEFAULT_MODE_STORAGE_KEY);
parcelHelpers.export(exports, "DEFAULT_COLOR_SCHEME_STORAGE_KEY", ()=>DEFAULT_COLOR_SCHEME_STORAGE_KEY);
parcelHelpers.export(exports, "DEFAULT_ATTRIBUTE", ()=>DEFAULT_ATTRIBUTE);
parcelHelpers.export(exports, "default", ()=>InitColorSchemeScript);
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
const DEFAULT_MODE_STORAGE_KEY = 'mode';
const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';
const DEFAULT_ATTRIBUTE = 'data-color-scheme';
function InitColorSchemeScript(options) {
    const { defaultMode = 'system', defaultLightColorScheme = 'light', defaultDarkColorScheme = 'dark', modeStorageKey = DEFAULT_MODE_STORAGE_KEY, colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY, attribute: initialAttribute = DEFAULT_ATTRIBUTE, colorSchemeNode = 'document.documentElement', nonce } = options || {};
    let setter = '';
    let attribute = initialAttribute;
    if (initialAttribute === 'class') attribute = '.%s';
    if (initialAttribute === 'data') attribute = '[data-%s]';
    if (attribute.startsWith('.')) {
        const selector = attribute.substring(1);
        setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));
      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;
    }
    const matches = attribute.match(/\[([^\]]+)\]/); // case [data-color-scheme=%s] or [data-color-scheme]
    if (matches) {
        const [attr, value] = matches[1].split('=');
        if (!value) setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));
      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;
        setter += `
      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '""'});`;
    } else setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("script", {
        suppressHydrationWarning: true,
        nonce: typeof window === 'undefined' ? nonce : '',
        dangerouslySetInnerHTML: {
            __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';
  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';
  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${setter}
  }
} catch(e){}})();`
        }
    }, "mui-color-scheme-init");
}

},{"react":"jMk1U","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jzzTv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getSystemMode", ()=>getSystemMode);
parcelHelpers.export(exports, "getColorScheme", ()=>getColorScheme);
parcelHelpers.export(exports, "default", ()=>useCurrentColorScheme);
var _react = require("react");
var _initColorSchemeScriptJs = require("../InitColorSchemeScript/InitColorSchemeScript.js");
var _localStorageManagerJs = require("./localStorageManager.js");
var _localStorageManagerJsDefault = parcelHelpers.interopDefault(_localStorageManagerJs);
'use client';
function noop() {}
function getSystemMode(mode) {
    if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {
        const mql = window.matchMedia('(prefers-color-scheme: dark)');
        if (mql.matches) return 'dark';
        return 'light';
    }
    return undefined;
}
function processState(state, callback) {
    if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') return callback('light');
    if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') return callback('dark');
    return undefined;
}
function getColorScheme(state) {
    return processState(state, (mode)=>{
        if (mode === 'light') return state.lightColorScheme;
        if (mode === 'dark') return state.darkColorScheme;
        return undefined;
    });
}
function useCurrentColorScheme(options) {
    const { defaultMode = 'light', defaultLightColorScheme, defaultDarkColorScheme, supportedColorSchemes = [], modeStorageKey = (0, _initColorSchemeScriptJs.DEFAULT_MODE_STORAGE_KEY), colorSchemeStorageKey = (0, _initColorSchemeScriptJs.DEFAULT_COLOR_SCHEME_STORAGE_KEY), storageWindow = typeof window === 'undefined' ? undefined : window, storageManager = (0, _localStorageManagerJsDefault.default), noSsr = false } = options;
    const joinedColorSchemes = supportedColorSchemes.join(',');
    const isMultiSchemes = supportedColorSchemes.length > 1;
    const modeStorage = _react.useMemo(()=>storageManager?.({
            key: modeStorageKey,
            storageWindow
        }), [
        storageManager,
        modeStorageKey,
        storageWindow
    ]);
    const lightStorage = _react.useMemo(()=>storageManager?.({
            key: `${colorSchemeStorageKey}-light`,
            storageWindow
        }), [
        storageManager,
        colorSchemeStorageKey,
        storageWindow
    ]);
    const darkStorage = _react.useMemo(()=>storageManager?.({
            key: `${colorSchemeStorageKey}-dark`,
            storageWindow
        }), [
        storageManager,
        colorSchemeStorageKey,
        storageWindow
    ]);
    const [state, setState] = _react.useState(()=>{
        const initialMode = modeStorage?.get(defaultMode) || defaultMode;
        const lightColorScheme = lightStorage?.get(defaultLightColorScheme) || defaultLightColorScheme;
        const darkColorScheme = darkStorage?.get(defaultDarkColorScheme) || defaultDarkColorScheme;
        return {
            mode: initialMode,
            systemMode: getSystemMode(initialMode),
            lightColorScheme,
            darkColorScheme
        };
    });
    const [isClient, setIsClient] = _react.useState(noSsr || !isMultiSchemes);
    _react.useEffect(()=>{
        setIsClient(true); // to rerender the component after hydration
    }, []);
    const colorScheme = getColorScheme(state);
    const setMode = _react.useCallback((mode)=>{
        setState((currentState)=>{
            if (mode === currentState.mode) // do nothing if mode does not change
            return currentState;
            const newMode = mode ?? defaultMode;
            modeStorage?.set(newMode);
            return {
                ...currentState,
                mode: newMode,
                systemMode: getSystemMode(newMode)
            };
        });
    }, [
        modeStorage,
        defaultMode
    ]);
    const setColorScheme = _react.useCallback((value)=>{
        if (!value) setState((currentState)=>{
            lightStorage?.set(defaultLightColorScheme);
            darkStorage?.set(defaultDarkColorScheme);
            return {
                ...currentState,
                lightColorScheme: defaultLightColorScheme,
                darkColorScheme: defaultDarkColorScheme
            };
        });
        else if (typeof value === 'string') {
            if (value && !joinedColorSchemes.includes(value)) console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
            else setState((currentState)=>{
                const newState = {
                    ...currentState
                };
                processState(currentState, (mode)=>{
                    if (mode === 'light') {
                        lightStorage?.set(value);
                        newState.lightColorScheme = value;
                    }
                    if (mode === 'dark') {
                        darkStorage?.set(value);
                        newState.darkColorScheme = value;
                    }
                });
                return newState;
            });
        } else setState((currentState)=>{
            const newState = {
                ...currentState
            };
            const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;
            const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;
            if (newLightColorScheme) {
                if (!joinedColorSchemes.includes(newLightColorScheme)) console.error(`\`${newLightColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                else {
                    newState.lightColorScheme = newLightColorScheme;
                    lightStorage?.set(newLightColorScheme);
                }
            }
            if (newDarkColorScheme) {
                if (!joinedColorSchemes.includes(newDarkColorScheme)) console.error(`\`${newDarkColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                else {
                    newState.darkColorScheme = newDarkColorScheme;
                    darkStorage?.set(newDarkColorScheme);
                }
            }
            return newState;
        });
    }, [
        joinedColorSchemes,
        lightStorage,
        darkStorage,
        defaultLightColorScheme,
        defaultDarkColorScheme
    ]);
    const handleMediaQuery = _react.useCallback((event)=>{
        if (state.mode === 'system') setState((currentState)=>{
            const systemMode = event?.matches ? 'dark' : 'light';
            // Early exit, nothing changed.
            if (currentState.systemMode === systemMode) return currentState;
            return {
                ...currentState,
                systemMode
            };
        });
    }, [
        state.mode
    ]);
    // Ref hack to avoid adding handleMediaQuery as a dep
    const mediaListener = _react.useRef(handleMediaQuery);
    mediaListener.current = handleMediaQuery;
    _react.useEffect(()=>{
        if (typeof window.matchMedia !== 'function' || !isMultiSchemes) return undefined;
        const handler = (...args)=>mediaListener.current(...args);
        // Always listen to System preference
        const media = window.matchMedia('(prefers-color-scheme: dark)');
        // Intentionally use deprecated listener methods to support iOS & old browsers
        media.addListener(handler);
        handler(media);
        return ()=>{
            media.removeListener(handler);
        };
    }, [
        isMultiSchemes
    ]);
    // Handle when localStorage has changed
    _react.useEffect(()=>{
        if (isMultiSchemes) {
            const unsubscribeMode = modeStorage?.subscribe((value)=>{
                if (!value || [
                    'light',
                    'dark',
                    'system'
                ].includes(value)) setMode(value || defaultMode);
            }) || noop;
            const unsubscribeLight = lightStorage?.subscribe((value)=>{
                if (!value || joinedColorSchemes.match(value)) setColorScheme({
                    light: value
                });
            }) || noop;
            const unsubscribeDark = darkStorage?.subscribe((value)=>{
                if (!value || joinedColorSchemes.match(value)) setColorScheme({
                    dark: value
                });
            }) || noop;
            return ()=>{
                unsubscribeMode();
                unsubscribeLight();
                unsubscribeDark();
            };
        }
        return undefined;
    }, [
        setColorScheme,
        setMode,
        joinedColorSchemes,
        defaultMode,
        storageWindow,
        isMultiSchemes,
        modeStorage,
        lightStorage,
        darkStorage
    ]);
    return {
        ...state,
        mode: isClient ? state.mode : undefined,
        systemMode: isClient ? state.systemMode : undefined,
        colorScheme: isClient ? colorScheme : undefined,
        setMode,
        setColorScheme
    };
}

},{"react":"jMk1U","../InitColorSchemeScript/InitColorSchemeScript.js":"3aLED","./localStorageManager.js":"jEUtN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jEUtN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function noop() {}
const localStorageManager = ({ key, storageWindow })=>{
    if (!storageWindow && typeof window !== 'undefined') storageWindow = window;
    return {
        get (defaultValue) {
            if (typeof window === 'undefined') return undefined;
            if (!storageWindow) return defaultValue;
            let value;
            try {
                value = storageWindow.localStorage.getItem(key);
            } catch  {
            // Unsupported
            }
            return value || defaultValue;
        },
        set: (value)=>{
            if (storageWindow) try {
                storageWindow.localStorage.setItem(key, value);
            } catch  {
            // Unsupported
            }
        },
        subscribe: (handler)=>{
            if (!storageWindow) return noop;
            const listener = (event)=>{
                const value = event.newValue;
                if (event.key === key) handler(value);
            };
            storageWindow.addEventListener('storage', listener);
            return ()=>{
                storageWindow.removeEventListener('storage', listener);
            };
        }
    };
};
exports.default = localStorageManager;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fpIeq":[function(require,module,exports,__globalThis) {
/**
 * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable
 * and they does not need to remember the prefix (defined once).
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createGetCssVar);
function createGetCssVar(prefix = '') {
    function appendVar(...vars) {
        if (!vars.length) return '';
        const value = vars[0];
        if (typeof value === 'string' && !value.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/)) return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;
        return `, ${value}`;
    }
    // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.
    const getCssVar = (field, ...fallbacks)=>{
        return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;
    };
    return getCssVar;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gOzRn":[function(require,module,exports,__globalThis) {
/**
 * This function create an object from keys, value and then assign to target
 *
 * @param {Object} obj : the target object to be assigned
 * @param {string[]} keys
 * @param {string | number} value
 *
 * @example
 * const source = {}
 * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }
 *
 * @example
 * const source = { palette: { primary: 'var(--palette-primary)' } }
 * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignNestedKeys", ()=>assignNestedKeys);
parcelHelpers.export(exports, "walkObjectDeep", ()=>walkObjectDeep);
parcelHelpers.export(exports, "default", ()=>cssVarsParser);
const assignNestedKeys = (obj, keys, value, arrayKeys = [])=>{
    let temp = obj;
    keys.forEach((k, index)=>{
        if (index === keys.length - 1) {
            if (Array.isArray(temp)) temp[Number(k)] = value;
            else if (temp && typeof temp === 'object') temp[k] = value;
        } else if (temp && typeof temp === 'object') {
            if (!temp[k]) temp[k] = arrayKeys.includes(k) ? [] : {};
            temp = temp[k];
        }
    });
};
const walkObjectDeep = (obj, callback, shouldSkipPaths)=>{
    function recurse(object, parentKeys = [], arrayKeys = []) {
        Object.entries(object).forEach(([key, value])=>{
            if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([
                ...parentKeys,
                key
            ])) {
                if (value !== undefined && value !== null) {
                    if (typeof value === 'object' && Object.keys(value).length > 0) recurse(value, [
                        ...parentKeys,
                        key
                    ], Array.isArray(value) ? [
                        ...arrayKeys,
                        key
                    ] : arrayKeys);
                    else callback([
                        ...parentKeys,
                        key
                    ], value, arrayKeys);
                }
            }
        });
    }
    recurse(obj);
};
const getCssValue = (keys, value)=>{
    if (typeof value === 'number') {
        if ([
            'lineHeight',
            'fontWeight',
            'opacity',
            'zIndex'
        ].some((prop)=>keys.includes(prop))) // CSS property that are unitless
        return value;
        const lastKey = keys[keys.length - 1];
        if (lastKey.toLowerCase().includes('opacity')) // opacity values are unitless
        return value;
        return `${value}px`;
    }
    return value;
};
function cssVarsParser(theme, options) {
    const { prefix, shouldSkipGeneratingVar } = options || {};
    const css = {};
    const vars = {};
    const varsWithDefaults = {};
    walkObjectDeep(theme, (keys, value, arrayKeys)=>{
        if (typeof value === 'string' || typeof value === 'number') {
            if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {
                // only create css & var if `shouldSkipGeneratingVar` return false
                const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;
                const resolvedValue = getCssValue(keys, value);
                Object.assign(css, {
                    [cssVar]: resolvedValue
                });
                assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);
                assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${resolvedValue})`, arrayKeys);
            }
        }
    }, (keys)=>keys[0] === 'vars' // skip 'vars/*' paths
    );
    return {
        css,
        vars,
        varsWithDefaults
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hhBD3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _deepmerge = require("@mui/utils/deepmerge");
var _deepmergeDefault = parcelHelpers.interopDefault(_deepmerge);
var _cssVarsParserJs = require("./cssVarsParser.js");
var _cssVarsParserJsDefault = parcelHelpers.interopDefault(_cssVarsParserJs);
function prepareCssVars(theme, parserConfig = {}) {
    const { getSelector = defaultGetSelector, disableCssColorScheme, colorSchemeSelector: selector } = parserConfig;
    // @ts-ignore - ignore components do not exist
    const { colorSchemes = {}, components, defaultColorScheme = 'light', ...otherTheme } = theme;
    const { vars: rootVars, css: rootCss, varsWithDefaults: rootVarsWithDefaults } = (0, _cssVarsParserJsDefault.default)(otherTheme, parserConfig);
    let themeVars = rootVarsWithDefaults;
    const colorSchemesMap = {};
    const { [defaultColorScheme]: defaultScheme, ...otherColorSchemes } = colorSchemes;
    Object.entries(otherColorSchemes || {}).forEach(([key, scheme])=>{
        const { vars, css, varsWithDefaults } = (0, _cssVarsParserJsDefault.default)(scheme, parserConfig);
        themeVars = (0, _deepmergeDefault.default)(themeVars, varsWithDefaults);
        colorSchemesMap[key] = {
            css,
            vars
        };
    });
    if (defaultScheme) {
        // default color scheme vars should be merged last to set as default
        const { css, vars, varsWithDefaults } = (0, _cssVarsParserJsDefault.default)(defaultScheme, parserConfig);
        themeVars = (0, _deepmergeDefault.default)(themeVars, varsWithDefaults);
        colorSchemesMap[defaultColorScheme] = {
            css,
            vars
        };
    }
    function defaultGetSelector(colorScheme, cssObject) {
        let rule = selector;
        if (selector === 'class') rule = '.%s';
        if (selector === 'data') rule = '[data-%s]';
        if (selector?.startsWith('data-') && !selector.includes('%s')) // 'data-joy-color-scheme' -> '[data-joy-color-scheme="%s"]'
        rule = `[${selector}="%s"]`;
        if (colorScheme) {
            if (rule === 'media') {
                if (theme.defaultColorScheme === colorScheme) return ':root';
                const mode = colorSchemes[colorScheme]?.palette?.mode || colorScheme;
                return {
                    [`@media (prefers-color-scheme: ${mode})`]: {
                        ':root': cssObject
                    }
                };
            }
            if (rule) {
                if (theme.defaultColorScheme === colorScheme) return `:root, ${rule.replace('%s', String(colorScheme))}`;
                return rule.replace('%s', String(colorScheme));
            }
        }
        return ':root';
    }
    const generateThemeVars = ()=>{
        let vars = {
            ...rootVars
        };
        Object.entries(colorSchemesMap).forEach(([, { vars: schemeVars }])=>{
            vars = (0, _deepmergeDefault.default)(vars, schemeVars);
        });
        return vars;
    };
    const generateStyleSheets = ()=>{
        const stylesheets = [];
        const colorScheme = theme.defaultColorScheme || 'light';
        function insertStyleSheet(key, css) {
            if (Object.keys(css).length) stylesheets.push(typeof key === 'string' ? {
                [key]: {
                    ...css
                }
            } : key);
        }
        insertStyleSheet(getSelector(undefined, {
            ...rootCss
        }), rootCss);
        const { [colorScheme]: defaultSchemeVal, ...other } = colorSchemesMap;
        if (defaultSchemeVal) {
            // default color scheme has to come before other color schemes
            const { css } = defaultSchemeVal;
            const cssColorSheme = colorSchemes[colorScheme]?.palette?.mode;
            const finalCss = !disableCssColorScheme && cssColorSheme ? {
                colorScheme: cssColorSheme,
                ...css
            } : {
                ...css
            };
            insertStyleSheet(getSelector(colorScheme, {
                ...finalCss
            }), finalCss);
        }
        Object.entries(other).forEach(([key, { css }])=>{
            const cssColorSheme = colorSchemes[key]?.palette?.mode;
            const finalCss = !disableCssColorScheme && cssColorSheme ? {
                colorScheme: cssColorSheme,
                ...css
            } : {
                ...css
            };
            insertStyleSheet(getSelector(key, {
                ...finalCss
            }), finalCss);
        });
        return stylesheets;
    };
    return {
        vars: themeVars,
        generateThemeVars,
        generateStyleSheets
    };
}
exports.default = prepareCssVars;

},{"@mui/utils/deepmerge":"bLPf1","./cssVarsParser.js":"gOzRn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lDyPq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _prepareCssVarsJs = require("./prepareCssVars.js");
var _prepareCssVarsJsDefault = parcelHelpers.interopDefault(_prepareCssVarsJs);
var _getColorSchemeSelectorJs = require("./getColorSchemeSelector.js");
var _initColorSchemeScriptJs = require("../InitColorSchemeScript/InitColorSchemeScript.js");
function createCssVarsTheme({ colorSchemeSelector = `[${(0, _initColorSchemeScriptJs.DEFAULT_ATTRIBUTE)}="%s"]`, ...theme }) {
    const output = theme;
    const result = (0, _prepareCssVarsJsDefault.default)(output, {
        ...theme,
        prefix: theme.cssVarPrefix,
        colorSchemeSelector
    });
    output.vars = result.vars;
    output.generateThemeVars = result.generateThemeVars;
    output.generateStyleSheets = result.generateStyleSheets;
    output.colorSchemeSelector = colorSchemeSelector;
    output.getColorSchemeSelector = (0, _getColorSchemeSelectorJs.createGetColorSchemeSelector)(colorSchemeSelector);
    return output;
}
exports.default = createCssVarsTheme;

},{"./prepareCssVars.js":"hhBD3","./getColorSchemeSelector.js":"hnMH6","../InitColorSchemeScript/InitColorSchemeScript.js":"3aLED","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hnMH6":[function(require,module,exports,__globalThis) {
/* eslint-disable import/prefer-default-export */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetColorSchemeSelector", ()=>createGetColorSchemeSelector);
function createGetColorSchemeSelector(selector) {
    return function getColorSchemeSelector(colorScheme) {
        if (selector === 'media') {
            if (colorScheme !== 'light' && colorScheme !== 'dark') console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${colorScheme}'.`);
            return `@media (prefers-color-scheme: ${colorScheme})`;
        }
        if (selector) {
            if (selector.startsWith('data-') && !selector.includes('%s')) return `[${selector}="${colorScheme}"] &`;
            if (selector === 'class') return `.${colorScheme} &`;
            if (selector === 'data') return `[data-${colorScheme}] &`;
            return `${selector.replace('%s', colorScheme)} &`;
        }
        return '&';
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kruVi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "version", ()=>version);
parcelHelpers.export(exports, "major", ()=>major);
parcelHelpers.export(exports, "minor", ()=>minor);
parcelHelpers.export(exports, "patch", ()=>patch);
parcelHelpers.export(exports, "prerelease", ()=>prerelease);
const version = "7.0.2";
const major = Number("7");
const minor = Number("0");
const patch = Number("2");
const prerelease = undefined;
exports.default = version;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fsMkV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createContainer);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
var _composeClasses = require("@mui/utils/composeClasses");
var _composeClassesDefault = parcelHelpers.interopDefault(_composeClasses);
var _capitalize = require("@mui/utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _indexJs = require("../useThemeProps/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../styled/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../createTheme/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const defaultTheme = (0, _indexJsDefault2.default)();
const defaultCreateStyledComponent = (0, _indexJsDefault1.default)('div', {
    name: 'MuiContainer',
    slot: 'Root',
    overridesResolver: (props, styles)=>{
        const { ownerState } = props;
        return [
            styles.root,
            styles[`maxWidth${(0, _capitalizeDefault.default)(String(ownerState.maxWidth))}`],
            ownerState.fixed && styles.fixed,
            ownerState.disableGutters && styles.disableGutters
        ];
    }
});
const useThemePropsDefault = (inProps)=>(0, _indexJsDefault.default)({
        props: inProps,
        name: 'MuiContainer',
        defaultTheme
    });
const useUtilityClasses = (ownerState, componentName)=>{
    const getContainerUtilityClass = (slot)=>{
        return (0, _generateUtilityClassDefault.default)(componentName, slot);
    };
    const { classes, fixed, disableGutters, maxWidth } = ownerState;
    const slots = {
        root: [
            'root',
            maxWidth && `maxWidth${(0, _capitalizeDefault.default)(String(maxWidth))}`,
            fixed && 'fixed',
            disableGutters && 'disableGutters'
        ]
    };
    return (0, _composeClassesDefault.default)(slots, getContainerUtilityClass, classes);
};
function createContainer(options = {}) {
    const { // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent, useThemeProps = useThemePropsDefault, componentName = 'MuiContainer' } = options;
    const ContainerRoot = createStyledComponent(({ theme, ownerState })=>({
            width: '100%',
            marginLeft: 'auto',
            boxSizing: 'border-box',
            marginRight: 'auto',
            ...!ownerState.disableGutters && {
                paddingLeft: theme.spacing(2),
                paddingRight: theme.spacing(2),
                // @ts-ignore module augmentation fails if custom breakpoints are used
                [theme.breakpoints.up('sm')]: {
                    paddingLeft: theme.spacing(3),
                    paddingRight: theme.spacing(3)
                }
            }
        }), ({ theme, ownerState })=>ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey)=>{
            const breakpoint = breakpointValueKey;
            const value = theme.breakpoints.values[breakpoint];
            if (value !== 0) // @ts-ignore
            acc[theme.breakpoints.up(breakpoint)] = {
                maxWidth: `${value}${theme.breakpoints.unit}`
            };
            return acc;
        }, {}), ({ theme, ownerState })=>({
            // @ts-ignore module augmentation fails if custom breakpoints are used
            ...ownerState.maxWidth === 'xs' && {
                // @ts-ignore module augmentation fails if custom breakpoints are used
                [theme.breakpoints.up('xs')]: {
                    // @ts-ignore module augmentation fails if custom breakpoints are used
                    maxWidth: Math.max(theme.breakpoints.values.xs, 444)
                }
            },
            ...ownerState.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
            ownerState.maxWidth !== 'xs' && {
                // @ts-ignore module augmentation fails if custom breakpoints are used
                [theme.breakpoints.up(ownerState.maxWidth)]: {
                    // @ts-ignore module augmentation fails if custom breakpoints are used
                    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`
                }
            }
        }));
    const Container = /*#__PURE__*/ _react.forwardRef(function Container(inProps, ref) {
        const props = useThemeProps(inProps);
        const { className, component = 'div', disableGutters = false, fixed = false, maxWidth = 'lg', classes: classesProp, ...other } = props;
        const ownerState = {
            ...props,
            component,
            disableGutters,
            fixed,
            maxWidth
        };
        // @ts-ignore module augmentation fails if custom breakpoints are used
        const classes = useUtilityClasses(ownerState, componentName);
        return(/*#__PURE__*/ // @ts-ignore theme is injected by the styled util
        (0, _jsxRuntime.jsx)(ContainerRoot, {
            as: component,
            ownerState: ownerState,
            className: (0, _clsxDefault.default)(classes.root, className),
            ref: ref,
            ...other
        }));
    });
    Container.propTypes = {
        children: (0, _propTypesDefault.default).node,
        classes: (0, _propTypesDefault.default).object,
        className: (0, _propTypesDefault.default).string,
        component: (0, _propTypesDefault.default).elementType,
        disableGutters: (0, _propTypesDefault.default).bool,
        fixed: (0, _propTypesDefault.default).bool,
        maxWidth: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
            (0, _propTypesDefault.default).oneOf([
                'xs',
                'sm',
                'md',
                'lg',
                'xl',
                false
            ]),
            (0, _propTypesDefault.default).string
        ]),
        sx: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).func,
                (0, _propTypesDefault.default).object,
                (0, _propTypesDefault.default).bool
            ])),
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object
        ])
    };
    return Container;
}

},{"react":"jMk1U","prop-types":"GNqOQ","clsx":"dOSJC","@mui/utils/generateUtilityClass":"iAc9p","@mui/utils/composeClasses":"gluJr","@mui/utils/capitalize":"igOKi","../useThemeProps/index.js":"l2Red","../styled/index.js":"kdyDN","../createTheme/index.js":"iH9Ok","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gluJr":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("88d7eed2910b0f5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _composeClasses.default;
    }
});
var _composeClasses = _interopRequireDefault(require("6d6e9f223fe30422"));

},{"88d7eed2910b0f5":"1P3rZ","6d6e9f223fe30422":"9g5W0"}],"9g5W0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = composeClasses;
/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0
   ---
   These rules are preventing the performance optimizations below.
 */ /**
 * Compose classes from multiple sources.
 *
 * @example
 * ```tsx
 * const slots = {
 *  root: ['root', 'primary'],
 *  label: ['label'],
 * };
 *
 * const getUtilityClass = (slot) => `MuiButton-${slot}`;
 *
 * const classes = {
 *   root: 'my-root-class',
 * };
 *
 * const output = composeClasses(slots, getUtilityClass, classes);
 * // {
 * //   root: 'MuiButton-root MuiButton-primary my-root-class',
 * //   label: 'MuiButton-label',
 * // }
 * ```
 *
 * @param slots a list of classes for each possible slot
 * @param getUtilityClass a function to resolve the class based on the slot name
 * @param classes the input classes from props
 * @returns the resolved classes for all slots
 */ function composeClasses(slots, getUtilityClass, classes) {
    const output = {};
    for(const slotName in slots){
        const slot = slots[slotName];
        let buffer = '';
        let start = true;
        for(let i = 0; i < slot.length; i += 1){
            const value = slot[i];
            if (value) {
                buffer += (start === true ? '' : ' ') + getUtilityClass(value);
                start = false;
                if (classes && classes[value]) buffer += ' ' + classes[value];
            }
        }
        output[slotName] = buffer;
    }
    return output;
}

},{}],"9ueIq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "containerClasses", ()=>(0, _containerClassesJsDefault.default));
var _containerJs = require("./Container.js");
var _containerJsDefault = parcelHelpers.interopDefault(_containerJs);
var _containerClassesJs = require("./containerClasses.js");
var _containerClassesJsDefault = parcelHelpers.interopDefault(_containerClassesJs);
parcelHelpers.exportAll(_containerClassesJs, exports);

},{"./Container.js":"3DwGl","./containerClasses.js":"eKGDo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3DwGl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _createContainerJs = require("./createContainer.js");
var _createContainerJsDefault = parcelHelpers.interopDefault(_createContainerJs);
'use client';
/**
 *
 * Demos:
 *
 * - [Container (Material UI)](https://mui.com/material-ui/react-container/)
 * - [Container (MUI System)](https://mui.com/system/react-container/)
 *
 * API:
 *
 * - [Container API](https://mui.com/system/api/container/)
 */ const Container = (0, _createContainerJsDefault.default)();
Container.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: (0, _propTypesDefault.default).node,
    /**
   * Override or extend the styles applied to the component.
   */ classes: (0, _propTypesDefault.default).object,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: (0, _propTypesDefault.default).elementType,
    /**
   * If `true`, the left and right padding is removed.
   * @default false
   */ disableGutters: (0, _propTypesDefault.default).bool,
    /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */ fixed: (0, _propTypesDefault.default).bool,
    /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */ maxWidth: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl',
            false
        ]),
        (0, _propTypesDefault.default).string
    ]),
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).bool
        ])),
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).object
    ])
};
exports.default = Container;

},{"prop-types":"GNqOQ","./createContainer.js":"fsMkV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eKGDo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getContainerUtilityClass", ()=>getContainerUtilityClass);
var _generateUtilityClasses = require("@mui/utils/generateUtilityClasses");
var _generateUtilityClassesDefault = parcelHelpers.interopDefault(_generateUtilityClasses);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
function getContainerUtilityClass(slot) {
    return (0, _generateUtilityClassDefault.default)('MuiContainer', slot);
}
const containerClasses = (0, _generateUtilityClassesDefault.default)('MuiContainer', [
    'root',
    'disableGutters',
    'fixed',
    'maxWidthXs',
    'maxWidthSm',
    'maxWidthMd',
    'maxWidthLg',
    'maxWidthXl'
]);
exports.default = containerClasses;

},{"@mui/utils/generateUtilityClasses":"3J0Rs","@mui/utils/generateUtilityClass":"iAc9p","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8BkV8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _createGridJs = require("./createGrid.js");
var _createGridJsDefault = parcelHelpers.interopDefault(_createGridJs);
'use client';
/**
 *
 * Demos:
 *
 * - [Grid (Joy UI)](https://mui.com/joy-ui/react-grid/)
 * - [Grid (Material UI)](https://mui.com/material-ui/react-grid/)
 *
 * API:
 *
 * - [Grid API](https://mui.com/system/api/grid/)
 */ const Grid = (0, _createGridJsDefault.default)();
Grid.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * The content of the component.
   */ children: (0, _propTypesDefault.default).node,
    /**
   * The number of columns.
   * @default 12
   */ columns: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).number),
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object
    ]),
    /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */ columnSpacing: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).string
        ])),
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */ container: (0, _propTypesDefault.default).bool,
    /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */ direction: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).oneOf([
            'column-reverse',
            'column',
            'row-reverse',
            'row'
        ]),
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOf([
            'column-reverse',
            'column',
            'row-reverse',
            'row'
        ])),
        (0, _propTypesDefault.default).object
    ]),
    /**
   * Defines the offset value for the type `item` components.
   */ offset: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).string,
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).string,
            (0, _propTypesDefault.default).number
        ])),
        (0, _propTypesDefault.default).object
    ]),
    /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */ rowSpacing: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).string
        ])),
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    /**
   * Defines the size of the the type `item` components.
   */ size: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).string,
        (0, _propTypesDefault.default).bool,
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).string,
            (0, _propTypesDefault.default).bool,
            (0, _propTypesDefault.default).number
        ])),
        (0, _propTypesDefault.default).object
    ]),
    /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */ spacing: (0, _propTypesDefault.default /* @typescript-to-proptypes-ignore */ ).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).string
        ])),
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    /**
   * @ignore
   */ sx: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).bool
        ])),
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).object
    ]),
    /**
   * @internal
   * The level of the grid starts from `0` and increases when the grid nests
   * inside another grid. Nesting is defined as a container Grid being a direct
   * child of a container Grid.
   *
   * ```js
   * <Grid container> // level 0
   *   <Grid container> // level 1
   *     <Grid container> // level 2
   * ```
   *
   * Only consecutive grid is considered nesting. A grid container will start at
   * `0` if there are non-Grid container element above it.
   *
   * ```js
   * <Grid container> // level 0
   *   <div>
   *     <Grid container> // level 0
   * ```
   *
   * ```js
   * <Grid container> // level 0
   *   <Grid>
   *     <Grid container> // level 0
   * ```
   */ unstable_level: (0, _propTypesDefault.default).number,
    /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */ wrap: (0, _propTypesDefault.default).oneOf([
        'nowrap',
        'wrap-reverse',
        'wrap'
    ])
};
exports.default = Grid;

},{"prop-types":"GNqOQ","./createGrid.js":"2D1Dm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2D1Dm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createGrid);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _isMuiElement = require("@mui/utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
var _composeClasses = require("@mui/utils/composeClasses");
var _composeClassesDefault = parcelHelpers.interopDefault(_composeClasses);
var _indexJs = require("../styled/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../useThemeProps/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../useTheme/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../styleFunctionSx/index.js");
var _indexJs4 = require("../createTheme/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs4);
var _gridGeneratorJs = require("./gridGenerator.js");
var _deleteLegacyGridPropsJs = require("./deleteLegacyGridProps.js");
var _deleteLegacyGridPropsJsDefault = parcelHelpers.interopDefault(_deleteLegacyGridPropsJs);
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const defaultTheme = (0, _indexJsDefault3.default)();
// widening Theme to any so that the consumer can own the theme structure.
const defaultCreateStyledComponent = (0, _indexJsDefault.default)('div', {
    name: 'MuiGrid',
    slot: 'Root',
    overridesResolver: (props, styles)=>styles.root
});
function useThemePropsDefault(props) {
    return (0, _indexJsDefault1.default)({
        props,
        name: 'MuiGrid',
        defaultTheme
    });
}
function createGrid(options = {}) {
    const { // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent, useThemeProps = useThemePropsDefault, useTheme = (0, _indexJsDefault2.default), componentName = 'MuiGrid' } = options;
    const useUtilityClasses = (ownerState, theme)=>{
        const { container, direction, spacing, wrap, size } = ownerState;
        const slots = {
            root: [
                'root',
                container && 'container',
                wrap !== 'wrap' && `wrap-xs-${String(wrap)}`,
                ...(0, _gridGeneratorJs.generateDirectionClasses)(direction),
                ...(0, _gridGeneratorJs.generateSizeClassNames)(size),
                ...container ? (0, _gridGeneratorJs.generateSpacingClassNames)(spacing, theme.breakpoints.keys[0]) : []
            ]
        };
        return (0, _composeClassesDefault.default)(slots, (slot)=>(0, _generateUtilityClassDefault.default)(componentName, slot), {});
    };
    function parseResponsiveProp(propValue, breakpoints, shouldUseValue = ()=>true) {
        const parsedProp = {};
        if (propValue === null) return parsedProp;
        if (Array.isArray(propValue)) propValue.forEach((value, index)=>{
            if (value !== null && shouldUseValue(value) && breakpoints.keys[index]) parsedProp[breakpoints.keys[index]] = value;
        });
        else if (typeof propValue === 'object') Object.keys(propValue).forEach((key)=>{
            const value = propValue[key];
            if (value !== null && value !== undefined && shouldUseValue(value)) parsedProp[key] = value;
        });
        else parsedProp[breakpoints.keys[0]] = propValue;
        return parsedProp;
    }
    const GridRoot = createStyledComponent((0, _gridGeneratorJs.generateGridColumnsStyles), (0, _gridGeneratorJs.generateGridColumnSpacingStyles), (0, _gridGeneratorJs.generateGridRowSpacingStyles), (0, _gridGeneratorJs.generateGridSizeStyles), (0, _gridGeneratorJs.generateGridDirectionStyles), (0, _gridGeneratorJs.generateGridStyles), (0, _gridGeneratorJs.generateGridOffsetStyles));
    const Grid = /*#__PURE__*/ _react.forwardRef(function Grid(inProps, ref) {
        const theme = useTheme();
        const themeProps = useThemeProps(inProps);
        const props = (0, _indexJs3.extendSxProp)(themeProps); // `color` type conflicts with html color attribute.
        // TODO v8: Remove when removing the legacy Grid component
        (0, _deleteLegacyGridPropsJsDefault.default)(props, theme.breakpoints);
        const { className, children, columns: columnsProp = 12, container = false, component = 'div', direction = 'row', wrap = 'wrap', size: sizeProp = {}, offset: offsetProp = {}, spacing: spacingProp = 0, rowSpacing: rowSpacingProp = spacingProp, columnSpacing: columnSpacingProp = spacingProp, unstable_level: level = 0, ...other } = props;
        const size = parseResponsiveProp(sizeProp, theme.breakpoints, (val)=>val !== false);
        const offset = parseResponsiveProp(offsetProp, theme.breakpoints);
        const columns = inProps.columns ?? (level ? undefined : columnsProp);
        const spacing = inProps.spacing ?? (level ? undefined : spacingProp);
        const rowSpacing = inProps.rowSpacing ?? inProps.spacing ?? (level ? undefined : rowSpacingProp);
        const columnSpacing = inProps.columnSpacing ?? inProps.spacing ?? (level ? undefined : columnSpacingProp);
        const ownerState = {
            ...props,
            level,
            columns,
            container,
            direction,
            wrap,
            spacing,
            rowSpacing,
            columnSpacing,
            size,
            offset
        };
        const classes = useUtilityClasses(ownerState, theme);
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(GridRoot, {
            ref: ref,
            as: component,
            ownerState: ownerState,
            className: (0, _clsxDefault.default)(classes.root, className),
            ...other,
            children: _react.Children.map(children, (child)=>{
                if (/*#__PURE__*/ _react.isValidElement(child) && (0, _isMuiElementDefault.default)(child, [
                    'Grid'
                ]) && container && child.props.container) return /*#__PURE__*/ _react.cloneElement(child, {
                    unstable_level: child.props?.unstable_level ?? level + 1
                });
                return child;
            })
        });
    });
    Grid.propTypes = {
        children: (0, _propTypesDefault.default).node,
        className: (0, _propTypesDefault.default).string,
        columns: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).number),
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).object
        ]),
        columnSpacing: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).number,
                (0, _propTypesDefault.default).string
            ])),
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).string
        ]),
        component: (0, _propTypesDefault.default).elementType,
        container: (0, _propTypesDefault.default).bool,
        direction: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).oneOf([
                'column-reverse',
                'column',
                'row-reverse',
                'row'
            ]),
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOf([
                'column-reverse',
                'column',
                'row-reverse',
                'row'
            ])),
            (0, _propTypesDefault.default).object
        ]),
        offset: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).string,
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).string,
                (0, _propTypesDefault.default).number
            ])),
            (0, _propTypesDefault.default).object
        ]),
        rowSpacing: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).number,
                (0, _propTypesDefault.default).string
            ])),
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).string
        ]),
        size: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).string,
            (0, _propTypesDefault.default).bool,
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).string,
                (0, _propTypesDefault.default).bool,
                (0, _propTypesDefault.default).number
            ])),
            (0, _propTypesDefault.default).object
        ]),
        spacing: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).number,
                (0, _propTypesDefault.default).string
            ])),
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).string
        ]),
        sx: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).func,
                (0, _propTypesDefault.default).object,
                (0, _propTypesDefault.default).bool
            ])),
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object
        ]),
        wrap: (0, _propTypesDefault.default).oneOf([
            'nowrap',
            'wrap-reverse',
            'wrap'
        ])
    };
    // @ts-ignore internal logic for nested grid
    Grid.muiName = 'Grid';
    return Grid;
}

},{"react":"jMk1U","prop-types":"GNqOQ","clsx":"dOSJC","@mui/utils/isMuiElement":"ah8yj","@mui/utils/generateUtilityClass":"iAc9p","@mui/utils/composeClasses":"gluJr","../styled/index.js":"kdyDN","../useThemeProps/index.js":"l2Red","../useTheme/index.js":"dQKAT","../styleFunctionSx/index.js":"aRtza","../createTheme/index.js":"iH9Ok","./gridGenerator.js":"cs6cf","./deleteLegacyGridProps.js":"2zsoT","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ah8yj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("38811d70089ca4a7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _isMuiElement.default;
    }
});
var _isMuiElement = _interopRequireDefault(require("ab58aec94705640a"));

},{"38811d70089ca4a7":"1P3rZ","ab58aec94705640a":"46YsT"}],"46YsT":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("bd1e0132e26874b5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isMuiElement;
var React = _interopRequireWildcard(require("19a3b474c34b2695"));
function isMuiElement(element, muiNames) {
    return /*#__PURE__*/ React.isValidElement(element) && muiNames.indexOf(// For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;
}

},{"bd1e0132e26874b5":"6TFJp","19a3b474c34b2695":"jMk1U"}],"cs6cf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "generateGridSizeStyles", ()=>generateGridSizeStyles);
parcelHelpers.export(exports, "generateGridOffsetStyles", ()=>generateGridOffsetStyles);
parcelHelpers.export(exports, "generateGridColumnsStyles", ()=>generateGridColumnsStyles);
parcelHelpers.export(exports, "generateGridRowSpacingStyles", ()=>generateGridRowSpacingStyles);
parcelHelpers.export(exports, "generateGridColumnSpacingStyles", ()=>generateGridColumnSpacingStyles);
parcelHelpers.export(exports, "generateGridDirectionStyles", ()=>generateGridDirectionStyles);
parcelHelpers.export(exports, "generateGridStyles", ()=>generateGridStyles);
parcelHelpers.export(exports, "generateSizeClassNames", ()=>generateSizeClassNames);
parcelHelpers.export(exports, "generateSpacingClassNames", ()=>generateSpacingClassNames);
parcelHelpers.export(exports, "generateDirectionClasses", ()=>generateDirectionClasses);
var _traverseBreakpointsJs = require("./traverseBreakpoints.js");
function getSelfSpacingVar(axis) {
    return `--Grid-${axis}Spacing`;
}
function getParentSpacingVar(axis) {
    return `--Grid-parent-${axis}Spacing`;
}
const selfColumnsVar = '--Grid-columns';
const parentColumnsVar = '--Grid-parent-columns';
const generateGridSizeStyles = ({ theme, ownerState })=>{
    const styles = {};
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.size, (appendStyle, value)=>{
        let style = {};
        if (value === 'grow') style = {
            flexBasis: 0,
            flexGrow: 1,
            maxWidth: '100%'
        };
        if (value === 'auto') style = {
            flexBasis: 'auto',
            flexGrow: 0,
            flexShrink: 0,
            maxWidth: 'none',
            width: 'auto'
        };
        if (typeof value === 'number') style = {
            flexGrow: 0,
            flexBasis: 'auto',
            width: `calc(100% * ${value} / var(${parentColumnsVar}) - (var(${parentColumnsVar}) - ${value}) * (var(${getParentSpacingVar('column')}) / var(${parentColumnsVar})))`
        };
        appendStyle(styles, style);
    });
    return styles;
};
const generateGridOffsetStyles = ({ theme, ownerState })=>{
    const styles = {};
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.offset, (appendStyle, value)=>{
        let style = {};
        if (value === 'auto') style = {
            marginLeft: 'auto'
        };
        if (typeof value === 'number') style = {
            marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / var(${parentColumnsVar}) + var(${getParentSpacingVar('column')}) * ${value} / var(${parentColumnsVar}))`
        };
        appendStyle(styles, style);
    });
    return styles;
};
const generateGridColumnsStyles = ({ theme, ownerState })=>{
    if (!ownerState.container) return {};
    const styles = {
        [selfColumnsVar]: 12
    };
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.columns, (appendStyle, value)=>{
        const columns = value ?? 12;
        appendStyle(styles, {
            [selfColumnsVar]: columns,
            '> *': {
                [parentColumnsVar]: columns
            }
        });
    });
    return styles;
};
const generateGridRowSpacingStyles = ({ theme, ownerState })=>{
    if (!ownerState.container) return {};
    const styles = {};
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value)=>{
        const spacing = typeof value === 'string' ? value : theme.spacing?.(value);
        appendStyle(styles, {
            [getSelfSpacingVar('row')]: spacing,
            '> *': {
                [getParentSpacingVar('row')]: spacing
            }
        });
    });
    return styles;
};
const generateGridColumnSpacingStyles = ({ theme, ownerState })=>{
    if (!ownerState.container) return {};
    const styles = {};
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value)=>{
        const spacing = typeof value === 'string' ? value : theme.spacing?.(value);
        appendStyle(styles, {
            [getSelfSpacingVar('column')]: spacing,
            '> *': {
                [getParentSpacingVar('column')]: spacing
            }
        });
    });
    return styles;
};
const generateGridDirectionStyles = ({ theme, ownerState })=>{
    if (!ownerState.container) return {};
    const styles = {};
    (0, _traverseBreakpointsJs.traverseBreakpoints)(theme.breakpoints, ownerState.direction, (appendStyle, value)=>{
        appendStyle(styles, {
            flexDirection: value
        });
    });
    return styles;
};
const generateGridStyles = ({ ownerState })=>{
    return {
        minWidth: 0,
        boxSizing: 'border-box',
        ...ownerState.container && {
            display: 'flex',
            flexWrap: 'wrap',
            ...ownerState.wrap && ownerState.wrap !== 'wrap' && {
                flexWrap: ownerState.wrap
            },
            gap: `var(${getSelfSpacingVar('row')}) var(${getSelfSpacingVar('column')})`
        }
    };
};
const generateSizeClassNames = (size)=>{
    const classNames = [];
    Object.entries(size).forEach(([key, value])=>{
        if (value !== false && value !== undefined) classNames.push(`grid-${key}-${String(value)}`);
    });
    return classNames;
};
const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs')=>{
    function isValidSpacing(val) {
        if (val === undefined) return false;
        return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;
    }
    if (isValidSpacing(spacing)) return [
        `spacing-${smallestBreakpoint}-${String(spacing)}`
    ];
    if (typeof spacing === 'object' && !Array.isArray(spacing)) {
        const classNames = [];
        Object.entries(spacing).forEach(([key, value])=>{
            if (isValidSpacing(value)) classNames.push(`spacing-${key}-${String(value)}`);
        });
        return classNames;
    }
    return [];
};
const generateDirectionClasses = (direction)=>{
    if (direction === undefined) return [];
    if (typeof direction === 'object') return Object.entries(direction).map(([key, value])=>`direction-${key}-${value}`);
    return [
        `direction-xs-${String(direction)}`
    ];
};

},{"./traverseBreakpoints.js":"besxE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"besxE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "filterBreakpointKeys", ()=>filterBreakpointKeys);
parcelHelpers.export(exports, "traverseBreakpoints", ()=>traverseBreakpoints);
const filterBreakpointKeys = (breakpointsKeys, responsiveKeys)=>breakpointsKeys.filter((key)=>responsiveKeys.includes(key));
const traverseBreakpoints = (breakpoints, responsive, iterator)=>{
    const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.
    if (Array.isArray(responsive)) responsive.forEach((breakpointValue, index)=>{
        iterator((responsiveStyles, style)=>{
            if (index <= breakpoints.keys.length - 1) {
                if (index === 0) Object.assign(responsiveStyles, style);
                else responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;
            }
        }, breakpointValue);
    });
    else if (responsive && typeof responsive === 'object') {
        // prevent null
        // responsive could be a very big object, pick the smallest responsive values
        const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));
        keys.forEach((key)=>{
            if (breakpoints.keys.includes(key)) {
                // @ts-ignore already checked that responsive is an object
                const breakpointValue = responsive[key];
                if (breakpointValue !== undefined) iterator((responsiveStyles, style)=>{
                    if (smallestBreakpoint === key) Object.assign(responsiveStyles, style);
                    else responsiveStyles[breakpoints.up(key)] = style;
                }, breakpointValue);
            }
        });
    } else if (typeof responsive === 'number' || typeof responsive === 'string') iterator((responsiveStyles, style)=>{
        Object.assign(responsiveStyles, style);
    }, responsive);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2zsoT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>deleteLegacyGridProps);
const getLegacyGridWarning = (propName)=>{
    if ([
        'item',
        'zeroMinWidth'
    ].includes(propName)) return `The \`${propName}\` prop has been removed and is no longer necessary. You can safely remove it.`;
    // #host-reference
    return `The \`${propName}\` prop has been removed. See https://mui.com/material-ui/migration/upgrade-to-grid-v2/ for migration instructions.`;
};
const warnedAboutProps = [];
function deleteLegacyGridProps(props, breakpoints) {
    const propsToWarn = [];
    if (props.item !== undefined) {
        delete props.item;
        propsToWarn.push('item');
    }
    if (props.zeroMinWidth !== undefined) {
        delete props.zeroMinWidth;
        propsToWarn.push('zeroMinWidth');
    }
    breakpoints.keys.forEach((breakpoint)=>{
        if (props[breakpoint] !== undefined) {
            propsToWarn.push(breakpoint);
            delete props[breakpoint];
        }
    });
    propsToWarn.forEach((prop)=>{
        if (!warnedAboutProps.includes(prop)) {
            warnedAboutProps.push(prop);
            console.warn(`MUI Grid: ${getLegacyGridWarning(prop)}\n`);
        }
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dXOvW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _gridJsDefault.default));
parcelHelpers.export(exports, "createGrid", ()=>(0, _createGridJsDefault.default));
parcelHelpers.export(exports, "gridClasses", ()=>(0, _gridClassesJsDefault.default));
parcelHelpers.export(exports, "unstable_traverseBreakpoints", ()=>(0, _traverseBreakpointsJs.traverseBreakpoints));
parcelHelpers.export(exports, "unstable_generateDirectionClasses", ()=>(0, _gridGeneratorJs.generateDirectionClasses));
parcelHelpers.export(exports, "unstable_generateSizeClassNames", ()=>(0, _gridGeneratorJs.generateSizeClassNames));
parcelHelpers.export(exports, "unstable_generateSpacingClassNames", ()=>(0, _gridGeneratorJs.generateSpacingClassNames));
var _gridJs = require("./Grid.js");
var _gridJsDefault = parcelHelpers.interopDefault(_gridJs);
var _createGridJs = require("./createGrid.js");
var _createGridJsDefault = parcelHelpers.interopDefault(_createGridJs);
var _gridPropsJs = require("./GridProps.js");
parcelHelpers.exportAll(_gridPropsJs, exports);
var _gridClassesJs = require("./gridClasses.js");
var _gridClassesJsDefault = parcelHelpers.interopDefault(_gridClassesJs);
parcelHelpers.exportAll(_gridClassesJs, exports);
var _traverseBreakpointsJs = require("./traverseBreakpoints.js");
var _gridGeneratorJs = require("./gridGenerator.js");

},{"./Grid.js":"8BkV8","./createGrid.js":"2D1Dm","./GridProps.js":"9EyTq","./gridClasses.js":"jY2tf","./traverseBreakpoints.js":"besxE","./gridGenerator.js":"cs6cf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9EyTq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jY2tf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getGridUtilityClass", ()=>getGridUtilityClass);
var _generateUtilityClasses = require("@mui/utils/generateUtilityClasses");
var _generateUtilityClassesDefault = parcelHelpers.interopDefault(_generateUtilityClasses);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
function getGridUtilityClass(slot) {
    return (0, _generateUtilityClassDefault.default)('MuiGrid', slot);
}
const SPACINGS = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10
];
const DIRECTIONS = [
    'column-reverse',
    'column',
    'row-reverse',
    'row'
];
const WRAPS = [
    'nowrap',
    'wrap-reverse',
    'wrap'
];
const GRID_SIZES = [
    'auto',
    'grow',
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12
];
const gridClasses = (0, _generateUtilityClassesDefault.default)('MuiGrid', [
    'root',
    'container',
    'item',
    // spacings
    ...SPACINGS.map((spacing)=>`spacing-xs-${spacing}`),
    // direction values
    ...DIRECTIONS.map((direction)=>`direction-xs-${direction}`),
    // wrap values
    ...WRAPS.map((wrap)=>`wrap-xs-${wrap}`),
    // grid sizes for all breakpoints
    ...GRID_SIZES.map((size)=>`grid-xs-${size}`),
    ...GRID_SIZES.map((size)=>`grid-sm-${size}`),
    ...GRID_SIZES.map((size)=>`grid-md-${size}`),
    ...GRID_SIZES.map((size)=>`grid-lg-${size}`),
    ...GRID_SIZES.map((size)=>`grid-xl-${size}`)
]);
exports.default = gridClasses;

},{"@mui/utils/generateUtilityClasses":"3J0Rs","@mui/utils/generateUtilityClass":"iAc9p","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"25xkO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _createStackJs = require("./createStack.js");
var _createStackJsDefault = parcelHelpers.interopDefault(_createStackJs);
'use client';
/**
 *
 * Demos:
 *
 * - [Stack (Joy UI)](https://mui.com/joy-ui/react-stack/)
 * - [Stack (Material UI)](https://mui.com/material-ui/react-stack/)
 * - [Stack (MUI System)](https://mui.com/system/react-stack/)
 *
 * API:
 *
 * - [Stack API](https://mui.com/system/api/stack/)
 */ const Stack = (0, _createStackJsDefault.default)();
Stack.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * The content of the component.
   */ children: (0, _propTypesDefault.default).node,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: (0, _propTypesDefault.default).elementType,
    /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */ direction: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).oneOf([
            'column-reverse',
            'column',
            'row-reverse',
            'row'
        ]),
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOf([
            'column-reverse',
            'column',
            'row-reverse',
            'row'
        ])),
        (0, _propTypesDefault.default).object
    ]),
    /**
   * Add an element between each child.
   */ divider: (0, _propTypesDefault.default).node,
    /**
   * Defines the space between immediate children.
   * @default 0
   */ spacing: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).string
        ])),
        (0, _propTypesDefault.default).number,
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */ sx: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).bool
        ])),
        (0, _propTypesDefault.default).func,
        (0, _propTypesDefault.default).object
    ]),
    /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the theme's default props configuration.
   * @default false
   */ useFlexGap: (0, _propTypesDefault.default).bool
};
exports.default = Stack;

},{"prop-types":"GNqOQ","./createStack.js":"hI7SX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hI7SX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
parcelHelpers.export(exports, "default", ()=>createStack);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _deepmerge = require("@mui/utils/deepmerge");
var _deepmergeDefault = parcelHelpers.interopDefault(_deepmerge);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
var _composeClasses = require("@mui/utils/composeClasses");
var _composeClassesDefault = parcelHelpers.interopDefault(_composeClasses);
var _indexJs = require("../styled/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../useThemeProps/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../styleFunctionSx/index.js");
var _indexJs3 = require("../createTheme/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../breakpoints/index.js");
var _indexJs5 = require("../spacing/index.js");
var _jsxRuntime = require("react/jsx-runtime");
'use client';
const defaultTheme = (0, _indexJsDefault2.default)();
// widening Theme to any so that the consumer can own the theme structure.
const defaultCreateStyledComponent = (0, _indexJsDefault.default)('div', {
    name: 'MuiStack',
    slot: 'Root',
    overridesResolver: (props, styles)=>styles.root
});
function useThemePropsDefault(props) {
    return (0, _indexJsDefault1.default)({
        props,
        name: 'MuiStack',
        defaultTheme
    });
}
/**
 * Return an array with the separator React element interspersed between
 * each React node of the input children.
 *
 * > joinChildren([1,2,3], 0)
 * [1,0,2,0,3]
 */ function joinChildren(children, separator) {
    const childrenArray = _react.Children.toArray(children).filter(Boolean);
    return childrenArray.reduce((output, child, index)=>{
        output.push(child);
        if (index < childrenArray.length - 1) output.push(/*#__PURE__*/ _react.cloneElement(separator, {
            key: `separator-${index}`
        }));
        return output;
    }, []);
}
const getSideFromDirection = (direction)=>{
    return ({
        row: 'Left',
        'row-reverse': 'Right',
        column: 'Top',
        'column-reverse': 'Bottom'
    })[direction];
};
const style = ({ ownerState, theme })=>{
    let styles = {
        display: 'flex',
        flexDirection: 'column',
        ...(0, _indexJs4.handleBreakpoints)({
            theme
        }, (0, _indexJs4.resolveBreakpointValues)({
            values: ownerState.direction,
            breakpoints: theme.breakpoints.values
        }), (propValue)=>({
                flexDirection: propValue
            }))
    };
    if (ownerState.spacing) {
        const transformer = (0, _indexJs5.createUnarySpacing)(theme);
        const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint)=>{
            if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) acc[breakpoint] = true;
            return acc;
        }, {});
        const directionValues = (0, _indexJs4.resolveBreakpointValues)({
            values: ownerState.direction,
            base
        });
        const spacingValues = (0, _indexJs4.resolveBreakpointValues)({
            values: ownerState.spacing,
            base
        });
        if (typeof directionValues === 'object') Object.keys(directionValues).forEach((breakpoint, index, breakpoints)=>{
            const directionValue = directionValues[breakpoint];
            if (!directionValue) {
                const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';
                directionValues[breakpoint] = previousDirectionValue;
            }
        });
        const styleFromPropValue = (propValue, breakpoint)=>{
            if (ownerState.useFlexGap) return {
                gap: (0, _indexJs5.getValue)(transformer, propValue)
            };
            return {
                // The useFlexGap={false} implement relies on each child to give up control of the margin.
                // We need to reset the margin to avoid double spacing.
                '& > :not(style):not(style)': {
                    margin: 0
                },
                '& > :not(style) ~ :not(style)': {
                    [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: (0, _indexJs5.getValue)(transformer, propValue)
                }
            };
        };
        styles = (0, _deepmergeDefault.default)(styles, (0, _indexJs4.handleBreakpoints)({
            theme
        }, spacingValues, styleFromPropValue));
    }
    styles = (0, _indexJs4.mergeBreakpointsInOrder)(theme.breakpoints, styles);
    return styles;
};
function createStack(options = {}) {
    const { // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent = defaultCreateStyledComponent, useThemeProps = useThemePropsDefault, componentName = 'MuiStack' } = options;
    const useUtilityClasses = ()=>{
        const slots = {
            root: [
                'root'
            ]
        };
        return (0, _composeClassesDefault.default)(slots, (slot)=>(0, _generateUtilityClassDefault.default)(componentName, slot), {});
    };
    const StackRoot = createStyledComponent(style);
    const Stack = /*#__PURE__*/ _react.forwardRef(function Grid(inProps, ref) {
        const themeProps = useThemeProps(inProps);
        const props = (0, _indexJs2.extendSxProp)(themeProps); // `color` type conflicts with html color attribute.
        const { component = 'div', direction = 'column', spacing = 0, divider, children, className, useFlexGap = false, ...other } = props;
        const ownerState = {
            direction,
            spacing,
            useFlexGap
        };
        const classes = useUtilityClasses();
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(StackRoot, {
            as: component,
            ownerState: ownerState,
            ref: ref,
            className: (0, _clsxDefault.default)(classes.root, className),
            ...other,
            children: divider ? joinChildren(children, divider) : children
        });
    });
    Stack.propTypes = {
        children: (0, _propTypesDefault.default).node,
        direction: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).oneOf([
                'column-reverse',
                'column',
                'row-reverse',
                'row'
            ]),
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOf([
                'column-reverse',
                'column',
                'row-reverse',
                'row'
            ])),
            (0, _propTypesDefault.default).object
        ]),
        divider: (0, _propTypesDefault.default).node,
        spacing: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).number,
                (0, _propTypesDefault.default).string
            ])),
            (0, _propTypesDefault.default).number,
            (0, _propTypesDefault.default).object,
            (0, _propTypesDefault.default).string
        ]),
        sx: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).oneOfType([
                (0, _propTypesDefault.default).func,
                (0, _propTypesDefault.default).object,
                (0, _propTypesDefault.default).bool
            ])),
            (0, _propTypesDefault.default).func,
            (0, _propTypesDefault.default).object
        ])
    };
    return Stack;
}

},{"react":"jMk1U","prop-types":"GNqOQ","clsx":"dOSJC","@mui/utils/deepmerge":"bLPf1","@mui/utils/generateUtilityClass":"iAc9p","@mui/utils/composeClasses":"gluJr","../styled/index.js":"kdyDN","../useThemeProps/index.js":"l2Red","../styleFunctionSx/index.js":"aRtza","../createTheme/index.js":"iH9Ok","../breakpoints/index.js":"w58nR","../spacing/index.js":"aFm0j","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"KT4MP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _stackJsDefault.default));
parcelHelpers.export(exports, "createStack", ()=>(0, _createStackJsDefault.default));
parcelHelpers.export(exports, "stackClasses", ()=>(0, _stackClassesJsDefault.default));
var _stackJs = require("./Stack.js");
var _stackJsDefault = parcelHelpers.interopDefault(_stackJs);
var _createStackJs = require("./createStack.js");
var _createStackJsDefault = parcelHelpers.interopDefault(_createStackJs);
var _stackPropsJs = require("./StackProps.js");
parcelHelpers.exportAll(_stackPropsJs, exports);
var _stackClassesJs = require("./stackClasses.js");
var _stackClassesJsDefault = parcelHelpers.interopDefault(_stackClassesJs);
parcelHelpers.exportAll(_stackClassesJs, exports);

},{"./Stack.js":"25xkO","./createStack.js":"hI7SX","./StackProps.js":"Y6Wdx","./stackClasses.js":"bO9Zz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"Y6Wdx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bO9Zz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getStackUtilityClass", ()=>getStackUtilityClass);
var _generateUtilityClasses = require("@mui/utils/generateUtilityClasses");
var _generateUtilityClassesDefault = parcelHelpers.interopDefault(_generateUtilityClasses);
var _generateUtilityClass = require("@mui/utils/generateUtilityClass");
var _generateUtilityClassDefault = parcelHelpers.interopDefault(_generateUtilityClass);
function getStackUtilityClass(slot) {
    return (0, _generateUtilityClassDefault.default)('MuiStack', slot);
}
const stackClasses = (0, _generateUtilityClassesDefault.default)('MuiStack', [
    'root'
]);
exports.default = stackClasses;

},{"@mui/utils/generateUtilityClasses":"3J0Rs","@mui/utils/generateUtilityClass":"iAc9p","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ZDyZ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4e75d35597054138").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "unstable_createBreakpoints", {
    enumerable: true,
    get: function() {
        return _createBreakpoints.default;
    }
});
var _createBreakpoints = _interopRequireDefault(require("251dd965507dcb6c"));

},{"4e75d35597054138":"1P3rZ","251dd965507dcb6c":"k5Ify"}],"k5Ify":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.breakpointKeys = void 0;
exports.default = createBreakpoints;
// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
const breakpointKeys = exports.breakpointKeys = [
    'xs',
    'sm',
    'md',
    'lg',
    'xl'
];
const sortBreakpointsValues = (values)=>{
    const breakpointsAsArray = Object.keys(values).map((key)=>({
            key,
            val: values[key]
        })) || [];
    // Sort in ascending order
    breakpointsAsArray.sort((breakpoint1, breakpoint2)=>breakpoint1.val - breakpoint2.val);
    return breakpointsAsArray.reduce((acc, obj)=>{
        return {
            ...acc,
            [obj.key]: obj.val
        };
    }, {});
};
// Keep in mind that @media is inclusive by the CSS specification.
function createBreakpoints(breakpoints) {
    const { // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values = {
        xs: 0,
        // phone
        sm: 600,
        // tablet
        md: 900,
        // small laptop
        lg: 1200,
        // desktop
        xl: 1536 // large screen
    }, unit = 'px', step = 5, ...other } = breakpoints;
    const sortedValues = sortBreakpointsValues(values);
    const keys = Object.keys(sortedValues);
    function up(key) {
        const value = typeof values[key] === 'number' ? values[key] : key;
        return `@media (min-width:${value}${unit})`;
    }
    function down(key) {
        const value = typeof values[key] === 'number' ? values[key] : key;
        return `@media (max-width:${value - step / 100}${unit})`;
    }
    function between(start, end) {
        const endIndex = keys.indexOf(end);
        return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;
    }
    function only(key) {
        if (keys.indexOf(key) + 1 < keys.length) return between(key, keys[keys.indexOf(key) + 1]);
        return up(key);
    }
    function not(key) {
        // handle first and last key separately, for better readability
        const keyIndex = keys.indexOf(key);
        if (keyIndex === 0) return up(keys[1]);
        if (keyIndex === keys.length - 1) return down(keys[keyIndex]);
        return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
    }
    return {
        keys,
        values: sortedValues,
        up,
        down,
        between,
        only,
        not,
        unit,
        ...other
    };
}

},{}],"a1TKj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f53bf87bf42dedc").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createTheme;
var _createPalette = _interopRequireDefault(require("ce01a4e2b614fac5"));
var _createThemeWithVars = _interopRequireDefault(require("9ef23b096d7a489b"));
var _createThemeNoVars = _interopRequireDefault(require("22170ee3bd11250f"));
// eslint-disable-next-line consistent-return
function attachColorScheme(theme, scheme, colorScheme) {
    if (!theme.colorSchemes) return undefined;
    if (colorScheme) theme.colorSchemes[scheme] = {
        ...colorScheme !== true && colorScheme,
        palette: (0, _createPalette.default)({
            ...colorScheme === true ? {} : colorScheme.palette,
            mode: scheme
        }) // cast type to skip module augmentation test
    };
}
/**
 * Generate a theme base on the options received.
 * @param options Takes an incomplete theme object and adds the missing parts.
 * @param args Deep merge the arguments with the about to be returned theme.
 * @returns A complete, ready-to-use theme object.
 */ function createTheme(options = {}, // cast type to skip module augmentation test
...args) {
    const { palette, cssVariables = false, colorSchemes: initialColorSchemes = !palette ? {
        light: true
    } : undefined, defaultColorScheme: initialDefaultColorScheme = palette?.mode, ...rest } = options;
    const defaultColorSchemeInput = initialDefaultColorScheme || 'light';
    const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];
    const colorSchemesInput = {
        ...initialColorSchemes,
        ...palette ? {
            [defaultColorSchemeInput]: {
                ...typeof defaultScheme !== 'boolean' && defaultScheme,
                palette
            }
        } : undefined
    };
    if (cssVariables === false) {
        if (!('colorSchemes' in options)) // Behaves exactly as v5
        return (0, _createThemeNoVars.default)(options, ...args);
        let paletteOptions = palette;
        if (!('palette' in options)) {
            if (colorSchemesInput[defaultColorSchemeInput]) {
                if (colorSchemesInput[defaultColorSchemeInput] !== true) paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;
                else if (defaultColorSchemeInput === 'dark') // @ts-ignore to prevent the module augmentation test from failing
                paletteOptions = {
                    mode: 'dark'
                };
            }
        }
        const theme = (0, _createThemeNoVars.default)({
            ...options,
            palette: paletteOptions
        }, ...args);
        theme.defaultColorScheme = defaultColorSchemeInput;
        theme.colorSchemes = colorSchemesInput;
        if (theme.palette.mode === 'light') {
            theme.colorSchemes.light = {
                ...colorSchemesInput.light !== true && colorSchemesInput.light,
                palette: theme.palette
            };
            attachColorScheme(theme, 'dark', colorSchemesInput.dark);
        }
        if (theme.palette.mode === 'dark') {
            theme.colorSchemes.dark = {
                ...colorSchemesInput.dark !== true && colorSchemesInput.dark,
                palette: theme.palette
            };
            attachColorScheme(theme, 'light', colorSchemesInput.light);
        }
        return theme;
    }
    if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') colorSchemesInput.light = true;
    return (0, _createThemeWithVars.default)({
        ...rest,
        colorSchemes: colorSchemesInput,
        defaultColorScheme: defaultColorSchemeInput,
        ...typeof cssVariables !== 'boolean' && cssVariables
    }, ...args);
}

},{"f53bf87bf42dedc":"1P3rZ","ce01a4e2b614fac5":"6gFd1","9ef23b096d7a489b":"asCkD","22170ee3bd11250f":"dhKZY"}],"6gFd1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("11300292bb3e3dc3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.dark = void 0;
exports.default = createPalette;
exports.light = void 0;
var _formatMuiErrorMessage = _interopRequireDefault(require("a2877fe4b287d6b0"));
var _deepmerge = _interopRequireDefault(require("fa27818bbfce2f16"));
var _colorManipulator = require("984635010f11e72f");
var _common = _interopRequireDefault(require("2df4f74bc61cb41e"));
var _grey = _interopRequireDefault(require("3b7e746b54059808"));
var _purple = _interopRequireDefault(require("38df14157d06197c"));
var _red = _interopRequireDefault(require("3b28d80ed8bb4b59"));
var _orange = _interopRequireDefault(require("90db4edb20684717"));
var _blue = _interopRequireDefault(require("9701b07c082fb52f"));
var _lightBlue = _interopRequireDefault(require("ecf564fbe0fdcdd4"));
var _green = _interopRequireDefault(require("827981c919ddbe32"));
function getLight() {
    return {
        // The colors used to style the text.
        text: {
            // The most important text.
            primary: 'rgba(0, 0, 0, 0.87)',
            // Secondary text.
            secondary: 'rgba(0, 0, 0, 0.6)',
            // Disabled text have even lower visual prominence.
            disabled: 'rgba(0, 0, 0, 0.38)'
        },
        // The color used to divide different elements.
        divider: 'rgba(0, 0, 0, 0.12)',
        // The background colors used to style the surfaces.
        // Consistency between these values is important.
        background: {
            paper: _common.default.white,
            default: _common.default.white
        },
        // The colors used to style the action elements.
        action: {
            // The color of an active action like an icon button.
            active: 'rgba(0, 0, 0, 0.54)',
            // The color of an hovered action.
            hover: 'rgba(0, 0, 0, 0.04)',
            hoverOpacity: 0.04,
            // The color of a selected action.
            selected: 'rgba(0, 0, 0, 0.08)',
            selectedOpacity: 0.08,
            // The color of a disabled action.
            disabled: 'rgba(0, 0, 0, 0.26)',
            // The background color of a disabled action.
            disabledBackground: 'rgba(0, 0, 0, 0.12)',
            disabledOpacity: 0.38,
            focus: 'rgba(0, 0, 0, 0.12)',
            focusOpacity: 0.12,
            activatedOpacity: 0.12
        }
    };
}
const light = exports.light = getLight();
function getDark() {
    return {
        text: {
            primary: _common.default.white,
            secondary: 'rgba(255, 255, 255, 0.7)',
            disabled: 'rgba(255, 255, 255, 0.5)',
            icon: 'rgba(255, 255, 255, 0.5)'
        },
        divider: 'rgba(255, 255, 255, 0.12)',
        background: {
            paper: '#121212',
            default: '#121212'
        },
        action: {
            active: _common.default.white,
            hover: 'rgba(255, 255, 255, 0.08)',
            hoverOpacity: 0.08,
            selected: 'rgba(255, 255, 255, 0.16)',
            selectedOpacity: 0.16,
            disabled: 'rgba(255, 255, 255, 0.3)',
            disabledBackground: 'rgba(255, 255, 255, 0.12)',
            disabledOpacity: 0.38,
            focus: 'rgba(255, 255, 255, 0.12)',
            focusOpacity: 0.12,
            activatedOpacity: 0.24
        }
    };
}
const dark = exports.dark = getDark();
function addLightOrDark(intent, direction, shade, tonalOffset) {
    const tonalOffsetLight = tonalOffset.light || tonalOffset;
    const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
    if (!intent[direction]) {
        if (intent.hasOwnProperty(shade)) intent[direction] = intent[shade];
        else if (direction === 'light') intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffsetLight);
        else if (direction === 'dark') intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffsetDark);
    }
}
function getDefaultPrimary(mode = 'light') {
    if (mode === 'dark') return {
        main: _blue.default[200],
        light: _blue.default[50],
        dark: _blue.default[400]
    };
    return {
        main: _blue.default[700],
        light: _blue.default[400],
        dark: _blue.default[800]
    };
}
function getDefaultSecondary(mode = 'light') {
    if (mode === 'dark') return {
        main: _purple.default[200],
        light: _purple.default[50],
        dark: _purple.default[400]
    };
    return {
        main: _purple.default[500],
        light: _purple.default[300],
        dark: _purple.default[700]
    };
}
function getDefaultError(mode = 'light') {
    if (mode === 'dark') return {
        main: _red.default[500],
        light: _red.default[300],
        dark: _red.default[700]
    };
    return {
        main: _red.default[700],
        light: _red.default[400],
        dark: _red.default[800]
    };
}
function getDefaultInfo(mode = 'light') {
    if (mode === 'dark') return {
        main: _lightBlue.default[400],
        light: _lightBlue.default[300],
        dark: _lightBlue.default[700]
    };
    return {
        main: _lightBlue.default[700],
        light: _lightBlue.default[500],
        dark: _lightBlue.default[900]
    };
}
function getDefaultSuccess(mode = 'light') {
    if (mode === 'dark') return {
        main: _green.default[400],
        light: _green.default[300],
        dark: _green.default[700]
    };
    return {
        main: _green.default[800],
        light: _green.default[500],
        dark: _green.default[900]
    };
}
function getDefaultWarning(mode = 'light') {
    if (mode === 'dark') return {
        main: _orange.default[400],
        light: _orange.default[300],
        dark: _orange.default[700]
    };
    return {
        main: '#ed6c02',
        // closest to orange[800] that pass 3:1.
        light: _orange.default[500],
        dark: _orange.default[900]
    };
}
function createPalette(palette) {
    const { mode = 'light', contrastThreshold = 3, tonalOffset = 0.2, ...other } = palette;
    const primary = palette.primary || getDefaultPrimary(mode);
    const secondary = palette.secondary || getDefaultSecondary(mode);
    const error = palette.error || getDefaultError(mode);
    const info = palette.info || getDefaultInfo(mode);
    const success = palette.success || getDefaultSuccess(mode);
    const warning = palette.warning || getDefaultWarning(mode);
    // Use the same logic as
    // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
    // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
    function getContrastText(background) {
        const contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
        {
            const contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);
            if (contrast < 3) console.error([
                `MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`,
                'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',
                'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'
            ].join('\n'));
        }
        return contrastText;
    }
    const augmentColor = ({ color, name, mainShade = 500, lightShade = 300, darkShade = 700 })=>{
        color = {
            ...color
        };
        if (!color.main && color[mainShade]) color.main = color[mainShade];
        if (!color.hasOwnProperty('main')) throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n` + `The color object needs to have a \`main\` property or a \`${mainShade}\` property.`);
        if (typeof color.main !== 'string') throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n` + `\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.\n` + '\n' + 'Did you intend to use one of the following approaches?\n' + '\n' + 'import { green } from "@mui/material/colors";\n' + '\n' + 'const theme1 = createTheme({ palette: {\n' + '  primary: green,\n' + '} });\n' + '\n' + 'const theme2 = createTheme({ palette: {\n' + '  primary: { main: green[500] },\n' + '} });');
        addLightOrDark(color, 'light', lightShade, tonalOffset);
        addLightOrDark(color, 'dark', darkShade, tonalOffset);
        if (!color.contrastText) color.contrastText = getContrastText(color.main);
        return color;
    };
    let modeHydrated;
    if (mode === 'light') modeHydrated = getLight();
    else if (mode === 'dark') modeHydrated = getDark();
    if (!modeHydrated) console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
    const paletteOutput = (0, _deepmerge.default)({
        // A collection of common colors.
        common: {
            ..._common.default
        },
        // prevent mutable object.
        // The palette mode, can be light or dark.
        mode,
        // The colors used to represent primary interface elements for a user.
        primary: augmentColor({
            color: primary,
            name: 'primary'
        }),
        // The colors used to represent secondary interface elements for a user.
        secondary: augmentColor({
            color: secondary,
            name: 'secondary',
            mainShade: 'A400',
            lightShade: 'A200',
            darkShade: 'A700'
        }),
        // The colors used to represent interface elements that the user should be made aware of.
        error: augmentColor({
            color: error,
            name: 'error'
        }),
        // The colors used to represent potentially dangerous actions or important messages.
        warning: augmentColor({
            color: warning,
            name: 'warning'
        }),
        // The colors used to present information to the user that is neutral and not necessarily important.
        info: augmentColor({
            color: info,
            name: 'info'
        }),
        // The colors used to indicate the successful completion of an action that user triggered.
        success: augmentColor({
            color: success,
            name: 'success'
        }),
        // The grey colors.
        grey: _grey.default,
        // Used by `getContrastText()` to maximize the contrast between
        // the background and the text.
        contrastThreshold,
        // Takes a background color and returns the text color that maximizes the contrast.
        getContrastText,
        // Generate a rich color object.
        augmentColor,
        // Used by the functions below to shift a color's luminance by approximately
        // two indexes within its tonal palette.
        // E.g., shift from Red 500 to Red 300 or Red 700.
        tonalOffset,
        // The light and dark mode object.
        ...modeHydrated
    }, other);
    return paletteOutput;
}

},{"11300292bb3e3dc3":"1P3rZ","a2877fe4b287d6b0":"cXsuk","fa27818bbfce2f16":"bLPf1","984635010f11e72f":"b9Snp","2df4f74bc61cb41e":"d3A6z","3b7e746b54059808":"jfM6b","38df14157d06197c":"9z7Hc","3b28d80ed8bb4b59":"iHk0B","90db4edb20684717":"hArgZ","9701b07c082fb52f":"4oXdI","ecf564fbe0fdcdd4":"fad5T","827981c919ddbe32":"7ocW7"}],"b9Snp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _colorManipulator = require("310dda5cb8c2fab9");
Object.keys(_colorManipulator).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _colorManipulator[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _colorManipulator[key];
        }
    });
});

},{"310dda5cb8c2fab9":"lEnzt"}],"lEnzt":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a54f4eea3def311f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.alpha = alpha;
exports.blend = blend;
exports.colorChannel = void 0;
exports.darken = darken;
exports.decomposeColor = decomposeColor;
exports.emphasize = emphasize;
exports.getContrastRatio = getContrastRatio;
exports.getLuminance = getLuminance;
exports.hexToRgb = hexToRgb;
exports.hslToRgb = hslToRgb;
exports.lighten = lighten;
exports.private_safeAlpha = private_safeAlpha;
exports.private_safeColorChannel = void 0;
exports.private_safeDarken = private_safeDarken;
exports.private_safeEmphasize = private_safeEmphasize;
exports.private_safeLighten = private_safeLighten;
exports.recomposeColor = recomposeColor;
exports.rgbToHex = rgbToHex;
var _formatMuiErrorMessage = _interopRequireDefault(require("47a311b376171898"));
var _clamp = _interopRequireDefault(require("dd0db14c48cc1331"));
/* eslint-disable @typescript-eslint/naming-convention */ /**
 * Returns a number whose value is limited to the given range.
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */ function clampWrapper(value, min = 0, max = 1) {
    if (value < min || value > max) console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
    return (0, _clamp.default)(value, min, max);
}
/**
 * Converts a color from CSS hex format to CSS rgb format.
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */ function hexToRgb(color) {
    color = color.slice(1);
    const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');
    let colors = color.match(re);
    if (colors && colors[0].length === 1) colors = colors.map((n)=>n + n);
    if (color.length !== color.trim().length) console.error(`MUI: The color: "${color}" is invalid. Make sure the color input doesn't contain leading/trailing space.`);
    return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index)=>{
        return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
    }).join(', ')})` : '';
}
function intToHex(int) {
    const hex = int.toString(16);
    return hex.length === 1 ? `0${hex}` : hex;
}
/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */ function decomposeColor(color) {
    // Idempotent
    if (color.type) return color;
    if (color.charAt(0) === '#') return decomposeColor(hexToRgb(color));
    const marker = color.indexOf('(');
    const type = color.substring(0, marker);
    if (![
        'rgb',
        'rgba',
        'hsl',
        'hsla',
        'color'
    ].includes(type)) throw new Error(`MUI: Unsupported \`${color}\` color.\n` + 'The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().');
    let values = color.substring(marker + 1, color.length - 1);
    let colorSpace;
    if (type === 'color') {
        values = values.split(' ');
        colorSpace = values.shift();
        if (values.length === 4 && values[3].charAt(0) === '/') values[3] = values[3].slice(1);
        if (![
            'srgb',
            'display-p3',
            'a98-rgb',
            'prophoto-rgb',
            'rec-2020'
        ].includes(colorSpace)) throw new Error(`MUI: unsupported \`${colorSpace}\` color space.\n` + 'The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.');
    } else values = values.split(',');
    values = values.map((value)=>parseFloat(value));
    return {
        type,
        values,
        colorSpace
    };
}
/**
 * Returns a channel created from the input color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {string} - The channel for the color, that can be used in rgba or hsla colors
 */ const colorChannel = (color)=>{
    const decomposedColor = decomposeColor(color);
    return decomposedColor.values.slice(0, 3).map((val, idx)=>decomposedColor.type.includes('hsl') && idx !== 0 ? `${val}%` : val).join(' ');
};
exports.colorChannel = colorChannel;
const private_safeColorChannel = (color, warning)=>{
    try {
        return colorChannel(color);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
};
/**
 * Converts a color object with type and values to a string.
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */ exports.private_safeColorChannel = private_safeColorChannel;
function recomposeColor(color) {
    const { type, colorSpace } = color;
    let { values } = color;
    if (type.includes('rgb')) // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map((n, i)=>i < 3 ? parseInt(n, 10) : n);
    else if (type.includes('hsl')) {
        values[1] = `${values[1]}%`;
        values[2] = `${values[2]}%`;
    }
    if (type.includes('color')) values = `${colorSpace} ${values.join(' ')}`;
    else values = `${values.join(', ')}`;
    return `${type}(${values})`;
}
/**
 * Converts a color from CSS rgb format to CSS hex format.
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */ function rgbToHex(color) {
    // Idempotent
    if (color.startsWith('#')) return color;
    const { values } = decomposeColor(color);
    return `#${values.map((n, i)=>intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;
}
/**
 * Converts a color from hsl format to rgb format.
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */ function hslToRgb(color) {
    color = decomposeColor(color);
    const { values } = color;
    const h = values[0];
    const s = values[1] / 100;
    const l = values[2] / 100;
    const a = s * Math.min(l, 1 - l);
    const f = (n, k = (n + h / 30) % 12)=>l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
    let type = 'rgb';
    const rgb = [
        Math.round(f(0) * 255),
        Math.round(f(8) * 255),
        Math.round(f(4) * 255)
    ];
    if (color.type === 'hsla') {
        type += 'a';
        rgb.push(values[3]);
    }
    return recomposeColor({
        type,
        values: rgb
    });
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */ function getLuminance(color) {
    color = decomposeColor(color);
    let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
    rgb = rgb.map((val)=>{
        if (color.type !== 'color') val /= 255; // normalized
        return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
    });
    // Truncate at 3 digits
    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */ function getContrastRatio(foreground, background) {
    const lumA = getLuminance(foreground);
    const lumB = getLuminance(background);
    return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
/**
 * Sets the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} value - value to set the alpha channel to in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ function alpha(color, value) {
    color = decomposeColor(color);
    value = clampWrapper(value);
    if (color.type === 'rgb' || color.type === 'hsl') color.type += 'a';
    if (color.type === 'color') color.values[3] = `/${value}`;
    else color.values[3] = value;
    return recomposeColor(color);
}
function private_safeAlpha(color, value, warning) {
    try {
        return alpha(color, value);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
/**
 * Darkens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ function darken(color, coefficient) {
    color = decomposeColor(color);
    coefficient = clampWrapper(coefficient);
    if (color.type.includes('hsl')) color.values[2] *= 1 - coefficient;
    else if (color.type.includes('rgb') || color.type.includes('color')) for(let i = 0; i < 3; i += 1)color.values[i] *= 1 - coefficient;
    return recomposeColor(color);
}
function private_safeDarken(color, coefficient, warning) {
    try {
        return darken(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
/**
 * Lightens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ function lighten(color, coefficient) {
    color = decomposeColor(color);
    coefficient = clampWrapper(coefficient);
    if (color.type.includes('hsl')) color.values[2] += (100 - color.values[2]) * coefficient;
    else if (color.type.includes('rgb')) for(let i = 0; i < 3; i += 1)color.values[i] += (255 - color.values[i]) * coefficient;
    else if (color.type.includes('color')) for(let i = 0; i < 3; i += 1)color.values[i] += (1 - color.values[i]) * coefficient;
    return recomposeColor(color);
}
function private_safeLighten(color, coefficient, warning) {
    try {
        return lighten(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */ function emphasize(color, coefficient = 0.15) {
    return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}
function private_safeEmphasize(color, coefficient, warning) {
    try {
        return emphasize(color, coefficient);
    } catch (error) {
        if (warning && true) console.warn(warning);
        return color;
    }
}
/**
 * Blend a transparent overlay color with a background color, resulting in a single
 * RGB color.
 * @param {string} background - CSS color
 * @param {string} overlay - CSS color
 * @param {number} opacity - Opacity multiplier in the range 0 - 1
 * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.
 */ function blend(background, overlay, opacity, gamma = 1.0) {
    const blendChannel = (b, o)=>Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);
    const backgroundColor = decomposeColor(background);
    const overlayColor = decomposeColor(overlay);
    const rgb = [
        blendChannel(backgroundColor.values[0], overlayColor.values[0]),
        blendChannel(backgroundColor.values[1], overlayColor.values[1]),
        blendChannel(backgroundColor.values[2], overlayColor.values[2])
    ];
    return recomposeColor({
        type: 'rgb',
        values: rgb
    });
}

},{"a54f4eea3def311f":"1P3rZ","47a311b376171898":"cXsuk","dd0db14c48cc1331":"bju8l"}],"d3A6z":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const common = {
    black: '#000',
    white: '#fff'
};
var _default = exports.default = common;

},{}],"jfM6b":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const grey = {
    50: '#fafafa',
    100: '#f5f5f5',
    200: '#eeeeee',
    300: '#e0e0e0',
    400: '#bdbdbd',
    500: '#9e9e9e',
    600: '#757575',
    700: '#616161',
    800: '#424242',
    900: '#212121',
    A100: '#f5f5f5',
    A200: '#eeeeee',
    A400: '#bdbdbd',
    A700: '#616161'
};
var _default = exports.default = grey;

},{}],"9z7Hc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const purple = {
    50: '#f3e5f5',
    100: '#e1bee7',
    200: '#ce93d8',
    300: '#ba68c8',
    400: '#ab47bc',
    500: '#9c27b0',
    600: '#8e24aa',
    700: '#7b1fa2',
    800: '#6a1b9a',
    900: '#4a148c',
    A100: '#ea80fc',
    A200: '#e040fb',
    A400: '#d500f9',
    A700: '#aa00ff'
};
var _default = exports.default = purple;

},{}],"iHk0B":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const red = {
    50: '#ffebee',
    100: '#ffcdd2',
    200: '#ef9a9a',
    300: '#e57373',
    400: '#ef5350',
    500: '#f44336',
    600: '#e53935',
    700: '#d32f2f',
    800: '#c62828',
    900: '#b71c1c',
    A100: '#ff8a80',
    A200: '#ff5252',
    A400: '#ff1744',
    A700: '#d50000'
};
var _default = exports.default = red;

},{}],"hArgZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const orange = {
    50: '#fff3e0',
    100: '#ffe0b2',
    200: '#ffcc80',
    300: '#ffb74d',
    400: '#ffa726',
    500: '#ff9800',
    600: '#fb8c00',
    700: '#f57c00',
    800: '#ef6c00',
    900: '#e65100',
    A100: '#ffd180',
    A200: '#ffab40',
    A400: '#ff9100',
    A700: '#ff6d00'
};
var _default = exports.default = orange;

},{}],"4oXdI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const blue = {
    50: '#e3f2fd',
    100: '#bbdefb',
    200: '#90caf9',
    300: '#64b5f6',
    400: '#42a5f5',
    500: '#2196f3',
    600: '#1e88e5',
    700: '#1976d2',
    800: '#1565c0',
    900: '#0d47a1',
    A100: '#82b1ff',
    A200: '#448aff',
    A400: '#2979ff',
    A700: '#2962ff'
};
var _default = exports.default = blue;

},{}],"fad5T":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const lightBlue = {
    50: '#e1f5fe',
    100: '#b3e5fc',
    200: '#81d4fa',
    300: '#4fc3f7',
    400: '#29b6f6',
    500: '#03a9f4',
    600: '#039be5',
    700: '#0288d1',
    800: '#0277bd',
    900: '#01579b',
    A100: '#80d8ff',
    A200: '#40c4ff',
    A400: '#00b0ff',
    A700: '#0091ea'
};
var _default = exports.default = lightBlue;

},{}],"7ocW7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const green = {
    50: '#e8f5e9',
    100: '#c8e6c9',
    200: '#a5d6a7',
    300: '#81c784',
    400: '#66bb6a',
    500: '#4caf50',
    600: '#43a047',
    700: '#388e3c',
    800: '#2e7d32',
    900: '#1b5e20',
    A100: '#b9f6ca',
    A200: '#69f0ae',
    A400: '#00e676',
    A700: '#00c853'
};
var _default = exports.default = green;

},{}],"asCkD":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("d8808f819a1bf945").default;
var _interopRequireDefault = require("bea5e0872ce0e7c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createGetCssVar = void 0;
exports.default = createThemeWithVars;
var _formatMuiErrorMessage = _interopRequireDefault(require("751b6f741077bdbc"));
var _deepmerge = _interopRequireDefault(require("e7792937e505ac24"));
var _system = require("9eb61503fd6adc33");
var _spacing = require("59490245e8036a49");
var _cssVars = require("2face3efcd065aaf");
var _styleFunctionSx = _interopRequireWildcard(require("a25b28b771837a2a"));
var _colorManipulator = require("6884cbd1e7c9be0a");
var _createThemeNoVars = _interopRequireDefault(require("27733fa219b7fb30"));
var _createColorScheme = _interopRequireWildcard(require("5e5614154b2981d1"));
var _shouldSkipGeneratingVar = _interopRequireDefault(require("dbc865706904d0d5"));
var _createGetSelector = _interopRequireDefault(require("2cca8165c721c3f"));
var _stringifyTheme = require("4b7f097c78e64286");
function assignNode(obj, keys) {
    keys.forEach((k)=>{
        if (!obj[k]) obj[k] = {};
    });
}
function setColor(obj, key, defaultValue) {
    if (!obj[key] && defaultValue) obj[key] = defaultValue;
}
function toRgb(color) {
    if (typeof color !== 'string' || !color.startsWith('hsl')) return color;
    return (0, _colorManipulator.hslToRgb)(color);
}
function setColorChannel(obj, key) {
    if (!(`${key}Channel` in obj)) // custom channel token is not provided, generate one.
    // if channel token can't be generated, show a warning.
    obj[`${key}Channel`] = (0, _colorManipulator.private_safeColorChannel)(toRgb(obj[key]), `MUI: Can't create \`palette.${key}Channel\` because \`palette.${key}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\n' + `To suppress this warning, you need to explicitly provide the \`palette.${key}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`);
}
function getSpacingVal(spacingInput) {
    if (typeof spacingInput === 'number') return `${spacingInput}px`;
    if (typeof spacingInput === 'string' || typeof spacingInput === 'function' || Array.isArray(spacingInput)) return spacingInput;
    return '8px';
}
const silent = (fn)=>{
    try {
        return fn();
    } catch (error) {
    // ignore error
    }
    return undefined;
};
const createGetCssVar = (cssVarPrefix = 'mui')=>(0, _system.unstable_createGetCssVar)(cssVarPrefix);
exports.createGetCssVar = createGetCssVar;
function attachColorScheme(colorSchemes, scheme, restTheme, colorScheme) {
    if (!scheme) return undefined;
    scheme = scheme === true ? {} : scheme;
    const mode = colorScheme === 'dark' ? 'dark' : 'light';
    if (!restTheme) {
        colorSchemes[colorScheme] = (0, _createColorScheme.default)({
            ...scheme,
            palette: {
                mode,
                ...scheme?.palette
            }
        });
        return undefined;
    }
    const { palette, ...muiTheme } = (0, _createThemeNoVars.default)({
        ...restTheme,
        palette: {
            mode,
            ...scheme?.palette
        }
    });
    colorSchemes[colorScheme] = {
        ...scheme,
        palette,
        opacity: {
            ...(0, _createColorScheme.getOpacity)(mode),
            ...scheme?.opacity
        },
        overlays: scheme?.overlays || (0, _createColorScheme.getOverlays)(mode)
    };
    return muiTheme;
}
/**
 * A default `createThemeWithVars` comes with a single color scheme, either `light` or `dark` based on the `defaultColorScheme`.
 * This is better suited for apps that only need a single color scheme.
 *
 * To enable built-in `light` and `dark` color schemes, either:
 * 1. provide a `colorSchemeSelector` to define how the color schemes will change.
 * 2. provide `colorSchemes.dark` will set `colorSchemeSelector: 'media'` by default.
 */ function createThemeWithVars(options = {}, ...args) {
    const { colorSchemes: colorSchemesInput = {
        light: true
    }, defaultColorScheme: defaultColorSchemeInput, disableCssColorScheme = false, cssVarPrefix = 'mui', shouldSkipGeneratingVar = _shouldSkipGeneratingVar.default, colorSchemeSelector: selector = colorSchemesInput.light && colorSchemesInput.dark ? 'media' : undefined, rootSelector = ':root', ...input } = options;
    const firstColorScheme = Object.keys(colorSchemesInput)[0];
    const defaultColorScheme = defaultColorSchemeInput || (colorSchemesInput.light && firstColorScheme !== 'light' ? 'light' : firstColorScheme);
    const getCssVar = createGetCssVar(cssVarPrefix);
    const { [defaultColorScheme]: defaultSchemeInput, light: builtInLight, dark: builtInDark, ...customColorSchemes } = colorSchemesInput;
    const colorSchemes = {
        ...customColorSchemes
    };
    let defaultScheme = defaultSchemeInput;
    // For built-in light and dark color schemes, ensure that the value is valid if they are the default color scheme.
    if (defaultColorScheme === 'dark' && !('dark' in colorSchemesInput) || defaultColorScheme === 'light' && !('light' in colorSchemesInput)) defaultScheme = true;
    if (!defaultScheme) throw new Error(`MUI: The \`colorSchemes.${defaultColorScheme}\` option is either missing or invalid.`);
    // Create the palette for the default color scheme, either `light`, `dark`, or custom color scheme.
    const muiTheme = attachColorScheme(colorSchemes, defaultScheme, input, defaultColorScheme);
    if (builtInLight && !colorSchemes.light) attachColorScheme(colorSchemes, builtInLight, undefined, 'light');
    if (builtInDark && !colorSchemes.dark) attachColorScheme(colorSchemes, builtInDark, undefined, 'dark');
    let theme = {
        defaultColorScheme,
        ...muiTheme,
        cssVarPrefix,
        colorSchemeSelector: selector,
        rootSelector,
        getCssVar,
        colorSchemes,
        font: {
            ...(0, _cssVars.prepareTypographyVars)(muiTheme.typography),
            ...muiTheme.font
        },
        spacing: getSpacingVal(input.spacing)
    };
    Object.keys(theme.colorSchemes).forEach((key)=>{
        const palette = theme.colorSchemes[key].palette;
        const setCssVarColor = (cssVar)=>{
            const tokens = cssVar.split('-');
            const color = tokens[1];
            const colorToken = tokens[2];
            return getCssVar(cssVar, palette[color][colorToken]);
        };
        // attach black & white channels to common node
        if (palette.mode === 'light') {
            setColor(palette.common, 'background', '#fff');
            setColor(palette.common, 'onBackground', '#000');
        }
        if (palette.mode === 'dark') {
            setColor(palette.common, 'background', '#000');
            setColor(palette.common, 'onBackground', '#fff');
        }
        // assign component variables
        assignNode(palette, [
            'Alert',
            'AppBar',
            'Avatar',
            'Button',
            'Chip',
            'FilledInput',
            'LinearProgress',
            'Skeleton',
            'Slider',
            'SnackbarContent',
            'SpeedDialAction',
            'StepConnector',
            'StepContent',
            'Switch',
            'TableCell',
            'Tooltip'
        ]);
        if (palette.mode === 'light') {
            setColor(palette.Alert, 'errorColor', (0, _colorManipulator.private_safeDarken)(palette.error.light, 0.6));
            setColor(palette.Alert, 'infoColor', (0, _colorManipulator.private_safeDarken)(palette.info.light, 0.6));
            setColor(palette.Alert, 'successColor', (0, _colorManipulator.private_safeDarken)(palette.success.light, 0.6));
            setColor(palette.Alert, 'warningColor', (0, _colorManipulator.private_safeDarken)(palette.warning.light, 0.6));
            setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));
            setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));
            setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));
            setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));
            setColor(palette.Alert, 'errorFilledColor', silent(()=>palette.getContrastText(palette.error.main)));
            setColor(palette.Alert, 'infoFilledColor', silent(()=>palette.getContrastText(palette.info.main)));
            setColor(palette.Alert, 'successFilledColor', silent(()=>palette.getContrastText(palette.success.main)));
            setColor(palette.Alert, 'warningFilledColor', silent(()=>palette.getContrastText(palette.warning.main)));
            setColor(palette.Alert, 'errorStandardBg', (0, _colorManipulator.private_safeLighten)(palette.error.light, 0.9));
            setColor(palette.Alert, 'infoStandardBg', (0, _colorManipulator.private_safeLighten)(palette.info.light, 0.9));
            setColor(palette.Alert, 'successStandardBg', (0, _colorManipulator.private_safeLighten)(palette.success.light, 0.9));
            setColor(palette.Alert, 'warningStandardBg', (0, _colorManipulator.private_safeLighten)(palette.warning.light, 0.9));
            setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));
            setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));
            setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));
            setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));
            setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));
            setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));
            setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));
            setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));
            setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));
            setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));
            setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));
            setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');
            setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');
            setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');
            setColor(palette.LinearProgress, 'primaryBg', (0, _colorManipulator.private_safeLighten)(palette.primary.main, 0.62));
            setColor(palette.LinearProgress, 'secondaryBg', (0, _colorManipulator.private_safeLighten)(palette.secondary.main, 0.62));
            setColor(palette.LinearProgress, 'errorBg', (0, _colorManipulator.private_safeLighten)(palette.error.main, 0.62));
            setColor(palette.LinearProgress, 'infoBg', (0, _colorManipulator.private_safeLighten)(palette.info.main, 0.62));
            setColor(palette.LinearProgress, 'successBg', (0, _colorManipulator.private_safeLighten)(palette.success.main, 0.62));
            setColor(palette.LinearProgress, 'warningBg', (0, _colorManipulator.private_safeLighten)(palette.warning.main, 0.62));
            setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);
            setColor(palette.Slider, 'primaryTrack', (0, _colorManipulator.private_safeLighten)(palette.primary.main, 0.62));
            setColor(palette.Slider, 'secondaryTrack', (0, _colorManipulator.private_safeLighten)(palette.secondary.main, 0.62));
            setColor(palette.Slider, 'errorTrack', (0, _colorManipulator.private_safeLighten)(palette.error.main, 0.62));
            setColor(palette.Slider, 'infoTrack', (0, _colorManipulator.private_safeLighten)(palette.info.main, 0.62));
            setColor(palette.Slider, 'successTrack', (0, _colorManipulator.private_safeLighten)(palette.success.main, 0.62));
            setColor(palette.Slider, 'warningTrack', (0, _colorManipulator.private_safeLighten)(palette.warning.main, 0.62));
            const snackbarContentBackground = (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.8);
            setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);
            setColor(palette.SnackbarContent, 'color', silent(()=>palette.getContrastText(snackbarContentBackground)));
            setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));
            setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));
            setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));
            setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));
            setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));
            setColor(palette.Switch, 'primaryDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.primary.main, 0.62));
            setColor(palette.Switch, 'secondaryDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.secondary.main, 0.62));
            setColor(palette.Switch, 'errorDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.error.main, 0.62));
            setColor(palette.Switch, 'infoDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.info.main, 0.62));
            setColor(palette.Switch, 'successDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.success.main, 0.62));
            setColor(palette.Switch, 'warningDisabledColor', (0, _colorManipulator.private_safeLighten)(palette.warning.main, 0.62));
            setColor(palette.TableCell, 'border', (0, _colorManipulator.private_safeLighten)((0, _colorManipulator.private_safeAlpha)(palette.divider, 1), 0.88));
            setColor(palette.Tooltip, 'bg', (0, _colorManipulator.private_safeAlpha)(palette.grey[700], 0.92));
        }
        if (palette.mode === 'dark') {
            setColor(palette.Alert, 'errorColor', (0, _colorManipulator.private_safeLighten)(palette.error.light, 0.6));
            setColor(palette.Alert, 'infoColor', (0, _colorManipulator.private_safeLighten)(palette.info.light, 0.6));
            setColor(palette.Alert, 'successColor', (0, _colorManipulator.private_safeLighten)(palette.success.light, 0.6));
            setColor(palette.Alert, 'warningColor', (0, _colorManipulator.private_safeLighten)(palette.warning.light, 0.6));
            setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));
            setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));
            setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));
            setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));
            setColor(palette.Alert, 'errorFilledColor', silent(()=>palette.getContrastText(palette.error.dark)));
            setColor(palette.Alert, 'infoFilledColor', silent(()=>palette.getContrastText(palette.info.dark)));
            setColor(palette.Alert, 'successFilledColor', silent(()=>palette.getContrastText(palette.success.dark)));
            setColor(palette.Alert, 'warningFilledColor', silent(()=>palette.getContrastText(palette.warning.dark)));
            setColor(palette.Alert, 'errorStandardBg', (0, _colorManipulator.private_safeDarken)(palette.error.light, 0.9));
            setColor(palette.Alert, 'infoStandardBg', (0, _colorManipulator.private_safeDarken)(palette.info.light, 0.9));
            setColor(palette.Alert, 'successStandardBg', (0, _colorManipulator.private_safeDarken)(palette.success.light, 0.9));
            setColor(palette.Alert, 'warningStandardBg', (0, _colorManipulator.private_safeDarken)(palette.warning.light, 0.9));
            setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));
            setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));
            setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));
            setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));
            setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));
            setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode
            setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode
            setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));
            setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));
            setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));
            setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));
            setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));
            setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));
            setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');
            setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');
            setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');
            setColor(palette.LinearProgress, 'primaryBg', (0, _colorManipulator.private_safeDarken)(palette.primary.main, 0.5));
            setColor(palette.LinearProgress, 'secondaryBg', (0, _colorManipulator.private_safeDarken)(palette.secondary.main, 0.5));
            setColor(palette.LinearProgress, 'errorBg', (0, _colorManipulator.private_safeDarken)(palette.error.main, 0.5));
            setColor(palette.LinearProgress, 'infoBg', (0, _colorManipulator.private_safeDarken)(palette.info.main, 0.5));
            setColor(palette.LinearProgress, 'successBg', (0, _colorManipulator.private_safeDarken)(palette.success.main, 0.5));
            setColor(palette.LinearProgress, 'warningBg', (0, _colorManipulator.private_safeDarken)(palette.warning.main, 0.5));
            setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);
            setColor(palette.Slider, 'primaryTrack', (0, _colorManipulator.private_safeDarken)(palette.primary.main, 0.5));
            setColor(palette.Slider, 'secondaryTrack', (0, _colorManipulator.private_safeDarken)(palette.secondary.main, 0.5));
            setColor(palette.Slider, 'errorTrack', (0, _colorManipulator.private_safeDarken)(palette.error.main, 0.5));
            setColor(palette.Slider, 'infoTrack', (0, _colorManipulator.private_safeDarken)(palette.info.main, 0.5));
            setColor(palette.Slider, 'successTrack', (0, _colorManipulator.private_safeDarken)(palette.success.main, 0.5));
            setColor(palette.Slider, 'warningTrack', (0, _colorManipulator.private_safeDarken)(palette.warning.main, 0.5));
            const snackbarContentBackground = (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.98);
            setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);
            setColor(palette.SnackbarContent, 'color', silent(()=>palette.getContrastText(snackbarContentBackground)));
            setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));
            setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));
            setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));
            setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));
            setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));
            setColor(palette.Switch, 'primaryDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.primary.main, 0.55));
            setColor(palette.Switch, 'secondaryDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.secondary.main, 0.55));
            setColor(palette.Switch, 'errorDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.error.main, 0.55));
            setColor(palette.Switch, 'infoDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.info.main, 0.55));
            setColor(palette.Switch, 'successDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.success.main, 0.55));
            setColor(palette.Switch, 'warningDisabledColor', (0, _colorManipulator.private_safeDarken)(palette.warning.main, 0.55));
            setColor(palette.TableCell, 'border', (0, _colorManipulator.private_safeDarken)((0, _colorManipulator.private_safeAlpha)(palette.divider, 1), 0.68));
            setColor(palette.Tooltip, 'bg', (0, _colorManipulator.private_safeAlpha)(palette.grey[700], 0.92));
        }
        // MUI X - DataGrid needs this token.
        setColorChannel(palette.background, 'default');
        // added for consistency with the `background.default` token
        setColorChannel(palette.background, 'paper');
        setColorChannel(palette.common, 'background');
        setColorChannel(palette.common, 'onBackground');
        setColorChannel(palette, 'divider');
        Object.keys(palette).forEach((color)=>{
            const colors = palette[color];
            // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.
            if (color !== 'tonalOffset' && colors && typeof colors === 'object') {
                // Silent the error for custom palettes.
                if (colors.main) setColor(palette[color], 'mainChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.main)));
                if (colors.light) setColor(palette[color], 'lightChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.light)));
                if (colors.dark) setColor(palette[color], 'darkChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.dark)));
                if (colors.contrastText) setColor(palette[color], 'contrastTextChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.contrastText)));
                if (color === 'text') {
                    // Text colors: text.primary, text.secondary
                    setColorChannel(palette[color], 'primary');
                    setColorChannel(palette[color], 'secondary');
                }
                if (color === 'action') {
                    // Action colors: action.active, action.selected
                    if (colors.active) setColorChannel(palette[color], 'active');
                    if (colors.selected) setColorChannel(palette[color], 'selected');
                }
            }
        });
    });
    theme = args.reduce((acc, argument)=>(0, _deepmerge.default)(acc, argument), theme);
    const parserConfig = {
        prefix: cssVarPrefix,
        disableCssColorScheme,
        shouldSkipGeneratingVar,
        getSelector: (0, _createGetSelector.default)(theme)
    };
    const { vars, generateThemeVars, generateStyleSheets } = (0, _cssVars.prepareCssVars)(theme, parserConfig);
    theme.vars = vars;
    Object.entries(theme.colorSchemes[theme.defaultColorScheme]).forEach(([key, value])=>{
        theme[key] = value;
    });
    theme.generateThemeVars = generateThemeVars;
    theme.generateStyleSheets = generateStyleSheets;
    theme.generateSpacing = function generateSpacing() {
        return (0, _system.createSpacing)(input.spacing, (0, _spacing.createUnarySpacing)(this));
    };
    theme.getColorSchemeSelector = (0, _cssVars.createGetColorSchemeSelector)(selector);
    theme.spacing = theme.generateSpacing();
    theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;
    theme.unstable_sxConfig = {
        ..._styleFunctionSx.unstable_defaultSxConfig,
        ...input?.unstable_sxConfig
    };
    theme.unstable_sx = function sx(props) {
        return (0, _styleFunctionSx.default)({
            sx: props,
            theme: this
        });
    };
    theme.toRuntimeSource = _stringifyTheme.stringifyTheme; // for Pigment CSS integration
    return theme;
}

},{"d8808f819a1bf945":"6TFJp","bea5e0872ce0e7c":"1P3rZ","751b6f741077bdbc":"cXsuk","e7792937e505ac24":"bLPf1","9eb61503fd6adc33":"1WaIj","59490245e8036a49":"cUfeI","2face3efcd065aaf":"jrqSW","a25b28b771837a2a":"3qmy1","6884cbd1e7c9be0a":"b9Snp","27733fa219b7fb30":"dhKZY","5e5614154b2981d1":"4jSXe","dbc865706904d0d5":"4q7TV","2cca8165c721c3f":"5tahi","4b7f097c78e64286":"gfY4l"}],"cUfeI":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("606a2ed0ce831dd9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _spacing.default;
    }
});
var _spacing = _interopRequireWildcard(require("e86ea1f53daffa96"));
Object.keys(_spacing).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _spacing[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _spacing[key];
        }
    });
});

},{"606a2ed0ce831dd9":"6TFJp","e86ea1f53daffa96":"eVrok"}],"eVrok":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("71d176b307068e0e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createUnarySpacing = createUnarySpacing;
exports.createUnaryUnit = createUnaryUnit;
exports.default = void 0;
exports.getStyleFromPropValue = getStyleFromPropValue;
exports.getValue = getValue;
exports.margin = margin;
exports.marginKeys = void 0;
exports.padding = padding;
exports.paddingKeys = void 0;
var _responsivePropType = _interopRequireDefault(require("e629f08b8f852dff"));
var _breakpoints = require("c3fa080d2d3f53d3");
var _style = require("2dd9a87d7c34c534");
var _merge = _interopRequireDefault(require("26bf834107052fd6"));
var _memoize = _interopRequireDefault(require("e1785f73db1c256a"));
const properties = {
    m: 'margin',
    p: 'padding'
};
const directions = {
    t: 'Top',
    r: 'Right',
    b: 'Bottom',
    l: 'Left',
    x: [
        'Left',
        'Right'
    ],
    y: [
        'Top',
        'Bottom'
    ]
};
const aliases = {
    marginX: 'mx',
    marginY: 'my',
    paddingX: 'px',
    paddingY: 'py'
};
// memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec
const getCssProperties = (0, _memoize.default)((prop)=>{
    // It's not a shorthand notation.
    if (prop.length > 2) {
        if (aliases[prop]) prop = aliases[prop];
        else return [
            prop
        ];
    }
    const [a, b] = prop.split('');
    const property = properties[a];
    const direction = directions[b] || '';
    return Array.isArray(direction) ? direction.map((dir)=>property + dir) : [
        property + direction
    ];
});
const marginKeys = exports.marginKeys = [
    'm',
    'mt',
    'mr',
    'mb',
    'ml',
    'mx',
    'my',
    'margin',
    'marginTop',
    'marginRight',
    'marginBottom',
    'marginLeft',
    'marginX',
    'marginY',
    'marginInline',
    'marginInlineStart',
    'marginInlineEnd',
    'marginBlock',
    'marginBlockStart',
    'marginBlockEnd'
];
const paddingKeys = exports.paddingKeys = [
    'p',
    'pt',
    'pr',
    'pb',
    'pl',
    'px',
    'py',
    'padding',
    'paddingTop',
    'paddingRight',
    'paddingBottom',
    'paddingLeft',
    'paddingX',
    'paddingY',
    'paddingInline',
    'paddingInlineStart',
    'paddingInlineEnd',
    'paddingBlock',
    'paddingBlockStart',
    'paddingBlockEnd'
];
const spacingKeys = [
    ...marginKeys,
    ...paddingKeys
];
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
    const themeSpacing = (0, _style.getPath)(theme, themeKey, true) ?? defaultValue;
    if (typeof themeSpacing === 'number' || typeof themeSpacing === 'string') return (val)=>{
        if (typeof val === 'string') return val;
        if (typeof val !== 'number') console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${val}.`);
        if (typeof themeSpacing === 'string') {
            if (themeSpacing.startsWith('var(') && val === 0) return 0;
            if (themeSpacing.startsWith('var(') && val === 1) return themeSpacing;
            return `calc(${val} * ${themeSpacing})`;
        }
        return themeSpacing * val;
    };
    if (Array.isArray(themeSpacing)) return (val)=>{
        if (typeof val === 'string') return val;
        const abs = Math.abs(val);
        if (!Number.isInteger(abs)) console.error([
            `MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`
        ].join('\n'));
        else if (abs > themeSpacing.length - 1) console.error([
            `MUI: The value provided (${abs}) overflows.`,
            `The supported values are: ${JSON.stringify(themeSpacing)}.`,
            `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`
        ].join('\n'));
        const transformed = themeSpacing[abs];
        if (val >= 0) return transformed;
        if (typeof transformed === 'number') return -transformed;
        if (typeof transformed === 'string' && transformed.startsWith('var(')) return `calc(-1 * ${transformed})`;
        return `-${transformed}`;
    };
    if (typeof themeSpacing === 'function') return themeSpacing;
    console.error([
        `MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`,
        'It should be a number, an array or a function.'
    ].join('\n'));
    return ()=>undefined;
}
function createUnarySpacing(theme) {
    return createUnaryUnit(theme, 'spacing', 8, 'spacing');
}
function getValue(transformer, propValue) {
    if (typeof propValue === 'string' || propValue == null) return propValue;
    return transformer(propValue);
}
function getStyleFromPropValue(cssProperties, transformer) {
    return (propValue)=>cssProperties.reduce((acc, cssProperty)=>{
            acc[cssProperty] = getValue(transformer, propValue);
            return acc;
        }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
    // Using a hash computation over an array iteration could be faster, but with only 28 items,
    // it's doesn't worth the bundle size.
    if (!keys.includes(prop)) return null;
    const cssProperties = getCssProperties(prop);
    const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
    const propValue = props[prop];
    return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);
}
function style(props, keys) {
    const transformer = createUnarySpacing(props.theme);
    return Object.keys(props).map((prop)=>resolveCssProperty(props, keys, prop, transformer)).reduce(_merge.default, {});
}
function margin(props) {
    return style(props, marginKeys);
}
margin.propTypes = marginKeys.reduce((obj, key)=>{
    obj[key] = _responsivePropType.default;
    return obj;
}, {});
margin.filterProps = marginKeys;
function padding(props) {
    return style(props, paddingKeys);
}
padding.propTypes = paddingKeys.reduce((obj, key)=>{
    obj[key] = _responsivePropType.default;
    return obj;
}, {});
padding.filterProps = paddingKeys;
function spacing(props) {
    return style(props, spacingKeys);
}
spacing.propTypes = spacingKeys.reduce((obj, key)=>{
    obj[key] = _responsivePropType.default;
    return obj;
}, {});
spacing.filterProps = spacingKeys;
var _default = exports.default = spacing;

},{"71d176b307068e0e":"1P3rZ","e629f08b8f852dff":"9ApOU","c3fa080d2d3f53d3":"148Xn","2dd9a87d7c34c534":"58JeG","26bf834107052fd6":"bmR4g","e1785f73db1c256a":"2Wdlo"}],"9ApOU":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ec6c7c0e1b7f6948").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _responsivePropType.default;
    }
});
var _responsivePropType = _interopRequireDefault(require("650457f449899290"));

},{"ec6c7c0e1b7f6948":"1P3rZ","650457f449899290":"2bpDZ"}],"2bpDZ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("297608686d02322a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _propTypes = _interopRequireDefault(require("b35663a2342e647f"));
const responsivePropType = _propTypes.default.oneOfType([
    _propTypes.default.number,
    _propTypes.default.string,
    _propTypes.default.object,
    _propTypes.default.array
]);
var _default = exports.default = responsivePropType;

},{"297608686d02322a":"1P3rZ","b35663a2342e647f":"GNqOQ"}],"148Xn":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("298040812d0beba9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _breakpoints.default;
    }
});
var _breakpoints = _interopRequireWildcard(require("a155ccd2323803e9"));
Object.keys(_breakpoints).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _breakpoints[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _breakpoints[key];
        }
    });
});

},{"298040812d0beba9":"6TFJp","a155ccd2323803e9":"4OSIl"}],"4OSIl":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a6136cdc22d0813d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.computeBreakpointsBase = computeBreakpointsBase;
exports.createEmptyBreakpointObject = createEmptyBreakpointObject;
exports.default = void 0;
exports.handleBreakpoints = handleBreakpoints;
exports.mergeBreakpointsInOrder = mergeBreakpointsInOrder;
exports.removeUnusedBreakpoints = removeUnusedBreakpoints;
exports.resolveBreakpointValues = resolveBreakpointValues;
exports.values = void 0;
var _propTypes = _interopRequireDefault(require("8e5b28389e20e17b"));
var _deepmerge = _interopRequireDefault(require("1d9f2e62540cf7b6"));
var _merge = _interopRequireDefault(require("5d17e0af0929002b"));
var _cssContainerQueries = require("6bd2fe12ec9a2caa");
// The breakpoint **start** at this value.
// For instance with the first breakpoint xs: [xs, sm[.
const values = exports.values = {
    xs: 0,
    // phone
    sm: 600,
    // tablet
    md: 900,
    // small laptop
    lg: 1200,
    // desktop
    xl: 1536 // large screen
};
const defaultBreakpoints = {
    // Sorted ASC by size. That's important.
    // It can't be configured as it's used statically for propTypes.
    keys: [
        'xs',
        'sm',
        'md',
        'lg',
        'xl'
    ],
    up: (key)=>`@media (min-width:${values[key]}px)`
};
const defaultContainerQueries = {
    containerQueries: (containerName)=>({
            up: (key)=>{
                let result = typeof key === 'number' ? key : values[key] || key;
                if (typeof result === 'number') result = `${result}px`;
                return containerName ? `@container ${containerName} (min-width:${result})` : `@container (min-width:${result})`;
            }
        })
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
    const theme = props.theme || {};
    if (Array.isArray(propValue)) {
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        return propValue.reduce((acc, item, index)=>{
            acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
            return acc;
        }, {});
    }
    if (typeof propValue === 'object') {
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        return Object.keys(propValue).reduce((acc, breakpoint)=>{
            if ((0, _cssContainerQueries.isCqShorthand)(themeBreakpoints.keys, breakpoint)) {
                const containerKey = (0, _cssContainerQueries.getContainerQuery)(theme.containerQueries ? theme : defaultContainerQueries, breakpoint);
                if (containerKey) acc[containerKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
            } else if (Object.keys(themeBreakpoints.values || values).includes(breakpoint)) {
                const mediaKey = themeBreakpoints.up(breakpoint);
                acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
            } else {
                const cssKey = breakpoint;
                acc[cssKey] = propValue[cssKey];
            }
            return acc;
        }, {});
    }
    const output = styleFromPropValue(propValue);
    return output;
}
function breakpoints(styleFunction) {
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const newStyleFunction = (props)=>{
        const theme = props.theme || {};
        const base = styleFunction(props);
        const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
        const extended = themeBreakpoints.keys.reduce((acc, key)=>{
            if (props[key]) {
                acc = acc || {};
                acc[themeBreakpoints.up(key)] = styleFunction({
                    theme,
                    ...props[key]
                });
            }
            return acc;
        }, null);
        return (0, _merge.default)(base, extended);
    };
    newStyleFunction.propTypes = {
        ...styleFunction.propTypes,
        xs: _propTypes.default.object,
        sm: _propTypes.default.object,
        md: _propTypes.default.object,
        lg: _propTypes.default.object,
        xl: _propTypes.default.object
    };
    newStyleFunction.filterProps = [
        'xs',
        'sm',
        'md',
        'lg',
        'xl',
        ...styleFunction.filterProps
    ];
    return newStyleFunction;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
    const breakpointsInOrder = breakpointsInput.keys?.reduce((acc, key)=>{
        const breakpointStyleKey = breakpointsInput.up(key);
        acc[breakpointStyleKey] = {};
        return acc;
    }, {});
    return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style) {
    return breakpointKeys.reduce((acc, key)=>{
        const breakpointOutput = acc[key];
        const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
        if (isBreakpointUnused) delete acc[key];
        return acc;
    }, style);
}
function mergeBreakpointsInOrder(breakpointsInput, ...styles) {
    const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);
    const mergedOutput = [
        emptyBreakpoints,
        ...styles
    ].reduce((prev, next)=>(0, _deepmerge.default)(prev, next), {});
    return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
}
// compute base for responsive values; e.g.,
// [1,2,3] => {xs: true, sm: true, md: true}
// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}
function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
    // fixed value
    if (typeof breakpointValues !== 'object') return {};
    const base = {};
    const breakpointsKeys = Object.keys(themeBreakpoints);
    if (Array.isArray(breakpointValues)) breakpointsKeys.forEach((breakpoint, i)=>{
        if (i < breakpointValues.length) base[breakpoint] = true;
    });
    else breakpointsKeys.forEach((breakpoint)=>{
        if (breakpointValues[breakpoint] != null) base[breakpoint] = true;
    });
    return base;
}
function resolveBreakpointValues({ values: breakpointValues, breakpoints: themeBreakpoints, base: customBase }) {
    const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
    const keys = Object.keys(base);
    if (keys.length === 0) return breakpointValues;
    let previous;
    return keys.reduce((acc, breakpoint, i)=>{
        if (Array.isArray(breakpointValues)) {
            acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];
            previous = i;
        } else if (typeof breakpointValues === 'object') {
            acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];
            previous = breakpoint;
        } else acc[breakpoint] = breakpointValues;
        return acc;
    }, {});
}
var _default = exports.default = breakpoints;

},{"a6136cdc22d0813d":"1P3rZ","8e5b28389e20e17b":"GNqOQ","1d9f2e62540cf7b6":"bLPf1","5d17e0af0929002b":"bmR4g","6bd2fe12ec9a2caa":"6Ko3S"}],"bmR4g":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("fc6ab35294d6090c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _merge.default;
    }
});
var _merge = _interopRequireDefault(require("5675c06187a9f579"));

},{"fc6ab35294d6090c":"1P3rZ","5675c06187a9f579":"cBkhW"}],"cBkhW":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("cd412d495236e54a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _deepmerge = _interopRequireDefault(require("450a67cad5d36e5a"));
function merge(acc, item) {
    if (!item) return acc;
    return (0, _deepmerge.default)(acc, item, {
        clone: false // No need to clone deep, it's way faster.
    });
}
var _default = exports.default = merge;

},{"cd412d495236e54a":"1P3rZ","450a67cad5d36e5a":"bLPf1"}],"6Ko3S":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("b4cec13b20945773").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _cssContainerQueries.default;
    }
});
Object.defineProperty(exports, "getContainerQuery", {
    enumerable: true,
    get: function() {
        return _cssContainerQueries.getContainerQuery;
    }
});
Object.defineProperty(exports, "isCqShorthand", {
    enumerable: true,
    get: function() {
        return _cssContainerQueries.isCqShorthand;
    }
});
Object.defineProperty(exports, "sortContainerQueries", {
    enumerable: true,
    get: function() {
        return _cssContainerQueries.sortContainerQueries;
    }
});
var _cssContainerQueries = _interopRequireWildcard(require("59ff7536d9109ba6"));

},{"b4cec13b20945773":"6TFJp","59ff7536d9109ba6":"eXVnq"}],"eXVnq":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("63c97ab4ead71b1d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = cssContainerQueries;
exports.getContainerQuery = getContainerQuery;
exports.isCqShorthand = isCqShorthand;
exports.sortContainerQueries = sortContainerQueries;
var _formatMuiErrorMessage = _interopRequireDefault(require("ed2a2f8b3caa624b"));
/**
 * For using in `sx` prop to sort the breakpoint from low to high.
 * Note: this function does not work and will not support multiple units.
 *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }
 *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px
 */ function sortContainerQueries(theme, css) {
    if (!theme.containerQueries) return css;
    const sorted = Object.keys(css).filter((key)=>key.startsWith('@container')).sort((a, b)=>{
        const regex = /min-width:\s*([0-9.]+)/;
        return +(a.match(regex)?.[1] || 0) - +(b.match(regex)?.[1] || 0);
    });
    if (!sorted.length) return css;
    return sorted.reduce((acc, key)=>{
        const value = css[key];
        delete acc[key];
        acc[key] = value;
        return acc;
    }, {
        ...css
    });
}
function isCqShorthand(breakpointKeys, value) {
    return value === '@' || value.startsWith('@') && (breakpointKeys.some((key)=>value.startsWith(`@${key}`)) || !!value.match(/^@\d/));
}
function getContainerQuery(theme, shorthand) {
    const matches = shorthand.match(/^@([^/]+)?\/?(.+)?$/);
    if (!matches) throw new Error(`MUI: The provided shorthand ${`(${shorthand})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.\n` + 'For example, `@sm` or `@600` or `@40rem/sidebar`.');
    const [, containerQuery, containerName] = matches;
    const value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;
    return theme.containerQueries(containerName).up(value);
}
function cssContainerQueries(themeInput) {
    const toContainerQuery = (mediaQuery, name)=>mediaQuery.replace('@media', name ? `@container ${name}` : '@container');
    function attachCq(node, name) {
        node.up = (...args)=>toContainerQuery(themeInput.breakpoints.up(...args), name);
        node.down = (...args)=>toContainerQuery(themeInput.breakpoints.down(...args), name);
        node.between = (...args)=>toContainerQuery(themeInput.breakpoints.between(...args), name);
        node.only = (...args)=>toContainerQuery(themeInput.breakpoints.only(...args), name);
        node.not = (...args)=>{
            const result = toContainerQuery(themeInput.breakpoints.not(...args), name);
            if (result.includes('not all and')) // `@container` does not work with `not all and`, so need to invert the logic
            return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');
            return result;
        };
    }
    const node = {};
    const containerQueries = (name)=>{
        attachCq(node, name);
        return node;
    };
    attachCq(containerQueries);
    return {
        ...themeInput,
        containerQueries
    };
}

},{"63c97ab4ead71b1d":"1P3rZ","ed2a2f8b3caa624b":"cXsuk"}],"58JeG":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("c8a7c8d9b8f4e240").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _style.default;
    }
});
var _style = _interopRequireWildcard(require("744c9014913efcd8"));
Object.keys(_style).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _style[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _style[key];
        }
    });
});

},{"c8a7c8d9b8f4e240":"6TFJp","744c9014913efcd8":"bqOBL"}],"bqOBL":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("15c10178470582d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.getPath = getPath;
exports.getStyleValue = getStyleValue;
var _capitalize = _interopRequireDefault(require("913a49dd101c73af"));
var _responsivePropType = _interopRequireDefault(require("5a0088855d5ded69"));
var _breakpoints = require("19752313f867dee4");
function getPath(obj, path, checkVars = true) {
    if (!path || typeof path !== 'string') return null;
    // Check if CSS variables are used
    if (obj && obj.vars && checkVars) {
        const val = `vars.${path}`.split('.').reduce((acc, item)=>acc && acc[item] ? acc[item] : null, obj);
        if (val != null) return val;
    }
    return path.split('.').reduce((acc, item)=>{
        if (acc && acc[item] != null) return acc[item];
        return null;
    }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
    let value;
    if (typeof themeMapping === 'function') value = themeMapping(propValueFinal);
    else if (Array.isArray(themeMapping)) value = themeMapping[propValueFinal] || userValue;
    else value = getPath(themeMapping, propValueFinal) || userValue;
    if (transform) value = transform(value, userValue, themeMapping);
    return value;
}
function style(options) {
    const { prop, cssProperty = options.prop, themeKey, transform } = options;
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const fn = (props)=>{
        if (props[prop] == null) return null;
        const propValue = props[prop];
        const theme = props.theme;
        const themeMapping = getPath(theme, themeKey) || {};
        const styleFromPropValue = (propValueFinal)=>{
            let value = getStyleValue(themeMapping, transform, propValueFinal);
            if (propValueFinal === value && typeof propValueFinal === 'string') // Haven't found value
            value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalize.default)(propValueFinal)}`, propValueFinal);
            if (cssProperty === false) return value;
            return {
                [cssProperty]: value
            };
        };
        return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);
    };
    fn.propTypes = {
        [prop]: _responsivePropType.default
    };
    fn.filterProps = [
        prop
    ];
    return fn;
}
var _default = exports.default = style;

},{"15c10178470582d":"1P3rZ","913a49dd101c73af":"igOKi","5a0088855d5ded69":"9ApOU","19752313f867dee4":"148Xn"}],"2Wdlo":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f213d6040afacb77").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _memoize.default;
    }
});
var _memoize = _interopRequireDefault(require("180b2e3d46554f10"));

},{"f213d6040afacb77":"1P3rZ","180b2e3d46554f10":"bgGMJ"}],"bgGMJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = memoize;
function memoize(fn) {
    const cache = {};
    return (arg)=>{
        if (cache[arg] === undefined) cache[arg] = fn(arg);
        return cache[arg];
    };
}

},{}],"jrqSW":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a51126d5bd2275").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createCssVarsTheme", {
    enumerable: true,
    get: function() {
        return _createCssVarsTheme.default;
    }
});
Object.defineProperty(exports, "createGetColorSchemeSelector", {
    enumerable: true,
    get: function() {
        return _getColorSchemeSelector.createGetColorSchemeSelector;
    }
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _createCssVarsProvider.default;
    }
});
Object.defineProperty(exports, "prepareCssVars", {
    enumerable: true,
    get: function() {
        return _prepareCssVars.default;
    }
});
Object.defineProperty(exports, "prepareTypographyVars", {
    enumerable: true,
    get: function() {
        return _prepareTypographyVars.default;
    }
});
var _createCssVarsProvider = _interopRequireDefault(require("dfae27ca31306a0e"));
var _prepareCssVars = _interopRequireDefault(require("d98545f5c0c0740e"));
var _prepareTypographyVars = _interopRequireDefault(require("c3dc230e2b940bd4"));
var _createCssVarsTheme = _interopRequireDefault(require("2bda82692be67aa8"));
var _getColorSchemeSelector = require("fd4cdf3817603102");

},{"a51126d5bd2275":"1P3rZ","dfae27ca31306a0e":"ed0eT","d98545f5c0c0740e":"dqYkb","c3dc230e2b940bd4":"fw4hW","2bda82692be67aa8":"dbpMK","fd4cdf3817603102":"drAM8"}],"ed0eT":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("7bb1b00c3ce16e70").default;
var _interopRequireWildcard = require("841305f8151d5761").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DISABLE_CSS_TRANSITION = void 0;
exports.default = createCssVarsProvider;
var React = _interopRequireWildcard(require("cf72253cf59a0c4a"));
var _propTypes = _interopRequireDefault(require("85ef376bdcc70ce"));
var _styledEngine = require("27fd9fa473c78e80");
var _privateTheming = require("45eb920496ba4f96");
var _useEnhancedEffect = _interopRequireDefault(require("4af90c5f9c5514e"));
var _ThemeProvider = _interopRequireDefault(require("90a7650b1c1f5bfe"));
var _InitColorSchemeScript = _interopRequireWildcard(require("c9120b7bafb1949e"));
var _useCurrentColorScheme = _interopRequireDefault(require("bdfdcd452b0a518"));
var _jsxRuntime = require("2547781ca18894b7");
const DISABLE_CSS_TRANSITION = exports.DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';
function createCssVarsProvider(options) {
    const { themeId, /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */ theme: defaultTheme = {}, modeStorageKey: defaultModeStorageKey = _InitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY, colorSchemeStorageKey: defaultColorSchemeStorageKey = _InitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY, disableTransitionOnChange: designSystemTransitionOnChange = false, defaultColorScheme, resolveTheme } = options;
    const defaultContext = {
        allColorSchemes: [],
        colorScheme: undefined,
        darkColorScheme: undefined,
        lightColorScheme: undefined,
        mode: undefined,
        setColorScheme: ()=>{},
        setMode: ()=>{},
        systemMode: undefined
    };
    const ColorSchemeContext = /*#__PURE__*/ React.createContext(undefined);
    ColorSchemeContext.displayName = 'ColorSchemeContext';
    const useColorScheme = ()=>React.useContext(ColorSchemeContext) || defaultContext;
    const defaultColorSchemes = {};
    const defaultComponents = {};
    function CssVarsProvider(props) {
        const { children, theme: themeProp, modeStorageKey = defaultModeStorageKey, colorSchemeStorageKey = defaultColorSchemeStorageKey, disableTransitionOnChange = designSystemTransitionOnChange, storageManager, storageWindow = typeof window === 'undefined' ? undefined : window, documentNode = typeof document === 'undefined' ? undefined : document, colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement, disableNestedContext = false, disableStyleSheetGeneration = false, defaultMode: initialMode = 'system', forceThemeRerender = false, noSsr } = props;
        const hasMounted = React.useRef(false);
        const upperTheme = (0, _privateTheming.useTheme)();
        const ctx = React.useContext(ColorSchemeContext);
        const nested = !!ctx && !disableNestedContext;
        const initialTheme = React.useMemo(()=>{
            if (themeProp) return themeProp;
            return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;
        }, [
            themeProp
        ]);
        const scopedTheme = initialTheme[themeId];
        const restThemeProp = scopedTheme || initialTheme;
        const { colorSchemes = defaultColorSchemes, components = defaultComponents, cssVarPrefix } = restThemeProp;
        const joinedColorSchemes = Object.keys(colorSchemes).filter((k)=>!!colorSchemes[k]).join(',');
        const allColorSchemes = React.useMemo(()=>joinedColorSchemes.split(','), [
            joinedColorSchemes
        ]);
        const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;
        const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;
        const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;
        // 1. Get the data about the `mode`, `colorScheme`, and setter functions.
        const { mode: stateMode, setMode, systemMode, lightColorScheme, darkColorScheme, colorScheme: stateColorScheme, setColorScheme } = (0, _useCurrentColorScheme.default)({
            supportedColorSchemes: allColorSchemes,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey,
            colorSchemeStorageKey,
            defaultMode,
            storageManager,
            storageWindow,
            noSsr
        });
        let mode = stateMode;
        let colorScheme = stateColorScheme;
        if (nested) {
            mode = ctx.mode;
            colorScheme = ctx.colorScheme;
        }
        if (forceThemeRerender && !restThemeProp.vars) console.warn([
            'MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.',
            'Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution.'
        ].join('\n'));
        // `colorScheme` is undefined on the server and hydration phase
        let calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;
        if (restThemeProp.vars && !forceThemeRerender) calculatedColorScheme = restThemeProp.defaultColorScheme;
        const memoTheme = React.useMemo(()=>{
            // 2. get the `vars` object that refers to the CSS custom properties
            const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;
            // 3. Start composing the theme object
            const theme = {
                ...restThemeProp,
                components,
                colorSchemes,
                cssVarPrefix,
                vars: themeVars
            };
            if (typeof theme.generateSpacing === 'function') theme.spacing = theme.generateSpacing();
            // 4. Resolve the color scheme and merge it to the theme
            if (calculatedColorScheme) {
                const scheme = colorSchemes[calculatedColorScheme];
                if (scheme && typeof scheme === 'object') // 4.1 Merge the selected color scheme to the theme
                Object.keys(scheme).forEach((schemeKey)=>{
                    if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') // shallow merge the 1st level structure of the theme.
                    theme[schemeKey] = {
                        ...theme[schemeKey],
                        ...scheme[schemeKey]
                    };
                    else theme[schemeKey] = scheme[schemeKey];
                });
            }
            return resolveTheme ? resolveTheme(theme) : theme;
        }, [
            restThemeProp,
            calculatedColorScheme,
            components,
            colorSchemes,
            cssVarPrefix
        ]);
        // 5. Declaring effects
        // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.
        const colorSchemeSelector = restThemeProp.colorSchemeSelector;
        (0, _useEnhancedEffect.default)(()=>{
            if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {
                const selector = colorSchemeSelector;
                let rule = colorSchemeSelector;
                if (selector === 'class') rule = `.%s`;
                if (selector === 'data') rule = `[data-%s]`;
                if (selector?.startsWith('data-') && !selector.includes('%s')) // 'data-mui-color-scheme' -> '[data-mui-color-scheme="%s"]'
                rule = `[${selector}="%s"]`;
                if (rule.startsWith('.')) {
                    colorSchemeNode.classList.remove(...allColorSchemes.map((scheme)=>rule.substring(1).replace('%s', scheme)));
                    colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));
                } else {
                    const matches = rule.replace('%s', colorScheme).match(/\[([^\]]+)\]/);
                    if (matches) {
                        const [attr, value] = matches[1].split('=');
                        if (!value) // for attributes like `data-theme-dark`, `data-theme-light`
                        // remove all the existing data attributes before setting the new one
                        allColorSchemes.forEach((scheme)=>{
                            colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));
                        });
                        colorSchemeNode.setAttribute(attr, value ? value.replace(/"|'/g, '') : '');
                    } else colorSchemeNode.setAttribute(rule, colorScheme);
                }
            }
        }, [
            colorScheme,
            colorSchemeSelector,
            colorSchemeNode,
            allColorSchemes
        ]);
        // 5.2 Remove the CSS transition when color scheme changes to create instant experience.
        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313
        React.useEffect(()=>{
            let timer;
            if (disableTransitionOnChange && hasMounted.current && documentNode) {
                const css = documentNode.createElement('style');
                css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));
                documentNode.head.appendChild(css);
                // Force browser repaint
                (()=>window.getComputedStyle(documentNode.body))();
                timer = setTimeout(()=>{
                    documentNode.head.removeChild(css);
                }, 1);
            }
            return ()=>{
                clearTimeout(timer);
            };
        }, [
            colorScheme,
            disableTransitionOnChange,
            documentNode
        ]);
        React.useEffect(()=>{
            hasMounted.current = true;
            return ()=>{
                hasMounted.current = false;
            };
        }, []);
        const contextValue = React.useMemo(()=>({
                allColorSchemes,
                colorScheme,
                darkColorScheme,
                lightColorScheme,
                mode,
                setColorScheme,
                setMode: (newMode)=>{
                    if (memoTheme.colorSchemeSelector === 'media') console.error([
                        'MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).',
                        'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.',
                        'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'
                    ].join('\n'));
                    setMode(newMode);
                },
                systemMode
            }), [
            allColorSchemes,
            colorScheme,
            darkColorScheme,
            lightColorScheme,
            mode,
            setColorScheme,
            setMode,
            systemMode,
            memoTheme.colorSchemeSelector
        ]);
        let shouldGenerateStyleSheet = true;
        if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) shouldGenerateStyleSheet = false;
        const element = /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
            children: [
                /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ThemeProvider.default, {
                    themeId: scopedTheme ? themeId : undefined,
                    theme: memoTheme,
                    children: children
                }),
                shouldGenerateStyleSheet && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {
                    styles: memoTheme.generateStyleSheets?.() || []
                })
            ]
        });
        if (nested) return element;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {
            value: contextValue,
            children: element
        });
    }
    CssVarsProvider.propTypes = {
        /**
     * The component tree.
     */ children: _propTypes.default.node,
        /**
     * The node used to attach the color-scheme attribute
     */ colorSchemeNode: _propTypes.default.any,
        /**
     * localStorage key used to store `colorScheme`
     */ colorSchemeStorageKey: _propTypes.default.string,
        /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */ defaultMode: _propTypes.default.string,
        /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */ disableNestedContext: _propTypes.default.bool,
        /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */ disableStyleSheetGeneration: _propTypes.default.bool,
        /**
     * Disable CSS transitions when switching between modes or color schemes.
     */ disableTransitionOnChange: _propTypes.default.bool,
        /**
     * The document to attach the attribute to.
     */ documentNode: _propTypes.default.any,
        /**
     * If `true`, theme values are recalculated when the mode changes.
     */ forceThemeRerender: _propTypes.default.bool,
        /**
     * The key in the local storage used to store current color scheme.
     */ modeStorageKey: _propTypes.default.string,
        /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */ noSsr: _propTypes.default.bool,
        /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */ storageManager: _propTypes.default.func,
        /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */ storageWindow: _propTypes.default.any,
        /**
     * The calculated theme object that will be passed through context.
     */ theme: _propTypes.default.object
    };
    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;
    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;
    const getInitColorSchemeScript = (params)=>(0, _InitColorSchemeScript.default)({
            colorSchemeStorageKey: defaultColorSchemeStorageKey,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey: defaultModeStorageKey,
            ...params
        });
    return {
        CssVarsProvider,
        useColorScheme,
        getInitColorSchemeScript
    };
}

},{"7bb1b00c3ce16e70":"1P3rZ","841305f8151d5761":"6TFJp","cf72253cf59a0c4a":"jMk1U","85ef376bdcc70ce":"GNqOQ","27fd9fa473c78e80":"g3Wsb","45eb920496ba4f96":"aNwkL","4af90c5f9c5514e":"egHZg","90a7650b1c1f5bfe":"7MAcf","c9120b7bafb1949e":"6VlWa","bdfdcd452b0a518":"rbHNg","2547781ca18894b7":"05iiF"}],"7MAcf":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9642812f9fa3db8d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _ThemeProvider.default;
    }
});
var _ThemeProvider = _interopRequireDefault(require("7da009a5ef328225"));

},{"9642812f9fa3db8d":"1P3rZ","7da009a5ef328225":"3UBCH"}],"3UBCH":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("2f0cdb539014f0d4").default;
var _interopRequireWildcard = require("945ee145cb6db818").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("f66bdf805eb6a174"));
var _propTypes = _interopRequireDefault(require("a7dc9850114c1c07"));
var _privateTheming = require("d2b933a117fa27b3");
var _exactProp = _interopRequireDefault(require("daa2a36d2d0ccf09"));
var _styledEngine = require("617d81d7a7442614");
var _useThemeWithoutDefault = _interopRequireDefault(require("44c8f2f530ac38e9"));
var _RtlProvider = _interopRequireDefault(require("31aada5253a2fae2"));
var _DefaultPropsProvider = _interopRequireDefault(require("c65b0fe1e1532163"));
var _jsxRuntime = require("d40852f22693d112");
const EMPTY_THEME = {};
function useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {
    return React.useMemo(()=>{
        const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;
        if (typeof localTheme === 'function') {
            const mergedTheme = localTheme(resolvedTheme);
            const result = themeId ? {
                ...upperTheme,
                [themeId]: mergedTheme
            } : mergedTheme;
            // must return a function for the private theme to NOT merge with the upper theme.
            // see the test case "use provided theme from a callback" in ThemeProvider.test.js
            if (isPrivate) return ()=>result;
            return result;
        }
        return themeId ? {
            ...upperTheme,
            [themeId]: localTheme
        } : {
            ...upperTheme,
            ...localTheme
        };
    }, [
        themeId,
        upperTheme,
        localTheme,
        isPrivate
    ]);
}
/**
 * This component makes the `theme` available down the React tree.
 * It should preferably be used at **the root of your component tree**.
 *
 * <ThemeProvider theme={theme}> // existing use case
 * <ThemeProvider theme={{ id: theme }}> // theme scoping
 */ function ThemeProvider(props) {
    const { children, theme: localTheme, themeId } = props;
    const upperTheme = (0, _useThemeWithoutDefault.default)(EMPTY_THEME);
    const upperPrivateTheme = (0, _privateTheming.useTheme)() || EMPTY_THEME;
    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') console.error([
        'MUI: You are providing a theme function prop to the ThemeProvider component:',
        '<ThemeProvider theme={outerTheme => outerTheme} />',
        '',
        'However, no outer theme is present.',
        "Make sure a theme is already injected higher in the React tree or provide a theme object."
    ].join('\n'));
    const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);
    const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);
    const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_privateTheming.ThemeProvider, {
        theme: privateTheme,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_styledEngine.ThemeContext.Provider, {
            value: engineTheme,
            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_RtlProvider.default, {
                value: rtlValue,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_DefaultPropsProvider.default, {
                    value: themeId ? engineTheme[themeId].components : engineTheme.components,
                    children: children
                })
            })
        })
    });
}
ThemeProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * Your component tree.
   */ children: _propTypes.default.node,
    /**
   * A theme object. You can provide a function to extend the outer theme.
   */ theme: _propTypes.default.oneOfType([
        _propTypes.default.func,
        _propTypes.default.object
    ]).isRequired,
    /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */ themeId: _propTypes.default.string
};
ThemeProvider.propTypes = (0, _exactProp.default)(ThemeProvider.propTypes);
var _default = exports.default = ThemeProvider;

},{"2f0cdb539014f0d4":"1P3rZ","945ee145cb6db818":"6TFJp","f66bdf805eb6a174":"jMk1U","a7dc9850114c1c07":"GNqOQ","d2b933a117fa27b3":"aNwkL","daa2a36d2d0ccf09":"l3gvy","617d81d7a7442614":"g3Wsb","44c8f2f530ac38e9":"2vDOS","31aada5253a2fae2":"13k4W","c65b0fe1e1532163":"bIXtM","d40852f22693d112":"05iiF"}],"2vDOS":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("22da61490d6d52e6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useThemeWithoutDefault.default;
    }
});
var _useThemeWithoutDefault = _interopRequireDefault(require("f31bbf1bc32a60ae"));

},{"22da61490d6d52e6":"1P3rZ","f31bbf1bc32a60ae":"avAdb"}],"avAdb":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("cb4397c685c1a400").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("d565964b4cacfe6d"));
var _styledEngine = require("c6c07bae4e5cb0af");
function isObjectEmpty(obj) {
    return Object.keys(obj).length === 0;
}
function useTheme(defaultTheme = null) {
    const contextTheme = React.useContext(_styledEngine.ThemeContext);
    return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
}
var _default = exports.default = useTheme;

},{"cb4397c685c1a400":"6TFJp","d565964b4cacfe6d":"jMk1U","c6c07bae4e5cb0af":"g3Wsb"}],"13k4W":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("75271e7f0a9be8b8").default;
var _interopRequireWildcard = require("8be47b4a0ee19137").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useRtl = exports.default = void 0;
var React = _interopRequireWildcard(require("9c011c2e93eae9d7"));
var _propTypes = _interopRequireDefault(require("1cdad4212e0b63a6"));
var _jsxRuntime = require("35bc5316f55d23ce");
const RtlContext = /*#__PURE__*/ React.createContext();
function RtlProvider({ value, ...props }) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(RtlContext.Provider, {
        value: value ?? true,
        ...props
    });
}
RtlProvider.propTypes = {
    children: _propTypes.default.node,
    value: _propTypes.default.bool
};
const useRtl = ()=>{
    const value = React.useContext(RtlContext);
    return value ?? false;
};
exports.useRtl = useRtl;
var _default = exports.default = RtlProvider;

},{"75271e7f0a9be8b8":"1P3rZ","8be47b4a0ee19137":"6TFJp","9c011c2e93eae9d7":"jMk1U","1cdad4212e0b63a6":"GNqOQ","35bc5316f55d23ce":"05iiF"}],"bIXtM":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("3212c96339aec0a5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _DefaultPropsProvider.default;
    }
});
Object.defineProperty(exports, "useDefaultProps", {
    enumerable: true,
    get: function() {
        return _DefaultPropsProvider.useDefaultProps;
    }
});
var _DefaultPropsProvider = _interopRequireWildcard(require("2efb2ac9cb89e9ff"));

},{"3212c96339aec0a5":"6TFJp","2efb2ac9cb89e9ff":"d8oZp"}],"d8oZp":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("4ce0159cb79f502a").default;
var _interopRequireWildcard = require("337ded59bbe1d92b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.useDefaultProps = useDefaultProps;
var React = _interopRequireWildcard(require("deb15c239d6dfd29"));
var _propTypes = _interopRequireDefault(require("44902174b186aff9"));
var _resolveProps = _interopRequireDefault(require("79e1b19e0eadc3aa"));
var _jsxRuntime = require("899997d347218abd");
const PropsContext = /*#__PURE__*/ React.createContext(undefined);
function DefaultPropsProvider({ value, children }) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(PropsContext.Provider, {
        value: value,
        children: children
    });
}
DefaultPropsProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: _propTypes.default.node,
    /**
   * @ignore
   */ value: _propTypes.default.object
};
function getThemeProps(params) {
    const { theme, name, props } = params;
    if (!theme || !theme.components || !theme.components[name]) return props;
    const config = theme.components[name];
    if (config.defaultProps) // compatible with v5 signature
    return (0, _resolveProps.default)(config.defaultProps, props);
    if (!config.styleOverrides && !config.variants) // v6 signature, no property 'defaultProps'
    return (0, _resolveProps.default)(config, props);
    return props;
}
function useDefaultProps({ props, name }) {
    const ctx = React.useContext(PropsContext);
    return getThemeProps({
        props,
        name,
        theme: {
            components: ctx
        }
    });
}
var _default = exports.default = DefaultPropsProvider;

},{"4ce0159cb79f502a":"1P3rZ","337ded59bbe1d92b":"6TFJp","deb15c239d6dfd29":"jMk1U","44902174b186aff9":"GNqOQ","79e1b19e0eadc3aa":"hO4GV","899997d347218abd":"05iiF"}],"6VlWa":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("ef652579247cd5d5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_MODE_STORAGE_KEY = exports.DEFAULT_COLOR_SCHEME_STORAGE_KEY = exports.DEFAULT_ATTRIBUTE = void 0;
exports.default = InitColorSchemeScript;
var React = _interopRequireWildcard(require("b07e9c9c3771fb3a"));
var _jsxRuntime = require("e1ecb68d89a38c71");
/**
 * Split this component for RSC import
 */ const DEFAULT_MODE_STORAGE_KEY = exports.DEFAULT_MODE_STORAGE_KEY = 'mode';
const DEFAULT_COLOR_SCHEME_STORAGE_KEY = exports.DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';
const DEFAULT_ATTRIBUTE = exports.DEFAULT_ATTRIBUTE = 'data-color-scheme';
function InitColorSchemeScript(options) {
    const { defaultMode = 'system', defaultLightColorScheme = 'light', defaultDarkColorScheme = 'dark', modeStorageKey = DEFAULT_MODE_STORAGE_KEY, colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY, attribute: initialAttribute = DEFAULT_ATTRIBUTE, colorSchemeNode = 'document.documentElement', nonce } = options || {};
    let setter = '';
    let attribute = initialAttribute;
    if (initialAttribute === 'class') attribute = '.%s';
    if (initialAttribute === 'data') attribute = '[data-%s]';
    if (attribute.startsWith('.')) {
        const selector = attribute.substring(1);
        setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));
      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;
    }
    const matches = attribute.match(/\[([^\]]+)\]/); // case [data-color-scheme=%s] or [data-color-scheme]
    if (matches) {
        const [attr, value] = matches[1].split('=');
        if (!value) setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));
      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;
        setter += `
      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '""'});`;
    } else setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("script", {
        suppressHydrationWarning: true,
        nonce: typeof window === 'undefined' ? nonce : '',
        dangerouslySetInnerHTML: {
            __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';
  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';
  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${setter}
  }
} catch(e){}})();`
        }
    }, "mui-color-scheme-init");
}

},{"ef652579247cd5d5":"6TFJp","b07e9c9c3771fb3a":"jMk1U","e1ecb68d89a38c71":"05iiF"}],"rbHNg":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("c1c40b040dbdc7d5").default;
var _interopRequireWildcard = require("6fc06eaa0ead1cc3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useCurrentColorScheme;
exports.getColorScheme = getColorScheme;
exports.getSystemMode = getSystemMode;
var React = _interopRequireWildcard(require("a1e57bd1e615fdc1"));
var _InitColorSchemeScript = require("54b6e4d95dd85459");
var _localStorageManager = _interopRequireDefault(require("2cdbf5ace57ee651"));
function noop() {}
function getSystemMode(mode) {
    if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {
        const mql = window.matchMedia('(prefers-color-scheme: dark)');
        if (mql.matches) return 'dark';
        return 'light';
    }
    return undefined;
}
function processState(state, callback) {
    if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') return callback('light');
    if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') return callback('dark');
    return undefined;
}
function getColorScheme(state) {
    return processState(state, (mode)=>{
        if (mode === 'light') return state.lightColorScheme;
        if (mode === 'dark') return state.darkColorScheme;
        return undefined;
    });
}
function useCurrentColorScheme(options) {
    const { defaultMode = 'light', defaultLightColorScheme, defaultDarkColorScheme, supportedColorSchemes = [], modeStorageKey = _InitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY, colorSchemeStorageKey = _InitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY, storageWindow = typeof window === 'undefined' ? undefined : window, storageManager = _localStorageManager.default, noSsr = false } = options;
    const joinedColorSchemes = supportedColorSchemes.join(',');
    const isMultiSchemes = supportedColorSchemes.length > 1;
    const modeStorage = React.useMemo(()=>storageManager?.({
            key: modeStorageKey,
            storageWindow
        }), [
        storageManager,
        modeStorageKey,
        storageWindow
    ]);
    const lightStorage = React.useMemo(()=>storageManager?.({
            key: `${colorSchemeStorageKey}-light`,
            storageWindow
        }), [
        storageManager,
        colorSchemeStorageKey,
        storageWindow
    ]);
    const darkStorage = React.useMemo(()=>storageManager?.({
            key: `${colorSchemeStorageKey}-dark`,
            storageWindow
        }), [
        storageManager,
        colorSchemeStorageKey,
        storageWindow
    ]);
    const [state, setState] = React.useState(()=>{
        const initialMode = modeStorage?.get(defaultMode) || defaultMode;
        const lightColorScheme = lightStorage?.get(defaultLightColorScheme) || defaultLightColorScheme;
        const darkColorScheme = darkStorage?.get(defaultDarkColorScheme) || defaultDarkColorScheme;
        return {
            mode: initialMode,
            systemMode: getSystemMode(initialMode),
            lightColorScheme,
            darkColorScheme
        };
    });
    const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);
    React.useEffect(()=>{
        setIsClient(true); // to rerender the component after hydration
    }, []);
    const colorScheme = getColorScheme(state);
    const setMode = React.useCallback((mode)=>{
        setState((currentState)=>{
            if (mode === currentState.mode) // do nothing if mode does not change
            return currentState;
            const newMode = mode ?? defaultMode;
            modeStorage?.set(newMode);
            return {
                ...currentState,
                mode: newMode,
                systemMode: getSystemMode(newMode)
            };
        });
    }, [
        modeStorage,
        defaultMode
    ]);
    const setColorScheme = React.useCallback((value)=>{
        if (!value) setState((currentState)=>{
            lightStorage?.set(defaultLightColorScheme);
            darkStorage?.set(defaultDarkColorScheme);
            return {
                ...currentState,
                lightColorScheme: defaultLightColorScheme,
                darkColorScheme: defaultDarkColorScheme
            };
        });
        else if (typeof value === 'string') {
            if (value && !joinedColorSchemes.includes(value)) console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
            else setState((currentState)=>{
                const newState = {
                    ...currentState
                };
                processState(currentState, (mode)=>{
                    if (mode === 'light') {
                        lightStorage?.set(value);
                        newState.lightColorScheme = value;
                    }
                    if (mode === 'dark') {
                        darkStorage?.set(value);
                        newState.darkColorScheme = value;
                    }
                });
                return newState;
            });
        } else setState((currentState)=>{
            const newState = {
                ...currentState
            };
            const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;
            const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;
            if (newLightColorScheme) {
                if (!joinedColorSchemes.includes(newLightColorScheme)) console.error(`\`${newLightColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                else {
                    newState.lightColorScheme = newLightColorScheme;
                    lightStorage?.set(newLightColorScheme);
                }
            }
            if (newDarkColorScheme) {
                if (!joinedColorSchemes.includes(newDarkColorScheme)) console.error(`\`${newDarkColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                else {
                    newState.darkColorScheme = newDarkColorScheme;
                    darkStorage?.set(newDarkColorScheme);
                }
            }
            return newState;
        });
    }, [
        joinedColorSchemes,
        lightStorage,
        darkStorage,
        defaultLightColorScheme,
        defaultDarkColorScheme
    ]);
    const handleMediaQuery = React.useCallback((event)=>{
        if (state.mode === 'system') setState((currentState)=>{
            const systemMode = event?.matches ? 'dark' : 'light';
            // Early exit, nothing changed.
            if (currentState.systemMode === systemMode) return currentState;
            return {
                ...currentState,
                systemMode
            };
        });
    }, [
        state.mode
    ]);
    // Ref hack to avoid adding handleMediaQuery as a dep
    const mediaListener = React.useRef(handleMediaQuery);
    mediaListener.current = handleMediaQuery;
    React.useEffect(()=>{
        if (typeof window.matchMedia !== 'function' || !isMultiSchemes) return undefined;
        const handler = (...args)=>mediaListener.current(...args);
        // Always listen to System preference
        const media = window.matchMedia('(prefers-color-scheme: dark)');
        // Intentionally use deprecated listener methods to support iOS & old browsers
        media.addListener(handler);
        handler(media);
        return ()=>{
            media.removeListener(handler);
        };
    }, [
        isMultiSchemes
    ]);
    // Handle when localStorage has changed
    React.useEffect(()=>{
        if (isMultiSchemes) {
            const unsubscribeMode = modeStorage?.subscribe((value)=>{
                if (!value || [
                    'light',
                    'dark',
                    'system'
                ].includes(value)) setMode(value || defaultMode);
            }) || noop;
            const unsubscribeLight = lightStorage?.subscribe((value)=>{
                if (!value || joinedColorSchemes.match(value)) setColorScheme({
                    light: value
                });
            }) || noop;
            const unsubscribeDark = darkStorage?.subscribe((value)=>{
                if (!value || joinedColorSchemes.match(value)) setColorScheme({
                    dark: value
                });
            }) || noop;
            return ()=>{
                unsubscribeMode();
                unsubscribeLight();
                unsubscribeDark();
            };
        }
        return undefined;
    }, [
        setColorScheme,
        setMode,
        joinedColorSchemes,
        defaultMode,
        storageWindow,
        isMultiSchemes,
        modeStorage,
        lightStorage,
        darkStorage
    ]);
    return {
        ...state,
        mode: isClient ? state.mode : undefined,
        systemMode: isClient ? state.systemMode : undefined,
        colorScheme: isClient ? colorScheme : undefined,
        setMode,
        setColorScheme
    };
}

},{"c1c40b040dbdc7d5":"1P3rZ","6fc06eaa0ead1cc3":"6TFJp","a1e57bd1e615fdc1":"jMk1U","54b6e4d95dd85459":"6VlWa","2cdbf5ace57ee651":"gv2rJ"}],"gv2rJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
function noop() {}
const localStorageManager = ({ key, storageWindow })=>{
    if (!storageWindow && typeof window !== 'undefined') storageWindow = window;
    return {
        get (defaultValue) {
            if (typeof window === 'undefined') return undefined;
            if (!storageWindow) return defaultValue;
            let value;
            try {
                value = storageWindow.localStorage.getItem(key);
            } catch  {
            // Unsupported
            }
            return value || defaultValue;
        },
        set: (value)=>{
            if (storageWindow) try {
                storageWindow.localStorage.setItem(key, value);
            } catch  {
            // Unsupported
            }
        },
        subscribe: (handler)=>{
            if (!storageWindow) return noop;
            const listener = (event)=>{
                const value = event.newValue;
                if (event.key === key) handler(value);
            };
            storageWindow.addEventListener('storage', listener);
            return ()=>{
                storageWindow.removeEventListener('storage', listener);
            };
        }
    };
};
var _default = exports.default = localStorageManager;

},{}],"dqYkb":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e5e8499e17180f19").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _deepmerge = _interopRequireDefault(require("f9d07c742884f482"));
var _cssVarsParser = _interopRequireDefault(require("1bab20d6b631648d"));
function prepareCssVars(theme, parserConfig = {}) {
    const { getSelector = defaultGetSelector, disableCssColorScheme, colorSchemeSelector: selector } = parserConfig;
    // @ts-ignore - ignore components do not exist
    const { colorSchemes = {}, components, defaultColorScheme = 'light', ...otherTheme } = theme;
    const { vars: rootVars, css: rootCss, varsWithDefaults: rootVarsWithDefaults } = (0, _cssVarsParser.default)(otherTheme, parserConfig);
    let themeVars = rootVarsWithDefaults;
    const colorSchemesMap = {};
    const { [defaultColorScheme]: defaultScheme, ...otherColorSchemes } = colorSchemes;
    Object.entries(otherColorSchemes || {}).forEach(([key, scheme])=>{
        const { vars, css, varsWithDefaults } = (0, _cssVarsParser.default)(scheme, parserConfig);
        themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);
        colorSchemesMap[key] = {
            css,
            vars
        };
    });
    if (defaultScheme) {
        // default color scheme vars should be merged last to set as default
        const { css, vars, varsWithDefaults } = (0, _cssVarsParser.default)(defaultScheme, parserConfig);
        themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);
        colorSchemesMap[defaultColorScheme] = {
            css,
            vars
        };
    }
    function defaultGetSelector(colorScheme, cssObject) {
        let rule = selector;
        if (selector === 'class') rule = '.%s';
        if (selector === 'data') rule = '[data-%s]';
        if (selector?.startsWith('data-') && !selector.includes('%s')) // 'data-joy-color-scheme' -> '[data-joy-color-scheme="%s"]'
        rule = `[${selector}="%s"]`;
        if (colorScheme) {
            if (rule === 'media') {
                if (theme.defaultColorScheme === colorScheme) return ':root';
                const mode = colorSchemes[colorScheme]?.palette?.mode || colorScheme;
                return {
                    [`@media (prefers-color-scheme: ${mode})`]: {
                        ':root': cssObject
                    }
                };
            }
            if (rule) {
                if (theme.defaultColorScheme === colorScheme) return `:root, ${rule.replace('%s', String(colorScheme))}`;
                return rule.replace('%s', String(colorScheme));
            }
        }
        return ':root';
    }
    const generateThemeVars = ()=>{
        let vars = {
            ...rootVars
        };
        Object.entries(colorSchemesMap).forEach(([, { vars: schemeVars }])=>{
            vars = (0, _deepmerge.default)(vars, schemeVars);
        });
        return vars;
    };
    const generateStyleSheets = ()=>{
        const stylesheets = [];
        const colorScheme = theme.defaultColorScheme || 'light';
        function insertStyleSheet(key, css) {
            if (Object.keys(css).length) stylesheets.push(typeof key === 'string' ? {
                [key]: {
                    ...css
                }
            } : key);
        }
        insertStyleSheet(getSelector(undefined, {
            ...rootCss
        }), rootCss);
        const { [colorScheme]: defaultSchemeVal, ...other } = colorSchemesMap;
        if (defaultSchemeVal) {
            // default color scheme has to come before other color schemes
            const { css } = defaultSchemeVal;
            const cssColorSheme = colorSchemes[colorScheme]?.palette?.mode;
            const finalCss = !disableCssColorScheme && cssColorSheme ? {
                colorScheme: cssColorSheme,
                ...css
            } : {
                ...css
            };
            insertStyleSheet(getSelector(colorScheme, {
                ...finalCss
            }), finalCss);
        }
        Object.entries(other).forEach(([key, { css }])=>{
            const cssColorSheme = colorSchemes[key]?.palette?.mode;
            const finalCss = !disableCssColorScheme && cssColorSheme ? {
                colorScheme: cssColorSheme,
                ...css
            } : {
                ...css
            };
            insertStyleSheet(getSelector(key, {
                ...finalCss
            }), finalCss);
        });
        return stylesheets;
    };
    return {
        vars: themeVars,
        generateThemeVars,
        generateStyleSheets
    };
}
var _default = exports.default = prepareCssVars;

},{"e5e8499e17180f19":"1P3rZ","f9d07c742884f482":"bLPf1","1bab20d6b631648d":"9miFX"}],"9miFX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.assignNestedKeys = void 0;
exports.default = cssVarsParser;
exports.walkObjectDeep = void 0;
/**
 * This function create an object from keys, value and then assign to target
 *
 * @param {Object} obj : the target object to be assigned
 * @param {string[]} keys
 * @param {string | number} value
 *
 * @example
 * const source = {}
 * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }
 *
 * @example
 * const source = { palette: { primary: 'var(--palette-primary)' } }
 * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }
 */ const assignNestedKeys = (obj, keys, value, arrayKeys = [])=>{
    let temp = obj;
    keys.forEach((k, index)=>{
        if (index === keys.length - 1) {
            if (Array.isArray(temp)) temp[Number(k)] = value;
            else if (temp && typeof temp === 'object') temp[k] = value;
        } else if (temp && typeof temp === 'object') {
            if (!temp[k]) temp[k] = arrayKeys.includes(k) ? [] : {};
            temp = temp[k];
        }
    });
};
/**
 *
 * @param {Object} obj : source object
 * @param {Function} callback : a function that will be called when
 *                   - the deepest key in source object is reached
 *                   - the value of the deepest key is NOT `undefined` | `null`
 *
 * @example
 * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)
 * // ['palette', 'primary', 'main'] '#000000'
 */ exports.assignNestedKeys = assignNestedKeys;
const walkObjectDeep = (obj, callback, shouldSkipPaths)=>{
    function recurse(object, parentKeys = [], arrayKeys = []) {
        Object.entries(object).forEach(([key, value])=>{
            if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([
                ...parentKeys,
                key
            ])) {
                if (value !== undefined && value !== null) {
                    if (typeof value === 'object' && Object.keys(value).length > 0) recurse(value, [
                        ...parentKeys,
                        key
                    ], Array.isArray(value) ? [
                        ...arrayKeys,
                        key
                    ] : arrayKeys);
                    else callback([
                        ...parentKeys,
                        key
                    ], value, arrayKeys);
                }
            }
        });
    }
    recurse(obj);
};
exports.walkObjectDeep = walkObjectDeep;
const getCssValue = (keys, value)=>{
    if (typeof value === 'number') {
        if ([
            'lineHeight',
            'fontWeight',
            'opacity',
            'zIndex'
        ].some((prop)=>keys.includes(prop))) // CSS property that are unitless
        return value;
        const lastKey = keys[keys.length - 1];
        if (lastKey.toLowerCase().includes('opacity')) // opacity values are unitless
        return value;
        return `${value}px`;
    }
    return value;
};
/**
 * a function that parse theme and return { css, vars }
 *
 * @param {Object} theme
 * @param {{
 *  prefix?: string,
 *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean
 * }} options.
 *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.
 *
 * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).
 *
 * @example
 * const { css, vars } = parser({
 *   fontSize: 12,
 *   lineHeight: 1.2,
 *   palette: { primary: { 500: 'var(--color)' } }
 * }, { prefix: 'foo' })
 *
 * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }
 * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }
 */ function cssVarsParser(theme, options) {
    const { prefix, shouldSkipGeneratingVar } = options || {};
    const css = {};
    const vars = {};
    const varsWithDefaults = {};
    walkObjectDeep(theme, (keys, value, arrayKeys)=>{
        if (typeof value === 'string' || typeof value === 'number') {
            if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {
                // only create css & var if `shouldSkipGeneratingVar` return false
                const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;
                const resolvedValue = getCssValue(keys, value);
                Object.assign(css, {
                    [cssVar]: resolvedValue
                });
                assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);
                assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${resolvedValue})`, arrayKeys);
            }
        }
    }, (keys)=>keys[0] === 'vars' // skip 'vars/*' paths
    );
    return {
        css,
        vars,
        varsWithDefaults
    };
}

},{}],"fw4hW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = prepareTypographyVars;
function prepareTypographyVars(typography) {
    const vars = {};
    const entries = Object.entries(typography);
    entries.forEach((entry)=>{
        const [key, value] = entry;
        if (typeof value === 'object') vars[key] = `${value.fontStyle ? `${value.fontStyle} ` : ''}${value.fontVariant ? `${value.fontVariant} ` : ''}${value.fontWeight ? `${value.fontWeight} ` : ''}${value.fontStretch ? `${value.fontStretch} ` : ''}${value.fontSize || ''}${value.lineHeight ? `/${value.lineHeight} ` : ''}${value.fontFamily || ''}`;
    });
    return vars;
}

},{}],"dbpMK":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("191401da11436a57").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _prepareCssVars = _interopRequireDefault(require("1d6d5d48f41948fe"));
var _getColorSchemeSelector = require("57053e77e0adcb4d");
var _InitColorSchemeScript = require("bd22249bfb50e2b0");
function createCssVarsTheme({ colorSchemeSelector = `[${_InitColorSchemeScript.DEFAULT_ATTRIBUTE}="%s"]`, ...theme }) {
    const output = theme;
    const result = (0, _prepareCssVars.default)(output, {
        ...theme,
        prefix: theme.cssVarPrefix,
        colorSchemeSelector
    });
    output.vars = result.vars;
    output.generateThemeVars = result.generateThemeVars;
    output.generateStyleSheets = result.generateStyleSheets;
    output.colorSchemeSelector = colorSchemeSelector;
    output.getColorSchemeSelector = (0, _getColorSchemeSelector.createGetColorSchemeSelector)(colorSchemeSelector);
    return output;
}
var _default = exports.default = createCssVarsTheme;

},{"191401da11436a57":"1P3rZ","1d6d5d48f41948fe":"dqYkb","57053e77e0adcb4d":"drAM8","bd22249bfb50e2b0":"6VlWa"}],"drAM8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createGetColorSchemeSelector = createGetColorSchemeSelector;
/* eslint-disable import/prefer-default-export */ function createGetColorSchemeSelector(selector) {
    return function getColorSchemeSelector(colorScheme) {
        if (selector === 'media') {
            if (colorScheme !== 'light' && colorScheme !== 'dark') console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${colorScheme}'.`);
            return `@media (prefers-color-scheme: ${colorScheme})`;
        }
        if (selector) {
            if (selector.startsWith('data-') && !selector.includes('%s')) return `[${selector}="${colorScheme}"] &`;
            if (selector === 'class') return `.${colorScheme} &`;
            if (selector === 'data') return `[data-${colorScheme}] &`;
            return `${selector.replace('%s', colorScheme)} &`;
        }
        return '&';
    };
}

},{}],"3qmy1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ebf92742dab40c54").default;
var _interopRequireWildcard = require("7bd85c2d391b9be3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _styleFunctionSx.default;
    }
});
Object.defineProperty(exports, "extendSxProp", {
    enumerable: true,
    get: function() {
        return _extendSxProp.default;
    }
});
Object.defineProperty(exports, "unstable_createStyleFunctionSx", {
    enumerable: true,
    get: function() {
        return _styleFunctionSx.unstable_createStyleFunctionSx;
    }
});
Object.defineProperty(exports, "unstable_defaultSxConfig", {
    enumerable: true,
    get: function() {
        return _defaultSxConfig.default;
    }
});
var _styleFunctionSx = _interopRequireWildcard(require("a36ab58f22476148"));
var _extendSxProp = _interopRequireDefault(require("2413bd638e69fe83"));
var _defaultSxConfig = _interopRequireDefault(require("465244391337dec0"));

},{"ebf92742dab40c54":"1P3rZ","7bd85c2d391b9be3":"6TFJp","a36ab58f22476148":"b0FDg","2413bd638e69fe83":"2iG1H","465244391337dec0":"4f7E8"}],"b0FDg":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c0143919dad125fe").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;
var _capitalize = _interopRequireDefault(require("96896e59929bb199"));
var _merge = _interopRequireDefault(require("474adad98f2fe185"));
var _style = require("657abc912cdf60e4");
var _breakpoints = require("49e436695c9eeb7b");
var _cssContainerQueries = require("788160d5aa5dca63");
var _defaultSxConfig = _interopRequireDefault(require("ecd15981307fab21"));
function objectsHaveSameKeys(...objects) {
    const allKeys = objects.reduce((keys, object)=>keys.concat(Object.keys(object)), []);
    const union = new Set(allKeys);
    return objects.every((object)=>union.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
    return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
}
// eslint-disable-next-line @typescript-eslint/naming-convention
function unstable_createStyleFunctionSx() {
    function getThemeValue(prop, val, theme, config) {
        const props = {
            [prop]: val,
            theme
        };
        const options = config[prop];
        if (!options) return {
            [prop]: val
        };
        const { cssProperty = prop, themeKey, transform, style } = options;
        if (val == null) return null;
        // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123
        if (themeKey === 'typography' && val === 'inherit') return {
            [prop]: val
        };
        const themeMapping = (0, _style.getPath)(theme, themeKey) || {};
        if (style) return style(props);
        const styleFromPropValue = (propValueFinal)=>{
            let value = (0, _style.getStyleValue)(themeMapping, transform, propValueFinal);
            if (propValueFinal === value && typeof propValueFinal === 'string') // Haven't found value
            value = (0, _style.getStyleValue)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalize.default)(propValueFinal)}`, propValueFinal);
            if (cssProperty === false) return value;
            return {
                [cssProperty]: value
            };
        };
        return (0, _breakpoints.handleBreakpoints)(props, val, styleFromPropValue);
    }
    function styleFunctionSx(props) {
        const { sx, theme = {} } = props || {};
        if (!sx) return null; // Emotion & styled-components will neglect null
        const config = theme.unstable_sxConfig ?? _defaultSxConfig.default;
        /*
     * Receive `sxInput` as object or callback
     * and then recursively check keys & values to create media query object styles.
     * (the result will be used in `styled`)
     */ function traverse(sxInput) {
            let sxObject = sxInput;
            if (typeof sxInput === 'function') sxObject = sxInput(theme);
            else if (typeof sxInput !== 'object') // value
            return sxInput;
            if (!sxObject) return null;
            const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);
            const breakpointsKeys = Object.keys(emptyBreakpoints);
            let css = emptyBreakpoints;
            Object.keys(sxObject).forEach((styleKey)=>{
                const value = callIfFn(sxObject[styleKey], theme);
                if (value !== null && value !== undefined) {
                    if (typeof value === 'object') {
                        if (config[styleKey]) css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));
                        else {
                            const breakpointsValues = (0, _breakpoints.handleBreakpoints)({
                                theme
                            }, value, (x)=>({
                                    [styleKey]: x
                                }));
                            if (objectsHaveSameKeys(breakpointsValues, value)) css[styleKey] = styleFunctionSx({
                                sx: value,
                                theme
                            });
                            else css = (0, _merge.default)(css, breakpointsValues);
                        }
                    } else css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));
                }
            });
            return (0, _cssContainerQueries.sortContainerQueries)(theme, (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css));
        }
        return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
    }
    return styleFunctionSx;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = [
    'sx'
];
var _default = exports.default = styleFunctionSx;

},{"c0143919dad125fe":"1P3rZ","96896e59929bb199":"igOKi","474adad98f2fe185":"bmR4g","657abc912cdf60e4":"58JeG","49e436695c9eeb7b":"148Xn","788160d5aa5dca63":"6Ko3S","ecd15981307fab21":"4f7E8"}],"4f7E8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _spacing = require("c57d76f643a2b254");
var _borders = require("6c964eb5aa743c86");
var _cssGrid = require("10ca837dc3e62cc8");
var _palette = require("d96c52549a7b804d");
var _sizing = require("90d21174e5fb17be");
const defaultSxConfig = {
    // borders
    border: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    borderTop: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    borderRight: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    borderBottom: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    borderLeft: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    borderColor: {
        themeKey: 'palette'
    },
    borderTopColor: {
        themeKey: 'palette'
    },
    borderRightColor: {
        themeKey: 'palette'
    },
    borderBottomColor: {
        themeKey: 'palette'
    },
    borderLeftColor: {
        themeKey: 'palette'
    },
    outline: {
        themeKey: 'borders',
        transform: _borders.borderTransform
    },
    outlineColor: {
        themeKey: 'palette'
    },
    borderRadius: {
        themeKey: 'shape.borderRadius',
        style: _borders.borderRadius
    },
    // palette
    color: {
        themeKey: 'palette',
        transform: _palette.paletteTransform
    },
    bgcolor: {
        themeKey: 'palette',
        cssProperty: 'backgroundColor',
        transform: _palette.paletteTransform
    },
    backgroundColor: {
        themeKey: 'palette',
        transform: _palette.paletteTransform
    },
    // spacing
    p: {
        style: _spacing.padding
    },
    pt: {
        style: _spacing.padding
    },
    pr: {
        style: _spacing.padding
    },
    pb: {
        style: _spacing.padding
    },
    pl: {
        style: _spacing.padding
    },
    px: {
        style: _spacing.padding
    },
    py: {
        style: _spacing.padding
    },
    padding: {
        style: _spacing.padding
    },
    paddingTop: {
        style: _spacing.padding
    },
    paddingRight: {
        style: _spacing.padding
    },
    paddingBottom: {
        style: _spacing.padding
    },
    paddingLeft: {
        style: _spacing.padding
    },
    paddingX: {
        style: _spacing.padding
    },
    paddingY: {
        style: _spacing.padding
    },
    paddingInline: {
        style: _spacing.padding
    },
    paddingInlineStart: {
        style: _spacing.padding
    },
    paddingInlineEnd: {
        style: _spacing.padding
    },
    paddingBlock: {
        style: _spacing.padding
    },
    paddingBlockStart: {
        style: _spacing.padding
    },
    paddingBlockEnd: {
        style: _spacing.padding
    },
    m: {
        style: _spacing.margin
    },
    mt: {
        style: _spacing.margin
    },
    mr: {
        style: _spacing.margin
    },
    mb: {
        style: _spacing.margin
    },
    ml: {
        style: _spacing.margin
    },
    mx: {
        style: _spacing.margin
    },
    my: {
        style: _spacing.margin
    },
    margin: {
        style: _spacing.margin
    },
    marginTop: {
        style: _spacing.margin
    },
    marginRight: {
        style: _spacing.margin
    },
    marginBottom: {
        style: _spacing.margin
    },
    marginLeft: {
        style: _spacing.margin
    },
    marginX: {
        style: _spacing.margin
    },
    marginY: {
        style: _spacing.margin
    },
    marginInline: {
        style: _spacing.margin
    },
    marginInlineStart: {
        style: _spacing.margin
    },
    marginInlineEnd: {
        style: _spacing.margin
    },
    marginBlock: {
        style: _spacing.margin
    },
    marginBlockStart: {
        style: _spacing.margin
    },
    marginBlockEnd: {
        style: _spacing.margin
    },
    // display
    displayPrint: {
        cssProperty: false,
        transform: (value)=>({
                '@media print': {
                    display: value
                }
            })
    },
    display: {},
    overflow: {},
    textOverflow: {},
    visibility: {},
    whiteSpace: {},
    // flexbox
    flexBasis: {},
    flexDirection: {},
    flexWrap: {},
    justifyContent: {},
    alignItems: {},
    alignContent: {},
    order: {},
    flex: {},
    flexGrow: {},
    flexShrink: {},
    alignSelf: {},
    justifyItems: {},
    justifySelf: {},
    // grid
    gap: {
        style: _cssGrid.gap
    },
    rowGap: {
        style: _cssGrid.rowGap
    },
    columnGap: {
        style: _cssGrid.columnGap
    },
    gridColumn: {},
    gridRow: {},
    gridAutoFlow: {},
    gridAutoColumns: {},
    gridAutoRows: {},
    gridTemplateColumns: {},
    gridTemplateRows: {},
    gridTemplateAreas: {},
    gridArea: {},
    // positions
    position: {},
    zIndex: {
        themeKey: 'zIndex'
    },
    top: {},
    right: {},
    bottom: {},
    left: {},
    // shadows
    boxShadow: {
        themeKey: 'shadows'
    },
    // sizing
    width: {
        transform: _sizing.sizingTransform
    },
    maxWidth: {
        style: _sizing.maxWidth
    },
    minWidth: {
        transform: _sizing.sizingTransform
    },
    height: {
        transform: _sizing.sizingTransform
    },
    maxHeight: {
        transform: _sizing.sizingTransform
    },
    minHeight: {
        transform: _sizing.sizingTransform
    },
    boxSizing: {},
    // typography
    font: {
        themeKey: 'font'
    },
    fontFamily: {
        themeKey: 'typography'
    },
    fontSize: {
        themeKey: 'typography'
    },
    fontStyle: {
        themeKey: 'typography'
    },
    fontWeight: {
        themeKey: 'typography'
    },
    letterSpacing: {},
    textTransform: {},
    lineHeight: {},
    textAlign: {},
    typography: {
        cssProperty: false,
        themeKey: 'typography'
    }
};
var _default = exports.default = defaultSxConfig;

},{"c57d76f643a2b254":"cUfeI","6c964eb5aa743c86":"4C4Ky","10ca837dc3e62cc8":"gnCob","d96c52549a7b804d":"keSw2","90d21174e5fb17be":"02guy"}],"4C4Ky":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("dcce089d5908f568").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _borders.default;
    }
});
var _borders = _interopRequireWildcard(require("5fdcb604265ccfdc"));
Object.keys(_borders).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _borders[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _borders[key];
        }
    });
});

},{"dcce089d5908f568":"6TFJp","5fdcb604265ccfdc":"egW1Z"}],"egW1Z":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e2dc5666a8871a7e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.borderTopColor = exports.borderTop = exports.borderRightColor = exports.borderRight = exports.borderRadius = exports.borderLeftColor = exports.borderLeft = exports.borderColor = exports.borderBottomColor = exports.borderBottom = exports.border = void 0;
exports.borderTransform = borderTransform;
exports.outlineColor = exports.outline = exports.default = void 0;
var _responsivePropType = _interopRequireDefault(require("2c25771648e887a7"));
var _style = _interopRequireDefault(require("c2fb266b8e96749a"));
var _compose = _interopRequireDefault(require("dc05a15740d248e0"));
var _spacing = require("63b2b7100e242903");
var _breakpoints = require("2b87fd0661fd640");
function borderTransform(value) {
    if (typeof value !== 'number') return value;
    return `${value}px solid`;
}
function createBorderStyle(prop, transform) {
    return (0, _style.default)({
        prop,
        themeKey: 'borders',
        transform
    });
}
const border = exports.border = createBorderStyle('border', borderTransform);
const borderTop = exports.borderTop = createBorderStyle('borderTop', borderTransform);
const borderRight = exports.borderRight = createBorderStyle('borderRight', borderTransform);
const borderBottom = exports.borderBottom = createBorderStyle('borderBottom', borderTransform);
const borderLeft = exports.borderLeft = createBorderStyle('borderLeft', borderTransform);
const borderColor = exports.borderColor = createBorderStyle('borderColor');
const borderTopColor = exports.borderTopColor = createBorderStyle('borderTopColor');
const borderRightColor = exports.borderRightColor = createBorderStyle('borderRightColor');
const borderBottomColor = exports.borderBottomColor = createBorderStyle('borderBottomColor');
const borderLeftColor = exports.borderLeftColor = createBorderStyle('borderLeftColor');
const outline = exports.outline = createBorderStyle('outline', borderTransform);
const outlineColor = exports.outlineColor = createBorderStyle('outlineColor');
// false positive
// eslint-disable-next-line react/function-component-definition
const borderRadius = (props)=>{
    if (props.borderRadius !== undefined && props.borderRadius !== null) {
        const transformer = (0, _spacing.createUnaryUnit)(props.theme, 'shape.borderRadius', 4, 'borderRadius');
        const styleFromPropValue = (propValue)=>({
                borderRadius: (0, _spacing.getValue)(transformer, propValue)
            });
        return (0, _breakpoints.handleBreakpoints)(props, props.borderRadius, styleFromPropValue);
    }
    return null;
};
exports.borderRadius = borderRadius;
borderRadius.propTypes = {
    borderRadius: _responsivePropType.default
};
borderRadius.filterProps = [
    'borderRadius'
];
const borders = (0, _compose.default)(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);
var _default = exports.default = borders;

},{"e2dc5666a8871a7e":"1P3rZ","2c25771648e887a7":"9ApOU","c2fb266b8e96749a":"58JeG","dc05a15740d248e0":"32HuZ","63b2b7100e242903":"cUfeI","2b87fd0661fd640":"148Xn"}],"32HuZ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3d74380f49397bed").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _compose.default;
    }
});
var _compose = _interopRequireDefault(require("d391cd3bb4012335"));

},{"3d74380f49397bed":"1P3rZ","d391cd3bb4012335":"3lAMe"}],"3lAMe":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("14e4e4a88d602ae4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _merge = _interopRequireDefault(require("ff50934fa3d5e60e"));
function compose(...styles) {
    const handlers = styles.reduce((acc, style)=>{
        style.filterProps.forEach((prop)=>{
            acc[prop] = style;
        });
        return acc;
    }, {});
    // false positive
    // eslint-disable-next-line react/function-component-definition
    const fn = (props)=>{
        return Object.keys(props).reduce((acc, prop)=>{
            if (handlers[prop]) return (0, _merge.default)(acc, handlers[prop](props));
            return acc;
        }, {});
    };
    fn.propTypes = styles.reduce((acc, style)=>Object.assign(acc, style.propTypes), {});
    fn.filterProps = styles.reduce((acc, style)=>acc.concat(style.filterProps), []);
    return fn;
}
var _default = exports.default = compose;

},{"14e4e4a88d602ae4":"1P3rZ","ff50934fa3d5e60e":"bmR4g"}],"gnCob":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("5b680ec5197bb2fc").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _cssGrid.default;
    }
});
var _cssGrid = _interopRequireWildcard(require("e0b08a3944a6d551"));
Object.keys(_cssGrid).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _cssGrid[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _cssGrid[key];
        }
    });
});

},{"5b680ec5197bb2fc":"6TFJp","e0b08a3944a6d551":"jBkFX"}],"jBkFX":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("300f35d57ddbfa95").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rowGap = exports.gridTemplateRows = exports.gridTemplateColumns = exports.gridTemplateAreas = exports.gridRow = exports.gridColumn = exports.gridAutoRows = exports.gridAutoFlow = exports.gridAutoColumns = exports.gridArea = exports.gap = exports.default = exports.columnGap = void 0;
var _style = _interopRequireDefault(require("927191ba8c0c341e"));
var _compose = _interopRequireDefault(require("d75713cdbc0b5233"));
var _spacing = require("55ed5a86f79ad101");
var _breakpoints = require("22f6d220a1401b69");
var _responsivePropType = _interopRequireDefault(require("d3962afb6cf389ca"));
// false positive
// eslint-disable-next-line react/function-component-definition
const gap = (props)=>{
    if (props.gap !== undefined && props.gap !== null) {
        const transformer = (0, _spacing.createUnaryUnit)(props.theme, 'spacing', 8, 'gap');
        const styleFromPropValue = (propValue)=>({
                gap: (0, _spacing.getValue)(transformer, propValue)
            });
        return (0, _breakpoints.handleBreakpoints)(props, props.gap, styleFromPropValue);
    }
    return null;
};
exports.gap = gap;
gap.propTypes = {
    gap: _responsivePropType.default
};
gap.filterProps = [
    'gap'
];
// false positive
// eslint-disable-next-line react/function-component-definition
const columnGap = (props)=>{
    if (props.columnGap !== undefined && props.columnGap !== null) {
        const transformer = (0, _spacing.createUnaryUnit)(props.theme, 'spacing', 8, 'columnGap');
        const styleFromPropValue = (propValue)=>({
                columnGap: (0, _spacing.getValue)(transformer, propValue)
            });
        return (0, _breakpoints.handleBreakpoints)(props, props.columnGap, styleFromPropValue);
    }
    return null;
};
exports.columnGap = columnGap;
columnGap.propTypes = {
    columnGap: _responsivePropType.default
};
columnGap.filterProps = [
    'columnGap'
];
// false positive
// eslint-disable-next-line react/function-component-definition
const rowGap = (props)=>{
    if (props.rowGap !== undefined && props.rowGap !== null) {
        const transformer = (0, _spacing.createUnaryUnit)(props.theme, 'spacing', 8, 'rowGap');
        const styleFromPropValue = (propValue)=>({
                rowGap: (0, _spacing.getValue)(transformer, propValue)
            });
        return (0, _breakpoints.handleBreakpoints)(props, props.rowGap, styleFromPropValue);
    }
    return null;
};
exports.rowGap = rowGap;
rowGap.propTypes = {
    rowGap: _responsivePropType.default
};
rowGap.filterProps = [
    'rowGap'
];
const gridColumn = exports.gridColumn = (0, _style.default)({
    prop: 'gridColumn'
});
const gridRow = exports.gridRow = (0, _style.default)({
    prop: 'gridRow'
});
const gridAutoFlow = exports.gridAutoFlow = (0, _style.default)({
    prop: 'gridAutoFlow'
});
const gridAutoColumns = exports.gridAutoColumns = (0, _style.default)({
    prop: 'gridAutoColumns'
});
const gridAutoRows = exports.gridAutoRows = (0, _style.default)({
    prop: 'gridAutoRows'
});
const gridTemplateColumns = exports.gridTemplateColumns = (0, _style.default)({
    prop: 'gridTemplateColumns'
});
const gridTemplateRows = exports.gridTemplateRows = (0, _style.default)({
    prop: 'gridTemplateRows'
});
const gridTemplateAreas = exports.gridTemplateAreas = (0, _style.default)({
    prop: 'gridTemplateAreas'
});
const gridArea = exports.gridArea = (0, _style.default)({
    prop: 'gridArea'
});
const grid = (0, _compose.default)(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
var _default = exports.default = grid;

},{"300f35d57ddbfa95":"1P3rZ","927191ba8c0c341e":"58JeG","d75713cdbc0b5233":"32HuZ","55ed5a86f79ad101":"cUfeI","22f6d220a1401b69":"148Xn","d3962afb6cf389ca":"9ApOU"}],"keSw2":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("e353c406c441666e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _palette.default;
    }
});
var _palette = _interopRequireWildcard(require("7f0ad3806bebb455"));
Object.keys(_palette).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _palette[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _palette[key];
        }
    });
});

},{"e353c406c441666e":"6TFJp","7f0ad3806bebb455":"291OC"}],"291OC":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("34066a344d8daecf").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.color = exports.bgcolor = exports.backgroundColor = void 0;
exports.paletteTransform = paletteTransform;
var _style = _interopRequireDefault(require("c7773e82f050f56b"));
var _compose = _interopRequireDefault(require("779f4fad9951137b"));
function paletteTransform(value, userValue) {
    if (userValue === 'grey') return userValue;
    return value;
}
const color = exports.color = (0, _style.default)({
    prop: 'color',
    themeKey: 'palette',
    transform: paletteTransform
});
const bgcolor = exports.bgcolor = (0, _style.default)({
    prop: 'bgcolor',
    cssProperty: 'backgroundColor',
    themeKey: 'palette',
    transform: paletteTransform
});
const backgroundColor = exports.backgroundColor = (0, _style.default)({
    prop: 'backgroundColor',
    themeKey: 'palette',
    transform: paletteTransform
});
const palette = (0, _compose.default)(color, bgcolor, backgroundColor);
var _default = exports.default = palette;

},{"34066a344d8daecf":"1P3rZ","c7773e82f050f56b":"58JeG","779f4fad9951137b":"32HuZ"}],"02guy":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("781c1f35f5805a82").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _sizing.default;
    }
});
var _sizing = _interopRequireWildcard(require("ae93bb06e3e389f4"));
Object.keys(_sizing).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _sizing[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _sizing[key];
        }
    });
});

},{"781c1f35f5805a82":"6TFJp","ae93bb06e3e389f4":"aRnBR"}],"aRnBR":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("149b7315c3e764d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sizeWidth = exports.sizeHeight = exports.minWidth = exports.minHeight = exports.maxWidth = exports.maxHeight = exports.height = exports.default = exports.boxSizing = void 0;
exports.sizingTransform = sizingTransform;
exports.width = void 0;
var _style = _interopRequireDefault(require("dc9f1f09def53b2b"));
var _compose = _interopRequireDefault(require("817e5b138a0e941c"));
var _breakpoints = require("d41bba6b0766ba5d");
function sizingTransform(value) {
    return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = exports.width = (0, _style.default)({
    prop: 'width',
    transform: sizingTransform
});
const maxWidth = (props)=>{
    if (props.maxWidth !== undefined && props.maxWidth !== null) {
        const styleFromPropValue = (propValue)=>{
            const breakpoint = props.theme?.breakpoints?.values?.[propValue] || _breakpoints.values[propValue];
            if (!breakpoint) return {
                maxWidth: sizingTransform(propValue)
            };
            if (props.theme?.breakpoints?.unit !== 'px') return {
                maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`
            };
            return {
                maxWidth: breakpoint
            };
        };
        return (0, _breakpoints.handleBreakpoints)(props, props.maxWidth, styleFromPropValue);
    }
    return null;
};
exports.maxWidth = maxWidth;
maxWidth.filterProps = [
    'maxWidth'
];
const minWidth = exports.minWidth = (0, _style.default)({
    prop: 'minWidth',
    transform: sizingTransform
});
const height = exports.height = (0, _style.default)({
    prop: 'height',
    transform: sizingTransform
});
const maxHeight = exports.maxHeight = (0, _style.default)({
    prop: 'maxHeight',
    transform: sizingTransform
});
const minHeight = exports.minHeight = (0, _style.default)({
    prop: 'minHeight',
    transform: sizingTransform
});
const sizeWidth = exports.sizeWidth = (0, _style.default)({
    prop: 'size',
    cssProperty: 'width',
    transform: sizingTransform
});
const sizeHeight = exports.sizeHeight = (0, _style.default)({
    prop: 'size',
    cssProperty: 'height',
    transform: sizingTransform
});
const boxSizing = exports.boxSizing = (0, _style.default)({
    prop: 'boxSizing'
});
const sizing = (0, _compose.default)(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
var _default = exports.default = sizing;

},{"149b7315c3e764d":"1P3rZ","dc9f1f09def53b2b":"58JeG","817e5b138a0e941c":"32HuZ","d41bba6b0766ba5d":"148Xn"}],"2iG1H":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("87b2fb8bb141f448").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = extendSxProp;
var _deepmerge = require("5c6e7a57f2743787");
var _defaultSxConfig = _interopRequireDefault(require("b647cc6fd4459669"));
const splitProps = (props)=>{
    const result = {
        systemProps: {},
        otherProps: {}
    };
    const config = props?.theme?.unstable_sxConfig ?? _defaultSxConfig.default;
    Object.keys(props).forEach((prop)=>{
        if (config[prop]) result.systemProps[prop] = props[prop];
        else result.otherProps[prop] = props[prop];
    });
    return result;
};
function extendSxProp(props) {
    const { sx: inSx, ...other } = props;
    const { systemProps, otherProps } = splitProps(other);
    let finalSx;
    if (Array.isArray(inSx)) finalSx = [
        systemProps,
        ...inSx
    ];
    else if (typeof inSx === 'function') finalSx = (...args)=>{
        const result = inSx(...args);
        if (!(0, _deepmerge.isPlainObject)(result)) return systemProps;
        return {
            ...systemProps,
            ...result
        };
    };
    else finalSx = {
        ...systemProps,
        ...inSx
    };
    return {
        ...otherProps,
        sx: finalSx
    };
}

},{"87b2fb8bb141f448":"1P3rZ","5c6e7a57f2743787":"bLPf1","b647cc6fd4459669":"4f7E8"}],"dhKZY":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("d9ce763f7b929c20").default;
var _interopRequireDefault = require("4ca1ae3b8db86e4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _formatMuiErrorMessage = _interopRequireDefault(require("2ce25b3954411343"));
var _deepmerge = _interopRequireDefault(require("dfbc1ae367572d65"));
var _styleFunctionSx = _interopRequireWildcard(require("bc903d7f62929142"));
var _createTheme = _interopRequireDefault(require("b30260b8d167117"));
var _generateUtilityClass = _interopRequireDefault(require("cc7616ad38094a17"));
var _createMixins = _interopRequireDefault(require("6738902b69256df3"));
var _createPalette = _interopRequireDefault(require("e87ac0dc0f47e984"));
var _createTypography = _interopRequireDefault(require("eacfc05dd7822340"));
var _shadows = _interopRequireDefault(require("720618e07ac7b6c0"));
var _createTransitions = _interopRequireDefault(require("81833621a096484c"));
var _zIndex = _interopRequireDefault(require("b63c3c17828ab144"));
var _stringifyTheme = require("402a5e9a32837486");
function createThemeNoVars(options = {}, ...args) {
    const { breakpoints: breakpointsInput, mixins: mixinsInput = {}, spacing: spacingInput, palette: paletteInput = {}, transitions: transitionsInput = {}, typography: typographyInput = {}, shape: shapeInput, ...other } = options;
    if (options.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
    // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
    options.generateThemeVars === undefined) throw new Error("MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature.");
    const palette = (0, _createPalette.default)(paletteInput);
    const systemTheme = (0, _createTheme.default)(options);
    let muiTheme = (0, _deepmerge.default)(systemTheme, {
        mixins: (0, _createMixins.default)(systemTheme.breakpoints, mixinsInput),
        palette,
        // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
        shadows: _shadows.default.slice(),
        typography: (0, _createTypography.default)(palette, typographyInput),
        transitions: (0, _createTransitions.default)(transitionsInput),
        zIndex: {
            ..._zIndex.default
        }
    });
    muiTheme = (0, _deepmerge.default)(muiTheme, other);
    muiTheme = args.reduce((acc, argument)=>(0, _deepmerge.default)(acc, argument), muiTheme);
    {
        // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.
        const stateClasses = [
            'active',
            'checked',
            'completed',
            'disabled',
            'error',
            'expanded',
            'focused',
            'focusVisible',
            'required',
            'selected'
        ];
        const traverse = (node, component)=>{
            let key;
            // eslint-disable-next-line guard-for-in
            for(key in node){
                const child = node[key];
                if (stateClasses.includes(key) && Object.keys(child).length > 0) {
                    {
                        const stateClass = (0, _generateUtilityClass.default)('', key);
                        console.error([
                            `MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`,
                            'You can not override it like this: ',
                            JSON.stringify(node, null, 2),
                            '',
                            `Instead, you need to use the '&.${stateClass}' syntax:`,
                            JSON.stringify({
                                root: {
                                    [`&.${stateClass}`]: child
                                }
                            }, null, 2),
                            '',
                            'https://mui.com/r/state-classes-guide'
                        ].join('\n'));
                    }
                    // Remove the style to prevent global conflicts.
                    node[key] = {};
                }
            }
        };
        Object.keys(muiTheme.components).forEach((component)=>{
            const styleOverrides = muiTheme.components[component].styleOverrides;
            if (styleOverrides && component.startsWith('Mui')) traverse(styleOverrides, component);
        });
    }
    muiTheme.unstable_sxConfig = {
        ..._styleFunctionSx.unstable_defaultSxConfig,
        ...other?.unstable_sxConfig
    };
    muiTheme.unstable_sx = function sx(props) {
        return (0, _styleFunctionSx.default)({
            sx: props,
            theme: this
        });
    };
    muiTheme.toRuntimeSource = _stringifyTheme.stringifyTheme; // for Pigment CSS integration
    return muiTheme;
}
var _default = exports.default = createThemeNoVars;

},{"d9ce763f7b929c20":"6TFJp","4ca1ae3b8db86e4":"1P3rZ","2ce25b3954411343":"cXsuk","dfbc1ae367572d65":"bLPf1","bc903d7f62929142":"3qmy1","b30260b8d167117":"kryy7","cc7616ad38094a17":"iAc9p","6738902b69256df3":"2RmTc","e87ac0dc0f47e984":"6gFd1","eacfc05dd7822340":"iYA5e","720618e07ac7b6c0":"kLBXl","81833621a096484c":"kquFJ","b63c3c17828ab144":"rQjwg","402a5e9a32837486":"gfY4l"}],"kryy7":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("dd1c30bf430b5bba").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _createTheme.default;
    }
});
Object.defineProperty(exports, "private_createBreakpoints", {
    enumerable: true,
    get: function() {
        return _createBreakpoints.default;
    }
});
Object.defineProperty(exports, "unstable_applyStyles", {
    enumerable: true,
    get: function() {
        return _applyStyles.default;
    }
});
var _createTheme = _interopRequireDefault(require("bdc18df69795eaba"));
var _createBreakpoints = _interopRequireDefault(require("48b86d2ba11b61d7"));
var _applyStyles = _interopRequireDefault(require("a63ca49c1a3790b7"));

},{"dd1c30bf430b5bba":"1P3rZ","bdc18df69795eaba":"ee3Pj","48b86d2ba11b61d7":"k5Ify","a63ca49c1a3790b7":"gMzgD"}],"ee3Pj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a7a69b6314ef6820").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _deepmerge = _interopRequireDefault(require("f08de1e574d96be4"));
var _createBreakpoints = _interopRequireDefault(require("fef76d655aaa132e"));
var _cssContainerQueries = _interopRequireDefault(require("83f3137514b70a38"));
var _shape = _interopRequireDefault(require("e487320954df9b05"));
var _createSpacing = _interopRequireDefault(require("4a83e44bc56a5742"));
var _styleFunctionSx = _interopRequireDefault(require("5ae03db25d336f5a"));
var _defaultSxConfig = _interopRequireDefault(require("e9031ccc4da151b1"));
var _applyStyles = _interopRequireDefault(require("555272fc77b24fc5"));
function createTheme(options = {}, ...args) {
    const { breakpoints: breakpointsInput = {}, palette: paletteInput = {}, spacing: spacingInput, shape: shapeInput = {}, ...other } = options;
    const breakpoints = (0, _createBreakpoints.default)(breakpointsInput);
    const spacing = (0, _createSpacing.default)(spacingInput);
    let muiTheme = (0, _deepmerge.default)({
        breakpoints,
        direction: 'ltr',
        components: {},
        // Inject component definitions.
        palette: {
            mode: 'light',
            ...paletteInput
        },
        spacing,
        shape: {
            ..._shape.default,
            ...shapeInput
        }
    }, other);
    muiTheme = (0, _cssContainerQueries.default)(muiTheme);
    muiTheme.applyStyles = _applyStyles.default;
    muiTheme = args.reduce((acc, argument)=>(0, _deepmerge.default)(acc, argument), muiTheme);
    muiTheme.unstable_sxConfig = {
        ..._defaultSxConfig.default,
        ...other?.unstable_sxConfig
    };
    muiTheme.unstable_sx = function sx(props) {
        return (0, _styleFunctionSx.default)({
            sx: props,
            theme: this
        });
    };
    return muiTheme;
}
var _default = exports.default = createTheme;

},{"a7a69b6314ef6820":"1P3rZ","f08de1e574d96be4":"bLPf1","fef76d655aaa132e":"k5Ify","83f3137514b70a38":"6Ko3S","e487320954df9b05":"foDcD","4a83e44bc56a5742":"xzviA","5ae03db25d336f5a":"b0FDg","e9031ccc4da151b1":"4f7E8","555272fc77b24fc5":"gMzgD"}],"foDcD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const shape = {
    borderRadius: 4
};
var _default = exports.default = shape;

},{}],"xzviA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createSpacing;
var _spacing = require("2efeaeaa34925f80");
// The different signatures imply different meaning for their arguments that can't be expressed structurally.
// We express the difference with variable names.
function createSpacing(spacingInput = 8, // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
// Smaller components, such as icons, can align to a 4dp grid.
// https://m2.material.io/design/layout/understanding-layout.html
transform = (0, _spacing.createUnarySpacing)({
    spacing: spacingInput
})) {
    // Already transformed.
    if (spacingInput.mui) return spacingInput;
    const spacing = (...argsInput)=>{
        if (!(argsInput.length <= 4)) console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
        const args = argsInput.length === 0 ? [
            1
        ] : argsInput;
        return args.map((argument)=>{
            const output = transform(argument);
            return typeof output === 'number' ? `${output}px` : output;
        }).join(' ');
    };
    spacing.mui = true;
    return spacing;
}

},{"2efeaeaa34925f80":"cUfeI"}],"gMzgD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = applyStyles;
/**
 * A universal utility to style components with multiple color modes. Always use it from the theme object.
 * It works with:
 *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)
 *  - [CSS theme variables](https://mui.com/material-ui/customization/css-theme-variables/overview/)
 *  - Zero-runtime engine
 *
 * Tips: Use an array over object spread and place `theme.applyStyles()` last.
 *
 * With the styled function:
 * ✅ [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]
 * 🚫 { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}
 *
 * With the sx prop:
 * ✅ [{ background: '#e5e5e5' }, theme => theme.applyStyles('dark', { background: '#1c1c1c' })]
 * 🚫 { background: '#e5e5e5', ...theme => theme.applyStyles('dark', { background: '#1c1c1c' })}
 *
 * @example
 * 1. using with `styled`:
 * ```jsx
 *   const Component = styled('div')(({ theme }) => [
 *     { background: '#e5e5e5' },
 *     theme.applyStyles('dark', {
 *       background: '#1c1c1c',
 *       color: '#fff',
 *     }),
 *   ]);
 * ```
 *
 * @example
 * 2. using with `sx` prop:
 * ```jsx
 *   <Box sx={[
 *     { background: '#e5e5e5' },
 *     theme => theme.applyStyles('dark', {
 *        background: '#1c1c1c',
 *        color: '#fff',
 *      }),
 *     ]}
 *   />
 * ```
 *
 * @example
 * 3. theming a component:
 * ```jsx
 *   extendTheme({
 *     components: {
 *       MuiButton: {
 *         styleOverrides: {
 *           root: ({ theme }) => [
 *             { background: '#e5e5e5' },
 *             theme.applyStyles('dark', {
 *               background: '#1c1c1c',
 *               color: '#fff',
 *             }),
 *           ],
 *         },
 *       }
 *     }
 *   })
 *```
 */ function applyStyles(key, styles) {
    // @ts-expect-error this is 'any' type
    const theme = this;
    if (theme.vars) {
        if (!theme.colorSchemes?.[key] || typeof theme.getColorSchemeSelector !== 'function') return {};
        // If CssVarsProvider is used as a provider, returns '*:where({selector}) &'
        let selector = theme.getColorSchemeSelector(key);
        if (selector === '&') return styles;
        if (selector.includes('data-') || selector.includes('.')) // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)
        selector = `*:where(${selector.replace(/\s*&$/, '')}) &`;
        return {
            [selector]: styles
        };
    }
    if (theme.palette.mode === key) return styles;
    return {};
}

},{}],"2RmTc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createMixins;
function createMixins(breakpoints, mixins) {
    return {
        toolbar: {
            minHeight: 56,
            [breakpoints.up('xs')]: {
                '@media (orientation: landscape)': {
                    minHeight: 48
                }
            },
            [breakpoints.up('sm')]: {
                minHeight: 64
            }
        },
        ...mixins
    };
}

},{}],"iYA5e":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("75255ca3acc1f720").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createTypography;
var _deepmerge = _interopRequireDefault(require("cacbc6b8de202000"));
function round(value) {
    return Math.round(value * 1e5) / 1e5;
}
const caseAllCaps = {
    textTransform: 'uppercase'
};
const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
/**
 * @see @link{https://m2.material.io/design/typography/the-type-system.html}
 * @see @link{https://m2.material.io/design/typography/understanding-typography.html}
 */ function createTypography(palette, typography) {
    const { fontFamily = defaultFontFamily, // The default font size of the Material Specification.
    fontSize = 14, // px
    fontWeightLight = 300, fontWeightRegular = 400, fontWeightMedium = 500, fontWeightBold = 700, // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize = 16, // Apply the CSS properties to all the variants.
    allVariants, pxToRem: pxToRem2, ...other } = typeof typography === 'function' ? typography(palette) : typography;
    if (typeof fontSize !== 'number') console.error('MUI: `fontSize` is required to be a number.');
    if (typeof htmlFontSize !== 'number') console.error('MUI: `htmlFontSize` is required to be a number.');
    const coef = fontSize / 14;
    const pxToRem = pxToRem2 || ((size)=>`${size / htmlFontSize * coef}rem`);
    const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing)=>({
            fontFamily,
            fontWeight,
            fontSize: pxToRem(size),
            // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
            lineHeight,
            // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
            // across font-families can cause issues with the kerning.
            ...fontFamily === defaultFontFamily ? {
                letterSpacing: `${round(letterSpacing / size)}em`
            } : {},
            ...casing,
            ...allVariants
        });
    const variants = {
        h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
        h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
        h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
        h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
        h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
        h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
        subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
        subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
        body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
        body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
        button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
        caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
        overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
        // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
        inherit: {
            fontFamily: 'inherit',
            fontWeight: 'inherit',
            fontSize: 'inherit',
            lineHeight: 'inherit',
            letterSpacing: 'inherit'
        }
    };
    return (0, _deepmerge.default)({
        htmlFontSize,
        pxToRem,
        fontFamily,
        fontSize,
        fontWeightLight,
        fontWeightRegular,
        fontWeightMedium,
        fontWeightBold,
        ...variants
    }, other, {
        clone: false // No need to clone deep
    });
}

},{"75255ca3acc1f720":"1P3rZ","cacbc6b8de202000":"bLPf1"}],"kLBXl":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const shadowKeyUmbraOpacity = 0.2;
const shadowKeyPenumbraOpacity = 0.14;
const shadowAmbientShadowOpacity = 0.12;
function createShadow(...px) {
    return [
        `${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`,
        `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`,
        `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`
    ].join(',');
}
// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
const shadows = [
    'none',
    createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
    createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
    createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
    createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
    createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
    createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
    createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
    createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
    createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
    createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
    createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
    createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
    createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
    createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
    createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
    createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
    createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
    createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
    createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
    createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
    createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
    createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
    createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
    createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)
];
var _default = exports.default = shadows;

},{}],"kquFJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createTransitions;
exports.easing = exports.duration = void 0;
// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.
const easing = exports.easing = {
    // This is the most common easing curve.
    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
    // Objects enter the screen at full velocity from off-screen and
    // slowly decelerate to a resting point.
    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
    // Objects leave the screen at full velocity. They do not decelerate when off-screen.
    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
    // The sharp curve is used by objects that may return to the screen at any time.
    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
};
// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing
const duration = exports.duration = {
    shortest: 150,
    shorter: 200,
    short: 250,
    // most basic recommended timing
    standard: 300,
    // this is to be used in complex animations
    complex: 375,
    // recommended when something is entering screen
    enteringScreen: 225,
    // recommended when something is leaving screen
    leavingScreen: 195
};
function formatMs(milliseconds) {
    return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height) {
    if (!height) return 0;
    const constant = height / 36;
    // https://www.desmos.com/calculator/vbrp3ggqet
    return Math.min(Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10), 3000);
}
function createTransitions(inputTransitions) {
    const mergedEasing = {
        ...easing,
        ...inputTransitions.easing
    };
    const mergedDuration = {
        ...duration,
        ...inputTransitions.duration
    };
    const create = (props = [
        'all'
    ], options = {})=>{
        const { duration: durationOption = mergedDuration.standard, easing: easingOption = mergedEasing.easeInOut, delay = 0, ...other } = options;
        {
            const isString = (value)=>typeof value === 'string';
            const isNumber = (value)=>!Number.isNaN(parseFloat(value));
            if (!isString(props) && !Array.isArray(props)) console.error('MUI: Argument "props" must be a string or Array.');
            if (!isNumber(durationOption) && !isString(durationOption)) console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
            if (!isString(easingOption)) console.error('MUI: Argument "easing" must be a string.');
            if (!isNumber(delay) && !isString(delay)) console.error('MUI: Argument "delay" must be a number or a string.');
            if (typeof options !== 'object') console.error([
                'MUI: Secong argument of transition.create must be an object.',
                "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"
            ].join('\n'));
            if (Object.keys(other).length !== 0) console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);
        }
        return (Array.isArray(props) ? props : [
            props
        ]).map((animatedProp)=>`${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');
    };
    return {
        getAutoHeightDuration,
        create,
        ...inputTransitions,
        easing: mergedEasing,
        duration: mergedDuration
    };
}

},{}],"rQjwg":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
// We need to centralize the zIndex definitions as they work
// like global values in the browser.
const zIndex = {
    mobileStepper: 1000,
    fab: 1050,
    speedDial: 1050,
    appBar: 1100,
    drawer: 1200,
    modal: 1300,
    snackbar: 1400,
    tooltip: 1500
};
var _default = exports.default = zIndex;

},{}],"gfY4l":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stringifyTheme = stringifyTheme;
var _deepmerge = require("252af5ceea3ec102");
/* eslint-disable import/prefer-default-export */ function isSerializable(val) {
    return (0, _deepmerge.isPlainObject)(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);
}
/**
 * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.
 *
 * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS
 * For example, in a Next.js project:
 *
 * ```js
 * // next.config.js
 * const { extendTheme } = require('@mui/material/styles');
 *
 * const theme = extendTheme();
 * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.
 * theme.toRuntimeSource = stringifyTheme;
 *
 * module.exports = withPigment({
 *  theme,
 * });
 * ```
 */ function stringifyTheme(baseTheme = {}) {
    const serializableTheme = {
        ...baseTheme
    };
    function serializeTheme(object) {
        const array = Object.entries(object);
        // eslint-disable-next-line no-plusplus
        for(let index = 0; index < array.length; index++){
            const [key, value] = array[index];
            if (!isSerializable(value) || key.startsWith('unstable_')) delete object[key];
            else if ((0, _deepmerge.isPlainObject)(value)) {
                object[key] = {
                    ...value
                };
                serializeTheme(object[key]);
            }
        }
    }
    serializeTheme(serializableTheme);
    return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(serializableTheme, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}

},{"252af5ceea3ec102":"bLPf1"}],"4jSXe":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("618e944942a678bc").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createColorScheme;
exports.getOpacity = getOpacity;
exports.getOverlays = getOverlays;
var _createPalette = _interopRequireDefault(require("d85774e08ce63ca1"));
var _getOverlayAlpha = _interopRequireDefault(require("37ea8458a36a9021"));
const defaultDarkOverlays = [
    ...Array(25)
].map((_, index)=>{
    if (index === 0) return 'none';
    const overlay = (0, _getOverlayAlpha.default)(index);
    return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;
});
function getOpacity(mode) {
    return {
        inputPlaceholder: mode === 'dark' ? 0.5 : 0.42,
        inputUnderline: mode === 'dark' ? 0.7 : 0.42,
        switchTrackDisabled: mode === 'dark' ? 0.2 : 0.12,
        switchTrack: mode === 'dark' ? 0.3 : 0.38
    };
}
function getOverlays(mode) {
    return mode === 'dark' ? defaultDarkOverlays : [];
}
function createColorScheme(options) {
    const { palette: paletteInput = {
        mode: 'light'
    }, // need to cast to avoid module augmentation test
    opacity, overlays, ...rest } = options;
    const palette = (0, _createPalette.default)(paletteInput);
    return {
        palette,
        opacity: {
            ...getOpacity(palette.mode),
            ...opacity
        },
        overlays: overlays || getOverlays(palette.mode),
        ...rest
    };
}

},{"618e944942a678bc":"1P3rZ","d85774e08ce63ca1":"6gFd1","37ea8458a36a9021":"gVmXd"}],"gVmXd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getOverlayAlpha;
// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61
function getOverlayAlpha(elevation) {
    let alphaValue;
    if (elevation < 1) alphaValue = 5.11916 * elevation ** 2;
    else alphaValue = 4.5 * Math.log(elevation + 1) + 2;
    return Math.round(alphaValue * 10) / 1000;
}

},{}],"4q7TV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = shouldSkipGeneratingVar;
function shouldSkipGeneratingVar(keys) {
    return !!keys[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!keys[0].match(/sxConfig$/) || // ends with sxConfig
    keys[0] === 'palette' && !!keys[1]?.match(/(mode|contrastThreshold|tonalOffset)/);
}

},{}],"5tahi":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d6ca57478bef72be").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _excludeVariablesFromRoot = _interopRequireDefault(require("85ae86ef6d080de1"));
var _default = (theme)=>(colorScheme, css)=>{
        const root = theme.rootSelector || ':root';
        const selector = theme.colorSchemeSelector;
        let rule = selector;
        if (selector === 'class') rule = '.%s';
        if (selector === 'data') rule = '[data-%s]';
        if (selector?.startsWith('data-') && !selector.includes('%s')) // 'data-mui-color-scheme' -> '[data-mui-color-scheme="%s"]'
        rule = `[${selector}="%s"]`;
        if (theme.defaultColorScheme === colorScheme) {
            if (colorScheme === 'dark') {
                const excludedVariables = {};
                (0, _excludeVariablesFromRoot.default)(theme.cssVarPrefix).forEach((cssVar)=>{
                    excludedVariables[cssVar] = css[cssVar];
                    delete css[cssVar];
                });
                if (rule === 'media') return {
                    [root]: css,
                    [`@media (prefers-color-scheme: dark)`]: {
                        [root]: excludedVariables
                    }
                };
                if (rule) return {
                    [rule.replace('%s', colorScheme)]: excludedVariables,
                    [`${root}, ${rule.replace('%s', colorScheme)}`]: css
                };
                return {
                    [root]: {
                        ...css,
                        ...excludedVariables
                    }
                };
            }
            if (rule && rule !== 'media') return `${root}, ${rule.replace('%s', String(colorScheme))}`;
        } else if (colorScheme) {
            if (rule === 'media') return {
                [`@media (prefers-color-scheme: ${String(colorScheme)})`]: {
                    [root]: css
                }
            };
            if (rule) return rule.replace('%s', String(colorScheme));
        }
        return root;
    };
exports.default = _default;

},{"d6ca57478bef72be":"1P3rZ","85ae86ef6d080de1":"bxBFd"}],"bxBFd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
/**
 * @internal These variables should not appear in the :root stylesheet when the `defaultColorScheme="dark"`
 */ const excludeVariablesFromRoot = (cssVarPrefix)=>[
        ...[
            ...Array(25)
        ].map((_, index)=>`--${cssVarPrefix ? `${cssVarPrefix}-` : ''}overlays-${index}`),
        `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkBg`,
        `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkColor`
    ];
var _default = exports.default = excludeVariablesFromRoot;

},{}],"8fLO4":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f0500c51d91f5f68").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createMuiStrictModeTheme;
var _deepmerge = _interopRequireDefault(require("bac7ee1d4630c8a4"));
var _createTheme = _interopRequireDefault(require("8175099ea82f8d89"));
function createMuiStrictModeTheme(options, ...args) {
    return (0, _createTheme.default)((0, _deepmerge.default)({
        unstable_strictMode: true
    }, options), ...args);
}

},{"f0500c51d91f5f68":"1P3rZ","bac7ee1d4630c8a4":"bLPf1","8175099ea82f8d89":"a1TKj"}],"e3r46":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createStyles;
let warnedOnce = false;
// To remove in v6
function createStyles(styles) {
    if (!warnedOnce) {
        console.warn([
            'MUI: createStyles from @mui/material/styles is deprecated.',
            'Please use @mui/styles/createStyles'
        ].join('\n'));
        warnedOnce = true;
    }
    return styles;
}

},{}],"btihx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.alignProperty = alignProperty;
exports.convertLength = convertLength;
exports.fontGrid = fontGrid;
exports.getUnit = getUnit;
exports.isUnitless = isUnitless;
exports.responsiveProperty = responsiveProperty;
exports.toUnitless = toUnitless;
function isUnitless(value) {
    return String(parseFloat(value)).length === String(value).length;
}
// Ported from Compass
// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss
// Emulate the sass function "unit"
function getUnit(input) {
    return String(input).match(/[\d.\-+]*\s*(.*)/)[1] || '';
}
// Emulate the sass function "unitless"
function toUnitless(length) {
    return parseFloat(length);
}
// Convert any CSS <length> or <percentage> value to any another.
// From https://github.com/KyleAMathews/convert-css-length
function convertLength(baseFontSize) {
    return (length, toUnit)=>{
        const fromUnit = getUnit(length);
        // Optimize for cases where `from` and `to` units are accidentally the same.
        if (fromUnit === toUnit) return length;
        // Convert input length to pixels.
        let pxLength = toUnitless(length);
        if (fromUnit !== 'px') {
            if (fromUnit === 'em') pxLength = toUnitless(length) * toUnitless(baseFontSize);
            else if (fromUnit === 'rem') pxLength = toUnitless(length) * toUnitless(baseFontSize);
        }
        // Convert length in pixels to the output unit
        let outputLength = pxLength;
        if (toUnit !== 'px') {
            if (toUnit === 'em') outputLength = pxLength / toUnitless(baseFontSize);
            else if (toUnit === 'rem') outputLength = pxLength / toUnitless(baseFontSize);
            else return length;
        }
        return parseFloat(outputLength.toFixed(5)) + toUnit;
    };
}
function alignProperty({ size, grid }) {
    const sizeBelow = size - size % grid;
    const sizeAbove = sizeBelow + grid;
    return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;
}
// fontGrid finds a minimal grid (in rem) for the fontSize values so that the
// lineHeight falls under a x pixels grid, 4px in the case of Material Design,
// without changing the relative line height
function fontGrid({ lineHeight, pixels, htmlFontSize }) {
    return pixels / (lineHeight * htmlFontSize);
}
/**
 * generate a responsive version of a given CSS property
 * @example
 * responsiveProperty({
 *   cssProperty: 'fontSize',
 *   min: 15,
 *   max: 20,
 *   unit: 'px',
 *   breakpoints: [300, 600],
 * })
 *
 * // this returns
 *
 * {
 *   fontSize: '15px',
 *   '@media (min-width:300px)': {
 *     fontSize: '17.5px',
 *   },
 *   '@media (min-width:600px)': {
 *     fontSize: '20px',
 *   },
 * }
 * @param {Object} params
 * @param {string} params.cssProperty - The CSS property to be made responsive
 * @param {number} params.min - The smallest value of the CSS property
 * @param {number} params.max - The largest value of the CSS property
 * @param {string} [params.unit] - The unit to be used for the CSS property
 * @param {Array.number} [params.breakpoints]  - An array of breakpoints
 * @param {number} [params.alignStep] - Round scaled value to fall under this grid
 * @returns {Object} responsive styles for {params.cssProperty}
 */ function responsiveProperty({ cssProperty, min, max, unit = 'rem', breakpoints = [
    600,
    900,
    1200
], transform = null }) {
    const output = {
        [cssProperty]: `${min}${unit}`
    };
    const factor = (max - min) / breakpoints[breakpoints.length - 1];
    breakpoints.forEach((breakpoint)=>{
        let value = min + factor * breakpoint;
        if (transform !== null) value = transform(value);
        output[`@media (min-width:${breakpoint}px)`] = {
            [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`
        };
    });
    return output;
}

},{}],"6wsxG":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6abea5402ef82489").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = responsiveFontSizes;
var _formatMuiErrorMessage = _interopRequireDefault(require("ce2f38ea61eee0ac"));
var _cssUtils = require("4eca37b22368d6d4");
function responsiveFontSizes(themeInput, options = {}) {
    const { breakpoints = [
        'sm',
        'md',
        'lg'
    ], disableAlign = false, factor = 2, variants = [
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'subtitle1',
        'subtitle2',
        'body1',
        'body2',
        'caption',
        'button',
        'overline'
    ] } = options;
    const theme = {
        ...themeInput
    };
    theme.typography = {
        ...theme.typography
    };
    const typography = theme.typography;
    // Convert between CSS lengths e.g. em->px or px->rem
    // Set the baseFontSize for your project. Defaults to 16px (also the browser default).
    const convert = (0, _cssUtils.convertLength)(typography.htmlFontSize);
    const breakpointValues = breakpoints.map((x)=>theme.breakpoints.values[x]);
    variants.forEach((variant)=>{
        const style = typography[variant];
        if (!style) return;
        const remFontSize = parseFloat(convert(style.fontSize, 'rem'));
        if (remFontSize <= 1) return;
        const maxFontSize = remFontSize;
        const minFontSize = 1 + (maxFontSize - 1) / factor;
        let { lineHeight } = style;
        if (!(0, _cssUtils.isUnitless)(lineHeight) && !disableAlign) throw new Error("MUI: Unsupported non-unitless line height with grid alignment.\nUse unitless line heights instead.");
        if (!(0, _cssUtils.isUnitless)(lineHeight)) // make it unitless
        lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);
        let transform = null;
        if (!disableAlign) transform = (value)=>(0, _cssUtils.alignProperty)({
                size: value,
                grid: (0, _cssUtils.fontGrid)({
                    pixels: 4,
                    lineHeight,
                    htmlFontSize: typography.htmlFontSize
                })
            });
        typography[variant] = {
            ...style,
            ...(0, _cssUtils.responsiveProperty)({
                cssProperty: 'fontSize',
                min: minFontSize,
                max: maxFontSize,
                unit: 'rem',
                breakpoints: breakpointValues,
                transform
            })
        };
    });
    return theme;
}

},{"6abea5402ef82489":"1P3rZ","ce2f38ea61eee0ac":"cXsuk","4eca37b22368d6d4":"btihx"}],"03DWO":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("61e03a0156e416a1").default;
var _interopRequireWildcard = require("6ffa06d021160115").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useTheme;
var React = _interopRequireWildcard(require("8a40016487b63d87"));
var _system = require("457df495ffa84322");
var _defaultTheme = _interopRequireDefault(require("63ebbe502362c7c9"));
var _identifier = _interopRequireDefault(require("81c53f68f8a78aa5"));
function useTheme() {
    const theme = (0, _system.useTheme)(_defaultTheme.default);
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React.useDebugValue(theme);
    return theme[_identifier.default] || theme;
}

},{"61e03a0156e416a1":"1P3rZ","6ffa06d021160115":"6TFJp","8a40016487b63d87":"jMk1U","457df495ffa84322":"1WaIj","63ebbe502362c7c9":"dsVJp","81c53f68f8a78aa5":"6SSma"}],"dsVJp":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("c992951b753a9ab3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _createTheme = _interopRequireDefault(require("e0a3c219f881eb2a"));
const defaultTheme = (0, _createTheme.default)();
var _default = exports.default = defaultTheme;

},{"c992951b753a9ab3":"1P3rZ","e0a3c219f881eb2a":"a1TKj"}],"iFNHX":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("e55debba6a3a698f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useThemeProps;
var _useThemeProps = _interopRequireDefault(require("f37c43e4f51955ae"));
var _defaultTheme = _interopRequireDefault(require("76daab5ec9258913"));
var _identifier = _interopRequireDefault(require("f7d86afa37ac55f0"));
function useThemeProps({ props, name }) {
    return (0, _useThemeProps.default)({
        props,
        name,
        defaultTheme: _defaultTheme.default,
        themeId: _identifier.default
    });
}

},{"e55debba6a3a698f":"1P3rZ","f37c43e4f51955ae":"l068H","76daab5ec9258913":"dsVJp","f7d86afa37ac55f0":"6SSma"}],"l068H":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("1c909ce09236dc56").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useThemeProps.default;
    }
});
Object.defineProperty(exports, "getThemeProps", {
    enumerable: true,
    get: function() {
        return _getThemeProps.default;
    }
});
var _useThemeProps = _interopRequireDefault(require("9ae2857601959f0a"));
var _getThemeProps = _interopRequireDefault(require("a3e4fe27a5e6a7f4"));

},{"1c909ce09236dc56":"1P3rZ","9ae2857601959f0a":"aDaxt","a3e4fe27a5e6a7f4":"cyqcd"}],"aDaxt":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("267804c15a5e3f7a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useThemeProps;
var _getThemeProps = _interopRequireDefault(require("dc2d62e4900991ca"));
var _useTheme = _interopRequireDefault(require("ebc6b593badac40c"));
function useThemeProps({ props, name, defaultTheme, themeId }) {
    let theme = (0, _useTheme.default)(defaultTheme);
    if (themeId) theme = theme[themeId] || theme;
    return (0, _getThemeProps.default)({
        theme,
        name,
        props
    });
}

},{"267804c15a5e3f7a":"1P3rZ","dc2d62e4900991ca":"cyqcd","ebc6b593badac40c":"9bObT"}],"cyqcd":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("76bf39b56103a8b1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getThemeProps;
var _resolveProps = _interopRequireDefault(require("a769613b6a670c93"));
function getThemeProps(params) {
    const { theme, name, props } = params;
    if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) return props;
    return (0, _resolveProps.default)(theme.components[name].defaultProps, props);
}

},{"76bf39b56103a8b1":"1P3rZ","a769613b6a670c93":"hO4GV"}],"9bObT":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("a2c0d6dcb9e05d5e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useTheme.default;
    }
});
var _useTheme = _interopRequireWildcard(require("1e8d72b9c5b75a36"));
Object.keys(_useTheme).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useTheme[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useTheme[key];
        }
    });
});

},{"a2c0d6dcb9e05d5e":"6TFJp","1e8d72b9c5b75a36":"iX5Bx"}],"iX5Bx":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("56d9c0ef8420c115").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.systemDefaultTheme = exports.default = void 0;
var _createTheme = _interopRequireDefault(require("828191d9ac14be9d"));
var _useThemeWithoutDefault = _interopRequireDefault(require("844ae56d568ac095"));
const systemDefaultTheme = exports.systemDefaultTheme = (0, _createTheme.default)();
function useTheme(defaultTheme = systemDefaultTheme) {
    return (0, _useThemeWithoutDefault.default)(defaultTheme);
}
var _default = exports.default = useTheme;

},{"56d9c0ef8420c115":"1P3rZ","828191d9ac14be9d":"kryy7","844ae56d568ac095":"2vDOS"}],"gU1yq":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("46f194eea215b25b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
Object.defineProperty(exports, "rootShouldForwardProp", {
    enumerable: true,
    get: function() {
        return _rootShouldForwardProp.default;
    }
});
Object.defineProperty(exports, "slotShouldForwardProp", {
    enumerable: true,
    get: function() {
        return _slotShouldForwardProp.default;
    }
});
var _createStyled = _interopRequireDefault(require("7541497f21100948"));
var _defaultTheme = _interopRequireDefault(require("a51c70a755109123"));
var _identifier = _interopRequireDefault(require("e01ea68023bdabf7"));
var _rootShouldForwardProp = _interopRequireDefault(require("b52a4685664121c4"));
var _slotShouldForwardProp = _interopRequireDefault(require("c865ce001be73693"));
const styled = (0, _createStyled.default)({
    themeId: _identifier.default,
    defaultTheme: _defaultTheme.default,
    rootShouldForwardProp: _rootShouldForwardProp.default
});
var _default = exports.default = styled;

},{"46f194eea215b25b":"1P3rZ","7541497f21100948":"8Psnj","a51c70a755109123":"dsVJp","e01ea68023bdabf7":"6SSma","b52a4685664121c4":"5Hs5J","c865ce001be73693":"iWX0F"}],"8Psnj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("d3fcf02e78575e2e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _createStyled.default;
    }
});
var _createStyled = _interopRequireWildcard(require("5f89072a663e921"));
Object.keys(_createStyled).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _createStyled[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _createStyled[key];
        }
    });
});

},{"d3fcf02e78575e2e":"6TFJp","5f89072a663e921":"fcmem"}],"fcmem":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6133cdf82f560f08").default;
var _interopRequireWildcard = require("b44a5c6928314bca").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createStyled;
exports.shouldForwardProp = shouldForwardProp;
exports.systemDefaultTheme = void 0;
var _styledEngine = _interopRequireWildcard(require("766c6067aca00c60"));
var _deepmerge = require("769865f2cfbbcf39");
var _capitalize = _interopRequireDefault(require("172c5cc1504f511f"));
var _getDisplayName = _interopRequireDefault(require("8c6347b34f380bc1"));
var _createTheme = _interopRequireDefault(require("332771a3a6457326"));
var _styleFunctionSx = _interopRequireDefault(require("6d6fee53ff3c0e51"));
var _preprocessStyles = _interopRequireDefault(require("ac41deb8895ce74c"));
/* eslint-disable no-underscore-dangle */ /* eslint-disable no-labels */ /* eslint-disable no-lone-blocks */ const systemDefaultTheme = exports.systemDefaultTheme = (0, _createTheme.default)();
// Update /system/styled/#api in case if this changes
function shouldForwardProp(prop) {
    return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
function defaultOverridesResolver(slot) {
    if (!slot) return null;
    return (_props, styles)=>styles[slot];
}
function attachTheme(props, themeId, defaultTheme) {
    props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;
}
function processStyle(props, style) {
    /*
   * Style types:
   *  - null/undefined
   *  - string
   *  - CSS style object: { [cssKey]: [cssValue], variants }
   *  - Processed style object: { style, variants, isProcessed: true }
   *  - Array of any of the above
   */ const resolvedStyle = typeof style === 'function' ? style(props) : style;
    if (Array.isArray(resolvedStyle)) return resolvedStyle.flatMap((subStyle)=>processStyle(props, subStyle));
    if (Array.isArray(resolvedStyle?.variants)) {
        let rootStyle;
        if (resolvedStyle.isProcessed) rootStyle = resolvedStyle.style;
        else {
            const { variants, ...otherStyles } = resolvedStyle;
            rootStyle = otherStyles;
        }
        return processStyleVariants(props, resolvedStyle.variants, [
            rootStyle
        ]);
    }
    if (resolvedStyle?.isProcessed) return resolvedStyle.style;
    return resolvedStyle;
}
function processStyleVariants(props, variants, results = []) {
    let mergedState; // We might not need it, initialized lazily
    variantLoop: for(let i = 0; i < variants.length; i += 1){
        const variant = variants[i];
        if (typeof variant.props === 'function') {
            mergedState ?? (mergedState = {
                ...props,
                ...props.ownerState,
                ownerState: props.ownerState
            });
            if (!variant.props(mergedState)) continue;
        } else for(const key in variant.props){
            if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) continue variantLoop;
        }
        if (typeof variant.style === 'function') {
            mergedState ?? (mergedState = {
                ...props,
                ...props.ownerState,
                ownerState: props.ownerState
            });
            results.push(variant.style(mergedState));
        } else results.push(variant.style);
    }
    return results;
}
function createStyled(input = {}) {
    const { themeId, defaultTheme = systemDefaultTheme, rootShouldForwardProp = shouldForwardProp, slotShouldForwardProp = shouldForwardProp } = input;
    function styleAttachTheme(props) {
        attachTheme(props, themeId, defaultTheme);
    }
    const styled = (tag, inputOptions = {})=>{
        // If `tag` is already a styled component, filter out the `sx` style function
        // to prevent unnecessary styles generated by the composite components.
        (0, _styledEngine.internal_mutateStyles)(tag, (styles)=>styles.filter((style)=>style !== _styleFunctionSx.default));
        const { name: componentName, slot: componentSlot, skipVariantsResolver: inputSkipVariantsResolver, skipSx: inputSkipSx, // TODO v6: remove `lowercaseFirstLetter()` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)), ...options } = inputOptions;
        // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
        const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : // TODO v6: remove `Root` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;
        const skipSx = inputSkipSx || false;
        let shouldForwardPropOption = shouldForwardProp;
        // TODO v6: remove `Root` in the next major release
        // For more details: https://github.com/mui/material-ui/pull/37908
        if (componentSlot === 'Root' || componentSlot === 'root') shouldForwardPropOption = rootShouldForwardProp;
        else if (componentSlot) // any other slot specified
        shouldForwardPropOption = slotShouldForwardProp;
        else if (isStringTag(tag)) // for string (html) tag, preserve the behavior in emotion & styled-components.
        shouldForwardPropOption = undefined;
        const defaultStyledResolver = (0, _styledEngine.default)(tag, {
            shouldForwardProp: shouldForwardPropOption,
            label: generateStyledLabel(componentName, componentSlot),
            ...options
        });
        const transformStyle = (style)=>{
            // On the server Emotion doesn't use React.forwardRef for creating components, so the created
            // component stays as a function. This condition makes sure that we do not interpolate functions
            // which are basically components used as a selectors.
            if (typeof style === 'function' && style.__emotion_real !== style) return function styleFunctionProcessor(props) {
                return processStyle(props, style);
            };
            if ((0, _deepmerge.isPlainObject)(style)) {
                const serialized = (0, _preprocessStyles.default)(style);
                if (!serialized.variants) return serialized.style;
                return function styleObjectProcessor(props) {
                    return processStyle(props, serialized);
                };
            }
            return style;
        };
        const muiStyledResolver = (...expressionsInput)=>{
            const expressionsHead = [];
            const expressionsBody = expressionsInput.map(transformStyle);
            const expressionsTail = [];
            // Preprocess `props` to set the scoped theme value.
            // This must run before any other expression.
            expressionsHead.push(styleAttachTheme);
            if (componentName && overridesResolver) expressionsTail.push(function styleThemeOverrides(props) {
                const theme = props.theme;
                const styleOverrides = theme.components?.[componentName]?.styleOverrides;
                if (!styleOverrides) return null;
                const resolvedStyleOverrides = {};
                // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly
                // eslint-disable-next-line guard-for-in
                for(const slotKey in styleOverrides)resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey]);
                return overridesResolver(props, resolvedStyleOverrides);
            });
            if (componentName && !skipVariantsResolver) expressionsTail.push(function styleThemeVariants(props) {
                const theme = props.theme;
                const themeVariants = theme?.components?.[componentName]?.variants;
                if (!themeVariants) return null;
                return processStyleVariants(props, themeVariants);
            });
            if (!skipSx) expressionsTail.push(_styleFunctionSx.default);
            // This function can be called as a tagged template, so the first argument would contain
            // CSS `string[]` values.
            if (Array.isArray(expressionsBody[0])) {
                const inputStrings = expressionsBody.shift();
                // We need to add placeholders in the tagged template for the custom functions we have
                // possibly added (attachTheme, overrides, variants, and sx).
                const placeholdersHead = new Array(expressionsHead.length).fill('');
                const placeholdersTail = new Array(expressionsTail.length).fill('');
                let outputStrings;
                outputStrings = [
                    ...placeholdersHead,
                    ...inputStrings,
                    ...placeholdersTail
                ];
                outputStrings.raw = [
                    ...placeholdersHead,
                    ...inputStrings.raw,
                    ...placeholdersTail
                ];
                // The only case where we put something before `attachTheme`
                expressionsHead.unshift(outputStrings);
            }
            const expressions = [
                ...expressionsHead,
                ...expressionsBody,
                ...expressionsTail
            ];
            const Component = defaultStyledResolver(...expressions);
            if (tag.muiName) Component.muiName = tag.muiName;
            Component.displayName = generateDisplayName(componentName, componentSlot, tag);
            return Component;
        };
        if (defaultStyledResolver.withConfig) muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
        return muiStyledResolver;
    };
    return styled;
}
function generateDisplayName(componentName, componentSlot, tag) {
    if (componentName) return `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;
    return `Styled(${(0, _getDisplayName.default)(tag)})`;
}
function generateStyledLabel(componentName, componentSlot) {
    let label;
    if (componentName) // TODO v6: remove `lowercaseFirstLetter()` in the next major release
    // For more details: https://github.com/mui/material-ui/pull/37908
    label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;
    return label;
}
function isObjectEmpty(object) {
    // eslint-disable-next-line
    for(const _ in object)return false;
    return true;
}
// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
function isStringTag(tag) {
    return typeof tag === 'string' && // 96 is one less than the char code
    // for "a" so this is checking that
    // it's a lowercase character
    tag.charCodeAt(0) > 96;
}
function lowercaseFirstLetter(string) {
    if (!string) return string;
    return string.charAt(0).toLowerCase() + string.slice(1);
}

},{"6133cdf82f560f08":"1P3rZ","b44a5c6928314bca":"6TFJp","766c6067aca00c60":"g3Wsb","769865f2cfbbcf39":"bLPf1","172c5cc1504f511f":"igOKi","8c6347b34f380bc1":"jMnwf","332771a3a6457326":"kryy7","6d6fee53ff3c0e51":"3qmy1","ac41deb8895ce74c":"4FtSE"}],"4FtSE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = preprocessStyles;
var _styledEngine = require("83fa6b8ae50c7fe5");
function preprocessStyles(input) {
    const { variants, ...style } = input;
    const result = {
        variants,
        style: (0, _styledEngine.internal_serializeStyles)(style),
        isProcessed: true
    };
    // Not supported on styled-components
    if (result.style === style) return result;
    if (variants) variants.forEach((variant)=>{
        if (typeof variant.style !== 'function') variant.style = (0, _styledEngine.internal_serializeStyles)(variant.style);
    });
    return result;
}

},{"83fa6b8ae50c7fe5":"g3Wsb"}],"5Hs5J":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6404fb53913fc632").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _slotShouldForwardProp = _interopRequireDefault(require("3aac4bd51a94273"));
const rootShouldForwardProp = (prop)=>(0, _slotShouldForwardProp.default)(prop) && prop !== 'classes';
var _default = exports.default = rootShouldForwardProp;

},{"6404fb53913fc632":"1P3rZ","3aac4bd51a94273":"iWX0F"}],"iWX0F":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
// copied from @mui/system/createStyled
function slotShouldForwardProp(prop) {
    return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
var _default = exports.default = slotShouldForwardProp;

},{}],"6exTj":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("ec96335914447116").default;
var _interopRequireWildcard = require("4473e0986fd3d9eb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ThemeProvider;
var React = _interopRequireWildcard(require("ffff5d2b95997a92"));
var _ThemeProviderNoVars = _interopRequireDefault(require("dd88efac0a0d0447"));
var _ThemeProviderWithVars = require("56240afa2f411c2");
var _identifier = _interopRequireDefault(require("2373d5eac4aed5f8"));
var _jsxRuntime = require("abee41afeef16458");
function ThemeProvider({ theme, ...props }) {
    if (typeof theme === 'function') return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ThemeProviderNoVars.default, {
        theme: theme,
        ...props
    });
    const muiTheme = _identifier.default in theme ? theme[_identifier.default] : theme;
    if (!('colorSchemes' in muiTheme)) {
        if (!('vars' in muiTheme)) // For non-CSS variables themes, set `vars` to null to prevent theme inheritance from the upper theme.
        // The example use case is the docs demo that uses ThemeProvider to customize the theme while the upper theme is using CSS variables.
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ThemeProviderNoVars.default, {
            theme: {
                ...theme,
                vars: null
            },
            ...props
        });
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ThemeProviderNoVars.default, {
            theme: theme,
            ...props
        });
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ThemeProviderWithVars.CssVarsProvider, {
        theme: theme,
        ...props
    });
}

},{"ec96335914447116":"1P3rZ","4473e0986fd3d9eb":"6TFJp","ffff5d2b95997a92":"jMk1U","dd88efac0a0d0447":"fp7A6","56240afa2f411c2":"kXiIm","2373d5eac4aed5f8":"6SSma","abee41afeef16458":"05iiF"}],"fp7A6":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("a93a67505f03cc38").default;
var _interopRequireWildcard = require("1db8d7324e225fd3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ThemeProviderNoVars;
var React = _interopRequireWildcard(require("3fe683a4b392ee76"));
var _system = require("b57fa2925038b41e");
var _identifier = _interopRequireDefault(require("37fefba726673ef6"));
var _jsxRuntime = require("bf89517dbf20f6ff");
function ThemeProviderNoVars({ theme: themeInput, ...props }) {
    const scopedTheme = _identifier.default in themeInput ? themeInput[_identifier.default] : undefined;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_system.ThemeProvider, {
        ...props,
        themeId: scopedTheme ? _identifier.default : undefined,
        theme: scopedTheme || themeInput
    });
}

},{"a93a67505f03cc38":"1P3rZ","1db8d7324e225fd3":"6TFJp","3fe683a4b392ee76":"jMk1U","b57fa2925038b41e":"1WaIj","37fefba726673ef6":"6SSma","bf89517dbf20f6ff":"05iiF"}],"kXiIm":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("f71f1606772f3699").default;
var _interopRequireWildcard = require("f45e67c3152f4567").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CssVarsProvider = void 0;
exports.Experimental_CssVarsProvider = Experimental_CssVarsProvider;
exports.useColorScheme = exports.getInitColorSchemeScript = void 0;
var React = _interopRequireWildcard(require("6bf61cb1c17e6356"));
var _styleFunctionSx = _interopRequireDefault(require("dde767c79e68e2dc"));
var _system = require("d484ec0e330425d2");
var _createTheme = _interopRequireDefault(require("51df668dd926bb48"));
var _createTypography = _interopRequireDefault(require("95a4777f6a634239"));
var _identifier = _interopRequireDefault(require("bd071396e0851da4"));
var _InitColorSchemeScript = require("bd1e778adf083ad9");
var _jsxRuntime = require("be4becea9d8a6c73");
const { CssVarsProvider: InternalCssVarsProvider, useColorScheme, getInitColorSchemeScript: deprecatedGetInitColorSchemeScript } = (0, _system.unstable_createCssVarsProvider)({
    themeId: _identifier.default,
    // @ts-ignore ignore module augmentation tests
    theme: ()=>(0, _createTheme.default)({
            cssVariables: true
        }),
    colorSchemeStorageKey: _InitColorSchemeScript.defaultConfig.colorSchemeStorageKey,
    modeStorageKey: _InitColorSchemeScript.defaultConfig.modeStorageKey,
    defaultColorScheme: {
        light: _InitColorSchemeScript.defaultConfig.defaultLightColorScheme,
        dark: _InitColorSchemeScript.defaultConfig.defaultDarkColorScheme
    },
    resolveTheme: (theme)=>{
        const newTheme = {
            ...theme,
            typography: (0, _createTypography.default)(theme.palette, theme.typography)
        };
        newTheme.unstable_sx = function sx(props) {
            return (0, _styleFunctionSx.default)({
                sx: props,
                theme: this
            });
        };
        return newTheme;
    }
});
exports.useColorScheme = useColorScheme;
let warnedOnce = false;
// TODO: remove in v7
// eslint-disable-next-line @typescript-eslint/naming-convention
function Experimental_CssVarsProvider(props) {
    if (!warnedOnce) {
        console.warn([
            'MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.',
            '',
            "You should use `import { ThemeProvider } from '@mui/material/styles'` instead.",
            'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'
        ].join('\n'));
        warnedOnce = true;
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(InternalCssVarsProvider, {
        ...props
    });
}
let warnedInitScriptOnce = false;
// TODO: remove in v7
const getInitColorSchemeScript = (params)=>{
    if (!warnedInitScriptOnce) {
        console.warn([
            'MUI: The getInitColorSchemeScript function has been deprecated.',
            '',
            "You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`",
            'and replace the function call with `<InitColorSchemeScript />` instead.'
        ].join('\n'));
        warnedInitScriptOnce = true;
    }
    return deprecatedGetInitColorSchemeScript(params);
};
/**
 * TODO: remove this export in v7
 * @deprecated
 * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.
 *
 * You should use `ThemeProvider` and `createTheme()` instead:
 *
 * ```diff
 * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';
 * + import { ThemeProvider, createTheme } from '@mui/material/styles';
 *
 * - const theme = extendTheme();
 * + const theme = createTheme({
 * +   cssVariables: true,
 * +   colorSchemes: { light: true, dark: true },
 * + });
 *
 * - <CssVarsProvider theme={theme}>
 * + <ThemeProvider theme={theme}>
 * ```
 *
 * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.
 */ exports.getInitColorSchemeScript = getInitColorSchemeScript;
const CssVarsProvider = exports.CssVarsProvider = InternalCssVarsProvider;

},{"f71f1606772f3699":"1P3rZ","f45e67c3152f4567":"6TFJp","6bf61cb1c17e6356":"jMk1U","dde767c79e68e2dc":"3qmy1","d484ec0e330425d2":"1WaIj","51df668dd926bb48":"a1TKj","95a4777f6a634239":"iYA5e","bd071396e0851da4":"6SSma","bd1e778adf083ad9":"4rGvI","be4becea9d8a6c73":"05iiF"}],"4rGvI":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4aa77561176f0b87").default;
var _interopRequireWildcard = require("215d8ee5be69ebdf").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultConfig = exports.default = void 0;
var React = _interopRequireWildcard(require("69b0ba915d677858"));
var _InitColorSchemeScript = _interopRequireDefault(require("c6b16aa0a6624eae"));
var _jsxRuntime = require("7a3f1a6efb295a5d");
const defaultConfig = exports.defaultConfig = {
    attribute: 'data-mui-color-scheme',
    colorSchemeStorageKey: 'mui-color-scheme',
    defaultLightColorScheme: 'light',
    defaultDarkColorScheme: 'dark',
    modeStorageKey: 'mui-mode'
};
var InitColorSchemeScript = exports.default = function InitColorSchemeScript(props) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_InitColorSchemeScript.default, {
        ...defaultConfig,
        ...props
    });
};

},{"4aa77561176f0b87":"1P3rZ","215d8ee5be69ebdf":"6TFJp","69b0ba915d677858":"jMk1U","c6b16aa0a6624eae":"8agna","7a3f1a6efb295a5d":"05iiF"}],"8agna":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("68a81deed96e3567").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _InitColorSchemeScript.default;
    }
});
var _InitColorSchemeScript = _interopRequireDefault(require("cf35a495af265f47"));

},{"68a81deed96e3567":"1P3rZ","cf35a495af265f47":"6VlWa"}],"7KmGh":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2813beb5fcead744").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = makeStyles;
var _formatMuiErrorMessage = _interopRequireDefault(require("10fbff6465919068"));
function makeStyles() {
    throw new Error("MUI: makeStyles is no longer exported from @mui/material/styles.\nYou have to import it from @mui/styles.\nSee https://mui.com/r/migration-v4/#mui-material-styles for more details.");
}

},{"2813beb5fcead744":"1P3rZ","10fbff6465919068":"cXsuk"}],"hJccm":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("554aba97516b6810").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = withStyles;
var _formatMuiErrorMessage = _interopRequireDefault(require("564138a0de96cd90"));
function withStyles() {
    throw new Error("MUI: withStyles is no longer exported from @mui/material/styles.\nYou have to import it from @mui/styles.\nSee https://mui.com/r/migration-v4/#mui-material-styles for more details.");
}

},{"554aba97516b6810":"1P3rZ","564138a0de96cd90":"cXsuk"}],"bQ1k9":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("92b08439aff2893b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = withTheme;
var _formatMuiErrorMessage = _interopRequireDefault(require("b3de7d1a7b044330"));
function withTheme() {
    throw new Error("MUI: withTheme is no longer exported from @mui/material/styles.\nYou have to import it from @mui/styles.\nSee https://mui.com/r/migration-v4/#mui-material-styles for more details.");
}

},{"92b08439aff2893b":"1P3rZ","b3de7d1a7b044330":"cXsuk"}],"48VoL":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4a6bddfaeb4e9e51").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = deprecatedExtendTheme;
var _createThemeWithVars = _interopRequireDefault(require("22d932b106c1ff8d"));
let warnedOnce = false;
function deprecatedExtendTheme(...args) {
    if (!warnedOnce) {
        console.warn([
            'MUI: The `experimental_extendTheme` has been stabilized.',
            '',
            "You should use `import { extendTheme } from '@mui/material/styles'`"
        ].join('\n'));
        warnedOnce = true;
    }
    return (0, _createThemeWithVars.default)(...args);
}

},{"4a6bddfaeb4e9e51":"1P3rZ","22d932b106c1ff8d":"asCkD"}],"1HQ4x":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("5bef21619aba2878").default;
var _interopRequireWildcard = require("cbe720b9d85c1cd").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AreaPlot = AreaPlot;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("740adbb1173c7a5b"));
var _extends2 = _interopRequireDefault(require("88ef53c5b53d578d"));
var React = _interopRequireWildcard(require("fe66a71d949ce566"));
var _propTypes = _interopRequireDefault(require("6af4a17ad31fc278"));
var _styles = require("f78bcb4a36c89b65");
var _d3Shape = require("4abeec7ab32ed4cb");
var _AreaElement = require("594876e08689cf88");
var _useScale = require("f67d8039a821ec4");
var _getCurve = require("40e5e6815d2b1306");
var _isBandScale = require("d4f81e6bc29b32ea");
var _constants = require("ba16743d922c2dbb");
var _useLineSeries = require("a759427c7de59f10");
var _useSkipAnimation = require("6f38e3cc953e5b1");
var _useChartGradientId = require("4c27683e223cea06");
var _useAxis = require("38a17568a7ab6611");
var _useInternalIsZoomInteracting = require("3c011507794372d9");
var _jsxRuntime = require("55322e36d0ba036b");
const _excluded = [
    "slots",
    "slotProps",
    "onItemClick",
    "skipAnimation"
];
const AreaPlotRoot = (0, _styles.styled)('g', {
    name: 'MuiAreaPlot',
    slot: 'Root'
})({
    [`& .${_AreaElement.areaElementClasses.root}`]: {
        transition: 'opacity 0.2s ease-in, fill 0.2s ease-in'
    }
});
const useAggregatedData = ()=>{
    const seriesData = (0, _useLineSeries.useLineSeriesContext)();
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const { yAxis, yAxisIds } = (0, _useAxis.useYAxes)();
    const getGradientId = (0, _useChartGradientId.useChartGradientIdBuilder)();
    // This memo prevents odd line chart behavior when hydrating.
    const allData = React.useMemo(()=>{
        if (seriesData === undefined) return [];
        const { series, stackingGroups } = seriesData;
        const defaultXAxisId = xAxisIds[0];
        const defaultYAxisId = yAxisIds[0];
        return stackingGroups.flatMap(({ ids: groupIds })=>{
            return [
                ...groupIds
            ].reverse() // Revert stacked area for a more pleasant animation
            .map((seriesId)=>{
                const { xAxisId = defaultXAxisId, yAxisId = defaultYAxisId, stackedData, data, connectNulls, baseline, curve, strictStepCurve } = series[seriesId];
                const xScale = xAxis[xAxisId].scale;
                const xPosition = (0, _useScale.getValueToPositionMapper)(xScale);
                const yScale = yAxis[yAxisId].scale;
                const xData = xAxis[xAxisId].data;
                const gradientId = yAxis[yAxisId].colorScale && getGradientId(yAxisId) || xAxis[xAxisId].colorScale && getGradientId(xAxisId) || undefined;
                if (xData === undefined) throw new Error(`MUI X Charts: ${xAxisId === _constants.DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id "${xAxisId}"`} should have data property to be able to display a line plot.`);
                if (xData.length < stackedData.length) throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);
                const shouldExpand = curve?.includes('step') && !strictStepCurve && (0, _isBandScale.isBandScale)(xScale);
                const formattedData = xData?.flatMap((x, index)=>{
                    const nullData = data[index] == null;
                    if (shouldExpand) {
                        const rep = [
                            {
                                x,
                                y: stackedData[index],
                                nullData,
                                isExtension: false
                            }
                        ];
                        if (!nullData && (index === 0 || data[index - 1] == null)) rep.unshift({
                            x: (xScale(x) ?? 0) - (xScale.step() - xScale.bandwidth()) / 2,
                            y: stackedData[index],
                            nullData,
                            isExtension: true
                        });
                        if (!nullData && (index === data.length - 1 || data[index + 1] == null)) rep.push({
                            x: (xScale(x) ?? 0) + (xScale.step() + xScale.bandwidth()) / 2,
                            y: stackedData[index],
                            nullData,
                            isExtension: true
                        });
                        return rep;
                    }
                    return {
                        x,
                        y: stackedData[index],
                        nullData
                    };
                }) ?? [];
                const d3Data = connectNulls ? formattedData.filter((d)=>!d.nullData) : formattedData;
                const areaPath = (0, _d3Shape.area)().x((d)=>d.isExtension ? d.x : xPosition(d.x)).defined((d)=>connectNulls || !d.nullData || !!d.isExtension).y0((d)=>{
                    if (typeof baseline === 'number') return yScale(baseline);
                    if (baseline === 'max') return yScale.range()[1];
                    if (baseline === 'min') return yScale.range()[0];
                    const value = d.y && yScale(d.y[0]);
                    if (Number.isNaN(value)) return yScale.range()[0];
                    return value;
                }).y1((d)=>d.y && yScale(d.y[1]));
                const d = areaPath.curve((0, _getCurve.getCurveFactory)(curve))(d3Data) || '';
                return (0, _extends2.default)({}, series[seriesId], {
                    gradientId,
                    d,
                    seriesId
                });
            });
        });
    }, [
        seriesData,
        xAxisIds,
        yAxisIds,
        xAxis,
        yAxis,
        getGradientId
    ]);
    return allData;
};
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)
 * - [Stacking](https://mui.com/x/react-charts/stacking/)
 *
 * API:
 *
 * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)
 */ function AreaPlot(props) {
    const { slots, slotProps, onItemClick, skipAnimation: inSkipAnimation } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const isZoomInteracting = (0, _useInternalIsZoomInteracting.useInternalIsZoomInteracting)();
    const skipAnimation = (0, _useSkipAnimation.useSkipAnimation)(isZoomInteracting || inSkipAnimation);
    const completedData = useAggregatedData();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(AreaPlotRoot, (0, _extends2.default)({}, other, {
        children: completedData.map(({ d, seriesId, color, area, gradientId })=>!!area && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_AreaElement.AreaElement, {
                id: seriesId,
                d: d,
                color: color,
                gradientId: gradientId,
                slots: slots,
                slotProps: slotProps,
                onClick: onItemClick && ((event)=>onItemClick(event, {
                        type: 'line',
                        seriesId
                    })),
                skipAnimation: skipAnimation
            }, seriesId))
    }));
}
AreaPlot.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Callback fired when a line area item is clicked.
   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.
   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.
   */ onItemClick: _propTypes.default.func,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"5bef21619aba2878":"1P3rZ","cbe720b9d85c1cd":"6TFJp","740adbb1173c7a5b":"17jFf","88ef53c5b53d578d":"lKa0J","fe66a71d949ce566":"jMk1U","6af4a17ad31fc278":"GNqOQ","f78bcb4a36c89b65":"7eExx","4abeec7ab32ed4cb":"bw44j","594876e08689cf88":"fpCUT","f67d8039a821ec4":"uL1ts","40e5e6815d2b1306":"nkH9c","d4f81e6bc29b32ea":"58Ehn","ba16743d922c2dbb":"2sqkC","a759427c7de59f10":"kI0zE","6f38e3cc953e5b1":"3OF6M","4c27683e223cea06":"8rjJB","38a17568a7ab6611":"gzVB1","3c011507794372d9":"hjVOe","55322e36d0ba036b":"05iiF"}],"17jFf":[function(require,module,exports,__globalThis) {
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"bw44j":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-shape` (CommonJS)
// See upstream license: https://github.com/d3/d3-shape/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("5dd094687b2c1cf6");

},{"5dd094687b2c1cf6":"lpRAI"}],"lpRAI":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-shape` (CommonJS)
// See upstream license: https://github.com/d3/d3-shape/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-shape`
module.exports = require("8dcbd6fb7545d0b0");

},{"8dcbd6fb7545d0b0":"8GIhh"}],"8GIhh":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("e7317bc355b02892").default;
var _interopRequireDefault = require("cc5c6096c83a4724").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "arc", {
    enumerable: true,
    get: function() {
        return _arc.default;
    }
});
Object.defineProperty(exports, "area", {
    enumerable: true,
    get: function() {
        return _area.default;
    }
});
Object.defineProperty(exports, "areaRadial", {
    enumerable: true,
    get: function() {
        return _areaRadial.default;
    }
});
Object.defineProperty(exports, "curveBasis", {
    enumerable: true,
    get: function() {
        return _basis.default;
    }
});
Object.defineProperty(exports, "curveBasisClosed", {
    enumerable: true,
    get: function() {
        return _basisClosed.default;
    }
});
Object.defineProperty(exports, "curveBasisOpen", {
    enumerable: true,
    get: function() {
        return _basisOpen.default;
    }
});
Object.defineProperty(exports, "curveBumpX", {
    enumerable: true,
    get: function() {
        return _bump.bumpX;
    }
});
Object.defineProperty(exports, "curveBumpY", {
    enumerable: true,
    get: function() {
        return _bump.bumpY;
    }
});
Object.defineProperty(exports, "curveBundle", {
    enumerable: true,
    get: function() {
        return _bundle.default;
    }
});
Object.defineProperty(exports, "curveCardinal", {
    enumerable: true,
    get: function() {
        return _cardinal.default;
    }
});
Object.defineProperty(exports, "curveCardinalClosed", {
    enumerable: true,
    get: function() {
        return _cardinalClosed.default;
    }
});
Object.defineProperty(exports, "curveCardinalOpen", {
    enumerable: true,
    get: function() {
        return _cardinalOpen.default;
    }
});
Object.defineProperty(exports, "curveCatmullRom", {
    enumerable: true,
    get: function() {
        return _catmullRom.default;
    }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
    enumerable: true,
    get: function() {
        return _catmullRomClosed.default;
    }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
    enumerable: true,
    get: function() {
        return _catmullRomOpen.default;
    }
});
Object.defineProperty(exports, "curveLinear", {
    enumerable: true,
    get: function() {
        return _linear.default;
    }
});
Object.defineProperty(exports, "curveLinearClosed", {
    enumerable: true,
    get: function() {
        return _linearClosed.default;
    }
});
Object.defineProperty(exports, "curveMonotoneX", {
    enumerable: true,
    get: function() {
        return _monotone.monotoneX;
    }
});
Object.defineProperty(exports, "curveMonotoneY", {
    enumerable: true,
    get: function() {
        return _monotone.monotoneY;
    }
});
Object.defineProperty(exports, "curveNatural", {
    enumerable: true,
    get: function() {
        return _natural.default;
    }
});
Object.defineProperty(exports, "curveStep", {
    enumerable: true,
    get: function() {
        return _step.default;
    }
});
Object.defineProperty(exports, "curveStepAfter", {
    enumerable: true,
    get: function() {
        return _step.stepAfter;
    }
});
Object.defineProperty(exports, "curveStepBefore", {
    enumerable: true,
    get: function() {
        return _step.stepBefore;
    }
});
Object.defineProperty(exports, "line", {
    enumerable: true,
    get: function() {
        return _line.default;
    }
});
Object.defineProperty(exports, "lineRadial", {
    enumerable: true,
    get: function() {
        return _lineRadial.default;
    }
});
Object.defineProperty(exports, "link", {
    enumerable: true,
    get: function() {
        return _link.link;
    }
});
Object.defineProperty(exports, "linkHorizontal", {
    enumerable: true,
    get: function() {
        return _link.linkHorizontal;
    }
});
Object.defineProperty(exports, "linkRadial", {
    enumerable: true,
    get: function() {
        return _link.linkRadial;
    }
});
Object.defineProperty(exports, "linkVertical", {
    enumerable: true,
    get: function() {
        return _link.linkVertical;
    }
});
Object.defineProperty(exports, "pie", {
    enumerable: true,
    get: function() {
        return _pie.default;
    }
});
Object.defineProperty(exports, "pointRadial", {
    enumerable: true,
    get: function() {
        return _pointRadial.default;
    }
});
Object.defineProperty(exports, "radialArea", {
    enumerable: true,
    get: function() {
        return _areaRadial.default;
    }
});
Object.defineProperty(exports, "radialLine", {
    enumerable: true,
    get: function() {
        return _lineRadial.default;
    }
});
Object.defineProperty(exports, "stack", {
    enumerable: true,
    get: function() {
        return _stack.default;
    }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
    enumerable: true,
    get: function() {
        return _diverging.default;
    }
});
Object.defineProperty(exports, "stackOffsetExpand", {
    enumerable: true,
    get: function() {
        return _expand.default;
    }
});
Object.defineProperty(exports, "stackOffsetNone", {
    enumerable: true,
    get: function() {
        return _none.default;
    }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
    enumerable: true,
    get: function() {
        return _silhouette.default;
    }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
    enumerable: true,
    get: function() {
        return _wiggle.default;
    }
});
Object.defineProperty(exports, "stackOrderAppearance", {
    enumerable: true,
    get: function() {
        return _appearance.default;
    }
});
Object.defineProperty(exports, "stackOrderAscending", {
    enumerable: true,
    get: function() {
        return _ascending.default;
    }
});
Object.defineProperty(exports, "stackOrderDescending", {
    enumerable: true,
    get: function() {
        return _descending.default;
    }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
    enumerable: true,
    get: function() {
        return _insideOut.default;
    }
});
Object.defineProperty(exports, "stackOrderNone", {
    enumerable: true,
    get: function() {
        return _none2.default;
    }
});
Object.defineProperty(exports, "stackOrderReverse", {
    enumerable: true,
    get: function() {
        return _reverse.default;
    }
});
Object.defineProperty(exports, "symbol", {
    enumerable: true,
    get: function() {
        return _symbol.default;
    }
});
Object.defineProperty(exports, "symbolAsterisk", {
    enumerable: true,
    get: function() {
        return _asterisk.default;
    }
});
Object.defineProperty(exports, "symbolCircle", {
    enumerable: true,
    get: function() {
        return _circle.default;
    }
});
Object.defineProperty(exports, "symbolCross", {
    enumerable: true,
    get: function() {
        return _cross.default;
    }
});
Object.defineProperty(exports, "symbolDiamond", {
    enumerable: true,
    get: function() {
        return _diamond.default;
    }
});
Object.defineProperty(exports, "symbolDiamond2", {
    enumerable: true,
    get: function() {
        return _diamond2.default;
    }
});
Object.defineProperty(exports, "symbolPlus", {
    enumerable: true,
    get: function() {
        return _plus.default;
    }
});
Object.defineProperty(exports, "symbolSquare", {
    enumerable: true,
    get: function() {
        return _square.default;
    }
});
Object.defineProperty(exports, "symbolSquare2", {
    enumerable: true,
    get: function() {
        return _square2.default;
    }
});
Object.defineProperty(exports, "symbolStar", {
    enumerable: true,
    get: function() {
        return _star.default;
    }
});
Object.defineProperty(exports, "symbolTimes", {
    enumerable: true,
    get: function() {
        return _times.default;
    }
});
Object.defineProperty(exports, "symbolTriangle", {
    enumerable: true,
    get: function() {
        return _triangle.default;
    }
});
Object.defineProperty(exports, "symbolTriangle2", {
    enumerable: true,
    get: function() {
        return _triangle2.default;
    }
});
Object.defineProperty(exports, "symbolWye", {
    enumerable: true,
    get: function() {
        return _wye.default;
    }
});
Object.defineProperty(exports, "symbolX", {
    enumerable: true,
    get: function() {
        return _times.default;
    }
});
Object.defineProperty(exports, "symbols", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsFill;
    }
});
Object.defineProperty(exports, "symbolsFill", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsFill;
    }
});
Object.defineProperty(exports, "symbolsStroke", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsStroke;
    }
});
var _arc = _interopRequireDefault(require("22bc6ba68840f7a1"));
var _area = _interopRequireDefault(require("8a60f4de9a265d51"));
var _line = _interopRequireDefault(require("b939cbc6b9e1c537"));
var _pie = _interopRequireDefault(require("e5d6e1cd372ea7a5"));
var _areaRadial = _interopRequireDefault(require("2e7c0a4aaff1cee2"));
var _lineRadial = _interopRequireDefault(require("52e8331f164f7786"));
var _pointRadial = _interopRequireDefault(require("67cb12f1d77c8215"));
var _link = require("5979ade2d05b1753");
var _symbol = _interopRequireWildcard(require("a12b7858f44b3321"));
var _asterisk = _interopRequireDefault(require("c613f6de7b41f7b9"));
var _circle = _interopRequireDefault(require("6fea97f5daf3bd89"));
var _cross = _interopRequireDefault(require("7c46caed47e9c654"));
var _diamond = _interopRequireDefault(require("110567586badfe4d"));
var _diamond2 = _interopRequireDefault(require("9113d1dcc2b540f0"));
var _plus = _interopRequireDefault(require("16e5e5ca1ea63a39"));
var _square = _interopRequireDefault(require("717240d410643862"));
var _square2 = _interopRequireDefault(require("f494d9ec59f30248"));
var _star = _interopRequireDefault(require("a009c8d33896c9a9"));
var _triangle = _interopRequireDefault(require("9a50aeb9da054db3"));
var _triangle2 = _interopRequireDefault(require("f45bb612a164650f"));
var _wye = _interopRequireDefault(require("8bbb49601994c41"));
var _times = _interopRequireDefault(require("25bac2673e5c6757"));
var _basisClosed = _interopRequireDefault(require("ee62d43cfd91c372"));
var _basisOpen = _interopRequireDefault(require("5b9ea6363f782f4d"));
var _basis = _interopRequireDefault(require("f32417408e35011a"));
var _bump = require("b22b68ae1031823d");
var _bundle = _interopRequireDefault(require("9574d59823499c59"));
var _cardinalClosed = _interopRequireDefault(require("60fce166ecb94e92"));
var _cardinalOpen = _interopRequireDefault(require("336b1f1f3d7333b8"));
var _cardinal = _interopRequireDefault(require("efae2360f46980f3"));
var _catmullRomClosed = _interopRequireDefault(require("c4c5393cf20cc734"));
var _catmullRomOpen = _interopRequireDefault(require("1d3fe40a9d390a41"));
var _catmullRom = _interopRequireDefault(require("f5a0f8c13624a212"));
var _linearClosed = _interopRequireDefault(require("3c95d7e65fbf0b40"));
var _linear = _interopRequireDefault(require("564347b740abcd3c"));
var _monotone = require("526d5a319ea29476");
var _natural = _interopRequireDefault(require("2f6c7388e77323e0"));
var _step = _interopRequireWildcard(require("eeb003f84ca1503"));
var _stack = _interopRequireDefault(require("ef5a53ae7460e3f"));
var _expand = _interopRequireDefault(require("46250096de7d396a"));
var _diverging = _interopRequireDefault(require("bc9670cbdf387b21"));
var _none = _interopRequireDefault(require("f152386cab1dc34a"));
var _silhouette = _interopRequireDefault(require("2a3a59d4dc838f27"));
var _wiggle = _interopRequireDefault(require("787acc7c434278d3"));
var _appearance = _interopRequireDefault(require("ba03910649d383ef"));
var _ascending = _interopRequireDefault(require("33a74778225af49a"));
var _descending = _interopRequireDefault(require("f7154c4315a95796"));
var _insideOut = _interopRequireDefault(require("51eb52c2d4a512b9"));
var _none2 = _interopRequireDefault(require("43bbc00e177c6695"));
var _reverse = _interopRequireDefault(require("1db631fac1eb3f54"));

},{"e7317bc355b02892":"6TFJp","cc5c6096c83a4724":"1P3rZ","22bc6ba68840f7a1":"lydRi","8a60f4de9a265d51":"7bXmk","b939cbc6b9e1c537":"bsbWB","e5d6e1cd372ea7a5":"eR1CR","2e7c0a4aaff1cee2":"1qkTF","52e8331f164f7786":"h3cAq","67cb12f1d77c8215":"ckZ6O","5979ade2d05b1753":"5m8OB","a12b7858f44b3321":"8vN7P","c613f6de7b41f7b9":"4RAUi","6fea97f5daf3bd89":"OnJJc","7c46caed47e9c654":"5WMAh","110567586badfe4d":"1ihUy","9113d1dcc2b540f0":"4xikQ","16e5e5ca1ea63a39":"bbph5","717240d410643862":"7jmt8","f494d9ec59f30248":"6ioTC","a009c8d33896c9a9":"d6W5B","9a50aeb9da054db3":"edeJ0","f45bb612a164650f":"150UI","8bbb49601994c41":"lbDX1","25bac2673e5c6757":"bTofj","ee62d43cfd91c372":"bepld","5b9ea6363f782f4d":"b7qHj","f32417408e35011a":"auxlC","b22b68ae1031823d":"c41Nb","9574d59823499c59":"aL1ij","60fce166ecb94e92":"2g7Ih","336b1f1f3d7333b8":"dyRbx","efae2360f46980f3":"6JvPR","c4c5393cf20cc734":"iAYEq","1d3fe40a9d390a41":"dSbmi","f5a0f8c13624a212":"3Q9Pw","3c95d7e65fbf0b40":"3iXmB","564347b740abcd3c":"5k5MP","526d5a319ea29476":"husMO","2f6c7388e77323e0":"5xZAm","eeb003f84ca1503":"cIqCU","ef5a53ae7460e3f":"hJACq","46250096de7d396a":"aJz0u","bc9670cbdf387b21":"4SmBt","f152386cab1dc34a":"4FhTL","2a3a59d4dc838f27":"wV71w","787acc7c434278d3":"kXP1Z","ba03910649d383ef":"f8Yez","33a74778225af49a":"cS46J","f7154c4315a95796":"18Ugz","51eb52c2d4a512b9":"XtumQ","43bbc00e177c6695":"5piKl","1db631fac1eb3f54":"fKrW7"}],"lydRi":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("edd880ad39fb5e77").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _constant = _interopRequireDefault(require("76e5862a9dd8c8c"));
var _math = require("1ef023e41b26c371");
var _path = require("6ea95208aa426975");
function arcInnerRadius(d) {
    return d.innerRadius;
}
function arcOuterRadius(d) {
    return d.outerRadius;
}
function arcStartAngle(d) {
    return d.startAngle;
}
function arcEndAngle(d) {
    return d.endAngle;
}
function arcPadAngle(d) {
    return d && d.padAngle; // Note: optional!
}
function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
    var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
    if (t * t < _math.epsilon) return;
    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
    return [
        x0 + t * x10,
        y0 + t * y10
    ];
}
// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
    var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
    // Pick the closer of the two intersection points.
    // TODO Is there a faster way to determine which intersection to use?
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
    };
}
function _default() {
    var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = (0, _constant.default)(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null, path = (0, _path.withPath)(arc);
    function arc() {
        var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - _math.halfPi, a1 = endAngle.apply(this, arguments) - _math.halfPi, da = (0, _math.abs)(a1 - a0), cw = a1 > a0;
        if (!context) context = buffer = path();
        // Ensure that the outer radius is always larger than the inner radius.
        if (r1 < r0) r = r1, r1 = r0, r0 = r;
        // Is it a point?
        if (!(r1 > _math.epsilon)) context.moveTo(0, 0);
        else if (da > _math.tau - _math.epsilon) {
            context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
            context.arc(0, 0, r1, a0, a1, !cw);
            if (r0 > _math.epsilon) {
                context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
                context.arc(0, 0, r0, a1, a0, cw);
            }
        } else {
            var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)), rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t0, t1;
            // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
            if (rp > _math.epsilon) {
                var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)), p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
                if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
                else da0 = 0, a00 = a10 = (a0 + a1) / 2;
                if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
                else da1 = 0, a01 = a11 = (a0 + a1) / 2;
            }
            var x01 = r1 * (0, _math.cos)(a01), y01 = r1 * (0, _math.sin)(a01), x10 = r0 * (0, _math.cos)(a10), y10 = r0 * (0, _math.sin)(a10);
            // Apply rounded corners?
            if (rc > _math.epsilon) {
                var x11 = r1 * (0, _math.cos)(a11), y11 = r1 * (0, _math.sin)(a11), x00 = r0 * (0, _math.cos)(a00), y00 = r0 * (0, _math.sin)(a00), oc;
                // Restrict the corner radius according to the sector angle. If this
                // intersection fails, it’s probably because the arc is too small, so
                // disable the corner radius entirely.
                if (da < _math.pi) {
                    if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {
                        var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2), lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
                        rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
                        rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
                    } else rc0 = rc1 = 0;
                }
            }
            // Is the sector collapsed to a line?
            if (!(da1 > _math.epsilon)) context.moveTo(x01, y01);
            else if (rc1 > _math.epsilon) {
                t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
                t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
                context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
                // Have the corners merged?
                if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                else {
                    context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                    context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                    context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
            // Is there no inner ring, and it’s a circular sector?
            // Or perhaps it’s an annular sector collapsed due to padding?
            if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10);
            else if (rc0 > _math.epsilon) {
                t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
                t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
                context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
                // Have the corners merged?
                if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                else {
                    context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                    context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                    context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } else context.arc(0, 0, r0, a10, a00, cw);
        }
        context.closePath();
        if (buffer) return context = null, buffer + "" || null;
    }
    arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
        return [
            (0, _math.cos)(a) * r,
            (0, _math.sin)(a) * r
        ];
    };
    arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
    };
    arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
    };
    arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
    };
    arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
    };
    arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
    };
    arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
    };
    arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
    };
    arc.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, arc) : context;
    };
    return arc;
}

},{"edd880ad39fb5e77":"1P3rZ","76e5862a9dd8c8c":"Au8Iv","1ef023e41b26c371":"cky62","6ea95208aa426975":"71GRo"}],"Au8Iv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x) {
    return function constant() {
        return x;
    };
}

},{}],"cky62":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.abs = void 0;
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.sqrt = exports.sin = exports.pi = exports.min = exports.max = exports.halfPi = exports.epsilon = exports.cos = exports.atan2 = void 0;
const abs = exports.abs = Math.abs;
const atan2 = exports.atan2 = Math.atan2;
const cos = exports.cos = Math.cos;
const max = exports.max = Math.max;
const min = exports.min = Math.min;
const sin = exports.sin = Math.sin;
const sqrt = exports.sqrt = Math.sqrt;
const epsilon = exports.epsilon = 1e-12;
const pi = exports.pi = Math.PI;
const halfPi = exports.halfPi = pi / 2;
const tau = exports.tau = 2 * pi;
function acos(x) {
    return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
    return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

},{}],"71GRo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.withPath = withPath;
var _index = require("2e97d53aa7df7d13");
function withPath(shape) {
    let digits = 3;
    shape.digits = function(_) {
        if (!arguments.length) return digits;
        if (_ == null) digits = null;
        else {
            const d = Math.floor(_);
            if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);
            digits = d;
        }
        return shape;
    };
    return ()=>new _index.Path(digits);
}

},{"2e97d53aa7df7d13":"6HhxE"}],"6HhxE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Path", {
    enumerable: true,
    get: function() {
        return _path.Path;
    }
});
Object.defineProperty(exports, "path", {
    enumerable: true,
    get: function() {
        return _path.path;
    }
});
Object.defineProperty(exports, "pathRound", {
    enumerable: true,
    get: function() {
        return _path.pathRound;
    }
});
var _path = require("abbb6b8c680ff1");

},{"abbb6b8c680ff1":"1MFIO"}],"1MFIO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Path = void 0;
exports.path = path;
exports.pathRound = pathRound;
const pi = Math.PI, tau = 2 * pi, epsilon = 1e-6, tauEpsilon = tau - epsilon;
function append(strings) {
    this._ += strings[0];
    for(let i = 1, n = strings.length; i < n; ++i)this._ += arguments[i] + strings[i];
}
function appendRound(digits) {
    let d = Math.floor(digits);
    if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);
    if (d > 15) return append;
    const k = 10 ** d;
    return function(strings) {
        this._ += strings[0];
        for(let i = 1, n = strings.length; i < n; ++i)this._ += Math.round(arguments[i] * k) / k + strings[i];
    };
}
class Path {
    constructor(digits){
        this._x0 = this._y0 = // start of current subpath
        this._x1 = this._y1 = null; // end of current subpath
        this._ = "";
        this._append = digits == null ? append : appendRound(digits);
    }
    moveTo(x, y) {
        this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
    }
    closePath() {
        if (this._x1 !== null) {
            this._x1 = this._x0, this._y1 = this._y0;
            this._append`Z`;
        }
    }
    lineTo(x, y) {
        this._append`L${this._x1 = +x},${this._y1 = +y}`;
    }
    quadraticCurveTo(x1, y1, x, y) {
        this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;
    }
    bezierCurveTo(x1, y1, x2, y2, x, y) {
        this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;
    }
    arcTo(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        // Is the radius negative? Error.
        if (r < 0) throw new Error(`negative radius: ${r}`);
        let x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
        // Is this path empty? Move to (x1,y1).
        if (this._x1 === null) this._append`M${this._x1 = x1},${this._y1 = y1}`;
        else if (!(l01_2 > epsilon)) ;
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) this._append`L${this._x1 = x1},${this._y1 = y1}`;
        else {
            let x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
            // If the start tangent is not coincident with (x0,y0), line to.
            if (Math.abs(t01 - 1) > epsilon) this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;
            this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;
        }
    }
    arc(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r, ccw = !!ccw;
        // Is the radius negative? Error.
        if (r < 0) throw new Error(`negative radius: ${r}`);
        let dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
        // Is this path empty? Move to (x0,y0).
        if (this._x1 === null) this._append`M${x0},${y0}`;
        else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._append`L${x0},${y0}`;
        // Is this arc empty? We’re done.
        if (!r) return;
        // Does the angle go the wrong way? Flip the direction.
        if (da < 0) da = da % tau + tau;
        // Is this a complete circle? Draw two arcs to complete the circle.
        if (da > tauEpsilon) this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;
        else if (da > epsilon) this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;
    }
    rect(x, y, w, h) {
        this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;
    }
    toString() {
        return this._;
    }
}
exports.Path = Path;
function path() {
    return new Path();
}
// Allow instanceof d3.path
path.prototype = Path.prototype;
function pathRound(digits = 3) {
    return new Path(+digits);
}

},{}],"7bXmk":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3165eec1ecf5b86d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("66c7092347e67a96"));
var _constant = _interopRequireDefault(require("eb73bc7d951b3e68"));
var _linear = _interopRequireDefault(require("8d22d0d95786e4a9"));
var _line = _interopRequireDefault(require("445724dbc15ba0c0"));
var _path = require("e8a0f6cf255de339");
var _point = require("9e32b270956e1738");
function _default(x0, y0, y1) {
    var x1 = null, defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null, path = (0, _path.withPath)(area);
    x0 = typeof x0 === "function" ? x0 : x0 === undefined ? _point.x : (0, _constant.default)(+x0);
    y0 = typeof y0 === "function" ? y0 : y0 === undefined ? (0, _constant.default)(0) : (0, _constant.default)(+y0);
    y1 = typeof y1 === "function" ? y1 : y1 === undefined ? _point.y : (0, _constant.default)(+y1);
    function area(data) {
        var i, j, k, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
        if (context == null) output = curve(buffer = path());
        for(i = 0; i <= n; ++i){
            if (!(i < n && defined(d = data[i], i, data)) === defined0) {
                if (defined0 = !defined0) {
                    j = i;
                    output.areaStart();
                    output.lineStart();
                } else {
                    output.lineEnd();
                    output.lineStart();
                    for(k = i - 1; k >= j; --k)output.point(x0z[k], y0z[k]);
                    output.lineEnd();
                    output.areaEnd();
                }
            }
            if (defined0) {
                x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
                output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
            }
        }
        if (buffer) return output = null, buffer + "" || null;
    }
    function arealine() {
        return (0, _line.default)().defined(defined).curve(curve).context(context);
    }
    area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
    };
    area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
    };
    area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
    };
    area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
    };
    area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
    };
    area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
    };
    area.lineX0 = area.lineY0 = function() {
        return arealine().x(x0).y(y0);
    };
    area.lineY1 = function() {
        return arealine().x(x0).y(y1);
    };
    area.lineX1 = function() {
        return arealine().x(x1).y(y0);
    };
    area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
    };
    area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
    };
    area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
    };
    return area;
}

},{"3165eec1ecf5b86d":"1P3rZ","66c7092347e67a96":"5HcPx","eb73bc7d951b3e68":"Au8Iv","8d22d0d95786e4a9":"5k5MP","445724dbc15ba0c0":"bsbWB","e8a0f6cf255de339":"71GRo","9e32b270956e1738":"bUXeB"}],"5HcPx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.slice = void 0;
var slice = exports.slice = Array.prototype.slice;
function _default(x) {
    return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
     : Array.from(x); // Map, Set, iterable, string, or anything else
}

},{}],"5k5MP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function Linear(context) {
    this._context = context;
}
Linear.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                this._context.lineTo(x, y);
                break;
        }
    }
};
function _default(context) {
    return new Linear(context);
}

},{}],"bsbWB":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7d0347b0febac4a5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("2e952feb3d1ee80b"));
var _constant = _interopRequireDefault(require("b076c41762459764"));
var _linear = _interopRequireDefault(require("b1989e6ad4783499"));
var _path = require("635ebb20da7d854e");
var _point = require("c346879edf2a829f");
function _default(x, y) {
    var defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null, path = (0, _path.withPath)(line);
    x = typeof x === "function" ? x : x === undefined ? _point.x : (0, _constant.default)(x);
    y = typeof y === "function" ? y : y === undefined ? _point.y : (0, _constant.default)(y);
    function line(data) {
        var i, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer;
        if (context == null) output = curve(buffer = path());
        for(i = 0; i <= n; ++i){
            if (!(i < n && defined(d = data[i], i, data)) === defined0) {
                if (defined0 = !defined0) output.lineStart();
                else output.lineEnd();
            }
            if (defined0) output.point(+x(d, i, data), +y(d, i, data));
        }
        if (buffer) return output = null, buffer + "" || null;
    }
    line.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
    };
    line.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
    };
    line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
    };
    line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
    };
    line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
    };
    return line;
}

},{"7d0347b0febac4a5":"1P3rZ","2e952feb3d1ee80b":"5HcPx","b076c41762459764":"Au8Iv","b1989e6ad4783499":"5k5MP","635ebb20da7d854e":"71GRo","c346879edf2a829f":"bUXeB"}],"bUXeB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.x = x;
exports.y = y;
function x(p) {
    return p[0];
}
function y(p) {
    return p[1];
}

},{}],"eR1CR":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9f6c24105ddca5f0").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("c68a210754a18011"));
var _constant = _interopRequireDefault(require("55f1d1baf767968e"));
var _descending = _interopRequireDefault(require("43e4c689553a4d2"));
var _identity = _interopRequireDefault(require("bec688333f2d60b8"));
var _math = require("72612948aa9b8b2");
function _default() {
    var value = _identity.default, sortValues = _descending.default, sort = null, startAngle = (0, _constant.default)(0), endAngle = (0, _constant.default)(_math.tau), padAngle = (0, _constant.default)(0);
    function pie(data) {
        var i, n = (data = (0, _array.default)(data)).length, j, k, sum = 0, index = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
        for(i = 0; i < n; ++i)if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) sum += v;
        // Optionally sort the arcs by previously-computed values or by data.
        if (sortValues != null) index.sort(function(i, j) {
            return sortValues(arcs[i], arcs[j]);
        });
        else if (sort != null) index.sort(function(i, j) {
            return sort(data[i], data[j]);
        });
        // Compute the arcs! They are stored in the original data's order.
        for(i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1)j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
        };
        return arcs;
    }
    pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
    };
    pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
    };
    pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
    };
    pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
    };
    pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
    };
    pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
    };
    return pie;
}

},{"9f6c24105ddca5f0":"1P3rZ","c68a210754a18011":"5HcPx","55f1d1baf767968e":"Au8Iv","43e4c689553a4d2":"biSHR","bec688333f2d60b8":"dtqEk","72612948aa9b8b2":"cky62"}],"biSHR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

},{}],"dtqEk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(d) {
    return d;
}

},{}],"1qkTF":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("47acfbf6808ec109").default;
var _interopRequireWildcard = require("d43c1f9857fb4829").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _radial = _interopRequireWildcard(require("a40c4582a8bc0df5"));
var _area = _interopRequireDefault(require("92392c32f77b67b4"));
var _lineRadial = require("3eeb7a84a1485b68");
function _default() {
    var a = (0, _area.default)().curve(_radial.curveRadialLinear), c = a.curve, x0 = a.lineX0, x1 = a.lineX1, y0 = a.lineY0, y1 = a.lineY1;
    a.angle = a.x, delete a.x;
    a.startAngle = a.x0, delete a.x0;
    a.endAngle = a.x1, delete a.x1;
    a.radius = a.y, delete a.y;
    a.innerRadius = a.y0, delete a.y0;
    a.outerRadius = a.y1, delete a.y1;
    a.lineStartAngle = function() {
        return (0, _lineRadial.lineRadial)(x0());
    }, delete a.lineX0;
    a.lineEndAngle = function() {
        return (0, _lineRadial.lineRadial)(x1());
    }, delete a.lineX1;
    a.lineInnerRadius = function() {
        return (0, _lineRadial.lineRadial)(y0());
    }, delete a.lineY0;
    a.lineOuterRadius = function() {
        return (0, _lineRadial.lineRadial)(y1());
    }, delete a.lineY1;
    a.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
    };
    return a;
}

},{"47acfbf6808ec109":"1P3rZ","d43c1f9857fb4829":"6TFJp","a40c4582a8bc0df5":"iAb6O","92392c32f77b67b4":"7bXmk","3eeb7a84a1485b68":"h3cAq"}],"iAb6O":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d8161eb781bf1a67").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.curveRadialLinear = void 0;
exports.default = curveRadial;
var _linear = _interopRequireDefault(require("e59ab68ec354f19"));
var curveRadialLinear = exports.curveRadialLinear = curveRadial(_linear.default);
function Radial(curve) {
    this._curve = curve;
}
Radial.prototype = {
    areaStart: function() {
        this._curve.areaStart();
    },
    areaEnd: function() {
        this._curve.areaEnd();
    },
    lineStart: function() {
        this._curve.lineStart();
    },
    lineEnd: function() {
        this._curve.lineEnd();
    },
    point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
    }
};
function curveRadial(curve) {
    function radial(context) {
        return new Radial(curve(context));
    }
    radial._curve = curve;
    return radial;
}

},{"d8161eb781bf1a67":"1P3rZ","e59ab68ec354f19":"5k5MP"}],"h3cAq":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e70a48011089151b").default;
var _interopRequireWildcard = require("c9cfa76da61b3bea").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.lineRadial = lineRadial;
var _radial = _interopRequireWildcard(require("8175cc09e1b11243"));
var _line = _interopRequireDefault(require("bc3f9d98257b2892"));
function lineRadial(l) {
    var c = l.curve;
    l.angle = l.x, delete l.x;
    l.radius = l.y, delete l.y;
    l.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
    };
    return l;
}
function _default() {
    return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}

},{"e70a48011089151b":"1P3rZ","c9cfa76da61b3bea":"6TFJp","8175cc09e1b11243":"iAb6O","bc3f9d98257b2892":"bsbWB"}],"ckZ6O":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x, y) {
    return [
        (y = +y) * Math.cos(x -= Math.PI / 2),
        y * Math.sin(x)
    ];
}

},{}],"5m8OB":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("477d32962937cafe").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.link = link;
exports.linkHorizontal = linkHorizontal;
exports.linkRadial = linkRadial;
exports.linkVertical = linkVertical;
var _array = require("5122e0bdff8c9bc");
var _constant = _interopRequireDefault(require("b1aa1969585b6c77"));
var _bump = require("53a1c2de83ddf00a");
var _path = require("a168a0d3ac8da03f");
var _point = require("3099313949c9b7c4");
function linkSource(d) {
    return d.source;
}
function linkTarget(d) {
    return d.target;
}
function link(curve) {
    let source = linkSource, target = linkTarget, x = _point.x, y = _point.y, context = null, output = null, path = (0, _path.withPath)(link);
    function link() {
        let buffer;
        const argv = _array.slice.call(arguments);
        const s = source.apply(this, argv);
        const t = target.apply(this, argv);
        if (context == null) output = curve(buffer = path());
        output.lineStart();
        argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));
        argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));
        output.lineEnd();
        if (buffer) return output = null, buffer + "" || null;
    }
    link.source = function(_) {
        return arguments.length ? (source = _, link) : source;
    };
    link.target = function(_) {
        return arguments.length ? (target = _, link) : target;
    };
    link.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
    };
    link.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
    };
    link.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;
    };
    return link;
}
function linkHorizontal() {
    return link(_bump.bumpX);
}
function linkVertical() {
    return link(_bump.bumpY);
}
function linkRadial() {
    const l = link(_bump.bumpRadial);
    l.angle = l.x, delete l.x;
    l.radius = l.y, delete l.y;
    return l;
}

},{"477d32962937cafe":"1P3rZ","5122e0bdff8c9bc":"5HcPx","b1aa1969585b6c77":"Au8Iv","53a1c2de83ddf00a":"c41Nb","a168a0d3ac8da03f":"71GRo","3099313949c9b7c4":"bUXeB"}],"c41Nb":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6740c263a6c95dd3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bumpRadial = bumpRadial;
exports.bumpX = bumpX;
exports.bumpY = bumpY;
var _pointRadial = _interopRequireDefault(require("4a24424cc7c34ce7"));
class Bump {
    constructor(context, x){
        this._context = context;
        this._x = x;
    }
    areaStart() {
        this._line = 0;
    }
    areaEnd() {
        this._line = NaN;
    }
    lineStart() {
        this._point = 0;
    }
    lineEnd() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    }
    point(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                if (this._line) this._context.lineTo(x, y);
                else this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
                else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
                break;
        }
        this._x0 = x, this._y0 = y;
    }
}
class BumpRadial {
    constructor(context){
        this._context = context;
    }
    lineStart() {
        this._point = 0;
    }
    lineEnd() {}
    point(x, y) {
        x = +x, y = +y;
        if (this._point === 0) this._point = 1;
        else {
            const p0 = (0, _pointRadial.default)(this._x0, this._y0);
            const p1 = (0, _pointRadial.default)(this._x0, this._y0 = (this._y0 + y) / 2);
            const p2 = (0, _pointRadial.default)(x, this._y0);
            const p3 = (0, _pointRadial.default)(x, y);
            this._context.moveTo(...p0);
            this._context.bezierCurveTo(...p1, ...p2, ...p3);
        }
        this._x0 = x, this._y0 = y;
    }
}
function bumpX(context) {
    return new Bump(context, true);
}
function bumpY(context) {
    return new Bump(context, false);
}
function bumpRadial(context) {
    return new BumpRadial(context);
}

},{"6740c263a6c95dd3":"1P3rZ","4a24424cc7c34ce7":"ckZ6O"}],"8vN7P":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ed423cc663f7931").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Symbol;
exports.symbolsStroke = exports.symbolsFill = void 0;
var _constant = _interopRequireDefault(require("c59ae9d834a05273"));
var _path = require("9c57f557d5497994");
var _asterisk = _interopRequireDefault(require("5fe1fea46e49fa9"));
var _circle = _interopRequireDefault(require("f76ad214ddcdb640"));
var _cross = _interopRequireDefault(require("608aca46fe568d90"));
var _diamond = _interopRequireDefault(require("5a376172978d4ece"));
var _diamond2 = _interopRequireDefault(require("7958fae8441e40b8"));
var _plus = _interopRequireDefault(require("e3cef86454c5b2ab"));
var _square = _interopRequireDefault(require("80955e772be91e0b"));
var _square2 = _interopRequireDefault(require("c9cf68f88fd7595c"));
var _star = _interopRequireDefault(require("e18e565c622a4fc3"));
var _triangle = _interopRequireDefault(require("e54fbfc396ab48ec"));
var _triangle2 = _interopRequireDefault(require("40acefa15a51d469"));
var _wye = _interopRequireDefault(require("25ebfd886a694bb8"));
var _times = _interopRequireDefault(require("bee5ddd6fd3766bc"));
// These symbols are designed to be filled.
const symbolsFill = exports.symbolsFill = [
    _circle.default,
    _cross.default,
    _diamond.default,
    _square.default,
    _star.default,
    _triangle.default,
    _wye.default
];
// These symbols are designed to be stroked (with a width of 1.5px and round caps).
const symbolsStroke = exports.symbolsStroke = [
    _circle.default,
    _plus.default,
    _times.default,
    _triangle2.default,
    _asterisk.default,
    _square2.default,
    _diamond2.default
];
function Symbol(type, size) {
    let context = null, path = (0, _path.withPath)(symbol);
    type = typeof type === "function" ? type : (0, _constant.default)(type || _circle.default);
    size = typeof size === "function" ? size : (0, _constant.default)(size === undefined ? 64 : +size);
    function symbol() {
        let buffer;
        if (!context) context = buffer = path();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
    }
    symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
    };
    symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
    };
    symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
    };
    return symbol;
}

},{"ed423cc663f7931":"1P3rZ","c59ae9d834a05273":"Au8Iv","9c57f557d5497994":"71GRo","5fe1fea46e49fa9":"4RAUi","f76ad214ddcdb640":"OnJJc","608aca46fe568d90":"5WMAh","5a376172978d4ece":"1ihUy","7958fae8441e40b8":"4xikQ","e3cef86454c5b2ab":"bbph5","80955e772be91e0b":"7jmt8","c9cf68f88fd7595c":"6ioTC","e18e565c622a4fc3":"d6W5B","e54fbfc396ab48ec":"edeJ0","40acefa15a51d469":"150UI","25ebfd886a694bb8":"lbDX1","bee5ddd6fd3766bc":"bTofj"}],"4RAUi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("34f3ea1e193971bc");
const sqrt3 = (0, _math.sqrt)(3);
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size + (0, _math.min)(size / 28, 0.75)) * 0.59436;
        const t = r / 2;
        const u = t * sqrt3;
        context.moveTo(0, r);
        context.lineTo(0, -r);
        context.moveTo(-u, -t);
        context.lineTo(u, t);
        context.moveTo(-u, t);
        context.lineTo(u, -t);
    }
};

},{"34f3ea1e193971bc":"cky62"}],"OnJJc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("915f8f5df86192d6");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / _math.pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, _math.tau);
    }
};

},{"915f8f5df86192d6":"cky62"}],"5WMAh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("2906705055fa6d20");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
    }
};

},{"2906705055fa6d20":"cky62"}],"1ihUy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("7825f0d98755e7da");
const tan30 = (0, _math.sqrt)(1 / 3);
const tan30_2 = tan30 * 2;
var _default = exports.default = {
    draw (context, size) {
        const y = (0, _math.sqrt)(size / tan30_2);
        const x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
    }
};

},{"7825f0d98755e7da":"cky62"}],"4xikQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("3584a2e0506b0b63");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size) * 0.62625;
        context.moveTo(0, -r);
        context.lineTo(r, 0);
        context.lineTo(0, r);
        context.lineTo(-r, 0);
        context.closePath();
    }
};

},{"3584a2e0506b0b63":"cky62"}],"bbph5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("f268736e27eb4461");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 7, 2)) * 0.87559;
        context.moveTo(-r, 0);
        context.lineTo(r, 0);
        context.moveTo(0, r);
        context.lineTo(0, -r);
    }
};

},{"f268736e27eb4461":"cky62"}],"7jmt8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("9a8a9ecf0393a346");
var _default = exports.default = {
    draw (context, size) {
        const w = (0, _math.sqrt)(size);
        const x = -w / 2;
        context.rect(x, x, w, w);
    }
};

},{"9a8a9ecf0393a346":"cky62"}],"6ioTC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("f94e98ee4970b726");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size) * 0.4431;
        context.moveTo(r, r);
        context.lineTo(r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, r);
        context.closePath();
    }
};

},{"f94e98ee4970b726":"cky62"}],"d6W5B":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("169152464c7499ec");
const ka = 0.89081309152928522810;
const kr = (0, _math.sin)(_math.pi / 10) / (0, _math.sin)(7 * _math.pi / 10);
const kx = (0, _math.sin)(_math.tau / 10) * kr;
const ky = -(0, _math.cos)(_math.tau / 10) * kr;
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size * ka);
        const x = kx * r;
        const y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for(let i = 1; i < 5; ++i){
            const a = _math.tau * i / 5;
            const c = (0, _math.cos)(a);
            const s = (0, _math.sin)(a);
            context.lineTo(s * r, -c * r);
            context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
    }
};

},{"169152464c7499ec":"cky62"}],"edeJ0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("27e8719361b84739");
const sqrt3 = (0, _math.sqrt)(3);
var _default = exports.default = {
    draw (context, size) {
        const y = -(0, _math.sqrt)(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
    }
};

},{"27e8719361b84739":"cky62"}],"150UI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("5d7bff2a81d22cc1");
const sqrt3 = (0, _math.sqrt)(3);
var _default = exports.default = {
    draw (context, size) {
        const s = (0, _math.sqrt)(size) * 0.6824;
        const t = s / 2;
        const u = s * sqrt3 / 2; // cos(Math.PI / 6)
        context.moveTo(0, -s);
        context.lineTo(u, t);
        context.lineTo(-u, t);
        context.closePath();
    }
};

},{"5d7bff2a81d22cc1":"cky62"}],"lbDX1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("5b5f3503dd13a808");
const c = -0.5;
const s = (0, _math.sqrt)(3) / 2;
const k = 1 / (0, _math.sqrt)(12);
const a = (k / 2 + 1) * 3;
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / a);
        const x0 = r / 2, y0 = r * k;
        const x1 = x0, y1 = r * k + r;
        const x2 = -x1, y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
    }
};

},{"5b5f3503dd13a808":"cky62"}],"bTofj":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("469e59dbaaf314cd");
var _default = exports.default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 6, 1.7)) * 0.6189;
        context.moveTo(-r, -r);
        context.lineTo(r, r);
        context.moveTo(-r, r);
        context.lineTo(r, -r);
    }
};

},{"469e59dbaaf314cd":"cky62"}],"bepld":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4a27c5ea893ca5d9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _noop = _interopRequireDefault(require("b1939a9f8eee1407"));
var _basis = require("a2826e4f1c5c670a");
function BasisClosed(context) {
    this._context = context;
}
BasisClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x2, this._y2);
                this._context.closePath();
                break;
            case 2:
                this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
                this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x2, this._y2);
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._x2 = x, this._y2 = y;
                break;
            case 1:
                this._point = 2;
                this._x3 = x, this._y3 = y;
                break;
            case 2:
                this._point = 3;
                this._x4 = x, this._y4 = y;
                this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);
                break;
            default:
                (0, _basis.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new BasisClosed(context);
}

},{"4a27c5ea893ca5d9":"1P3rZ","b1939a9f8eee1407":"4Vfvf","a2826e4f1c5c670a":"auxlC"}],"4Vfvf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default() {}

},{}],"auxlC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Basis = Basis;
exports.default = _default;
exports.point = point;
function point(that, x, y) {
    that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}
function Basis(context) {
    this._context = context;
}
Basis.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 3:
                point(this, this._x1, this._y1);
            // falls through
            case 2:
                this._context.lineTo(this._x1, this._y1);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new Basis(context);
}

},{}],"b7qHj":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _basis = require("85b9abf7cdcc5682");
function BasisOpen(context) {
    this._context = context;
}
BasisOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6;
                this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _basis.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new BasisOpen(context);
}

},{"85b9abf7cdcc5682":"auxlC"}],"aL1ij":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _basis = require("517b63cae31df65e");
function Bundle(context, beta) {
    this._basis = new _basis.Basis(context);
    this._beta = beta;
}
Bundle.prototype = {
    lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
    },
    lineEnd: function() {
        var x = this._x, y = this._y, j = x.length - 1;
        if (j > 0) {
            var x0 = x[0], y0 = y[0], dx = x[j] - x0, dy = y[j] - y0, i = -1, t;
            while(++i <= j){
                t = i / j;
                this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
            }
        }
        this._x = this._y = null;
        this._basis.lineEnd();
    },
    point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
    }
};
var _default = exports.default = function custom(beta) {
    function bundle(context) {
        return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
    }
    bundle.beta = function(beta) {
        return custom(+beta);
    };
    return bundle;
}(0.85);

},{"517b63cae31df65e":"auxlC"}],"2g7Ih":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8f601c27a0993a0f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;
var _noop = _interopRequireDefault(require("6d95724d7509c31e"));
var _cardinal = require("6332776ee18d4767");
function CardinalClosed(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 2:
                this._context.lineTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                this.point(this._x5, this._y5);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._x3 = x, this._y3 = y;
                break;
            case 1:
                this._point = 2;
                this._context.moveTo(this._x4 = x, this._y4 = y);
                break;
            case 2:
                this._point = 3;
                this._x5 = x, this._y5 = y;
                break;
            default:
                (0, _cardinal.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(tension) {
    function cardinal(context) {
        return new CardinalClosed(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);

},{"8f601c27a0993a0f":"1P3rZ","6d95724d7509c31e":"4Vfvf","6332776ee18d4767":"6JvPR"}],"6JvPR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cardinal = Cardinal;
exports.default = void 0;
exports.point = point;
function point(that, x, y) {
    that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}
function Cardinal(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x2, this._y2);
                break;
            case 3:
                point(this, this._x1, this._y1);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                this._x1 = x, this._y1 = y;
                break;
            case 2:
                this._point = 3;
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(tension) {
    function cardinal(context) {
        return new Cardinal(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);

},{}],"dyRbx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;
var _cardinal = require("8c7eb23e7157226d");
function CardinalOpen(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _cardinal.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(tension) {
    function cardinal(context) {
        return new CardinalOpen(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);

},{"8c7eb23e7157226d":"6JvPR"}],"iAYEq":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d02611e5a36f8803").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _cardinalClosed = require("4f5a5817eb8c6cca");
var _noop = _interopRequireDefault(require("12df457b1772ae69"));
var _catmullRom = require("5bfac48a6fe9ff97");
function CatmullRomClosed(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRomClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 2:
                this._context.lineTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                this.point(this._x5, this._y5);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                this._x3 = x, this._y3 = y;
                break;
            case 1:
                this._point = 2;
                this._context.moveTo(this._x4 = x, this._y4 = y);
                break;
            case 2:
                this._point = 3;
                this._x5 = x, this._y5 = y;
                break;
            default:
                (0, _catmullRom.point)(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);

},{"d02611e5a36f8803":"1P3rZ","4f5a5817eb8c6cca":"2g7Ih","12df457b1772ae69":"4Vfvf","5bfac48a6fe9ff97":"3Q9Pw"}],"3Q9Pw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.point = point;
var _math = require("9541d9c715bd431c");
var _cardinal = require("b05c3aa2c93eee48");
function point(that, x, y) {
    var x1 = that._x1, y1 = that._y1, x2 = that._x2, y2 = that._y2;
    if (that._l01_a > _math.epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
    }
    if (that._l23_a > _math.epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
    }
    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}
function CatmullRom(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRom.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x2, this._y2);
                break;
            case 3:
                this.point(this._x2, this._y2);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);

},{"9541d9c715bd431c":"cky62","b05c3aa2c93eee48":"6JvPR"}],"dSbmi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _cardinalOpen = require("f32f797b7be7a5d3");
var _catmullRom = require("7003eb8aae1091e");
function CatmullRomOpen(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRomOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _catmullRom.point)(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = exports.default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);

},{"f32f797b7be7a5d3":"dyRbx","7003eb8aae1091e":"3Q9Pw"}],"3iXmB":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4772bafe138427f1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _noop = _interopRequireDefault(require("3b1cf02c4b110333"));
function LinearClosed(context) {
    this._context = context;
}
LinearClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._point) this._context.closePath();
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);
        else this._point = 1, this._context.moveTo(x, y);
    }
};
function _default(context) {
    return new LinearClosed(context);
}

},{"4772bafe138427f1":"1P3rZ","3b1cf02c4b110333":"4Vfvf"}],"husMO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;
function sign(x) {
    return x < 0 ? -1 : 1;
}
// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
    var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
// Calculate a one-sided slope.
function slope2(that, t) {
    var h = that._x1 - that._x0;
    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point(that, t0, t1) {
    var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}
function MonotoneX(context) {
    this._context = context;
}
MonotoneX.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x1, this._y1);
                break;
            case 3:
                point(this, this._t0, slope2(this, this._t0));
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        var t1 = NaN;
        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                point(this, slope2(this, t1 = slope3(this, x, y)), t1);
                break;
            default:
                point(this, this._t0, t1 = slope3(this, x, y));
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
    }
};
function MonotoneY(context) {
    this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
    MonotoneX.prototype.point.call(this, y, x);
};
function ReflectContext(context) {
    this._context = context;
}
ReflectContext.prototype = {
    moveTo: function(x, y) {
        this._context.moveTo(y, x);
    },
    closePath: function() {
        this._context.closePath();
    },
    lineTo: function(x, y) {
        this._context.lineTo(y, x);
    },
    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
    }
};
function monotoneX(context) {
    return new MonotoneX(context);
}
function monotoneY(context) {
    return new MonotoneY(context);
}

},{}],"5xZAm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function Natural(context) {
    this._context = context;
}
Natural.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x = [];
        this._y = [];
    },
    lineEnd: function() {
        var x = this._x, y = this._y, n = x.length;
        if (n) {
            this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
            if (n === 2) this._context.lineTo(x[1], y[1]);
            else {
                var px = controlPoints(x), py = controlPoints(y);
                for(var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1)this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
        }
        if (this._line || this._line !== 0 && n === 1) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
    },
    point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
    }
};
// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
    var i, n = x.length - 1, m, a = new Array(n), b = new Array(n), r = new Array(n);
    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
    for(i = 1; i < n - 1; ++i)a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
    for(i = 1; i < n; ++i)m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
    a[n - 1] = r[n - 1] / b[n - 1];
    for(i = n - 2; i >= 0; --i)a[i] = (r[i] - a[i + 1]) / b[i];
    b[n - 1] = (x[n] + a[n - 1]) / 2;
    for(i = 0; i < n - 1; ++i)b[i] = 2 * x[i + 1] - a[i + 1];
    return [
        a,
        b
    ];
}
function _default(context) {
    return new Natural(context);
}

},{}],"cIqCU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.stepAfter = stepAfter;
exports.stepBefore = stepBefore;
function Step(context, t) {
    this._context = context;
    this._t = t;
}
Step.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                if (this._t <= 0) {
                    this._context.lineTo(this._x, y);
                    this._context.lineTo(x, y);
                } else {
                    var x1 = this._x * (1 - this._t) + x * this._t;
                    this._context.lineTo(x1, this._y);
                    this._context.lineTo(x1, y);
                }
                break;
        }
        this._x = x, this._y = y;
    }
};
function _default(context) {
    return new Step(context, 0.5);
}
function stepBefore(context) {
    return new Step(context, 0);
}
function stepAfter(context) {
    return new Step(context, 1);
}

},{}],"hJACq":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("91126c15fcb8986d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("f7345a9630be862b"));
var _constant = _interopRequireDefault(require("dd202ee8b1a7b69a"));
var _none = _interopRequireDefault(require("ee308b974535e08d"));
var _none2 = _interopRequireDefault(require("1fc52c5450aa1e1d"));
function stackValue(d, key) {
    return d[key];
}
function stackSeries(key) {
    const series = [];
    series.key = key;
    return series;
}
function _default() {
    var keys = (0, _constant.default)([]), order = _none2.default, offset = _none.default, value = stackValue;
    function stack(data) {
        var sz = Array.from(keys.apply(this, arguments), stackSeries), i, n = sz.length, j = -1, oz;
        for (const d of data)for(i = 0, ++j; i < n; ++i)(sz[i][j] = [
            0,
            +value(d, sz[i].key, j, data)
        ]).data = d;
        for(i = 0, oz = (0, _array.default)(order(sz)); i < n; ++i)sz[oz[i]].index = i;
        offset(sz, oz);
        return sz;
    }
    stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : keys;
    };
    stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
    };
    stack.order = function(_) {
        return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : order;
    };
    stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
    };
    return stack;
}

},{"91126c15fcb8986d":"1P3rZ","f7345a9630be862b":"5HcPx","dd202ee8b1a7b69a":"Au8Iv","ee308b974535e08d":"4FhTL","1fc52c5450aa1e1d":"5piKl"}],"4FhTL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series, order) {
    if (!((n = series.length) > 1)) return;
    for(var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i){
        s0 = s1, s1 = series[order[i]];
        for(j = 0; j < m; ++j)s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
}

},{}],"5piKl":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series) {
    var n = series.length, o = new Array(n);
    while(--n >= 0)o[n] = n;
    return o;
}

},{}],"aJz0u":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f592441eccdddb6e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("ac7b7521427429b8"));
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var i, n, j = 0, m = series[0].length, y; j < m; ++j){
        for(y = i = 0; i < n; ++i)y += series[i][j][1] || 0;
        if (y) for(i = 0; i < n; ++i)series[i][j][1] /= y;
    }
    (0, _none.default)(series, order);
}

},{"f592441eccdddb6e":"1P3rZ","ac7b7521427429b8":"4FhTL"}],"4SmBt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j)for(yp = yn = 0, i = 0; i < n; ++i){
        if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) d[0] = yp, d[1] = yp += dy;
        else if (dy < 0) d[1] = yn, d[0] = yn += dy;
        else d[0] = 0, d[1] = dy;
    }
}

},{}],"wV71w":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c8378734449b46d3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("46b11c5f41b1b220"));
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j){
        for(var i = 0, y = 0; i < n; ++i)y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
    }
    (0, _none.default)(series, order);
}

},{"c8378734449b46d3":"1P3rZ","46b11c5f41b1b220":"4FhTL"}],"kXP1Z":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("44f77c3d612d662f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("ef7d2dcd12e260cf"));
function _default(series, order) {
    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
    for(var y = 0, j = 1, s0, m, n; j < m; ++j){
        for(var i = 0, s1 = 0, s2 = 0; i < n; ++i){
            var si = series[order[i]], sij0 = si[j][1] || 0, sij1 = si[j - 1][1] || 0, s3 = (sij0 - sij1) / 2;
            for(var k = 0; k < i; ++k){
                var sk = series[order[k]], skj0 = sk[j][1] || 0, skj1 = sk[j - 1][1] || 0;
                s3 += skj0 - skj1;
            }
            s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    (0, _none.default)(series, order);
}

},{"44f77c3d612d662f":"1P3rZ","ef7d2dcd12e260cf":"4FhTL"}],"f8Yez":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3243677771e840a4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("5f797abd83740078"));
function _default(series) {
    var peaks = series.map(peak);
    return (0, _none.default)(series).sort(function(a, b) {
        return peaks[a] - peaks[b];
    });
}
function peak(series) {
    var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
    while(++i < n)if ((vi = +series[i][1]) > vj) vj = vi, j = i;
    return j;
}

},{"3243677771e840a4":"1P3rZ","5f797abd83740078":"5piKl"}],"cS46J":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("b74117106b345158").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.sum = sum;
var _none = _interopRequireDefault(require("cb7bd4d5fccc91bf"));
function _default(series) {
    var sums = series.map(sum);
    return (0, _none.default)(series).sort(function(a, b) {
        return sums[a] - sums[b];
    });
}
function sum(series) {
    var s = 0, i = -1, n = series.length, v;
    while(++i < n)if (v = +series[i][1]) s += v;
    return s;
}

},{"b74117106b345158":"1P3rZ","cb7bd4d5fccc91bf":"5piKl"}],"18Ugz":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("b1b4b6ecad0fc52e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _ascending = _interopRequireDefault(require("519194ba88274390"));
function _default(series) {
    return (0, _ascending.default)(series).reverse();
}

},{"b1b4b6ecad0fc52e":"1P3rZ","519194ba88274390":"cS46J"}],"XtumQ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c94adc2250153d4b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _appearance = _interopRequireDefault(require("89d977b0429eb388"));
var _ascending = require("31a44ef482f121f6");
function _default(series) {
    var n = series.length, i, j, sums = series.map(_ascending.sum), order = (0, _appearance.default)(series), top = 0, bottom = 0, tops = [], bottoms = [];
    for(i = 0; i < n; ++i){
        j = order[i];
        if (top < bottom) {
            top += sums[j];
            tops.push(j);
        } else {
            bottom += sums[j];
            bottoms.push(j);
        }
    }
    return bottoms.reverse().concat(tops);
}

},{"c94adc2250153d4b":"1P3rZ","89d977b0429eb388":"f8Yez","31a44ef482f121f6":"cS46J"}],"fKrW7":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9d0235a72c0c44ed").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("966e4d52718839d"));
function _default(series) {
    return (0, _none.default)(series).reverse();
}

},{"9d0235a72c0c44ed":"1P3rZ","966e4d52718839d":"5piKl"}],"fpCUT":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("e1dfbde76fabf561").default;
var _interopRequireWildcard = require("4b854680475428e7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AreaElement = AreaElement;
exports.areaElementClasses = void 0;
exports.getAreaElementUtilityClass = getAreaElementUtilityClass;
var _extends2 = _interopRequireDefault(require("f48acc8e110951cb"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("a62886b5c4274fc7"));
var React = _interopRequireWildcard(require("5d9260f2467f2da8"));
var _propTypes = _interopRequireDefault(require("fae2b5141aa8e27e"));
var _composeClasses = _interopRequireDefault(require("7b4bd3e0cb5eb96b"));
var _useSlotProps = _interopRequireDefault(require("64ad0e92bca96b7e"));
var _generateUtilityClass = _interopRequireDefault(require("b9027f2a03814bbf"));
var _generateUtilityClasses = _interopRequireDefault(require("7422b0d037f8132e"));
var _useInteractionItemProps = require("a10ff5d91e5c8799");
var _useItemHighlighted = require("3c2b509f7976d726");
var _AnimatedArea = require("a864bca7c48d9b1d");
var _jsxRuntime = require("67c56a8469a4b62a");
const _excluded = [
    "id",
    "classes",
    "color",
    "gradientId",
    "slots",
    "slotProps",
    "onClick"
];
function getAreaElementUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiAreaElement', slot);
}
const areaElementClasses = exports.areaElementClasses = (0, _generateUtilityClasses.default)('MuiAreaElement', [
    'root',
    'highlighted',
    'faded',
    'series'
]);
const useUtilityClasses = (ownerState)=>{
    const { classes, id, isFaded, isHighlighted } = ownerState;
    const slots = {
        root: [
            'root',
            `series-${id}`,
            isHighlighted && 'highlighted',
            isFaded && 'faded'
        ]
    };
    return (0, _composeClasses.default)(slots, getAreaElementUtilityClass, classes);
};
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)
 *
 * API:
 *
 * - [AreaElement API](https://mui.com/x/api/charts/area-element/)
 */ function AreaElement(props) {
    const { id, classes: innerClasses, color, gradientId, slots, slotProps, onClick } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
        type: 'line',
        seriesId: id
    });
    const { isFaded, isHighlighted } = (0, _useItemHighlighted.useItemHighlighted)({
        seriesId: id
    });
    const ownerState = {
        id,
        classes: innerClasses,
        color,
        gradientId,
        isFaded,
        isHighlighted
    };
    const classes = useUtilityClasses(ownerState);
    const Area = slots?.area ?? _AnimatedArea.AnimatedArea;
    const areaProps = (0, _useSlotProps.default)({
        elementType: Area,
        externalSlotProps: slotProps?.area,
        additionalProps: (0, _extends2.default)({}, interactionProps, {
            onClick,
            cursor: onClick ? 'pointer' : 'unset'
        }),
        className: classes.root,
        ownerState
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Area, (0, _extends2.default)({}, other, areaProps));
}
AreaElement.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    classes: _propTypes.default.object,
    color: _propTypes.default.string.isRequired,
    d: _propTypes.default.string.isRequired,
    gradientId: _propTypes.default.string,
    id: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"e1dfbde76fabf561":"1P3rZ","4b854680475428e7":"6TFJp","f48acc8e110951cb":"lKa0J","a62886b5c4274fc7":"17jFf","5d9260f2467f2da8":"jMk1U","fae2b5141aa8e27e":"GNqOQ","7b4bd3e0cb5eb96b":"gluJr","64ad0e92bca96b7e":"7cNZ5","b9027f2a03814bbf":"iAc9p","7422b0d037f8132e":"3J0Rs","a10ff5d91e5c8799":"beDHx","3c2b509f7976d726":"bzOyV","a864bca7c48d9b1d":"ipIWo","67c56a8469a4b62a":"05iiF"}],"7cNZ5":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e27cd92635d16b56").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useSlotProps.default;
    }
});
var _useSlotProps = _interopRequireDefault(require("29750db15f9876da"));

},{"e27cd92635d16b56":"1P3rZ","29750db15f9876da":"aILqc"}],"aILqc":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("a21f35e014bd8f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _useForkRef = _interopRequireDefault(require("c814754bf676d4d8"));
var _appendOwnerState = _interopRequireDefault(require("91c0e9e36f102bb9"));
var _mergeSlotProps = _interopRequireDefault(require("230f6b30cc66f46c"));
var _resolveComponentProps = _interopRequireDefault(require("7d3d64e9007ca80e"));
/**
 * @ignore - do not document.
 * Builds the props to be passed into the slot of an unstyled component.
 * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.
 * If the slot component is not a host component, it also merges in the `ownerState`.
 *
 * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.
 */ function useSlotProps(parameters) {
    const { elementType, externalSlotProps, ownerState, skipResolvingSlotProps = false, ...other } = parameters;
    const resolvedComponentsProps = skipResolvingSlotProps ? {} : (0, _resolveComponentProps.default)(externalSlotProps, ownerState);
    const { props: mergedProps, internalRef } = (0, _mergeSlotProps.default)({
        ...other,
        externalSlotProps: resolvedComponentsProps
    });
    const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);
    const props = (0, _appendOwnerState.default)(elementType, {
        ...mergedProps,
        ref
    }, ownerState);
    return props;
}
var _default = exports.default = useSlotProps;

},{"a21f35e014bd8f":"1P3rZ","c814754bf676d4d8":"g7kn5","91c0e9e36f102bb9":"8FQk0","230f6b30cc66f46c":"a2wyj","7d3d64e9007ca80e":"dJJn9"}],"g7kn5":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e65de141a07c5e4b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useForkRef.default;
    }
});
var _useForkRef = _interopRequireDefault(require("76422d3c27bc6864"));

},{"e65de141a07c5e4b":"1P3rZ","76422d3c27bc6864":"bY4YC"}],"bY4YC":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("c5001007a90df00").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useForkRef;
var React = _interopRequireWildcard(require("ba3eef59680b5588"));
/**
 * Merges refs into a single memoized callback ref or `null`.
 *
 * ```tsx
 * const rootRef = React.useRef<Instance>(null);
 * const refFork = useForkRef(rootRef, props.ref);
 *
 * return (
 *   <Root {...props} ref={refFork} />
 * );
 * ```
 *
 * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.
 * @returns {React.RefCallback<Instance> | null} The new ref callback.
 */ function useForkRef(...refs) {
    const cleanupRef = React.useRef(undefined);
    const refEffect = React.useCallback((instance)=>{
        const cleanups = refs.map((ref)=>{
            if (ref == null) return null;
            if (typeof ref === 'function') {
                const refCallback = ref;
                const refCleanup = refCallback(instance);
                return typeof refCleanup === 'function' ? refCleanup : ()=>{
                    refCallback(null);
                };
            }
            ref.current = instance;
            return ()=>{
                ref.current = null;
            };
        });
        return ()=>{
            cleanups.forEach((refCleanup)=>refCleanup?.());
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, refs);
    return React.useMemo(()=>{
        if (refs.every((ref)=>ref == null)) return null;
        return (value)=>{
            if (cleanupRef.current) {
                cleanupRef.current();
                cleanupRef.current = undefined;
            }
            if (value != null) cleanupRef.current = refEffect(value);
        };
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, refs);
}

},{"c5001007a90df00":"6TFJp","ba3eef59680b5588":"jMk1U"}],"8FQk0":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f39f3c9d877a1779").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _appendOwnerState.default;
    }
});
var _appendOwnerState = _interopRequireDefault(require("2e6275f4a9983e72"));

},{"f39f3c9d877a1779":"1P3rZ","2e6275f4a9983e72":"boMrj"}],"boMrj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ecd59038b56a9182").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _isHostComponent = _interopRequireDefault(require("3524ff737db859f2"));
/**
 * Type of the ownerState based on the type of an element it applies to.
 * This resolves to the provided OwnerState for React components and `undefined` for host components.
 * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.
 */ /**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.
 * @param otherProps Props of the element.
 * @param ownerState
 */ function appendOwnerState(elementType, otherProps, ownerState) {
    if (elementType === undefined || (0, _isHostComponent.default)(elementType)) return otherProps;
    return {
        ...otherProps,
        ownerState: {
            ...otherProps.ownerState,
            ...ownerState
        }
    };
}
var _default = exports.default = appendOwnerState;

},{"ecd59038b56a9182":"1P3rZ","3524ff737db859f2":"kIVEz"}],"kIVEz":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a5c1dd68c83c8a7d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _isHostComponent.default;
    }
});
var _isHostComponent = _interopRequireDefault(require("5f850c24eda5a08"));

},{"a5c1dd68c83c8a7d":"1P3rZ","5f850c24eda5a08":"iO4yv"}],"iO4yv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */ function isHostComponent(element) {
    return typeof element === 'string';
}
var _default = exports.default = isHostComponent;

},{}],"a2wyj":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c55bd06aa78c45db").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _mergeSlotProps.default;
    }
});
var _mergeSlotProps = _interopRequireDefault(require("3b012fe1851f4206"));

},{"c55bd06aa78c45db":"1P3rZ","3b012fe1851f4206":"792Z5"}],"792Z5":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c2fc8ee98c82c801").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _clsx = _interopRequireDefault(require("37572fd2c795853f"));
var _extractEventHandlers = _interopRequireDefault(require("dbe821ec9b52ba7"));
var _omitEventHandlers = _interopRequireDefault(require("c7ececfe474ab351"));
/**
 * Merges the slot component internal props (usually coming from a hook)
 * with the externally provided ones.
 *
 * The merge order is (the latter overrides the former):
 * 1. The internal props (specified as a getter function to work with get*Props hook result)
 * 2. Additional props (specified internally on a Base UI component)
 * 3. External props specified on the owner component. These should only be used on a root slot.
 * 4. External props specified in the `slotProps.*` prop.
 * 5. The `className` prop - combined from all the above.
 * @param parameters
 * @returns
 */ function mergeSlotProps(parameters) {
    const { getSlotProps, additionalProps, externalSlotProps, externalForwardedProps, className } = parameters;
    if (!getSlotProps) {
        // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,
        // so we can simply merge all the props without having to worry about extracting event handlers.
        const joinedClasses = (0, _clsx.default)(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);
        const mergedStyle = {
            ...additionalProps?.style,
            ...externalForwardedProps?.style,
            ...externalSlotProps?.style
        };
        const props = {
            ...additionalProps,
            ...externalForwardedProps,
            ...externalSlotProps
        };
        if (joinedClasses.length > 0) props.className = joinedClasses;
        if (Object.keys(mergedStyle).length > 0) props.style = mergedStyle;
        return {
            props,
            internalRef: undefined
        };
    }
    // In this case, getSlotProps is responsible for calling the external event handlers.
    // We don't need to include them in the merged props because of this.
    const eventHandlers = (0, _extractEventHandlers.default)({
        ...externalForwardedProps,
        ...externalSlotProps
    });
    const componentsPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalSlotProps);
    const otherPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalForwardedProps);
    const internalSlotProps = getSlotProps(eventHandlers);
    // The order of classes is important here.
    // Emotion (that we use in libraries consuming Base UI) depends on this order
    // to properly override style. It requires the most important classes to be last
    // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.
    const joinedClasses = (0, _clsx.default)(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);
    const mergedStyle = {
        ...internalSlotProps?.style,
        ...additionalProps?.style,
        ...externalForwardedProps?.style,
        ...externalSlotProps?.style
    };
    const props = {
        ...internalSlotProps,
        ...additionalProps,
        ...otherPropsWithoutEventHandlers,
        ...componentsPropsWithoutEventHandlers
    };
    if (joinedClasses.length > 0) props.className = joinedClasses;
    if (Object.keys(mergedStyle).length > 0) props.style = mergedStyle;
    return {
        props,
        internalRef: internalSlotProps.ref
    };
}
var _default = exports.default = mergeSlotProps;

},{"c2fc8ee98c82c801":"1P3rZ","37572fd2c795853f":"dOSJC","dbe821ec9b52ba7":"g9THZ","c7ececfe474ab351":"cEckm"}],"g9THZ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("fc1dc899b8527ecb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _extractEventHandlers.default;
    }
});
var _extractEventHandlers = _interopRequireDefault(require("7fe6d30ce968b905"));

},{"fc1dc899b8527ecb":"1P3rZ","7fe6d30ce968b905":"nanhJ"}],"nanhJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
/**
 * Extracts event handlers from a given object.
 * A prop is considered an event handler if it is a function and its name starts with `on`.
 *
 * @param object An object to extract event handlers from.
 * @param excludeKeys An array of keys to exclude from the returned object.
 */ function extractEventHandlers(object, excludeKeys = []) {
    if (object === undefined) return {};
    const result = {};
    Object.keys(object).filter((prop)=>prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach((prop)=>{
        result[prop] = object[prop];
    });
    return result;
}
var _default = exports.default = extractEventHandlers;

},{}],"cEckm":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7649c2d092210c94").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _omitEventHandlers.default;
    }
});
var _omitEventHandlers = _interopRequireDefault(require("4626b8f552d7ff36"));

},{"7649c2d092210c94":"1P3rZ","4626b8f552d7ff36":"fnZP3"}],"fnZP3":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
/**
 * Removes event handlers from the given object.
 * A field is considered an event handler if it is a function with a name beginning with `on`.
 *
 * @param object Object to remove event handlers from.
 * @returns Object with event handlers removed.
 */ function omitEventHandlers(object) {
    if (object === undefined) return {};
    const result = {};
    Object.keys(object).filter((prop)=>!(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach((prop)=>{
        result[prop] = object[prop];
    });
    return result;
}
var _default = exports.default = omitEventHandlers;

},{}],"dJJn9":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("fa4698c3c8093423").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _resolveComponentProps.default;
    }
});
var _resolveComponentProps = _interopRequireDefault(require("93453399dc57a26"));

},{"fa4698c3c8093423":"1P3rZ","93453399dc57a26":"fxksb"}],"fxksb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
/**
 * If `componentProps` is a function, calls it with the provided `ownerState`.
 * Otherwise, just returns `componentProps`.
 */ function resolveComponentProps(componentProps, ownerState, slotState) {
    if (typeof componentProps === 'function') return componentProps(ownerState, slotState);
    return componentProps;
}
var _default = exports.default = resolveComponentProps;

},{}],"beDHx":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("1c0b10bc9186f5c4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useInteractionItemProps = exports.useInteractionAllItemProps = void 0;
var React = _interopRequireWildcard(require("ed45464a0b038d03"));
var _ChartProvider = require("fdf082c941b3ccd2");
const onPointerDown = (event)=>{
    if ('hasPointerCapture' in event.currentTarget && event.currentTarget.hasPointerCapture(event.pointerId)) event.currentTarget.releasePointerCapture(event.pointerId);
};
const useInteractionItemProps = (data, skip)=>{
    const { instance } = (0, _ChartProvider.useChartContext)();
    const interactionActive = React.useRef(false);
    const onPointerEnter = React.useCallback(()=>{
        interactionActive.current = true;
        instance.setItemInteraction({
            type: data.type,
            seriesId: data.seriesId,
            dataIndex: data.dataIndex
        });
        instance.setHighlight({
            seriesId: data.seriesId,
            dataIndex: data.dataIndex
        });
    }, [
        instance,
        data.type,
        data.seriesId,
        data.dataIndex
    ]);
    const onPointerLeave = React.useCallback(()=>{
        interactionActive.current = false;
        instance.removeItemInteraction({
            type: data.type,
            seriesId: data.seriesId,
            dataIndex: data.dataIndex
        });
        instance.clearHighlight();
    }, [
        instance,
        data.type,
        data.seriesId,
        data.dataIndex
    ]);
    React.useEffect(()=>{
        return ()=>{
            /* Clean up state if this item is unmounted while active. */ if (interactionActive.current) onPointerLeave();
        };
    }, [
        onPointerLeave
    ]);
    if (skip) return {};
    return {
        onPointerEnter,
        onPointerLeave,
        onPointerDown
    };
};
exports.useInteractionItemProps = useInteractionItemProps;
const useInteractionAllItemProps = (data, skip)=>{
    const { instance } = (0, _ChartProvider.useChartContext)();
    const results = React.useMemo(()=>{
        return data.map((item)=>{
            if (skip) return {};
            const onPointerEnter = ()=>{
                if (!item) return;
                instance.setItemInteraction(item);
                instance.setHighlight({
                    seriesId: item.seriesId,
                    dataIndex: item.dataIndex
                });
            };
            const onPointerLeave = ()=>{
                if (!item) return;
                instance.removeItemInteraction(item);
                instance.clearHighlight();
            };
            return {
                onPointerEnter,
                onPointerLeave,
                onPointerDown
            };
        });
    }, [
        data,
        instance,
        skip
    ]);
    return results;
};
exports.useInteractionAllItemProps = useInteractionAllItemProps;

},{"1c0b10bc9186f5c4":"6TFJp","ed45464a0b038d03":"jMk1U","fdf082c941b3ccd2":"8cPIy"}],"8cPIy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartProvider = require("3cb2b5fc1f66b7cc");
Object.keys(_ChartProvider).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartProvider[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartProvider[key];
        }
    });
});
var _ChartProvider2 = require("c58c787951958650");
Object.keys(_ChartProvider2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartProvider2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartProvider2[key];
        }
    });
});
var _useChartContext = require("96d8624d160f1acb");
Object.keys(_useChartContext).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useChartContext[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartContext[key];
        }
    });
});

},{"3cb2b5fc1f66b7cc":"a36su","c58c787951958650":"j8MRP","96d8624d160f1acb":"iJG32"}],"a36su":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("fc585c55b4eff0db").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartProvider = ChartProvider;
exports.defaultSeriesConfig = void 0;
var React = _interopRequireWildcard(require("e8ae396254550ea5"));
var _useCharts = require("64deb13f1f770040");
var _ChartContext = require("bddc4a5d0b12fb40");
var _useChartCartesianAxis = require("585a79a1abac9b");
var _useChartInteraction = require("88bcbc0692b18a22");
var _useChartZAxis = require("867b7b73fefd5fc6");
var _useChartHighlight = require("d9f6e719c6ce4b3");
var _seriesConfig = require("e9c7e6c4a5e024b5");
var _seriesConfig2 = require("47e74e4944df93cd");
var _seriesConfig3 = require("2e7c5480b71fffa9");
var _seriesConfig4 = require("c3d5bfe33aed3c54");
var _jsxRuntime = require("3e5d46f86e7f9d10");
const defaultSeriesConfig = exports.defaultSeriesConfig = {
    bar: _seriesConfig.seriesConfig,
    scatter: _seriesConfig2.seriesConfig,
    line: _seriesConfig3.seriesConfig,
    pie: _seriesConfig4.seriesConfig
};
// For consistency with the v7, the cartesian axes are set by default.
// To remove them, you can provide a `plugins` props.
const defaultPlugins = [
    _useChartZAxis.useChartZAxis,
    _useChartCartesianAxis.useChartCartesianAxis,
    _useChartInteraction.useChartInteraction,
    _useChartHighlight.useChartHighlight
];
function ChartProvider(props) {
    const { children, plugins = defaultPlugins, pluginParams = {}, seriesConfig = defaultSeriesConfig } = props;
    const { contextValue } = (0, _useCharts.useCharts)(plugins, pluginParams, seriesConfig);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartContext.ChartContext.Provider, {
        value: contextValue,
        children: children
    });
}

},{"fc585c55b4eff0db":"6TFJp","e8ae396254550ea5":"jMk1U","64deb13f1f770040":"3Dla1","bddc4a5d0b12fb40":"365nn","585a79a1abac9b":"iMsPz","88bcbc0692b18a22":"4pi8Z","867b7b73fefd5fc6":"1DuPh","d9f6e719c6ce4b3":"2t6MO","e9c7e6c4a5e024b5":"BKYyr","47e74e4944df93cd":"9ghVP","2e7c5480b71fffa9":"bXncK","c3d5bfe33aed3c54":"7KCOq","3e5d46f86e7f9d10":"05iiF"}],"3Dla1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("bc484f859a85822e").default;
var _interopRequireWildcard = require("4b49147b3da9fed1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartApiInitialization = useChartApiInitialization;
exports.useCharts = useCharts;
var React = _interopRequireWildcard(require("25b1967b4239533d"));
var _useId = _interopRequireDefault(require("8857b195ebe8ebff"));
var _ChartStore = require("48c04ccbd39c1e05");
var _corePlugins = require("20bd9e655bb8cb4");
var _extractPluginParamsFromProps = require("f2de2f2d53f5bb0e");
var _useChartModels = require("c71fcfc11b501720");
let globalId = 0;
/**
 * This is the main hook that setups the plugin system for the chart.
 *
 * It manages the data used to create the charts.
 *
 * @param inPlugins All the plugins that will be used in the chart.
 * @param props The props passed to the chart.
 * @param seriesConfig The set of helpers used for series-specific computation.
 */ function useCharts(inPlugins, props, seriesConfig) {
    const chartId = (0, _useId.default)();
    const plugins = React.useMemo(()=>[
            ..._corePlugins.CHART_CORE_PLUGINS,
            ...inPlugins
        ], [
        inPlugins
    ]);
    const pluginParams = (0, _extractPluginParamsFromProps.extractPluginParamsFromProps)({
        plugins,
        props
    });
    pluginParams.id = pluginParams.id ?? chartId;
    const models = (0, _useChartModels.useChartModels)(plugins, pluginParams);
    const instanceRef = React.useRef({});
    const instance = instanceRef.current;
    const publicAPI = useChartApiInitialization(props.apiRef);
    const innerChartRootRef = React.useRef(null);
    const innerSvgRef = React.useRef(null);
    const storeRef = React.useRef(null);
    if (storeRef.current == null) {
        // eslint-disable-next-line react-compiler/react-compiler
        globalId += 1;
        const initialState = {
            cacheKey: {
                id: globalId
            }
        };
        plugins.forEach((plugin)=>{
            if (plugin.getInitialState) Object.assign(initialState, plugin.getInitialState(pluginParams, initialState, seriesConfig));
        });
        storeRef.current = new _ChartStore.ChartStore(initialState);
    }
    const runPlugin = (plugin)=>{
        const pluginResponse = plugin({
            instance,
            params: pluginParams,
            plugins: plugins,
            store: storeRef.current,
            svgRef: innerSvgRef,
            chartRootRef: innerChartRootRef,
            seriesConfig,
            models
        });
        if (pluginResponse.publicAPI) Object.assign(publicAPI, pluginResponse.publicAPI);
        if (pluginResponse.instance) Object.assign(instance, pluginResponse.instance);
    };
    plugins.forEach(runPlugin);
    const contextValue = React.useMemo(()=>({
            store: storeRef.current,
            publicAPI,
            instance,
            svgRef: innerSvgRef,
            chartRootRef: innerChartRootRef
        }), [
        instance,
        publicAPI
    ]);
    return {
        contextValue
    };
}
function useChartApiInitialization(inputApiRef) {
    const fallbackPublicApiRef = React.useRef({});
    if (inputApiRef) {
        if (inputApiRef.current == null) // eslint-disable-next-line react-compiler/react-compiler
        inputApiRef.current = {};
        return inputApiRef.current;
    }
    return fallbackPublicApiRef.current;
}

},{"bc484f859a85822e":"1P3rZ","4b49147b3da9fed1":"6TFJp","25b1967b4239533d":"jMk1U","8857b195ebe8ebff":"ko2Df","48c04ccbd39c1e05":"cHZ1G","20bd9e655bb8cb4":"f6ICp","f2de2f2d53f5bb0e":"jaK6F","c71fcfc11b501720":"3LALx"}],"ko2Df":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("255675d84f92bae").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useId.default;
    }
});
var _useId = _interopRequireDefault(require("25989ce2deac7de"));

},{"255675d84f92bae":"1P3rZ","25989ce2deac7de":"c4oMX"}],"c4oMX":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("24efb0879cb32d1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useId;
var React = _interopRequireWildcard(require("38095c9d28295399"));
let globalId = 0;
// TODO React 17: Remove `useGlobalId` once React 17 support is removed
function useGlobalId(idOverride) {
    const [defaultId, setDefaultId] = React.useState(idOverride);
    const id = idOverride || defaultId;
    React.useEffect(()=>{
        if (defaultId == null) {
            // Fallback to this default id when possible.
            // Use the incrementing value for client-side rendering only.
            // We can't use it server-side.
            // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
            globalId += 1;
            setDefaultId(`mui-${globalId}`);
        }
    }, [
        defaultId
    ]);
    return id;
}
// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why
const safeReact = {
    ...React
};
const maybeReactUseId = safeReact.useId;
/**
 *
 * @example <div id={useId()} />
 * @param idOverride
 * @returns {string}
 */ function useId(idOverride) {
    // React.useId() is only available from React 17.0.0.
    if (maybeReactUseId !== undefined) {
        const reactId = maybeReactUseId();
        return idOverride ?? reactId;
    }
    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler
    // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.
    return useGlobalId(idOverride);
}

},{"24efb0879cb32d1":"6TFJp","38095c9d28295399":"jMk1U"}],"cHZ1G":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartStore = void 0;
class ChartStore {
    constructor(value){
        this.value = void 0;
        this.listeners = void 0;
        this.subscribe = (fn)=>{
            this.listeners.add(fn);
            return ()=>{
                this.listeners.delete(fn);
            };
        };
        this.getSnapshot = ()=>{
            return this.value;
        };
        this.update = (updater)=>{
            const newState = updater(this.value);
            if (newState !== this.value) {
                this.value = newState;
                this.listeners.forEach((l)=>l(newState));
            }
        };
        this.value = value;
        this.listeners = new Set();
    }
}
exports.ChartStore = ChartStore;

},{}],"f6ICp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CHART_CORE_PLUGINS", {
    enumerable: true,
    get: function() {
        return _corePlugins.CHART_CORE_PLUGINS;
    }
});
var _corePlugins = require("6a0086a0328cf177");

},{"6a0086a0328cf177":"ksWkz"}],"ksWkz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CHART_CORE_PLUGINS = void 0;
var _useChartAnimation = require("69fdee8eeed9aff6");
var _useChartDimensions = require("e75aedcd5140b0ee");
var _useChartId = require("2a95bb585bc166da");
var _useChartSeries = require("9da18e6778cd1971");
/**
 * Internal plugins that create the tools used by the other plugins.
 * These plugins are used by the Charts components.
 */ const CHART_CORE_PLUGINS = exports.CHART_CORE_PLUGINS = [
    _useChartId.useChartId,
    _useChartDimensions.useChartDimensions,
    _useChartSeries.useChartSeries,
    _useChartAnimation.useChartAnimation
];

},{"69fdee8eeed9aff6":"2TGrt","e75aedcd5140b0ee":"fzisH","2a95bb585bc166da":"1sKqz","9da18e6778cd1971":"3wdVT"}],"2TGrt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartAnimation: true
};
Object.defineProperty(exports, "useChartAnimation", {
    enumerable: true,
    get: function() {
        return _useChartAnimation.useChartAnimation;
    }
});
var _useChartAnimation = require("2a96a9faa9741bee");
var _useChartAnimation2 = require("5f5cf5dbe891b3f5");
Object.keys(_useChartAnimation2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartAnimation2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartAnimation2[key];
        }
    });
});

},{"2a96a9faa9741bee":"cg8CX","5f5cf5dbe891b3f5":"grRlN"}],"cg8CX":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("c4a079dda9aec526").default;
var _interopRequireDefault = require("2eebb3033a440073").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartAnimation = void 0;
var _extends2 = _interopRequireDefault(require("8e6c49b3a5074f4a"));
var React = _interopRequireWildcard(require("5896dcd2fccc669b"));
var _useEnhancedEffect = _interopRequireDefault(require("15930a62d327a38d"));
const useChartAnimation = ({ params, store })=>{
    React.useEffect(()=>{
        store.update((prevState)=>{
            return (0, _extends2.default)({}, prevState, {
                animation: (0, _extends2.default)({}, prevState.animation, {
                    skip: params.skipAnimation
                })
            });
        });
    }, [
        store,
        params.skipAnimation
    ]);
    const disableAnimation = React.useCallback(()=>{
        let disableCalled = false;
        store.update((prevState)=>(0, _extends2.default)({}, prevState, {
                animation: (0, _extends2.default)({}, prevState.animation, {
                    skipAnimationRequests: prevState.animation.skipAnimationRequests + 1
                })
            }));
        return ()=>{
            if (disableCalled) return;
            disableCalled = true;
            store.update((prevState)=>(0, _extends2.default)({}, prevState, {
                    animation: (0, _extends2.default)({}, prevState.animation, {
                        skipAnimationRequests: prevState.animation.skipAnimationRequests - 1
                    })
                }));
        };
    }, [
        store
    ]);
    (0, _useEnhancedEffect.default)(()=>{
        // Skip animation test/jsdom
        const isAnimationDisabledEnvironment = typeof window === 'undefined' || !window?.matchMedia;
        if (isAnimationDisabledEnvironment) return undefined;
        let disableAnimationCleanup;
        const handleMediaChange = (event)=>{
            if (event.matches) disableAnimationCleanup = disableAnimation();
            else disableAnimationCleanup?.();
        };
        const mql = window.matchMedia('(prefers-reduced-motion)');
        handleMediaChange(mql);
        mql.addEventListener('change', handleMediaChange);
        return ()=>{
            mql.removeEventListener('change', handleMediaChange);
        };
    }, [
        disableAnimation,
        store
    ]);
    return {
        instance: {
            disableAnimation
        }
    };
};
exports.useChartAnimation = useChartAnimation;
useChartAnimation.params = {
    skipAnimation: true
};
useChartAnimation.getDefaultizedParams = ({ params })=>(0, _extends2.default)({}, params, {
        skipAnimation: params.skipAnimation ?? false
    });
useChartAnimation.getInitialState = ({ skipAnimation })=>{
    const isAnimationDisabledEnvironment = typeof window === 'undefined' || !window?.matchMedia;
    // We use the value of `isAnimationDisabledEnvironment` as the initial value of `skipAnimation` to avoid
    // re-rendering the component on environments where matchMedia is not supported, hence skipAnimation will always be true.
    const disableAnimations = false;
    return {
        animation: {
            skip: skipAnimation,
            // By initializing the skipAnimationRequests to 1, we ensure that the animation is always skipped
            skipAnimationRequests: disableAnimations ? 1 : 0
        }
    };
};

},{"c4a079dda9aec526":"6TFJp","2eebb3033a440073":"1P3rZ","8e6c49b3a5074f4a":"lKa0J","5896dcd2fccc669b":"jMk1U","15930a62d327a38d":"egHZg"}],"grRlN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartSkipAnimation = void 0;
var _selectors = require("a8adbd1d45684cf4");
const selectorChartAnimationState = (state)=>state.animation;
const selectorChartSkipAnimation = exports.selectorChartSkipAnimation = (0, _selectors.createSelector)(selectorChartAnimationState, (state)=>state.skip || state.skipAnimationRequests > 0);

},{"a8adbd1d45684cf4":"4YBdc"}],"4YBdc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createSelector = void 0;
var _reselect = require("86b6ff9edcc79cb0");
const reselectCreateSelector = (0, _reselect.createSelectorCreator)({
    memoize: _reselect.lruMemoize,
    memoizeOptions: {
        maxSize: 1,
        equalityCheck: Object.is
    }
});
const cache = new WeakMap();
/**
 * Method wrapping reselect's createSelector to provide caching for chart instances.
 *
 */ const createSelector = (...createSelectorArgs)=>{
    const selector = (state, selectorArgs)=>{
        const cacheKey = state.cacheKey;
        // If there is no cache for the current chart instance, create one.
        let cacheForCurrentChartInstance = cache.get(cacheKey);
        if (!cacheForCurrentChartInstance) {
            cacheForCurrentChartInstance = new Map();
            cache.set(cacheKey, cacheForCurrentChartInstance);
        }
        // If there is a cached selector, execute it.
        const cachedSelector = cacheForCurrentChartInstance.get(createSelectorArgs);
        if (cachedSelector) return cachedSelector(state, selectorArgs);
        // Otherwise, create a new selector and cache it and execute it.
        const fn = reselectCreateSelector(...createSelectorArgs);
        cacheForCurrentChartInstance.set(createSelectorArgs, fn);
        return fn(state, selectorArgs);
    };
    return selector;
};
exports.createSelector = createSelector;

},{"86b6ff9edcc79cb0":"48i3i"}],"48i3i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSelector", ()=>createSelector);
parcelHelpers.export(exports, "createSelectorCreator", ()=>createSelectorCreator);
parcelHelpers.export(exports, "createStructuredSelector", ()=>createStructuredSelector);
parcelHelpers.export(exports, "lruMemoize", ()=>lruMemoize);
parcelHelpers.export(exports, "referenceEqualityCheck", ()=>referenceEqualityCheck);
parcelHelpers.export(exports, "setGlobalDevModeChecks", ()=>setGlobalDevModeChecks);
parcelHelpers.export(exports, "unstable_autotrackMemoize", ()=>autotrackMemoize);
parcelHelpers.export(exports, "weakMapMemoize", ()=>weakMapMemoize);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
        for (var prop of __getOwnPropSymbols(b))if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
var __publicField = (obj, key, value)=>{
    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
};
// src/devModeChecks/identityFunctionCheck.ts
var runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult)=>{
    if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {
        let isInputSameAsOutput = false;
        try {
            const emptyObject = {};
            if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true;
        } catch (e) {}
        if (isInputSameAsOutput) {
            let stack = void 0;
            try {
                throw new Error();
            } catch (e) {
                ({ stack } = e);
            }
            console.warn("The result function returned its own inputs without modification. e.g\n`createSelector([state => state.todos], todos => todos)`\nThis could lead to inefficient memoization and unnecessary re-renders.\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.", {
                stack
            });
        }
    }
};
// src/devModeChecks/inputStabilityCheck.ts
var runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs)=>{
    const { memoize, memoizeOptions } = options;
    const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;
    const createAnEmptyObject = memoize(()=>({}), ...memoizeOptions);
    const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);
    if (!areInputSelectorResultsEqual) {
        let stack = void 0;
        try {
            throw new Error();
        } catch (e) {
            ({ stack } = e);
        }
        console.warn("An input selector returned a different result when passed same arguments.\nThis means your output selector will likely run more frequently than intended.\nAvoid returning a new reference inside your input selector, e.g.\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`", {
            arguments: inputSelectorArgs,
            firstInputs: inputSelectorResults,
            secondInputs: inputSelectorResultsCopy,
            stack
        });
    }
};
// src/devModeChecks/setGlobalDevModeChecks.ts
var globalDevModeChecks = {
    inputStabilityCheck: "once",
    identityFunctionCheck: "once"
};
var setGlobalDevModeChecks = (devModeChecks)=>{
    Object.assign(globalDevModeChecks, devModeChecks);
};
// src/utils.ts
var NOT_FOUND = /* @__PURE__ */ Symbol("NOT_FOUND");
function assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {
    if (typeof func !== "function") throw new TypeError(errorMessage);
}
function assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {
    if (typeof object !== "object") throw new TypeError(errorMessage);
}
function assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {
    if (!array.every((item)=>typeof item === "function")) {
        const itemTypes = array.map((item)=>typeof item === "function" ? `function ${item.name || "unnamed"}()` : typeof item).join(", ");
        throw new TypeError(`${errorMessage}[${itemTypes}]`);
    }
}
var ensureIsArray = (item)=>{
    return Array.isArray(item) ? item : [
        item
    ];
};
function getDependencies(createSelectorArgs) {
    const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;
    assertIsArrayOfFunctions(dependencies, `createSelector expects all input-selectors to be functions, but received the following types: `);
    return dependencies;
}
function collectInputSelectorResults(dependencies, inputSelectorArgs) {
    const inputSelectorResults = [];
    const { length } = dependencies;
    for(let i = 0; i < length; i++)inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));
    return inputSelectorResults;
}
var getDevModeChecksExecutionInfo = (firstRun, devModeChecks)=>{
    const { identityFunctionCheck, inputStabilityCheck } = __spreadValues(__spreadValues({}, globalDevModeChecks), devModeChecks);
    return {
        identityFunctionCheck: {
            shouldRun: identityFunctionCheck === "always" || identityFunctionCheck === "once" && firstRun,
            run: runIdentityFunctionCheck
        },
        inputStabilityCheck: {
            shouldRun: inputStabilityCheck === "always" || inputStabilityCheck === "once" && firstRun,
            run: runInputStabilityCheck
        }
    };
};
// src/autotrackMemoize/autotracking.ts
var $REVISION = 0;
var CURRENT_TRACKER = null;
var Cell = class {
    constructor(initialValue, isEqual = tripleEq){
        __publicField(this, "revision", $REVISION);
        __publicField(this, "_value");
        __publicField(this, "_lastValue");
        __publicField(this, "_isEqual", tripleEq);
        this._value = this._lastValue = initialValue;
        this._isEqual = isEqual;
    }
    // Whenever a storage value is read, it'll add itself to the current tracker if
    // one exists, entangling its state with that cache.
    get value() {
        CURRENT_TRACKER == null || CURRENT_TRACKER.add(this);
        return this._value;
    }
    // Whenever a storage value is updated, we bump the global revision clock,
    // assign the revision for this storage to the new value, _and_ we schedule a
    // rerender. This is important, and it's what makes autotracking  _pull_
    // based. We don't actively tell the caches which depend on the storage that
    // anything has happened. Instead, we recompute the caches when needed.
    set value(newValue) {
        if (this.value === newValue) return;
        this._value = newValue;
        this.revision = ++$REVISION;
    }
};
function tripleEq(a, b) {
    return a === b;
}
var TrackingCache = class {
    constructor(fn){
        __publicField(this, "_cachedValue");
        __publicField(this, "_cachedRevision", -1);
        __publicField(this, "_deps", []);
        __publicField(this, "hits", 0);
        __publicField(this, "fn");
        this.fn = fn;
    }
    clear() {
        this._cachedValue = void 0;
        this._cachedRevision = -1;
        this._deps = [];
        this.hits = 0;
    }
    get value() {
        if (this.revision > this._cachedRevision) {
            const { fn } = this;
            const currentTracker = /* @__PURE__ */ new Set();
            const prevTracker = CURRENT_TRACKER;
            CURRENT_TRACKER = currentTracker;
            this._cachedValue = fn();
            CURRENT_TRACKER = prevTracker;
            this.hits++;
            this._deps = Array.from(currentTracker);
            this._cachedRevision = this.revision;
        }
        CURRENT_TRACKER == null || CURRENT_TRACKER.add(this);
        return this._cachedValue;
    }
    get revision() {
        return Math.max(...this._deps.map((d)=>d.revision), 0);
    }
};
function getValue(cell) {
    if (!(cell instanceof Cell)) console.warn("Not a valid cell! ", cell);
    return cell.value;
}
function setValue(storage, value) {
    if (!(storage instanceof Cell)) throw new TypeError("setValue must be passed a tracked store created with `createStorage`.");
    storage.value = storage._lastValue = value;
}
function createCell(initialValue, isEqual = tripleEq) {
    return new Cell(initialValue, isEqual);
}
function createCache(fn) {
    assertIsFunction(fn, "the first parameter to `createCache` must be a function");
    return new TrackingCache(fn);
}
// src/autotrackMemoize/tracking.ts
var neverEq = (a, b)=>false;
function createTag() {
    return createCell(null, neverEq);
}
function dirtyTag(tag, value) {
    setValue(tag, value);
}
var consumeCollection = (node)=>{
    let tag = node.collectionTag;
    if (tag === null) tag = node.collectionTag = createTag();
    getValue(tag);
};
var dirtyCollection = (node)=>{
    const tag = node.collectionTag;
    if (tag !== null) dirtyTag(tag, null);
};
// src/autotrackMemoize/proxy.ts
var REDUX_PROXY_LABEL = Symbol();
var nextId = 0;
var proto = Object.getPrototypeOf({});
var ObjectTreeNode = class {
    constructor(value){
        this.value = value;
        __publicField(this, "proxy", new Proxy(this, objectProxyHandler));
        __publicField(this, "tag", createTag());
        __publicField(this, "tags", {});
        __publicField(this, "children", {});
        __publicField(this, "collectionTag", null);
        __publicField(this, "id", nextId++);
        this.value = value;
        this.tag.value = value;
    }
};
var objectProxyHandler = {
    get (node, key) {
        function calculateResult() {
            const { value } = node;
            const childValue = Reflect.get(value, key);
            if (typeof key === "symbol") return childValue;
            if (key in proto) return childValue;
            if (typeof childValue === "object" && childValue !== null) {
                let childNode = node.children[key];
                if (childNode === void 0) childNode = node.children[key] = createNode(childValue);
                if (childNode.tag) getValue(childNode.tag);
                return childNode.proxy;
            } else {
                let tag = node.tags[key];
                if (tag === void 0) {
                    tag = node.tags[key] = createTag();
                    tag.value = childValue;
                }
                getValue(tag);
                return childValue;
            }
        }
        const res = calculateResult();
        return res;
    },
    ownKeys (node) {
        consumeCollection(node);
        return Reflect.ownKeys(node.value);
    },
    getOwnPropertyDescriptor (node, prop) {
        return Reflect.getOwnPropertyDescriptor(node.value, prop);
    },
    has (node, prop) {
        return Reflect.has(node.value, prop);
    }
};
var ArrayTreeNode = class {
    constructor(value){
        this.value = value;
        __publicField(this, "proxy", new Proxy([
            this
        ], arrayProxyHandler));
        __publicField(this, "tag", createTag());
        __publicField(this, "tags", {});
        __publicField(this, "children", {});
        __publicField(this, "collectionTag", null);
        __publicField(this, "id", nextId++);
        this.value = value;
        this.tag.value = value;
    }
};
var arrayProxyHandler = {
    get ([node], key) {
        if (key === "length") consumeCollection(node);
        return objectProxyHandler.get(node, key);
    },
    ownKeys ([node]) {
        return objectProxyHandler.ownKeys(node);
    },
    getOwnPropertyDescriptor ([node], prop) {
        return objectProxyHandler.getOwnPropertyDescriptor(node, prop);
    },
    has ([node], prop) {
        return objectProxyHandler.has(node, prop);
    }
};
function createNode(value) {
    if (Array.isArray(value)) return new ArrayTreeNode(value);
    return new ObjectTreeNode(value);
}
function updateNode(node, newValue) {
    const { value, tags, children } = node;
    node.value = newValue;
    if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) dirtyCollection(node);
    else if (value !== newValue) {
        let oldKeysSize = 0;
        let newKeysSize = 0;
        let anyKeysAdded = false;
        for(const _key in value)oldKeysSize++;
        for(const key in newValue){
            newKeysSize++;
            if (!(key in value)) {
                anyKeysAdded = true;
                break;
            }
        }
        const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;
        if (isDifferent) dirtyCollection(node);
    }
    for(const key in tags){
        const childValue = value[key];
        const newChildValue = newValue[key];
        if (childValue !== newChildValue) {
            dirtyCollection(node);
            dirtyTag(tags[key], newChildValue);
        }
        if (typeof newChildValue === "object" && newChildValue !== null) delete tags[key];
    }
    for(const key in children){
        const childNode = children[key];
        const newChildValue = newValue[key];
        const childValue = childNode.value;
        if (childValue === newChildValue) continue;
        else if (typeof newChildValue === "object" && newChildValue !== null) updateNode(childNode, newChildValue);
        else {
            deleteNode(childNode);
            delete children[key];
        }
    }
}
function deleteNode(node) {
    if (node.tag) dirtyTag(node.tag, null);
    dirtyCollection(node);
    for(const key in node.tags)dirtyTag(node.tags[key], null);
    for(const key in node.children)deleteNode(node.children[key]);
}
// src/lruMemoize.ts
function createSingletonCache(equals) {
    let entry;
    return {
        get (key) {
            if (entry && equals(entry.key, key)) return entry.value;
            return NOT_FOUND;
        },
        put (key, value) {
            entry = {
                key,
                value
            };
        },
        getEntries () {
            return entry ? [
                entry
            ] : [];
        },
        clear () {
            entry = void 0;
        }
    };
}
function createLruCache(maxSize, equals) {
    let entries = [];
    function get(key) {
        const cacheIndex = entries.findIndex((entry)=>equals(key, entry.key));
        if (cacheIndex > -1) {
            const entry = entries[cacheIndex];
            if (cacheIndex > 0) {
                entries.splice(cacheIndex, 1);
                entries.unshift(entry);
            }
            return entry.value;
        }
        return NOT_FOUND;
    }
    function put(key, value) {
        if (get(key) === NOT_FOUND) {
            entries.unshift({
                key,
                value
            });
            if (entries.length > maxSize) entries.pop();
        }
    }
    function getEntries() {
        return entries;
    }
    function clear() {
        entries = [];
    }
    return {
        get,
        put,
        getEntries,
        clear
    };
}
var referenceEqualityCheck = (a, b)=>a === b;
function createCacheKeyComparator(equalityCheck) {
    return function areArgumentsShallowlyEqual(prev, next) {
        if (prev === null || next === null || prev.length !== next.length) return false;
        const { length } = prev;
        for(let i = 0; i < length; i++){
            if (!equalityCheck(prev[i], next[i])) return false;
        }
        return true;
    };
}
function lruMemoize(func, equalityCheckOrOptions) {
    const providedOptions = typeof equalityCheckOrOptions === "object" ? equalityCheckOrOptions : {
        equalityCheck: equalityCheckOrOptions
    };
    const { equalityCheck = referenceEqualityCheck, maxSize = 1, resultEqualityCheck } = providedOptions;
    const comparator = createCacheKeyComparator(equalityCheck);
    let resultsCount = 0;
    const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);
    function memoized() {
        let value = cache.get(arguments);
        if (value === NOT_FOUND) {
            value = func.apply(null, arguments);
            resultsCount++;
            if (resultEqualityCheck) {
                const entries = cache.getEntries();
                const matchingEntry = entries.find((entry)=>resultEqualityCheck(entry.value, value));
                if (matchingEntry) {
                    value = matchingEntry.value;
                    resultsCount !== 0 && resultsCount--;
                }
            }
            cache.put(arguments, value);
        }
        return value;
    }
    memoized.clearCache = ()=>{
        cache.clear();
        memoized.resetResultsCount();
    };
    memoized.resultsCount = ()=>resultsCount;
    memoized.resetResultsCount = ()=>{
        resultsCount = 0;
    };
    return memoized;
}
// src/autotrackMemoize/autotrackMemoize.ts
function autotrackMemoize(func) {
    const node = createNode([]);
    let lastArgs = null;
    const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);
    const cache = createCache(()=>{
        const res = func.apply(null, node.proxy);
        return res;
    });
    function memoized() {
        if (!shallowEqual(lastArgs, arguments)) {
            updateNode(node, arguments);
            lastArgs = arguments;
        }
        return cache.value;
    }
    memoized.clearCache = ()=>{
        return cache.clear();
    };
    return memoized;
}
// src/weakMapMemoize.ts
var StrongRef = class {
    constructor(value){
        this.value = value;
    }
    deref() {
        return this.value;
    }
};
var Ref = typeof WeakRef !== "undefined" ? WeakRef : StrongRef;
var UNTERMINATED = 0;
var TERMINATED = 1;
function createCacheNode() {
    return {
        s: UNTERMINATED,
        v: void 0,
        o: null,
        p: null
    };
}
function weakMapMemoize(func, options = {}) {
    let fnNode = createCacheNode();
    const { resultEqualityCheck } = options;
    let lastResult;
    let resultsCount = 0;
    function memoized() {
        var _a, _b;
        let cacheNode = fnNode;
        const { length } = arguments;
        for(let i = 0, l = length; i < l; i++){
            const arg = arguments[i];
            if (typeof arg === "function" || typeof arg === "object" && arg !== null) {
                let objectCache = cacheNode.o;
                if (objectCache === null) cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();
                const objectNode = objectCache.get(arg);
                if (objectNode === void 0) {
                    cacheNode = createCacheNode();
                    objectCache.set(arg, cacheNode);
                } else cacheNode = objectNode;
            } else {
                let primitiveCache = cacheNode.p;
                if (primitiveCache === null) cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();
                const primitiveNode = primitiveCache.get(arg);
                if (primitiveNode === void 0) {
                    cacheNode = createCacheNode();
                    primitiveCache.set(arg, cacheNode);
                } else cacheNode = primitiveNode;
            }
        }
        const terminatedNode = cacheNode;
        let result;
        if (cacheNode.s === TERMINATED) result = cacheNode.v;
        else {
            result = func.apply(null, arguments);
            resultsCount++;
            if (resultEqualityCheck) {
                const lastResultValue = (_b = (_a = lastResult == null ? void 0 : lastResult.deref) == null ? void 0 : _a.call(lastResult)) != null ? _b : lastResult;
                if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {
                    result = lastResultValue;
                    resultsCount !== 0 && resultsCount--;
                }
                const needsWeakRef = typeof result === "object" && result !== null || typeof result === "function";
                lastResult = needsWeakRef ? new Ref(result) : result;
            }
        }
        terminatedNode.s = TERMINATED;
        terminatedNode.v = result;
        return result;
    }
    memoized.clearCache = ()=>{
        fnNode = createCacheNode();
        memoized.resetResultsCount();
    };
    memoized.resultsCount = ()=>resultsCount;
    memoized.resetResultsCount = ()=>{
        resultsCount = 0;
    };
    return memoized;
}
// src/createSelectorCreator.ts
function createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {
    const createSelectorCreatorOptions = typeof memoizeOrOptions === "function" ? {
        memoize: memoizeOrOptions,
        memoizeOptions: memoizeOptionsFromArgs
    } : memoizeOrOptions;
    const createSelector2 = (...createSelectorArgs)=>{
        let recomputations = 0;
        let dependencyRecomputations = 0;
        let lastResult;
        let directlyPassedOptions = {};
        let resultFunc = createSelectorArgs.pop();
        if (typeof resultFunc === "object") {
            directlyPassedOptions = resultFunc;
            resultFunc = createSelectorArgs.pop();
        }
        assertIsFunction(resultFunc, `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`);
        const combinedOptions = __spreadValues(__spreadValues({}, createSelectorCreatorOptions), directlyPassedOptions);
        const { memoize, memoizeOptions = [], argsMemoize = weakMapMemoize, argsMemoizeOptions = [], devModeChecks = {} } = combinedOptions;
        const finalMemoizeOptions = ensureIsArray(memoizeOptions);
        const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);
        const dependencies = getDependencies(createSelectorArgs);
        const memoizedResultFunc = memoize(function recomputationWrapper() {
            recomputations++;
            return resultFunc.apply(null, arguments);
        }, ...finalMemoizeOptions);
        let firstRun = true;
        const selector = argsMemoize(function dependenciesChecker() {
            dependencyRecomputations++;
            const inputSelectorResults = collectInputSelectorResults(dependencies, arguments);
            lastResult = memoizedResultFunc.apply(null, inputSelectorResults);
            {
                const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);
                if (identityFunctionCheck.shouldRun) identityFunctionCheck.run(resultFunc, inputSelectorResults, lastResult);
                if (inputStabilityCheck.shouldRun) {
                    const inputSelectorResultsCopy = collectInputSelectorResults(dependencies, arguments);
                    inputStabilityCheck.run({
                        inputSelectorResults,
                        inputSelectorResultsCopy
                    }, {
                        memoize,
                        memoizeOptions: finalMemoizeOptions
                    }, arguments);
                }
                if (firstRun) firstRun = false;
            }
            return lastResult;
        }, ...finalArgsMemoizeOptions);
        return Object.assign(selector, {
            resultFunc,
            memoizedResultFunc,
            dependencies,
            dependencyRecomputations: ()=>dependencyRecomputations,
            resetDependencyRecomputations: ()=>{
                dependencyRecomputations = 0;
            },
            lastResult: ()=>lastResult,
            recomputations: ()=>recomputations,
            resetRecomputations: ()=>{
                recomputations = 0;
            },
            memoize,
            argsMemoize
        });
    };
    Object.assign(createSelector2, {
        withTypes: ()=>createSelector2
    });
    return createSelector2;
}
var createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);
// src/createStructuredSelector.ts
var createStructuredSelector = Object.assign((inputSelectorsObject, selectorCreator = createSelector)=>{
    assertIsObject(inputSelectorsObject, `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`);
    const inputSelectorKeys = Object.keys(inputSelectorsObject);
    const dependencies = inputSelectorKeys.map((key)=>inputSelectorsObject[key]);
    const structuredSelector = selectorCreator(dependencies, (...inputSelectorResults)=>{
        return inputSelectorResults.reduce((composition, value, index)=>{
            composition[inputSelectorKeys[index]] = value;
            return composition;
        }, {});
    });
    return structuredSelector;
}, {
    withTypes: ()=>createStructuredSelector
});

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fzisH":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("e26e16e7b99dd374").default;
var _interopRequireDefault = require("fc284a891a7a4583").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartDimensions = void 0;
var _extends2 = _interopRequireDefault(require("30219dc13ef3b35"));
var React = _interopRequireWildcard(require("fea4898316a970ce"));
var _useEnhancedEffect = _interopRequireDefault(require("fbe09f630c332593"));
var _ownerWindow = _interopRequireDefault(require("7cf307f7aca51482"));
var _constants = require("3fdd8b758d76b2dc");
var _useChartDimensions = require("5518ea18cf53e49f");
var _defaultizeMargin = require("b6a610a39ead0843");
const MAX_COMPUTE_RUN = 10;
const useChartDimensions = ({ params, store, svgRef })=>{
    const hasInSize = params.width !== undefined && params.height !== undefined;
    const stateRef = React.useRef({
        displayError: false,
        initialCompute: true,
        computeRun: 0
    });
    // States only used for the initialization of the size.
    const [innerWidth, setInnerWidth] = React.useState(0);
    const [innerHeight, setInnerHeight] = React.useState(0);
    const computeSize = React.useCallback(()=>{
        const mainEl = svgRef?.current;
        if (!mainEl) return {};
        const win = (0, _ownerWindow.default)(mainEl);
        const computedStyle = win.getComputedStyle(mainEl);
        const newHeight = Math.floor(parseFloat(computedStyle.height)) || 0;
        const newWidth = Math.floor(parseFloat(computedStyle.width)) || 0;
        store.update((prev)=>{
            if (prev.dimensions.width === newWidth && prev.dimensions.height === newHeight) return prev;
            return (0, _extends2.default)({}, prev, {
                dimensions: {
                    margin: {
                        top: params.margin.top,
                        right: params.margin.right,
                        bottom: params.margin.bottom,
                        left: params.margin.left
                    },
                    width: params.width ?? newWidth,
                    height: params.height ?? newHeight,
                    propsWidth: params.width,
                    propsHeight: params.height
                }
            });
        });
        return {
            height: newHeight,
            width: newWidth
        };
    }, [
        store,
        svgRef,
        params.height,
        params.width,
        // Margin is an object, so we need to include all the properties to prevent infinite loops.
        params.margin.left,
        params.margin.right,
        params.margin.top,
        params.margin.bottom
    ]);
    React.useEffect(()=>{
        store.update((prev)=>{
            const width = params.width ?? prev.dimensions.width;
            const height = params.height ?? prev.dimensions.height;
            return (0, _extends2.default)({}, prev, {
                dimensions: {
                    margin: {
                        top: params.margin.top,
                        right: params.margin.right,
                        bottom: params.margin.bottom,
                        left: params.margin.left
                    },
                    width,
                    height,
                    propsHeight: params.height,
                    propsWidth: params.width
                }
            });
        });
    }, [
        store,
        params.height,
        params.width,
        // Margin is an object, so we need to include all the properties to prevent infinite loops.
        params.margin.left,
        params.margin.right,
        params.margin.top,
        params.margin.bottom
    ]);
    React.useEffect(()=>{
        // Ensure the error detection occurs after the first rendering.
        stateRef.current.displayError = true;
    }, []);
    // This effect is used to compute the size of the container on the initial render.
    // It is not bound to the raf loop to avoid an unwanted "resize" event.
    // https://github.com/mui/mui-x/issues/13477#issuecomment-2336634785
    (0, _useEnhancedEffect.default)(()=>{
        // computeRun is used to avoid infinite loops.
        if (hasInSize || !stateRef.current.initialCompute || stateRef.current.computeRun > MAX_COMPUTE_RUN) return;
        const computedSize = computeSize();
        if (computedSize.width !== innerWidth || computedSize.height !== innerHeight) {
            stateRef.current.computeRun += 1;
            if (computedSize.width !== undefined) setInnerWidth(computedSize.width);
            if (computedSize.height !== undefined) setInnerHeight(computedSize.height);
        } else if (stateRef.current.initialCompute) stateRef.current.initialCompute = false;
    }, [
        innerHeight,
        innerWidth,
        computeSize,
        hasInSize
    ]);
    (0, _useEnhancedEffect.default)(()=>{
        if (hasInSize) return ()=>{};
        computeSize();
        const elementToObserve = svgRef.current;
        if (typeof ResizeObserver === 'undefined') return ()=>{};
        let animationFrame;
        const observer = new ResizeObserver(()=>{
            // See https://github.com/mui/mui-x/issues/8733
            animationFrame = requestAnimationFrame(()=>{
                computeSize();
            });
        });
        if (elementToObserve) observer.observe(elementToObserve);
        return ()=>{
            if (animationFrame) cancelAnimationFrame(animationFrame);
            if (elementToObserve) observer.unobserve(elementToObserve);
        };
    }, [
        computeSize,
        hasInSize,
        svgRef
    ]);
    if (stateRef.current.displayError && params.width === undefined && innerWidth === 0) {
        console.error(`MUI X Charts: ChartContainer does not have \`width\` prop, and its container has no \`width\` defined.`);
        stateRef.current.displayError = false;
    }
    if (stateRef.current.displayError && params.height === undefined && innerHeight === 0) {
        console.error(`MUI X Charts: ChartContainer does not have \`height\` prop, and its container has no \`height\` defined.`);
        stateRef.current.displayError = false;
    }
    const isPointInside = React.useCallback(({ x, y }, options)=>{
        // For element allowed to overflow, wrapping them in <g data-drawing-container /> make them fully part of the drawing area.
        if (options?.targetElement && options?.targetElement.closest('[data-drawing-container]')) return true;
        const drawingArea = (0, _useChartDimensions.selectorChartDrawingArea)(store.value);
        const isInsideX = x >= drawingArea.left - 1 && x <= drawingArea.left + drawingArea.width;
        const isInsideY = y >= drawingArea.top - 1 && y <= drawingArea.top + drawingArea.height;
        if (options?.direction === 'x') return isInsideX;
        if (options?.direction === 'y') return isInsideY;
        return isInsideX && isInsideY;
    }, [
        store.value
    ]);
    return {
        instance: {
            isPointInside
        }
    };
};
exports.useChartDimensions = useChartDimensions;
useChartDimensions.params = {
    width: true,
    height: true,
    margin: true
};
useChartDimensions.getDefaultizedParams = ({ params })=>(0, _extends2.default)({}, params, {
        margin: (0, _defaultizeMargin.defaultizeMargin)(params.margin, _constants.DEFAULT_MARGINS)
    });
useChartDimensions.getInitialState = ({ width, height, margin })=>{
    return {
        dimensions: {
            margin,
            width: width ?? 0,
            height: height ?? 0,
            propsWidth: width,
            propsHeight: height
        }
    };
};

},{"e26e16e7b99dd374":"6TFJp","fc284a891a7a4583":"1P3rZ","30219dc13ef3b35":"lKa0J","fea4898316a970ce":"jMk1U","fbe09f630c332593":"egHZg","7cf307f7aca51482":"b6EvF","3fdd8b758d76b2dc":"2sqkC","5518ea18cf53e49f":"fCnQx","b6a610a39ead0843":"37Bnc"}],"b6EvF":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ca87500865535871").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _ownerWindow.default;
    }
});
var _ownerWindow = _interopRequireDefault(require("20b38ecbd8f1e81f"));

},{"ca87500865535871":"1P3rZ","20b38ecbd8f1e81f":"dhacn"}],"dhacn":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("1ad8c8c4fdb095e2").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ownerWindow;
var _ownerDocument = _interopRequireDefault(require("cac48f005287af1e"));
function ownerWindow(node) {
    const doc = (0, _ownerDocument.default)(node);
    return doc.defaultView || window;
}

},{"1ad8c8c4fdb095e2":"1P3rZ","cac48f005287af1e":"3d5eX"}],"3d5eX":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9f2d06c503f836b5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _ownerDocument.default;
    }
});
var _ownerDocument = _interopRequireDefault(require("6d6ee90026376a0b"));

},{"9f2d06c503f836b5":"1P3rZ","6d6ee90026376a0b":"02Hya"}],"02Hya":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ownerDocument;
function ownerDocument(node) {
    return node && node.ownerDocument || document;
}

},{}],"2sqkC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_Y_AXIS_KEY = exports.DEFAULT_X_AXIS_KEY = exports.DEFAULT_ROTATION_AXIS_KEY = exports.DEFAULT_RADIUS_AXIS_KEY = exports.DEFAULT_MARGINS = exports.DEFAULT_AXIS_SIZE_WIDTH = exports.DEFAULT_AXIS_SIZE_HEIGHT = exports.AXIS_LABEL_DEFAULT_HEIGHT = void 0;
const DEFAULT_X_AXIS_KEY = exports.DEFAULT_X_AXIS_KEY = 'DEFAULT_X_AXIS_KEY';
const DEFAULT_Y_AXIS_KEY = exports.DEFAULT_Y_AXIS_KEY = 'DEFAULT_Y_AXIS_KEY';
const DEFAULT_ROTATION_AXIS_KEY = exports.DEFAULT_ROTATION_AXIS_KEY = 'DEFAULT_ROTATION_AXIS_KEY';
const DEFAULT_RADIUS_AXIS_KEY = exports.DEFAULT_RADIUS_AXIS_KEY = 'DEFAULT_RADIUS_AXIS_KEY';
const DEFAULT_MARGINS = exports.DEFAULT_MARGINS = {
    top: 20,
    bottom: 20,
    left: 20,
    right: 20
};
const DEFAULT_AXIS_SIZE_WIDTH = exports.DEFAULT_AXIS_SIZE_WIDTH = 45;
const DEFAULT_AXIS_SIZE_HEIGHT = exports.DEFAULT_AXIS_SIZE_HEIGHT = 25;
// How many pixels to add to the default axis size if that axis has a label
const AXIS_LABEL_DEFAULT_HEIGHT = exports.AXIS_LABEL_DEFAULT_HEIGHT = 20;

},{}],"fCnQx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartPropsSize = exports.selectorChartDrawingArea = exports.selectorChartDimensionsState = exports.selectorChartContainerSize = void 0;
var _selectors = require("f0303b8e5d6c0427");
var _useChartAxisSize = require("3a5c1a5f2e444333");
const selectorChartDimensionsState = (state)=>state.dimensions;
exports.selectorChartDimensionsState = selectorChartDimensionsState;
const selectorChartMargin = (0, _selectors.createSelector)(selectorChartDimensionsState, (dimensionsState)=>dimensionsState.margin);
const selectorChartWidth = (0, _selectors.createSelector)(selectorChartDimensionsState, (dimensionsState)=>dimensionsState.width);
const selectorChartHeight = (0, _selectors.createSelector)(selectorChartDimensionsState, (dimensionsState)=>dimensionsState.height);
const selectorChartTopMargin = (0, _selectors.createSelector)(selectorChartMargin, (margin)=>margin.top);
const selectorChartRightMargin = (0, _selectors.createSelector)(selectorChartMargin, (margin)=>margin.right);
const selectorChartBottomMargin = (0, _selectors.createSelector)(selectorChartMargin, (margin)=>margin.bottom);
const selectorChartLeftMargin = (0, _selectors.createSelector)(selectorChartMargin, (margin)=>margin.left);
const selectorChartDrawingArea = exports.selectorChartDrawingArea = (0, _selectors.createSelector)(selectorChartWidth, selectorChartHeight, selectorChartTopMargin, selectorChartRightMargin, selectorChartBottomMargin, selectorChartLeftMargin, _useChartAxisSize.selectorChartTopAxisSize, _useChartAxisSize.selectorChartRightAxisSize, _useChartAxisSize.selectorChartBottomAxisSize, _useChartAxisSize.selectorChartLeftAxisSize, (width, height, marginTop, marginRight, marginBottom, marginLeft, axisSizeTop, axisSizeRight, axisSizeBottom, axisSizeLeft)=>({
        width: width - marginLeft - marginRight - axisSizeLeft - axisSizeRight,
        left: marginLeft + axisSizeLeft,
        right: marginRight + axisSizeRight,
        height: height - marginTop - marginBottom - axisSizeTop - axisSizeBottom,
        top: marginTop + axisSizeTop,
        bottom: marginBottom + axisSizeBottom
    }));
const selectorChartPropsSize = exports.selectorChartPropsSize = (0, _selectors.createSelector)(selectorChartDimensionsState, (dimensionsState)=>({
        width: dimensionsState.propsWidth,
        height: dimensionsState.propsHeight
    }));
const selectorChartContainerSize = exports.selectorChartContainerSize = (0, _selectors.createSelector)(selectorChartWidth, selectorChartHeight, (width, height)=>({
        width,
        height
    }));

},{"f0303b8e5d6c0427":"4YBdc","3a5c1a5f2e444333":"biNk9"}],"biNk9":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartTopAxisSize = exports.selectorChartRightAxisSize = exports.selectorChartLeftAxisSize = exports.selectorChartBottomAxisSize = void 0;
var _useChartCartesianAxisLayout = require("8ac06e41dbd7c7f");
var _selectors = require("ca06199c662c4fd4");
const selectorChartLeftAxisSize = exports.selectorChartLeftAxisSize = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawYAxis
], (yAxis)=>(yAxis ?? []).reduce((acc, axis)=>axis.position === 'left' ? acc + (axis.width || 0) : acc, 0));
const selectorChartRightAxisSize = exports.selectorChartRightAxisSize = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawYAxis
], (yAxis)=>(yAxis ?? []).reduce((acc, axis)=>axis.position === 'right' ? acc + (axis.width || 0) : acc, 0));
const selectorChartTopAxisSize = exports.selectorChartTopAxisSize = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawXAxis
], (xAxis)=>(xAxis ?? []).reduce((acc, axis)=>axis.position === 'top' ? acc + (axis.height || 0) : acc, 0));
const selectorChartBottomAxisSize = exports.selectorChartBottomAxisSize = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawXAxis
], (xAxis)=>(xAxis ?? []).reduce((acc, axis)=>axis.position === 'bottom' ? acc + (axis.height || 0) : acc, 0));

},{"8ac06e41dbd7c7f":"k6wF0","ca06199c662c4fd4":"4YBdc"}],"k6wF0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartRawYAxis = exports.selectorChartRawXAxis = exports.selectorChartCartesianAxisState = void 0;
var _selectors = require("b198397c5dc5d0c4");
const selectorChartCartesianAxisState = (state)=>state.cartesianAxis;
exports.selectorChartCartesianAxisState = selectorChartCartesianAxisState;
const selectorChartRawXAxis = exports.selectorChartRawXAxis = (0, _selectors.createSelector)(selectorChartCartesianAxisState, (axis)=>axis?.x);
const selectorChartRawYAxis = exports.selectorChartRawYAxis = (0, _selectors.createSelector)(selectorChartCartesianAxisState, (axis)=>axis?.y);

},{"b198397c5dc5d0c4":"4YBdc"}],"37Bnc":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("1419f33ccd5fd29e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultizeMargin = defaultizeMargin;
var _extends2 = _interopRequireDefault(require("3271cbb011cd4f92"));
function defaultizeMargin(input, defaultMargin) {
    if (typeof input === 'number') return {
        top: input,
        bottom: input,
        left: input,
        right: input
    };
    if (defaultMargin) return (0, _extends2.default)({}, defaultMargin, input);
    return input;
}

},{"1419f33ccd5fd29e":"1P3rZ","3271cbb011cd4f92":"lKa0J"}],"1sKqz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartId: true
};
Object.defineProperty(exports, "useChartId", {
    enumerable: true,
    get: function() {
        return _useChartId.useChartId;
    }
});
var _useChartId = require("b496756b7613a2dd");
var _useChartId2 = require("951c8e6fdd7eafb9");
Object.keys(_useChartId2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartId2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartId2[key];
        }
    });
});

},{"b496756b7613a2dd":"eZn2t","951c8e6fdd7eafb9":"9KlER"}],"eZn2t":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("677f3ffbf0ce676d").default;
var _interopRequireDefault = require("8946bfa33830e82d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartId = void 0;
var _extends2 = _interopRequireDefault(require("78c97552220ac760"));
var React = _interopRequireWildcard(require("100eba74f746d900"));
var _useChartId = require("bd0af1c61e4973a6");
const useChartId = ({ params, store })=>{
    React.useEffect(()=>{
        store.update((prevState)=>{
            if (params.id === undefined || params.id === prevState.id.providedChartId && prevState.id.chartId !== undefined) return prevState;
            return (0, _extends2.default)({}, prevState, {
                id: (0, _extends2.default)({}, prevState.id, {
                    chartId: params.id ?? (0, _useChartId.createChartDefaultId)()
                })
            });
        });
    }, [
        store,
        params.id
    ]);
    return {};
};
exports.useChartId = useChartId;
useChartId.params = {
    id: true
};
useChartId.getInitialState = ({ id })=>({
        id: {
            chartId: id,
            providedChartId: id
        }
    });

},{"677f3ffbf0ce676d":"6TFJp","8946bfa33830e82d":"1P3rZ","78c97552220ac760":"lKa0J","100eba74f746d900":"jMk1U","bd0af1c61e4973a6":"h9Y7I"}],"h9Y7I":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createChartDefaultId = void 0;
let globalChartDefaultId = 0;
const createChartDefaultId = ()=>{
    globalChartDefaultId += 1;
    return `mui-chart-${globalChartDefaultId}`;
};
exports.createChartDefaultId = createChartDefaultId;

},{}],"9KlER":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartId = void 0;
var _selectors = require("502f57162b7223b8");
const selectorChartIdState = (state)=>state.id;
/**
 * Get the id attribute of the chart.
 * @param {ChartState<[UseChartIdSignature]>} state The state of the chart.
 * @returns {string} The id attribute of the chart.
 */ const selectorChartId = exports.selectorChartId = (0, _selectors.createSelector)(selectorChartIdState, (idState)=>idState.chartId);

},{"502f57162b7223b8":"4YBdc"}],"3wdVT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartSeries: true
};
Object.defineProperty(exports, "useChartSeries", {
    enumerable: true,
    get: function() {
        return _useChartSeries.useChartSeries;
    }
});
var _useChartSeries = require("990c24dc4486fc10");
var _useChartSeries2 = require("ccc8749807f8ded1");
Object.keys(_useChartSeries2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartSeries2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartSeries2[key];
        }
    });
});

},{"990c24dc4486fc10":"cuOfK","ccc8749807f8ded1":"79Eww"}],"cuOfK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("d777a6b4b98019ab").default;
var _interopRequireDefault = require("e33652a2e7e21500").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartSeries = void 0;
var _extends2 = _interopRequireDefault(require("38dcf5633fc30769"));
var React = _interopRequireWildcard(require("1c0761dcbac5a72e"));
var _colorPalettes = require("8d6d7ba058e50b15");
var _processSeries = require("e11d44d8da197e66");
const useChartSeries = ({ params, store, seriesConfig })=>{
    const { series, dataset, theme, colors } = params;
    // The effect do not track any value defined synchronously during the 1st render by hooks called after `useChartSeries`
    // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one
    const isFirstRender = React.useRef(true);
    React.useEffect(()=>{
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                series: (0, _extends2.default)({}, prev.series, {
                    processedSeries: (0, _processSeries.preprocessSeries)({
                        series,
                        colors: typeof colors === 'function' ? colors(theme) : colors,
                        seriesConfig,
                        dataset
                    })
                })
            }));
    }, [
        colors,
        dataset,
        series,
        theme,
        seriesConfig,
        store
    ]);
    return {};
};
exports.useChartSeries = useChartSeries;
useChartSeries.params = {
    dataset: true,
    series: true,
    colors: true,
    theme: true
};
const EMPTY_ARRAY = [];
useChartSeries.getDefaultizedParams = ({ params })=>(0, _extends2.default)({}, params, {
        series: params.series?.length ? params.series : EMPTY_ARRAY,
        colors: params.colors ?? _colorPalettes.rainbowSurgePalette,
        theme: params.theme ?? 'light'
    });
useChartSeries.getInitialState = ({ series = [], colors, theme, dataset }, _, seriesConfig)=>{
    return {
        series: {
            seriesConfig,
            processedSeries: (0, _processSeries.preprocessSeries)({
                series,
                colors: typeof colors === 'function' ? colors(theme) : colors,
                seriesConfig,
                dataset
            })
        }
    };
};

},{"d777a6b4b98019ab":"6TFJp","e33652a2e7e21500":"1P3rZ","38dcf5633fc30769":"lKa0J","1c0761dcbac5a72e":"jMk1U","8d6d7ba058e50b15":"eQvsk","e11d44d8da197e66":"lnp1F"}],"eQvsk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _types = require("6896b1af38011840");
Object.keys(_types).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _types[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _types[key];
        }
    });
});
var _rainbowSurge = require("f52dab13f27fe94c");
Object.keys(_rainbowSurge).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _rainbowSurge[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _rainbowSurge[key];
        }
    });
});
var _blueberryTwilight = require("671712809687d3d4");
Object.keys(_blueberryTwilight).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _blueberryTwilight[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _blueberryTwilight[key];
        }
    });
});
var _mangoFusion = require("5695e397a65be143");
Object.keys(_mangoFusion).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _mangoFusion[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _mangoFusion[key];
        }
    });
});
var _cheerfulFiesta = require("7ed0cfe8b9c448e8");
Object.keys(_cheerfulFiesta).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _cheerfulFiesta[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _cheerfulFiesta[key];
        }
    });
});
var _strawberrySky = require("f34eb7dcb34cb10");
Object.keys(_strawberrySky).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _strawberrySky[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _strawberrySky[key];
        }
    });
});
var _blue = require("b21edaa35cb9270");
Object.keys(_blue).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _blue[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _blue[key];
        }
    });
});
var _cyan = require("6982937255c6195d");
Object.keys(_cyan).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _cyan[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _cyan[key];
        }
    });
});
var _green = require("60dce190fc633f94");
Object.keys(_green).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _green[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _green[key];
        }
    });
});
var _orange = require("209b514f16756fd");
Object.keys(_orange).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _orange[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _orange[key];
        }
    });
});
var _pink = require("a7a9850d50e77590");
Object.keys(_pink).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _pink[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _pink[key];
        }
    });
});
var _purple = require("94b034bce805a1f7");
Object.keys(_purple).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _purple[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _purple[key];
        }
    });
});
var _red = require("7d86302be2369f2c");
Object.keys(_red).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _red[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _red[key];
        }
    });
});
var _yellow = require("a6dbc8ec69e83d6f");
Object.keys(_yellow).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _yellow[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _yellow[key];
        }
    });
});

},{"6896b1af38011840":"9u34T","f52dab13f27fe94c":"2SDce","671712809687d3d4":"8mQFi","5695e397a65be143":"jq3Y2","7ed0cfe8b9c448e8":"kNAod","f34eb7dcb34cb10":"bWPrC","b21edaa35cb9270":"9Xe8Z","6982937255c6195d":"8FQDp","60dce190fc633f94":"fuV3r","209b514f16756fd":"mrNjs","a7a9850d50e77590":"5X0JG","94b034bce805a1f7":"38a8b","7d86302be2369f2c":"5YCKj","a6dbc8ec69e83d6f":"9TKmp"}],"9u34T":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"2SDce":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rainbowSurgePaletteLight = exports.rainbowSurgePaletteDark = exports.rainbowSurgePalette = void 0;
const rainbowSurgePaletteLight = exports.rainbowSurgePaletteLight = [
    '#4254FB',
    '#FFB422',
    '#FA4F58',
    '#0DBEFF',
    '#22BF75',
    '#FA83B4',
    '#FF7511'
];
const rainbowSurgePaletteDark = exports.rainbowSurgePaletteDark = [
    '#495AFB',
    '#FFC758',
    '#F35865',
    '#30C8FF',
    '#44CE8D',
    '#F286B3',
    '#FF8C39'
];
const rainbowSurgePalette = (mode)=>mode === 'dark' ? rainbowSurgePaletteDark : rainbowSurgePaletteLight;
exports.rainbowSurgePalette = rainbowSurgePalette;

},{}],"8mQFi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.blueberryTwilightPaletteLight = exports.blueberryTwilightPaletteDark = exports.blueberryTwilightPalette = void 0;
const blueberryTwilightPaletteLight = exports.blueberryTwilightPaletteLight = [
    '#02B2AF',
    '#2E96FF',
    '#B800D8',
    '#60009B',
    '#2731C8',
    '#03008D'
];
const blueberryTwilightPaletteDark = exports.blueberryTwilightPaletteDark = [
    '#02B2AF',
    '#72CCFF',
    '#DA00FF',
    '#9001CB',
    '#2E96FF',
    '#3B48E0'
];
const blueberryTwilightPalette = (mode)=>mode === 'dark' ? blueberryTwilightPaletteDark : blueberryTwilightPaletteLight;
exports.blueberryTwilightPalette = blueberryTwilightPalette;

},{}],"jq3Y2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mangoFusionPaletteLight = exports.mangoFusionPaletteDark = exports.mangoFusionPalette = void 0;
const mangoFusionPaletteLight = exports.mangoFusionPaletteLight = [
    '#173A5E',
    '#00A3A0',
    '#C91B63',
    '#EF5350',
    '#FFA726',
    '#B800D8',
    '#60009B',
    '#2E96FF',
    '#2731C8',
    '#03008D'
];
const mangoFusionPaletteDark = exports.mangoFusionPaletteDark = [
    '#41698F',
    '#19D0CD',
    '#DE196B',
    '#FC5F5C',
    '#FFD771',
    '#DA00FF',
    '#9001CB',
    '#72CCFF',
    '#2E96FF',
    '#3B48E0'
];
const mangoFusionPalette = (mode)=>mode === 'dark' ? mangoFusionPaletteDark : mangoFusionPaletteLight;
exports.mangoFusionPalette = mangoFusionPalette;

},{}],"kNAod":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cheerfulFiestaPaletteLight = exports.cheerfulFiestaPaletteDark = exports.cheerfulFiestaPalette = void 0;
const cheerfulFiestaPaletteDark = exports.cheerfulFiestaPaletteDark = [
    '#0059B2',
    '#2E96FF',
    '#FFC24C',
    '#FF9F0E',
    '#F38200',
    '#2ABFDE',
    '#1F94AD',
    '#BD2C38',
    '#FF3143',
    '#FF8282'
];
const cheerfulFiestaPaletteLight = exports.cheerfulFiestaPaletteLight = [
    '#003A75',
    '#007FFF',
    '#FFC24C',
    '#FF9D09',
    '#CA6C00',
    '#127D94',
    '#1F94AD',
    '#C82634',
    '#FF3143',
    '#FF7E7E'
];
const cheerfulFiestaPalette = (mode)=>mode === 'dark' ? cheerfulFiestaPaletteDark : cheerfulFiestaPaletteLight;
exports.cheerfulFiestaPalette = cheerfulFiestaPalette;

},{}],"bWPrC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.strawberrySkyPaletteLight = exports.strawberrySkyPaletteDark = exports.strawberrySkyPalette = void 0;
const strawberrySkyPaletteLight = exports.strawberrySkyPaletteLight = [
    '#6877FF',
    '#694FFD',
    '#A94FFD',
    '#DA4FFD',
    '#F050A5',
    '#FF5E6C'
];
const strawberrySkyPaletteDark = exports.strawberrySkyPaletteDark = strawberrySkyPaletteLight;
const strawberrySkyPalette = (mode)=>mode === 'dark' ? strawberrySkyPaletteDark : strawberrySkyPaletteLight;
exports.strawberrySkyPalette = strawberrySkyPalette;

},{}],"9Xe8Z":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bluePaletteLight = exports.bluePaletteDark = exports.bluePalette = void 0;
// Blue sequential gradient palette based on the color scheme
const bluePaletteLight = exports.bluePaletteLight = [
    '#BDDEFF',
    '#99CCFF',
    '#66B2FF',
    '#2E96FF',
    '#0064D6',
    '#0D47A1',
    '#0A367B',
    '#072555'
];
const bluePaletteDark = exports.bluePaletteDark = bluePaletteLight;
const bluePalette = (mode)=>mode === 'dark' ? bluePaletteDark : bluePaletteLight;
exports.bluePalette = bluePalette;

},{}],"8FQDp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cyanPaletteLight = exports.cyanPaletteDark = exports.cyanPalette = void 0;
// Cyan sequential gradient palette based on the color scheme
const cyanPaletteLight = exports.cyanPaletteLight = [
    '#CFE9E8',
    '#A3DAD8',
    '#7ED0CE',
    '#44BDBA',
    '#299896',
    '#137370',
    '#0E5A58',
    '#073938'
];
const cyanPaletteDark = exports.cyanPaletteDark = cyanPaletteLight;
const cyanPalette = (mode)=>mode === 'dark' ? cyanPaletteDark : cyanPaletteLight;
exports.cyanPalette = cyanPalette;

},{}],"fuV3r":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.greenPaletteLight = exports.greenPaletteDark = exports.greenPalette = void 0;
// Green sequential gradient palette based on the color scheme
const greenPaletteLight = exports.greenPaletteLight = [
    '#CDEBDD',
    '#B2E2CB',
    '#8FD8B5',
    '#54C690',
    '#31B375',
    '#359F6D',
    '#0F7746',
    '#065731'
];
const greenPaletteDark = exports.greenPaletteDark = greenPaletteLight;
const greenPalette = (mode)=>mode === 'dark' ? greenPaletteDark : greenPaletteLight;
exports.greenPalette = greenPalette;

},{}],"mrNjs":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.orangePaletteLight = exports.orangePaletteDark = exports.orangePalette = void 0;
// Orange sequential gradient palette based on the color scheme
const orangePaletteLight = exports.orangePaletteLight = [
    '#FBDBC3',
    '#F9BD92',
    '#F99F5D',
    '#FF7A19',
    '#FD620B',
    '#E15100',
    '#AC3E00',
    '#822F00'
];
const orangePaletteDark = exports.orangePaletteDark = orangePaletteLight;
const orangePalette = (mode)=>mode === 'dark' ? orangePaletteDark : orangePaletteLight;
exports.orangePalette = orangePalette;

},{}],"5X0JG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.pinkPaletteLight = exports.pinkPaletteDark = exports.pinkPalette = void 0;
// Pink sequential gradient palette based on the color scheme
const pinkPaletteLight = exports.pinkPaletteLight = [
    '#F7D2E1',
    '#F6BED5',
    '#F4A0C3',
    '#F6619F',
    '#EE448B',
    '#E32977',
    '#B6215F',
    '#8B1F4C'
];
const pinkPaletteDark = exports.pinkPaletteDark = pinkPaletteLight;
const pinkPalette = (mode)=>mode === 'dark' ? pinkPaletteDark : pinkPaletteLight;
exports.pinkPalette = pinkPalette;

},{}],"38a8b":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.purplePaletteLight = exports.purplePaletteDark = exports.purplePalette = void 0;
// Purple sequential gradient palette based on the color scheme
const purplePaletteLight = exports.purplePaletteLight = [
    '#CAD4EE',
    '#98ADE5',
    '#577EE3',
    '#4254FB',
    '#2638DF',
    '#222FA6',
    '#111C7F',
    '#091159'
];
const purplePaletteDark = exports.purplePaletteDark = purplePaletteLight;
const purplePalette = (mode)=>mode === 'dark' ? purplePaletteDark : purplePaletteLight;
exports.purplePalette = purplePalette;

},{}],"5YCKj":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.redPaletteLight = exports.redPaletteDark = exports.redPalette = void 0;
// Red sequential gradient palette based on the color scheme
const redPaletteLight = exports.redPaletteLight = [
    '#FAE0E0',
    '#F7C0BF',
    '#F3A2A0',
    '#EF5350',
    '#E53935',
    '#DC2B27',
    '#860B08',
    '#560503 '
];
const redPaletteDark = exports.redPaletteDark = redPaletteLight;
const redPalette = (mode)=>mode === 'dark' ? redPaletteDark : redPaletteLight;
exports.redPalette = redPalette;

},{}],"9TKmp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.yellowPaletteLight = exports.yellowPaletteDark = exports.yellowPalette = void 0;
// Yellow sequential gradient palette based on the color scheme
const yellowPaletteLight = exports.yellowPaletteLight = [
    '#FBEFD6',
    '#F5DEB0',
    '#F3CD80',
    '#FAC14F',
    '#FFB219',
    '#EF9801',
    '#DA7D0B',
    '#AB6208'
];
const yellowPaletteDark = exports.yellowPaletteDark = yellowPaletteLight;
const yellowPalette = (mode)=>mode === 'dark' ? yellowPaletteDark : yellowPaletteLight;
exports.yellowPalette = yellowPalette;

},{}],"lnp1F":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.preprocessSeries = void 0;
/**
 * This methods is the interface between what the developer is providing and what components receives
 * To simplify the components behaviors, it groups series by type, such that LinePlots props are not updated if some line data are modified
 * It also add defaultized values such as the ids, colors
 * @param series The array of series provided by the developer
 * @param colors The color palette used to defaultize series colors
 * @returns An object structuring all the series by type.
 */ const preprocessSeries = ({ series, colors, seriesConfig, dataset })=>{
    // Group series by type
    const seriesGroups = {};
    // Notice the line about uses `ChartSeriesType` instead of TSeriesType.
    // That's probably because the series.type is not propagated from the generic but hardcoded in the config.
    series.forEach((seriesData, seriesIndex)=>{
        const seriesWithDefaultValues = seriesConfig[seriesData.type].getSeriesWithDefaultValues(seriesData, seriesIndex, colors);
        const id = seriesWithDefaultValues.id;
        if (seriesGroups[seriesData.type] === undefined) seriesGroups[seriesData.type] = {
            series: {},
            seriesOrder: []
        };
        if (seriesGroups[seriesData.type]?.series[id] !== undefined) throw new Error(`MUI X Charts: series' id "${id}" is not unique.`);
        seriesGroups[seriesData.type].series[id] = seriesWithDefaultValues;
        seriesGroups[seriesData.type].seriesOrder.push(id);
    });
    const processedSeries = {};
    // Apply formatter on a type group
    Object.keys(seriesConfig).forEach((type)=>{
        const group = seriesGroups[type];
        if (group !== undefined) processedSeries[type] = seriesConfig[type]?.seriesProcessor?.(group, dataset) ?? seriesGroups[type];
    });
    return processedSeries;
};
exports.preprocessSeries = preprocessSeries;

},{}],"79Eww":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartSeriesState = exports.selectorChartSeriesProcessed = exports.selectorChartSeriesConfig = void 0;
var _selectors = require("a346100bea9e8a19");
const selectorChartSeriesState = (state)=>state.series;
exports.selectorChartSeriesState = selectorChartSeriesState;
const selectorChartSeriesProcessed = exports.selectorChartSeriesProcessed = (0, _selectors.createSelector)(selectorChartSeriesState, (seriesState)=>seriesState.processedSeries);
const selectorChartSeriesConfig = exports.selectorChartSeriesConfig = (0, _selectors.createSelector)(selectorChartSeriesState, (seriesState)=>seriesState.seriesConfig);

},{"a346100bea9e8a19":"4YBdc"}],"jaK6F":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c34c81fb09178cb6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.extractPluginParamsFromProps = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("ee40b83c3bdca00f"));
const _excluded = [
    "apiRef"
];
const extractPluginParamsFromProps = (_ref)=>{
    let { plugins } = _ref, props = (0, _objectWithoutPropertiesLoose2.default)(_ref.props, _excluded);
    const paramsLookup = {};
    plugins.forEach((plugin)=>{
        Object.assign(paramsLookup, plugin.params);
    });
    const pluginParams = {};
    Object.keys(props).forEach((propName)=>{
        const prop = props[propName];
        if (paramsLookup[propName]) pluginParams[propName] = prop;
    });
    const defaultizedPluginParams = plugins.reduce((acc, plugin)=>{
        if (plugin.getDefaultizedParams) return plugin.getDefaultizedParams({
            params: acc
        });
        return acc;
    }, pluginParams);
    return defaultizedPluginParams;
};
exports.extractPluginParamsFromProps = extractPluginParamsFromProps;

},{"c34c81fb09178cb6":"1P3rZ","ee40b83c3bdca00f":"17jFf"}],"3LALx":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("a2f0c2915ed72d3d").default;
var _interopRequireDefault = require("2d1a9de48a1b8854").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartModels = void 0;
var _extends2 = _interopRequireDefault(require("e10c086ae5237db4"));
var React = _interopRequireWildcard(require("25ea4a50c1725f31"));
/**
 * Implements the same behavior as `useControlled` but for several models.
 * The controlled models are never stored in the state, and the state is only updated if the model is not controlled.
 */ const useChartModels = (plugins, props)=>{
    const modelsRef = React.useRef({});
    const [modelsState, setModelsState] = React.useState(()=>{
        const initialState = {};
        plugins.forEach((plugin)=>{
            if (plugin.models) Object.entries(plugin.models).forEach(([modelName, modelInitializer])=>{
                modelsRef.current[modelName] = {
                    isControlled: props[modelName] !== undefined,
                    getDefaultValue: modelInitializer.getDefaultValue
                };
                initialState[modelName] = modelInitializer.getDefaultValue(props);
            });
        });
        return initialState;
    });
    const models = Object.fromEntries(Object.entries(modelsRef.current).map(([modelName, model])=>{
        const value = props[modelName] ?? modelsState[modelName];
        return [
            modelName,
            {
                value,
                setControlledValue: (newValue)=>{
                    if (!model.isControlled) setModelsState((prevState)=>(0, _extends2.default)({}, prevState, {
                            [modelName]: typeof newValue === 'function' ? newValue(value) : newValue
                        }));
                },
                isControlled: modelsRef.current[modelName].isControlled
            }
        ];
    }));
    Object.entries(modelsRef.current).forEach(([modelName, model])=>{
        const controlled = props[modelName];
        const newDefaultValue = model.getDefaultValue(props);
        /* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps, react-compiler/react-compiler */ React.useEffect(()=>{
            if (model.isControlled !== (controlled !== undefined)) console.error([
                `MUI X Charts: A component is changing the ${model.isControlled ? '' : 'un'}controlled ${modelName} state of Chart to be ${model.isControlled ? 'un' : ''}controlled.`,
                'Elements should not switch from uncontrolled to controlled (or vice versa).',
                `Decide between using a controlled or uncontrolled ${modelName} ` + 'element for the lifetime of the component.',
                "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.",
                'More info: https://fb.me/react-controlled-components'
            ].join('\n'));
        }, [
            controlled
        ]);
        const { current: defaultValue } = React.useRef(newDefaultValue);
        React.useEffect(()=>{
            if (!model.isControlled && defaultValue !== newDefaultValue) console.error([
                `MUI X Charts: A component is changing the default ${modelName} state of an uncontrolled Chart after being initialized. ` + `To suppress this warning opt to use a controlled Chart.`
            ].join('\n'));
        }, [
            JSON.stringify(newDefaultValue)
        ]);
    });
    /* eslint-enable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */ return models;
};
exports.useChartModels = useChartModels;

},{"a2f0c2915ed72d3d":"6TFJp","2d1a9de48a1b8854":"1P3rZ","e10c086ae5237db4":"lKa0J","25ea4a50c1725f31":"jMk1U"}],"365nn":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("615773f0c813b250").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartContext = void 0;
var React = _interopRequireWildcard(require("a1592bf318c87b3d"));
/**
 * @ignore - internal component.
 */ const ChartContext = exports.ChartContext = /*#__PURE__*/ React.createContext(null);
ChartContext.displayName = 'ChartContext';

},{"615773f0c813b250":"6TFJp","a1592bf318c87b3d":"jMk1U"}],"iMsPz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartCartesianAxis: true,
    defaultizeXAxis: true,
    defaultizeYAxis: true
};
Object.defineProperty(exports, "defaultizeXAxis", {
    enumerable: true,
    get: function() {
        return _defaultizeAxis.defaultizeXAxis;
    }
});
Object.defineProperty(exports, "defaultizeYAxis", {
    enumerable: true,
    get: function() {
        return _defaultizeAxis.defaultizeYAxis;
    }
});
Object.defineProperty(exports, "useChartCartesianAxis", {
    enumerable: true,
    get: function() {
        return _useChartCartesianAxis.useChartCartesianAxis;
    }
});
var _useChartCartesianAxis = require("42af187eef7379f8");
var _useChartCartesianAxisRendering = require("d120dccc3fc1a7d7");
Object.keys(_useChartCartesianAxisRendering).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartCartesianAxisRendering[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartCartesianAxisRendering[key];
        }
    });
});
var _useChartCartesianAxisLayout = require("c52dd200c82f021e");
Object.keys(_useChartCartesianAxisLayout).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartCartesianAxisLayout[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartCartesianAxisLayout[key];
        }
    });
});
var _useChartCartesianInteraction = require("741eb2cfe72779f6");
Object.keys(_useChartCartesianInteraction).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartCartesianInteraction[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartCartesianInteraction[key];
        }
    });
});
var _defaultizeAxis = require("cec9fb038e993936");
var _computeAxisValue = require("dd838165474ba27e");
Object.keys(_computeAxisValue).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _computeAxisValue[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _computeAxisValue[key];
        }
    });
});
var _createZoomLookup = require("519119d5546a66d1");
Object.keys(_createZoomLookup).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _createZoomLookup[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _createZoomLookup[key];
        }
    });
});
var _zoom = require("50c12b4d8a8b1bee");
Object.keys(_zoom).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _zoom[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _zoom[key];
        }
    });
});

},{"42af187eef7379f8":"lLWBc","d120dccc3fc1a7d7":"7HxFa","c52dd200c82f021e":"k6wF0","741eb2cfe72779f6":"4SAAH","cec9fb038e993936":"3wmij","dd838165474ba27e":"h396X","519119d5546a66d1":"ifSW9","50c12b4d8a8b1bee":"gwqWR"}],"lLWBc":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("acc1bd4d5188cc0f").default;
var _interopRequireDefault = require("7f5a09f9a63f9f01").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartCartesianAxis = void 0;
var _extends2 = _interopRequireDefault(require("76eb8bba89c590ff"));
var React = _interopRequireWildcard(require("405d381e67104adf"));
var _warning = require("19ac7cb9bd64a2ee");
var _colorPalettes = require("3a8722b81696258b");
var _useSelector = require("962cc6afd1d67bf3");
var _useChartDimensions = require("4f17f013caa0211c");
var _useChartSeries = require("861193fd9da832d5");
var _defaultizeAxis = require("472d5fd91446ec06");
var _useChartCartesianAxisRendering = require("a9f21fc5b84041ec");
var _getAxisValue = require("915770de4fe1d7a7");
var _getSVGPoint = require("b0f86f3797444a5a");
var _useChartInteraction = require("e1a485d7db593114");
const useChartCartesianAxis = ({ params, store, seriesConfig, svgRef, instance })=>{
    const { xAxis, yAxis, dataset } = params;
    {
        const ids = [
            ...xAxis ?? [],
            ...yAxis ?? []
        ].filter((axis)=>axis.id).map((axis)=>axis.id);
        const duplicates = new Set(ids.filter((id, index)=>ids.indexOf(id) !== index));
        if (duplicates.size > 0) (0, _warning.warnOnce)([
            `MUI X Charts: The following axis ids are duplicated: ${Array.from(duplicates).join(', ')}.`,
            `Please make sure that each axis has a unique id.`
        ].join('\n'), 'error');
    }
    const drawingArea = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);
    const processedSeries = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesProcessed);
    const isInteractionEnabled = (0, _useSelector.useSelector)(store, _useChartInteraction.selectorChartsInteractionIsInitialized);
    const { axis: xAxisWithScale, axisIds: xAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartXAxis);
    const { axis: yAxisWithScale, axisIds: yAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartYAxis);
    // The effect do not track any value defined synchronously during the 1st render by hooks called after `useChartCartesianAxis`
    // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one
    const isFirstRender = React.useRef(true);
    React.useEffect(()=>{
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                cartesianAxis: (0, _extends2.default)({}, prev.cartesianAxis, {
                    x: (0, _defaultizeAxis.defaultizeXAxis)(xAxis, dataset),
                    y: (0, _defaultizeAxis.defaultizeYAxis)(yAxis, dataset)
                })
            }));
    }, [
        seriesConfig,
        drawingArea,
        xAxis,
        yAxis,
        dataset,
        store
    ]);
    const usedXAxis = xAxisIds[0];
    const usedYAxis = yAxisIds[0];
    React.useEffect(()=>{
        const element = svgRef.current;
        if (!isInteractionEnabled || element === null || params.disableAxisListener) return ()=>{};
        const handleOut = ()=>{
            instance.cleanInteraction?.();
        };
        const handleMove = (event)=>{
            const target = 'targetTouches' in event ? event.targetTouches[0] : event;
            const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, target);
            if (!instance.isPointInside(svgPoint, {
                targetElement: event.target
            })) {
                instance.cleanInteraction?.();
                return;
            }
            instance.setPointerCoordinate?.(svgPoint);
        };
        const handleDown = (event)=>{
            const target = event.currentTarget;
            if (!target) return;
            if ('hasPointerCapture' in target && target.hasPointerCapture(event.pointerId)) target.releasePointerCapture(event.pointerId);
        };
        element.addEventListener('pointerdown', handleDown);
        element.addEventListener('pointermove', handleMove);
        element.addEventListener('pointercancel', handleOut);
        element.addEventListener('pointerleave', handleOut);
        return ()=>{
            element.removeEventListener('pointerdown', handleDown);
            element.removeEventListener('pointermove', handleMove);
            element.removeEventListener('pointercancel', handleOut);
            element.removeEventListener('pointerleave', handleOut);
        };
    }, [
        svgRef,
        store,
        xAxisWithScale,
        usedXAxis,
        yAxisWithScale,
        usedYAxis,
        instance,
        params.disableAxisListener,
        isInteractionEnabled
    ]);
    React.useEffect(()=>{
        const element = svgRef.current;
        const onAxisClick = params.onAxisClick;
        if (element === null || !onAxisClick) return ()=>{};
        const handleMouseClick = (event)=>{
            event.preventDefault();
            let dataIndex = null;
            let isXAxis = false;
            const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, event);
            const xIndex = (0, _getAxisValue.getAxisIndex)(xAxisWithScale[usedXAxis], svgPoint.x);
            isXAxis = xIndex !== -1;
            dataIndex = isXAxis ? xIndex : (0, _getAxisValue.getAxisIndex)(yAxisWithScale[usedYAxis], svgPoint.y);
            const USED_AXIS_ID = isXAxis ? xAxisIds[0] : yAxisIds[0];
            if (dataIndex == null || dataIndex === -1) return;
            // The .data exist because otherwise the dataIndex would be null or -1.
            const axisValue = (isXAxis ? xAxisWithScale : yAxisWithScale)[USED_AXIS_ID].data[dataIndex];
            const seriesValues = {};
            Object.keys(processedSeries).filter((seriesType)=>[
                    'bar',
                    'line'
                ].includes(seriesType)).forEach((seriesType)=>{
                processedSeries[seriesType]?.seriesOrder.forEach((seriesId)=>{
                    const seriesItem = processedSeries[seriesType].series[seriesId];
                    const providedXAxisId = seriesItem.xAxisId;
                    const providedYAxisId = seriesItem.yAxisId;
                    const axisKey = isXAxis ? providedXAxisId : providedYAxisId;
                    if (axisKey === undefined || axisKey === USED_AXIS_ID) seriesValues[seriesId] = seriesItem.data[dataIndex];
                });
            });
            onAxisClick(event, {
                dataIndex,
                axisValue,
                seriesValues
            });
        };
        element.addEventListener('click', handleMouseClick);
        return ()=>{
            element.removeEventListener('click', handleMouseClick);
        };
    }, [
        params.onAxisClick,
        processedSeries,
        svgRef,
        xAxisWithScale,
        xAxisIds,
        yAxisWithScale,
        yAxisIds,
        usedXAxis,
        usedYAxis
    ]);
    return {};
};
exports.useChartCartesianAxis = useChartCartesianAxis;
useChartCartesianAxis.params = {
    xAxis: true,
    yAxis: true,
    dataset: true,
    onAxisClick: true,
    disableAxisListener: true
};
useChartCartesianAxis.getDefaultizedParams = ({ params })=>{
    return (0, _extends2.default)({}, params, {
        colors: params.colors ?? _colorPalettes.rainbowSurgePalette,
        theme: params.theme ?? 'light',
        defaultizedXAxis: (0, _defaultizeAxis.defaultizeXAxis)(params.xAxis, params.dataset),
        defaultizedYAxis: (0, _defaultizeAxis.defaultizeYAxis)(params.yAxis, params.dataset)
    });
};
useChartCartesianAxis.getInitialState = (params)=>({
        cartesianAxis: {
            x: params.defaultizedXAxis,
            y: params.defaultizedYAxis
        }
    });

},{"acc1bd4d5188cc0f":"6TFJp","7f5a09f9a63f9f01":"1P3rZ","76eb8bba89c590ff":"lKa0J","405d381e67104adf":"jMk1U","19ac7cb9bd64a2ee":"4GMHX","3a8722b81696258b":"eQvsk","962cc6afd1d67bf3":"65ofz","4f17f013caa0211c":"fCnQx","861193fd9da832d5":"79Eww","472d5fd91446ec06":"3wmij","a9f21fc5b84041ec":"7HxFa","915770de4fe1d7a7":"196LV","b0f86f3797444a5a":"5546x","e1a485d7db593114":"4pi8Z"}],"4GMHX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "clearWarningsCache", {
    enumerable: true,
    get: function() {
        return _warning.clearWarningsCache;
    }
});
Object.defineProperty(exports, "warnOnce", {
    enumerable: true,
    get: function() {
        return _warning.warnOnce;
    }
});
var _warning = require("f7f8947a801f6f55");

},{"f7f8947a801f6f55":"1m754"}],"1m754":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.clearWarningsCache = clearWarningsCache;
exports.warnOnce = warnOnce;
const warnedOnceCache = new Set();
/**
 * Logs a message to the console on development mode. The warning will only be logged once.
 *
 * The message is the log's cache key. Two identical messages will only be logged once.
 *
 * This function is a no-op in production.
 *
 * @param message the message to log
 * @param gravity the gravity of the warning. Defaults to `'warning'`.
 * @returns
 */ function warnOnce(message, gravity = 'warning') {
    const cleanMessage = Array.isArray(message) ? message.join('\n') : message;
    if (!warnedOnceCache.has(cleanMessage)) {
        warnedOnceCache.add(cleanMessage);
        if (gravity === 'error') console.error(cleanMessage);
        else console.warn(cleanMessage);
    }
}
function clearWarningsCache() {
    warnedOnceCache.clear();
}

},{}],"65ofz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useSelector = void 0;
var _withSelector = require("b03f023d9941f683");
const defaultCompare = Object.is;
const useSelector = (store, selector, args, equals = defaultCompare)=>{
    const selectorWithArgs = (state)=>selector(state, args);
    return (0, _withSelector.useSyncExternalStoreWithSelector)(store.subscribe, store.getSnapshot, store.getSnapshot, selectorWithArgs, equals);
};
exports.useSelector = useSelector;

},{"b03f023d9941f683":"hQIeG"}],"hQIeG":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("374a059340689e89");

},{"374a059340689e89":"diPwR"}],"diPwR":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * use-sync-external-store-with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("8b38fc6c74f16e20"), objectIs = "function" === typeof Object.is ? Object.is : is, useSyncExternalStore = React.useSyncExternalStore, useRef = React.useRef, useEffect = React.useEffect, useMemo = React.useMemo, useDebugValue = React.useDebugValue;
    exports.useSyncExternalStoreWithSelector = function(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
        var instRef = useRef(null);
        if (null === instRef.current) {
            var inst = {
                hasValue: !1,
                value: null
            };
            instRef.current = inst;
        } else inst = instRef.current;
        instRef = useMemo(function() {
            function memoizedSelector(nextSnapshot) {
                if (!hasMemo) {
                    hasMemo = !0;
                    memoizedSnapshot = nextSnapshot;
                    nextSnapshot = selector(nextSnapshot);
                    if (void 0 !== isEqual && inst.hasValue) {
                        var currentSelection = inst.value;
                        if (isEqual(currentSelection, nextSnapshot)) return memoizedSelection = currentSelection;
                    }
                    return memoizedSelection = nextSnapshot;
                }
                currentSelection = memoizedSelection;
                if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;
                var nextSelection = selector(nextSnapshot);
                if (void 0 !== isEqual && isEqual(currentSelection, nextSelection)) return memoizedSnapshot = nextSnapshot, currentSelection;
                memoizedSnapshot = nextSnapshot;
                return memoizedSelection = nextSelection;
            }
            var hasMemo = !1, memoizedSnapshot, memoizedSelection, maybeGetServerSnapshot = void 0 === getServerSnapshot ? null : getServerSnapshot;
            return [
                function() {
                    return memoizedSelector(getSnapshot());
                },
                null === maybeGetServerSnapshot ? void 0 : function() {
                    return memoizedSelector(maybeGetServerSnapshot());
                }
            ];
        }, [
            getSnapshot,
            getServerSnapshot,
            selector,
            isEqual
        ]);
        var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);
        useEffect(function() {
            inst.hasValue = !0;
            inst.value = value;
        }, [
            value
        ]);
        useDebugValue(value);
        return value;
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"8b38fc6c74f16e20":"jMk1U"}],"3wmij":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5b7453c0f643f109").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultizeXAxis = defaultizeXAxis;
exports.defaultizeYAxis = defaultizeYAxis;
var _extends2 = _interopRequireDefault(require("363bec6473e295a3"));
var _constants = require("4fd0a8100ebe2c20");
function defaultizeXAxis(inAxes, dataset) {
    const offsets = {
        top: 0,
        bottom: 0,
        none: 0
    };
    const inputAxes = inAxes && inAxes.length > 0 ? inAxes : [
        {
            id: _constants.DEFAULT_X_AXIS_KEY,
            scaleType: 'linear'
        }
    ];
    const parsedAxes = inputAxes.map((axisConfig, index)=>{
        const dataKey = axisConfig.dataKey;
        // The first x-axis is defaultized to the bottom
        const defaultPosition = index === 0 ? 'bottom' : 'none';
        const position = axisConfig.position ?? defaultPosition;
        const defaultHeight = _constants.DEFAULT_AXIS_SIZE_HEIGHT + (axisConfig.label ? _constants.AXIS_LABEL_DEFAULT_HEIGHT : 0);
        const sharedConfig = (0, _extends2.default)({
            id: `defaultized-x-axis-${index}`,
            offset: offsets[position]
        }, axisConfig, {
            position,
            height: axisConfig.height ?? defaultHeight
        });
        // Increment the offset for the next axis
        if (position !== 'none') offsets[position] += sharedConfig.height;
        // If `dataKey` is NOT provided
        if (dataKey === undefined || axisConfig.data !== undefined) return sharedConfig;
        if (dataset === undefined) throw new Error(`MUI X Charts: x-axis uses \`dataKey\` but no \`dataset\` is provided.`);
        // If `dataKey` is provided
        return (0, _extends2.default)({}, sharedConfig, {
            data: dataset.map((d)=>d[dataKey])
        });
    });
    return parsedAxes;
}
function defaultizeYAxis(inAxes, dataset) {
    const offsets = {
        right: 0,
        left: 0,
        none: 0
    };
    const inputAxes = inAxes && inAxes.length > 0 ? inAxes : [
        {
            id: _constants.DEFAULT_Y_AXIS_KEY,
            scaleType: 'linear'
        }
    ];
    const parsedAxes = inputAxes.map((axisConfig, index)=>{
        const dataKey = axisConfig.dataKey;
        // The first y-axis is defaultized to the left
        const defaultPosition = index === 0 ? 'left' : 'none';
        const position = axisConfig.position ?? defaultPosition;
        const defaultWidth = _constants.DEFAULT_AXIS_SIZE_WIDTH + (axisConfig.label ? _constants.AXIS_LABEL_DEFAULT_HEIGHT : 0);
        const sharedConfig = (0, _extends2.default)({
            id: `defaultized-y-axis-${index}`,
            offset: offsets[position]
        }, axisConfig, {
            position,
            width: axisConfig.width ?? defaultWidth
        });
        // Increment the offset for the next axis
        if (position !== 'none') offsets[position] += sharedConfig.width;
        // If `dataKey` is NOT provided
        if (dataKey === undefined || axisConfig.data !== undefined) return sharedConfig;
        if (dataset === undefined) throw new Error(`MUI X Charts: y-axis uses \`dataKey\` but no \`dataset\` is provided.`);
        // If `dataKey` is provided
        return (0, _extends2.default)({}, sharedConfig, {
            data: dataset.map((d)=>d[dataKey])
        });
    });
    return parsedAxes;
}

},{"5b7453c0f643f109":"1P3rZ","363bec6473e295a3":"lKa0J","4fd0a8100ebe2c20":"2sqkC"}],"7HxFa":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("70d556a4f8adbf61").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartZoomOptionsLookup = exports.selectorChartZoomIsInteracting = exports.selectorChartYAxis = exports.selectorChartXAxis = exports.createZoomMap = void 0;
var _extends2 = _interopRequireDefault(require("2298fa39a90898dd"));
var _useChartDimensions = require("354fceef217c7d94");
var _useChartSeries = require("6e8cd186bb03c1fb");
var _selectors = require("46b762509d445ac1");
var _computeAxisValue = require("28aeadf7c0c3b55c");
var _createAxisFilterMapper = require("fde6e1879628ba61");
var _createZoomLookup = require("a63bb38d7abd233f");
var _useChartCartesianAxisLayout = require("724fa49300b62d02");
const createZoomMap = (zoom)=>{
    const zoomItemMap = new Map();
    zoom.forEach((zoomItem)=>{
        zoomItemMap.set(zoomItem.axisId, zoomItem);
    });
    return zoomItemMap;
};
exports.createZoomMap = createZoomMap;
const selectorChartZoomState = (state)=>state.zoom;
/**
 * Following selectors are not exported because they exist in the MIT chart only to ba able to reuse the Zoom state from the pro.
 */ const selectorChartZoomIsInteracting = exports.selectorChartZoomIsInteracting = (0, _selectors.createSelector)(selectorChartZoomState, (zoom)=>zoom?.isInteracting);
const selectorChartZoomMap = (0, _selectors.createSelector)(selectorChartZoomState, (zoom)=>zoom?.zoomData && createZoomMap(zoom?.zoomData));
const selectorChartXZoomOptionsLookup = (0, _selectors.createSelector)(_useChartCartesianAxisLayout.selectorChartRawXAxis, (0, _createZoomLookup.createZoomLookup)('x'));
const selectorChartYZoomOptionsLookup = (0, _selectors.createSelector)(_useChartCartesianAxisLayout.selectorChartRawYAxis, (0, _createZoomLookup.createZoomLookup)('y'));
const selectorChartZoomOptionsLookup = exports.selectorChartZoomOptionsLookup = (0, _selectors.createSelector)([
    selectorChartXZoomOptionsLookup,
    selectorChartYZoomOptionsLookup
], (xLookup, yLookup)=>(0, _extends2.default)({}, xLookup, yLookup));
const selectorChartXFilter = (0, _selectors.createSelector)([
    selectorChartZoomMap,
    selectorChartZoomOptionsLookup,
    _useChartSeries.selectorChartSeriesConfig,
    _useChartSeries.selectorChartSeriesProcessed
], (zoomMap, zoomOptions, seriesConfig, formattedSeries)=>zoomMap && zoomOptions && (0, _createAxisFilterMapper.createAxisFilterMapper)({
        zoomMap,
        zoomOptions,
        seriesConfig,
        formattedSeries,
        direction: 'x'
    }));
const selectorChartYFilter = (0, _selectors.createSelector)([
    selectorChartZoomMap,
    selectorChartZoomOptionsLookup,
    _useChartSeries.selectorChartSeriesConfig,
    _useChartSeries.selectorChartSeriesProcessed
], (zoomMap, zoomOptions, seriesConfig, formattedSeries)=>zoomMap && zoomOptions && (0, _createAxisFilterMapper.createAxisFilterMapper)({
        zoomMap,
        zoomOptions,
        seriesConfig,
        formattedSeries,
        direction: 'y'
    }));
const selectorChartZoomAxisFilters = (0, _selectors.createSelector)([
    selectorChartXFilter,
    selectorChartYFilter,
    _useChartCartesianAxisLayout.selectorChartRawXAxis,
    _useChartCartesianAxisLayout.selectorChartRawYAxis
], (xMapper, yMapper, xAxis, yAxis)=>{
    if (xMapper === undefined || yMapper === undefined) // Early return if there is no zoom.
    return undefined;
    const xFilters = xAxis?.reduce((acc, axis, index)=>{
        const filter = xMapper(axis, index);
        if (filter !== null) acc[axis.id] = filter;
        return acc;
    }, {});
    const yFilters = yAxis?.reduce((acc, axis, index)=>{
        const filter = yMapper(axis, index);
        if (filter !== null) acc[axis.id] = filter;
        return acc;
    }, {});
    if (Object.keys(xFilters ?? {}).length === 0 && Object.keys(yFilters ?? {}).length === 0) return undefined;
    return (0, _createAxisFilterMapper.createGetAxisFilters)((0, _extends2.default)({}, xFilters, yFilters));
});
/**
 * The only interesting selectors that merge axis data and zoom if provided.
 */ const selectorChartXAxis = exports.selectorChartXAxis = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawXAxis,
    _useChartDimensions.selectorChartDrawingArea,
    _useChartSeries.selectorChartSeriesProcessed,
    _useChartSeries.selectorChartSeriesConfig,
    selectorChartZoomMap,
    selectorChartZoomOptionsLookup,
    selectorChartZoomAxisFilters
], (axis, drawingArea, formattedSeries, seriesConfig, zoomMap, zoomOptions, getFilters)=>(0, _computeAxisValue.computeAxisValue)({
        drawingArea,
        formattedSeries,
        axis,
        seriesConfig,
        axisDirection: 'x',
        zoomMap,
        zoomOptions,
        getFilters
    }));
const selectorChartYAxis = exports.selectorChartYAxis = (0, _selectors.createSelector)([
    _useChartCartesianAxisLayout.selectorChartRawYAxis,
    _useChartDimensions.selectorChartDrawingArea,
    _useChartSeries.selectorChartSeriesProcessed,
    _useChartSeries.selectorChartSeriesConfig,
    selectorChartZoomMap,
    selectorChartZoomOptionsLookup,
    selectorChartZoomAxisFilters
], (axis, drawingArea, formattedSeries, seriesConfig, zoomMap, zoomOptions, getFilters)=>(0, _computeAxisValue.computeAxisValue)({
        drawingArea,
        formattedSeries,
        axis,
        seriesConfig,
        axisDirection: 'y',
        zoomMap,
        zoomOptions,
        getFilters
    }));

},{"70d556a4f8adbf61":"1P3rZ","2298fa39a90898dd":"lKa0J","354fceef217c7d94":"5c4j2","6e8cd186bb03c1fb":"3wdVT","46b762509d445ac1":"4YBdc","28aeadf7c0c3b55c":"h396X","fde6e1879628ba61":"hE9Ea","a63bb38d7abd233f":"ifSW9","724fa49300b62d02":"k6wF0"}],"5c4j2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartDimensions: true
};
Object.defineProperty(exports, "useChartDimensions", {
    enumerable: true,
    get: function() {
        return _useChartDimensions.useChartDimensions;
    }
});
var _useChartDimensions = require("d26422c644d1f6c");
var _useChartDimensions2 = require("78fd4c40895e7a4");
Object.keys(_useChartDimensions2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartDimensions2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartDimensions2[key];
        }
    });
});

},{"d26422c644d1f6c":"fzisH","78fd4c40895e7a4":"fCnQx"}],"h396X":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d1f639a998d3ddd6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.computeAxisValue = computeAxisValue;
var _extends2 = _interopRequireDefault(require("9a735b14dd42a03d"));
var _d3Scale = require("4900ecadeb17e62");
var _axis = require("c15cbb11ecf86c6d");
var _colorScale = require("570125a640e331ca");
var _useTicks = require("85a7fdf3fa14395d");
var _getScale = require("eec45f018f606ac0");
var _zoom = require("5e0182f56eea9a9f");
var _getAxisExtremum = require("53e2961d87b58405");
var _getAxisTriggerTooltip = require("a8c0225dd765a8b5");
function getRange(drawingArea, axisDirection, // | 'rotation' | 'radius',
axis) {
    const range = axisDirection === 'x' ? [
        drawingArea.left,
        drawingArea.left + drawingArea.width
    ] : [
        drawingArea.top + drawingArea.height,
        drawingArea.top
    ];
    return axis.reverse ? [
        range[1],
        range[0]
    ] : range;
}
const isDateData = (data)=>data?.[0] instanceof Date;
function createDateFormatter(axis, range) {
    const timeScale = (0, _d3Scale.scaleTime)(axis.data, range);
    return (v, { location })=>location === 'tick' ? timeScale.tickFormat(axis.tickNumber)(v) : `${v.toLocaleString()}`;
}
const DEFAULT_CATEGORY_GAP_RATIO = 0.2;
const DEFAULT_BAR_GAP_RATIO = 0.1;
function computeAxisValue({ drawingArea, formattedSeries, axis: allAxis, seriesConfig, axisDirection, zoomMap, zoomOptions, getFilters }) {
    if (allAxis === undefined) return {
        axis: {},
        axisIds: []
    };
    const axisIdsTriggeringTooltip = (0, _getAxisTriggerTooltip.getAxisTriggerTooltip)(axisDirection, seriesConfig, formattedSeries, allAxis[0].id);
    const completeAxis = {};
    allAxis.forEach((eachAxis, axisIndex)=>{
        const axis = eachAxis;
        const zoomOption = zoomOptions?.[axis.id];
        const zoom = zoomMap?.get(axis.id);
        const zoomRange = zoom ? [
            zoom.start,
            zoom.end
        ] : [
            0,
            100
        ];
        const range = getRange(drawingArea, axisDirection, axis);
        const [minData, maxData] = (0, _getAxisExtremum.getAxisExtremum)(axis, axisDirection, seriesConfig, axisIndex, formattedSeries, zoom === undefined && !zoomOption ? getFilters : undefined // Do not apply filtering if zoom is already defined.
        );
        const triggerTooltip = !axis.ignoreTooltip && axisIdsTriggeringTooltip.has(axis.id);
        const data = axis.data ?? [];
        if ((0, _axis.isBandScaleConfig)(axis)) {
            const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;
            const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;
            // Reverse range because ordinal scales are presented from top to bottom on y-axis
            const scaleRange = axisDirection === 'y' ? [
                range[1],
                range[0]
            ] : range;
            const zoomedRange = (0, _zoom.zoomScaleRange)(scaleRange, zoomRange);
            completeAxis[axis.id] = (0, _extends2.default)({
                offset: 0,
                height: 0,
                categoryGapRatio,
                barGapRatio,
                triggerTooltip
            }, axis, {
                data,
                scale: (0, _d3Scale.scaleBand)(axis.data, zoomedRange).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),
                tickNumber: axis.data.length,
                colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? (0, _colorScale.getOrdinalColorScale)((0, _extends2.default)({
                    values: axis.data
                }, axis.colorMap)) : (0, _colorScale.getColorScale)(axis.colorMap))
            });
            if (isDateData(axis.data)) {
                const dateFormatter = createDateFormatter(axis, scaleRange);
                completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;
            }
        }
        if ((0, _axis.isPointScaleConfig)(axis)) {
            const scaleRange = axisDirection === 'y' ? [
                ...range
            ].reverse() : range;
            const zoomedRange = (0, _zoom.zoomScaleRange)(scaleRange, zoomRange);
            completeAxis[axis.id] = (0, _extends2.default)({
                offset: 0,
                height: 0,
                triggerTooltip
            }, axis, {
                data,
                scale: (0, _d3Scale.scalePoint)(axis.data, zoomedRange),
                tickNumber: axis.data.length,
                colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? (0, _colorScale.getOrdinalColorScale)((0, _extends2.default)({
                    values: axis.data
                }, axis.colorMap)) : (0, _colorScale.getColorScale)(axis.colorMap))
            });
            if (isDateData(axis.data)) {
                const dateFormatter = createDateFormatter(axis, scaleRange);
                completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;
            }
        }
        if (axis.scaleType === 'band' || axis.scaleType === 'point') // Could be merged with the two previous "if conditions" but then TS does not get that `axis.scaleType` can't be `band` or `point`.
        return;
        const scaleType = axis.scaleType ?? 'linear';
        const domainLimit = axis.domainLimit ?? 'nice';
        const axisExtremums = [
            axis.min ?? minData,
            axis.max ?? maxData
        ];
        if (typeof domainLimit === 'function') {
            const { min, max } = domainLimit(minData, maxData);
            axisExtremums[0] = min;
            axisExtremums[1] = max;
        }
        const rawTickNumber = (0, _useTicks.getTickNumber)((0, _extends2.default)({}, axis, {
            range,
            domain: axisExtremums
        }));
        const tickNumber = rawTickNumber / ((zoomRange[1] - zoomRange[0]) / 100);
        const zoomedRange = (0, _zoom.zoomScaleRange)(range, zoomRange);
        const scale = (0, _getScale.getScale)(scaleType, axisExtremums, zoomedRange);
        const finalScale = domainLimit === 'nice' ? scale.nice(rawTickNumber) : scale;
        const [minDomain, maxDomain] = finalScale.domain();
        const domain = [
            axis.min ?? minDomain,
            axis.max ?? maxDomain
        ];
        completeAxis[axis.id] = (0, _extends2.default)({
            offset: 0,
            height: 0,
            triggerTooltip
        }, axis, {
            data,
            scaleType: scaleType,
            scale: finalScale.domain(domain),
            tickNumber,
            colorScale: axis.colorMap && (0, _colorScale.getColorScale)(axis.colorMap)
        });
    });
    return {
        axis: completeAxis,
        axisIds: allAxis.map(({ id })=>id)
    };
}

},{"d1f639a998d3ddd6":"1P3rZ","9a735b14dd42a03d":"lKa0J","4900ecadeb17e62":"cBa7c","c15cbb11ecf86c6d":"LO60x","570125a640e331ca":"8yUXX","85a7fdf3fa14395d":"5xWvO","eec45f018f606ac0":"kzGPD","5e0182f56eea9a9f":"c6eLI","53e2961d87b58405":"9oVz8","a8c0225dd765a8b5":"obznY"}],"cBa7c":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-scale` (CommonJS)
// See upstream license: https://github.com/d3/d3-scale/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("4014ba88f2043de5");

},{"4014ba88f2043de5":"lc2uk"}],"lc2uk":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-scale` (CommonJS)
// See upstream license: https://github.com/d3/d3-scale/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-scale`
module.exports = require("8792366bea84c11");

},{"8792366bea84c11":"9zDnc"}],"9zDnc":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("255aef19fc3b7887").default;
var _interopRequireWildcard = require("48a6f70b767ee6a9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "scaleBand", {
    enumerable: true,
    get: function() {
        return _band.default;
    }
});
Object.defineProperty(exports, "scaleDiverging", {
    enumerable: true,
    get: function() {
        return _diverging.default;
    }
});
Object.defineProperty(exports, "scaleDivergingLog", {
    enumerable: true,
    get: function() {
        return _diverging.divergingLog;
    }
});
Object.defineProperty(exports, "scaleDivergingPow", {
    enumerable: true,
    get: function() {
        return _diverging.divergingPow;
    }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
    enumerable: true,
    get: function() {
        return _diverging.divergingSqrt;
    }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
    enumerable: true,
    get: function() {
        return _diverging.divergingSymlog;
    }
});
Object.defineProperty(exports, "scaleIdentity", {
    enumerable: true,
    get: function() {
        return _identity.default;
    }
});
Object.defineProperty(exports, "scaleImplicit", {
    enumerable: true,
    get: function() {
        return _ordinal.implicit;
    }
});
Object.defineProperty(exports, "scaleLinear", {
    enumerable: true,
    get: function() {
        return _linear.default;
    }
});
Object.defineProperty(exports, "scaleLog", {
    enumerable: true,
    get: function() {
        return _log.default;
    }
});
Object.defineProperty(exports, "scaleOrdinal", {
    enumerable: true,
    get: function() {
        return _ordinal.default;
    }
});
Object.defineProperty(exports, "scalePoint", {
    enumerable: true,
    get: function() {
        return _band.point;
    }
});
Object.defineProperty(exports, "scalePow", {
    enumerable: true,
    get: function() {
        return _pow.default;
    }
});
Object.defineProperty(exports, "scaleQuantile", {
    enumerable: true,
    get: function() {
        return _quantile.default;
    }
});
Object.defineProperty(exports, "scaleQuantize", {
    enumerable: true,
    get: function() {
        return _quantize.default;
    }
});
Object.defineProperty(exports, "scaleRadial", {
    enumerable: true,
    get: function() {
        return _radial.default;
    }
});
Object.defineProperty(exports, "scaleSequential", {
    enumerable: true,
    get: function() {
        return _sequential.default;
    }
});
Object.defineProperty(exports, "scaleSequentialLog", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialLog;
    }
});
Object.defineProperty(exports, "scaleSequentialPow", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialPow;
    }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
    enumerable: true,
    get: function() {
        return _sequentialQuantile.default;
    }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialSqrt;
    }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialSymlog;
    }
});
Object.defineProperty(exports, "scaleSqrt", {
    enumerable: true,
    get: function() {
        return _pow.sqrt;
    }
});
Object.defineProperty(exports, "scaleSymlog", {
    enumerable: true,
    get: function() {
        return _symlog.default;
    }
});
Object.defineProperty(exports, "scaleThreshold", {
    enumerable: true,
    get: function() {
        return _threshold.default;
    }
});
Object.defineProperty(exports, "scaleTime", {
    enumerable: true,
    get: function() {
        return _time.default;
    }
});
Object.defineProperty(exports, "scaleUtc", {
    enumerable: true,
    get: function() {
        return _utcTime.default;
    }
});
Object.defineProperty(exports, "tickFormat", {
    enumerable: true,
    get: function() {
        return _tickFormat.default;
    }
});
var _band = _interopRequireWildcard(require("caf687082221fe04"));
var _identity = _interopRequireDefault(require("d3f7a9e208619f03"));
var _linear = _interopRequireDefault(require("bc3e260d4216d10a"));
var _log = _interopRequireDefault(require("d8129551fd8918ef"));
var _symlog = _interopRequireDefault(require("21f980a4bcf9a8b2"));
var _ordinal = _interopRequireWildcard(require("5fdb05d7d3a13f81"));
var _pow = _interopRequireWildcard(require("c2b33add62ddc48"));
var _radial = _interopRequireDefault(require("46131fd43f429975"));
var _quantile = _interopRequireDefault(require("a843152ee199e349"));
var _quantize = _interopRequireDefault(require("11cd51d0a32ef8b6"));
var _threshold = _interopRequireDefault(require("d7d5a3ec0ee348a9"));
var _time = _interopRequireDefault(require("fd6175cbac83fab1"));
var _utcTime = _interopRequireDefault(require("2754809668a121a3"));
var _sequential = _interopRequireWildcard(require("97b0b78f44af010e"));
var _sequentialQuantile = _interopRequireDefault(require("94cc94debe43b0fd"));
var _diverging = _interopRequireWildcard(require("e886f29d911f47a7"));
var _tickFormat = _interopRequireDefault(require("8f0bec8a2e8c6d42"));

},{"255aef19fc3b7887":"1P3rZ","48a6f70b767ee6a9":"6TFJp","caf687082221fe04":"8oxyV","d3f7a9e208619f03":"apEAv","bc3e260d4216d10a":"gd5hp","d8129551fd8918ef":"dnlDY","21f980a4bcf9a8b2":"e0aWM","5fdb05d7d3a13f81":"7Isba","c2b33add62ddc48":"aMILr","46131fd43f429975":"5f9YC","a843152ee199e349":"iiWjd","11cd51d0a32ef8b6":"dLV01","d7d5a3ec0ee348a9":"ezg7i","fd6175cbac83fab1":"foPfD","2754809668a121a3":"btbgh","97b0b78f44af010e":"e71Y3","94cc94debe43b0fd":"a9bQQ","e886f29d911f47a7":"gTeu0","8f0bec8a2e8c6d42":"72V7N"}],"8oxyV":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5b7075f2dd03a243").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = band;
exports.point = point;
var _index = require("b60ad70419a4d943");
var _init = require("8c70dc0551eb8fd5");
var _ordinal = _interopRequireDefault(require("ad196b3adf01b4f0"));
function band() {
    var scale = (0, _ordinal.default)().unknown(undefined), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
    delete scale.unknown;
    function rescale() {
        var n = domain().length, reverse = r1 < r0, start = reverse ? r1 : r0, stop = reverse ? r0 : r1;
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = (0, _index.range)(n).map(function(i) {
            return start + step * i;
        });
        return ordinalRange(reverse ? values.reverse() : values);
    }
    scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.range = function(_) {
        return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [
            r0,
            r1
        ];
    };
    scale.rangeRound = function(_) {
        return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
    };
    scale.bandwidth = function() {
        return bandwidth;
    };
    scale.step = function() {
        return step;
    };
    scale.round = function(_) {
        return arguments.length ? (round = !!_, rescale()) : round;
    };
    scale.padding = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
    };
    scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
    };
    scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
    };
    scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
    };
    scale.copy = function() {
        return band(domain(), [
            r0,
            r1
        ]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
    };
    return _init.initRange.apply(rescale(), arguments);
}
function pointish(scale) {
    var copy = scale.copy;
    scale.padding = scale.paddingOuter;
    delete scale.paddingInner;
    delete scale.paddingOuter;
    scale.copy = function() {
        return pointish(copy());
    };
    return scale;
}
function point() {
    return pointish(band.apply(null, arguments).paddingInner(1));
}

},{"5b7075f2dd03a243":"1P3rZ","b60ad70419a4d943":"idFA4","8c70dc0551eb8fd5":"el2ZB","ad196b3adf01b4f0":"7Isba"}],"idFA4":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7a134ea5a0055e87").default;
var _interopRequireWildcard = require("98ed1db541f16250").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Adder", {
    enumerable: true,
    get: function() {
        return _fsum.Adder;
    }
});
Object.defineProperty(exports, "InternMap", {
    enumerable: true,
    get: function() {
        return _index.InternMap;
    }
});
Object.defineProperty(exports, "InternSet", {
    enumerable: true,
    get: function() {
        return _index.InternSet;
    }
});
Object.defineProperty(exports, "ascending", {
    enumerable: true,
    get: function() {
        return _ascending.default;
    }
});
Object.defineProperty(exports, "bin", {
    enumerable: true,
    get: function() {
        return _bin.default;
    }
});
Object.defineProperty(exports, "bisect", {
    enumerable: true,
    get: function() {
        return _bisect.default;
    }
});
Object.defineProperty(exports, "bisectCenter", {
    enumerable: true,
    get: function() {
        return _bisect.bisectCenter;
    }
});
Object.defineProperty(exports, "bisectLeft", {
    enumerable: true,
    get: function() {
        return _bisect.bisectLeft;
    }
});
Object.defineProperty(exports, "bisectRight", {
    enumerable: true,
    get: function() {
        return _bisect.bisectRight;
    }
});
Object.defineProperty(exports, "bisector", {
    enumerable: true,
    get: function() {
        return _bisector.default;
    }
});
Object.defineProperty(exports, "blur", {
    enumerable: true,
    get: function() {
        return _blur.blur;
    }
});
Object.defineProperty(exports, "blur2", {
    enumerable: true,
    get: function() {
        return _blur.blur2;
    }
});
Object.defineProperty(exports, "blurImage", {
    enumerable: true,
    get: function() {
        return _blur.blurImage;
    }
});
Object.defineProperty(exports, "count", {
    enumerable: true,
    get: function() {
        return _count.default;
    }
});
Object.defineProperty(exports, "cross", {
    enumerable: true,
    get: function() {
        return _cross.default;
    }
});
Object.defineProperty(exports, "cumsum", {
    enumerable: true,
    get: function() {
        return _cumsum.default;
    }
});
Object.defineProperty(exports, "descending", {
    enumerable: true,
    get: function() {
        return _descending.default;
    }
});
Object.defineProperty(exports, "deviation", {
    enumerable: true,
    get: function() {
        return _deviation.default;
    }
});
Object.defineProperty(exports, "difference", {
    enumerable: true,
    get: function() {
        return _difference.default;
    }
});
Object.defineProperty(exports, "disjoint", {
    enumerable: true,
    get: function() {
        return _disjoint.default;
    }
});
Object.defineProperty(exports, "every", {
    enumerable: true,
    get: function() {
        return _every.default;
    }
});
Object.defineProperty(exports, "extent", {
    enumerable: true,
    get: function() {
        return _extent.default;
    }
});
Object.defineProperty(exports, "fcumsum", {
    enumerable: true,
    get: function() {
        return _fsum.fcumsum;
    }
});
Object.defineProperty(exports, "filter", {
    enumerable: true,
    get: function() {
        return _filter.default;
    }
});
Object.defineProperty(exports, "flatGroup", {
    enumerable: true,
    get: function() {
        return _group.flatGroup;
    }
});
Object.defineProperty(exports, "flatRollup", {
    enumerable: true,
    get: function() {
        return _group.flatRollup;
    }
});
Object.defineProperty(exports, "fsum", {
    enumerable: true,
    get: function() {
        return _fsum.fsum;
    }
});
Object.defineProperty(exports, "greatest", {
    enumerable: true,
    get: function() {
        return _greatest.default;
    }
});
Object.defineProperty(exports, "greatestIndex", {
    enumerable: true,
    get: function() {
        return _greatestIndex.default;
    }
});
Object.defineProperty(exports, "group", {
    enumerable: true,
    get: function() {
        return _group.default;
    }
});
Object.defineProperty(exports, "groupSort", {
    enumerable: true,
    get: function() {
        return _groupSort.default;
    }
});
Object.defineProperty(exports, "groups", {
    enumerable: true,
    get: function() {
        return _group.groups;
    }
});
Object.defineProperty(exports, "histogram", {
    enumerable: true,
    get: function() {
        return _bin.default;
    }
});
Object.defineProperty(exports, "index", {
    enumerable: true,
    get: function() {
        return _group.index;
    }
});
Object.defineProperty(exports, "indexes", {
    enumerable: true,
    get: function() {
        return _group.indexes;
    }
});
Object.defineProperty(exports, "intersection", {
    enumerable: true,
    get: function() {
        return _intersection.default;
    }
});
Object.defineProperty(exports, "least", {
    enumerable: true,
    get: function() {
        return _least.default;
    }
});
Object.defineProperty(exports, "leastIndex", {
    enumerable: true,
    get: function() {
        return _leastIndex.default;
    }
});
Object.defineProperty(exports, "map", {
    enumerable: true,
    get: function() {
        return _map.default;
    }
});
Object.defineProperty(exports, "max", {
    enumerable: true,
    get: function() {
        return _max.default;
    }
});
Object.defineProperty(exports, "maxIndex", {
    enumerable: true,
    get: function() {
        return _maxIndex.default;
    }
});
Object.defineProperty(exports, "mean", {
    enumerable: true,
    get: function() {
        return _mean.default;
    }
});
Object.defineProperty(exports, "median", {
    enumerable: true,
    get: function() {
        return _median.default;
    }
});
Object.defineProperty(exports, "medianIndex", {
    enumerable: true,
    get: function() {
        return _median.medianIndex;
    }
});
Object.defineProperty(exports, "merge", {
    enumerable: true,
    get: function() {
        return _merge.default;
    }
});
Object.defineProperty(exports, "min", {
    enumerable: true,
    get: function() {
        return _min.default;
    }
});
Object.defineProperty(exports, "minIndex", {
    enumerable: true,
    get: function() {
        return _minIndex.default;
    }
});
Object.defineProperty(exports, "mode", {
    enumerable: true,
    get: function() {
        return _mode.default;
    }
});
Object.defineProperty(exports, "nice", {
    enumerable: true,
    get: function() {
        return _nice.default;
    }
});
Object.defineProperty(exports, "pairs", {
    enumerable: true,
    get: function() {
        return _pairs.default;
    }
});
Object.defineProperty(exports, "permute", {
    enumerable: true,
    get: function() {
        return _permute.default;
    }
});
Object.defineProperty(exports, "quantile", {
    enumerable: true,
    get: function() {
        return _quantile.default;
    }
});
Object.defineProperty(exports, "quantileIndex", {
    enumerable: true,
    get: function() {
        return _quantile.quantileIndex;
    }
});
Object.defineProperty(exports, "quantileSorted", {
    enumerable: true,
    get: function() {
        return _quantile.quantileSorted;
    }
});
Object.defineProperty(exports, "quickselect", {
    enumerable: true,
    get: function() {
        return _quickselect.default;
    }
});
Object.defineProperty(exports, "range", {
    enumerable: true,
    get: function() {
        return _range.default;
    }
});
Object.defineProperty(exports, "rank", {
    enumerable: true,
    get: function() {
        return _rank.default;
    }
});
Object.defineProperty(exports, "reduce", {
    enumerable: true,
    get: function() {
        return _reduce.default;
    }
});
Object.defineProperty(exports, "reverse", {
    enumerable: true,
    get: function() {
        return _reverse.default;
    }
});
Object.defineProperty(exports, "rollup", {
    enumerable: true,
    get: function() {
        return _group.rollup;
    }
});
Object.defineProperty(exports, "rollups", {
    enumerable: true,
    get: function() {
        return _group.rollups;
    }
});
Object.defineProperty(exports, "scan", {
    enumerable: true,
    get: function() {
        return _scan.default;
    }
});
Object.defineProperty(exports, "shuffle", {
    enumerable: true,
    get: function() {
        return _shuffle.default;
    }
});
Object.defineProperty(exports, "shuffler", {
    enumerable: true,
    get: function() {
        return _shuffle.shuffler;
    }
});
Object.defineProperty(exports, "some", {
    enumerable: true,
    get: function() {
        return _some.default;
    }
});
Object.defineProperty(exports, "sort", {
    enumerable: true,
    get: function() {
        return _sort.default;
    }
});
Object.defineProperty(exports, "subset", {
    enumerable: true,
    get: function() {
        return _subset.default;
    }
});
Object.defineProperty(exports, "sum", {
    enumerable: true,
    get: function() {
        return _sum.default;
    }
});
Object.defineProperty(exports, "superset", {
    enumerable: true,
    get: function() {
        return _superset.default;
    }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
    enumerable: true,
    get: function() {
        return _freedmanDiaconis.default;
    }
});
Object.defineProperty(exports, "thresholdScott", {
    enumerable: true,
    get: function() {
        return _scott.default;
    }
});
Object.defineProperty(exports, "thresholdSturges", {
    enumerable: true,
    get: function() {
        return _sturges.default;
    }
});
Object.defineProperty(exports, "tickIncrement", {
    enumerable: true,
    get: function() {
        return _ticks.tickIncrement;
    }
});
Object.defineProperty(exports, "tickStep", {
    enumerable: true,
    get: function() {
        return _ticks.tickStep;
    }
});
Object.defineProperty(exports, "ticks", {
    enumerable: true,
    get: function() {
        return _ticks.default;
    }
});
Object.defineProperty(exports, "transpose", {
    enumerable: true,
    get: function() {
        return _transpose.default;
    }
});
Object.defineProperty(exports, "union", {
    enumerable: true,
    get: function() {
        return _union.default;
    }
});
Object.defineProperty(exports, "variance", {
    enumerable: true,
    get: function() {
        return _variance.default;
    }
});
Object.defineProperty(exports, "zip", {
    enumerable: true,
    get: function() {
        return _zip.default;
    }
});
var _bisect = _interopRequireWildcard(require("c7b3aef85728d0b0"));
var _ascending = _interopRequireDefault(require("2867b03914d0f4ae"));
var _bisector = _interopRequireDefault(require("de1a748aecdb4f9e"));
var _blur = require("93432aab0fc2029a");
var _count = _interopRequireDefault(require("8d39b6adfacfc443"));
var _cross = _interopRequireDefault(require("17ac4f786b019730"));
var _cumsum = _interopRequireDefault(require("6f228cbaf4c5d79f"));
var _descending = _interopRequireDefault(require("1944db24e6520385"));
var _deviation = _interopRequireDefault(require("adf66e04e79ca2aa"));
var _extent = _interopRequireDefault(require("62acb3082290f430"));
var _fsum = require("6bc578efc1f61ade");
var _group = _interopRequireWildcard(require("6be8e2c4b7d21062"));
var _groupSort = _interopRequireDefault(require("6b511292b1263568"));
var _bin = _interopRequireDefault(require("3a20af713f1f49c5"));
var _freedmanDiaconis = _interopRequireDefault(require("82efcb3bfd91e87d"));
var _scott = _interopRequireDefault(require("37083501db8b6e34"));
var _sturges = _interopRequireDefault(require("d7fe75328d84607f"));
var _max = _interopRequireDefault(require("8e667f8797af1931"));
var _maxIndex = _interopRequireDefault(require("ade3eca70e62ab8f"));
var _mean = _interopRequireDefault(require("40a8131600d3bc39"));
var _median = _interopRequireWildcard(require("2e8f8c7d03245d05"));
var _merge = _interopRequireDefault(require("b8bfc7d75eb03c11"));
var _min = _interopRequireDefault(require("5eb1a516d03b3c34"));
var _minIndex = _interopRequireDefault(require("903af906e2e0389e"));
var _mode = _interopRequireDefault(require("8c393cf6baa32ca2"));
var _nice = _interopRequireDefault(require("47ec135a43f88d6f"));
var _pairs = _interopRequireDefault(require("5ee239e475471a64"));
var _permute = _interopRequireDefault(require("172fb3c1850e03b5"));
var _quantile = _interopRequireWildcard(require("edb4cbfad88f8dab"));
var _quickselect = _interopRequireDefault(require("67e537504c2d6dc0"));
var _range = _interopRequireDefault(require("fa8f9930b8a7f295"));
var _rank = _interopRequireDefault(require("69d8ff69ba06ce3e"));
var _least = _interopRequireDefault(require("c09451e59418705a"));
var _leastIndex = _interopRequireDefault(require("ecca272a8f7bd906"));
var _greatest = _interopRequireDefault(require("f01de18eb034b00f"));
var _greatestIndex = _interopRequireDefault(require("c590199b4a86af3"));
var _scan = _interopRequireDefault(require("e0d765b68cc76a0"));
var _shuffle = _interopRequireWildcard(require("9a7c4b57cbc2f1c5"));
var _sum = _interopRequireDefault(require("b28cb78f3aabe2d0"));
var _ticks = _interopRequireWildcard(require("be0fdfc10a6313da"));
var _transpose = _interopRequireDefault(require("fa9c756ee2be7a45"));
var _variance = _interopRequireDefault(require("464bcb76cd8c0c8e"));
var _zip = _interopRequireDefault(require("28968112cdf8030f"));
var _every = _interopRequireDefault(require("890e4b13bf8fdc1b"));
var _some = _interopRequireDefault(require("c18e4b245f0388eb"));
var _filter = _interopRequireDefault(require("87f305e3b4cc993e"));
var _map = _interopRequireDefault(require("383555ce616715c3"));
var _reduce = _interopRequireDefault(require("a8ea6305ab098d41"));
var _reverse = _interopRequireDefault(require("776b2681b16da375"));
var _sort = _interopRequireDefault(require("66cbafd096d39ad9"));
var _difference = _interopRequireDefault(require("a55b2f36c97b8b21"));
var _disjoint = _interopRequireDefault(require("3166098fda2a01cd"));
var _intersection = _interopRequireDefault(require("12fc58403f467188"));
var _subset = _interopRequireDefault(require("ef7bb4555fda5b87"));
var _superset = _interopRequireDefault(require("d51c61212f7851b5"));
var _union = _interopRequireDefault(require("437f6262429bdb03"));
var _index = require("e2099ec7f7859edf");

},{"7a134ea5a0055e87":"1P3rZ","98ed1db541f16250":"6TFJp","c7b3aef85728d0b0":"dRRRo","2867b03914d0f4ae":"LIpRc","de1a748aecdb4f9e":"2yPGH","93432aab0fc2029a":"jKKei","8d39b6adfacfc443":"cmZTc","17ac4f786b019730":"iruyc","6f228cbaf4c5d79f":"lGmoI","1944db24e6520385":"7JkTR","adf66e04e79ca2aa":"i85eL","62acb3082290f430":"23XMb","6bc578efc1f61ade":"6jY0D","6be8e2c4b7d21062":"e0t7Y","6b511292b1263568":"9zU9Y","3a20af713f1f49c5":"l1bDX","82efcb3bfd91e87d":"c75t8","37083501db8b6e34":"eutvS","d7fe75328d84607f":"jimLA","8e667f8797af1931":"e3INR","ade3eca70e62ab8f":"iiuKM","40a8131600d3bc39":"40kch","2e8f8c7d03245d05":"bQRMs","b8bfc7d75eb03c11":"bigQV","5eb1a516d03b3c34":"hyovh","903af906e2e0389e":"9Rmhy","8c393cf6baa32ca2":"77GXm","47ec135a43f88d6f":"bxUgo","5ee239e475471a64":"iF6gw","172fb3c1850e03b5":"djMfQ","edb4cbfad88f8dab":"cuYku","67e537504c2d6dc0":"58se7","fa8f9930b8a7f295":"51CVK","69d8ff69ba06ce3e":"e5hqx","c09451e59418705a":"1oadx","ecca272a8f7bd906":"9Jya6","f01de18eb034b00f":"2Y243","c590199b4a86af3":"gibra","e0d765b68cc76a0":"1CT1I","9a7c4b57cbc2f1c5":"eLW0G","b28cb78f3aabe2d0":"aOBcv","be0fdfc10a6313da":"ghUoW","fa9c756ee2be7a45":"9JMub","464bcb76cd8c0c8e":"c97m2","28968112cdf8030f":"7wlht","890e4b13bf8fdc1b":"edyep","c18e4b245f0388eb":"ak1NV","87f305e3b4cc993e":"jIn4p","383555ce616715c3":"gsO60","a8ea6305ab098d41":"7lnPo","776b2681b16da375":"l4XFX","66cbafd096d39ad9":"9VrKf","a55b2f36c97b8b21":"a2QZQ","3166098fda2a01cd":"4I5rB","12fc58403f467188":"jsEnJ","ef7bb4555fda5b87":"aSm4N","d51c61212f7851b5":"UNBpG","437f6262429bdb03":"7pgaQ","e2099ec7f7859edf":"dtPxg"}],"dRRRo":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c0fe19ee84928632").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.bisectRight = exports.bisectLeft = exports.bisectCenter = void 0;
var _ascending = _interopRequireDefault(require("2b8884554677d11d"));
var _bisector = _interopRequireDefault(require("461690277185fc95"));
var _number = _interopRequireDefault(require("9fdcef776bf2e31a"));
const ascendingBisect = (0, _bisector.default)(_ascending.default);
const bisectRight = exports.bisectRight = ascendingBisect.right;
const bisectLeft = exports.bisectLeft = ascendingBisect.left;
const bisectCenter = exports.bisectCenter = (0, _bisector.default)(_number.default).center;
var _default = exports.default = bisectRight;

},{"c0fe19ee84928632":"1P3rZ","2b8884554677d11d":"LIpRc","461690277185fc95":"2yPGH","9fdcef776bf2e31a":"h3dPu"}],"LIpRc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ascending;
function ascending(a, b) {
    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

},{}],"2yPGH":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("462fca35482a1d0c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = bisector;
var _ascending = _interopRequireDefault(require("629ac7cd9acf1b65"));
var _descending = _interopRequireDefault(require("cc0b896be5c7821d"));
function bisector(f) {
    let compare1, compare2, delta;
    // If an accessor is specified, promote it to a comparator. In this case we
    // can test whether the search value is (self-) comparable. We can’t do this
    // for a comparator (except for specific, known comparators) because we can’t
    // tell if the comparator is symmetric, and an asymmetric comparator can’t be
    // used to test whether a single value is comparable.
    if (f.length !== 2) {
        compare1 = _ascending.default;
        compare2 = (d, x)=>(0, _ascending.default)(f(d), x);
        delta = (d, x)=>f(d) - x;
    } else {
        compare1 = f === _ascending.default || f === _descending.default ? f : zero;
        compare2 = f;
        delta = f;
    }
    function left(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
            if (compare1(x, x) !== 0) return hi;
            do {
                const mid = lo + hi >>> 1;
                if (compare2(a[mid], x) < 0) lo = mid + 1;
                else hi = mid;
            }while (lo < hi);
        }
        return lo;
    }
    function right(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
            if (compare1(x, x) !== 0) return hi;
            do {
                const mid = lo + hi >>> 1;
                if (compare2(a[mid], x) <= 0) lo = mid + 1;
                else hi = mid;
            }while (lo < hi);
        }
        return lo;
    }
    function center(a, x, lo = 0, hi = a.length) {
        const i = left(a, x, lo, hi - 1);
        return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
    }
    return {
        left,
        center,
        right
    };
}
function zero() {
    return 0;
}

},{"462fca35482a1d0c":"1P3rZ","629ac7cd9acf1b65":"LIpRc","cc0b896be5c7821d":"7JkTR"}],"7JkTR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = descending;
function descending(a, b) {
    return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

},{}],"h3dPu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = number;
exports.numbers = numbers;
function number(x) {
    return x === null ? NaN : +x;
}
function* numbers(values, valueof) {
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) yield value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) yield value;
    }
}

},{}],"jKKei":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.blur = blur;
exports.blurImage = exports.blur2 = void 0;
function blur(values, r) {
    if (!((r = +r) >= 0)) throw new RangeError("invalid r");
    let length = values.length;
    if (!((length = Math.floor(length)) >= 0)) throw new RangeError("invalid length");
    if (!length || !r) return values;
    const blur = blurf(r);
    const temp = values.slice();
    blur(values, temp, 0, length, 1);
    blur(temp, values, 0, length, 1);
    blur(values, temp, 0, length, 1);
    return values;
}
const blur2 = exports.blur2 = Blur2(blurf);
const blurImage = exports.blurImage = Blur2(blurfImage);
function Blur2(blur) {
    return function(data, rx, ry = rx) {
        if (!((rx = +rx) >= 0)) throw new RangeError("invalid rx");
        if (!((ry = +ry) >= 0)) throw new RangeError("invalid ry");
        let { data: values, width, height } = data;
        if (!((width = Math.floor(width)) >= 0)) throw new RangeError("invalid width");
        if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError("invalid height");
        if (!width || !height || !rx && !ry) return data;
        const blurx = rx && blur(rx);
        const blury = ry && blur(ry);
        const temp = values.slice();
        if (blurx && blury) {
            blurh(blurx, temp, values, width, height);
            blurh(blurx, values, temp, width, height);
            blurh(blurx, temp, values, width, height);
            blurv(blury, values, temp, width, height);
            blurv(blury, temp, values, width, height);
            blurv(blury, values, temp, width, height);
        } else if (blurx) {
            blurh(blurx, values, temp, width, height);
            blurh(blurx, temp, values, width, height);
            blurh(blurx, values, temp, width, height);
        } else if (blury) {
            blurv(blury, values, temp, width, height);
            blurv(blury, temp, values, width, height);
            blurv(blury, values, temp, width, height);
        }
        return data;
    };
}
function blurh(blur, T, S, w, h) {
    for(let y = 0, n = w * h; y < n;)blur(T, S, y, y += w, 1);
}
function blurv(blur, T, S, w, h) {
    for(let x = 0, n = w * h; x < w; ++x)blur(T, S, x, x + n, w);
}
function blurfImage(radius) {
    const blur = blurf(radius);
    return (T, S, start, stop, step)=>{
        start <<= 2, stop <<= 2, step <<= 2;
        blur(T, S, start + 0, stop + 0, step);
        blur(T, S, start + 1, stop + 1, step);
        blur(T, S, start + 2, stop + 2, step);
        blur(T, S, start + 3, stop + 3, step);
    };
}
// Given a target array T, a source array S, sets each value T[i] to the average
// of {S[i - r], …, S[i], …, S[i + r]}, where r = ⌊radius⌋, start <= i < stop,
// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between
// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an
// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted
// according to r - ⌊radius⌋.
function blurf(radius) {
    const radius0 = Math.floor(radius);
    if (radius0 === radius) return bluri(radius);
    const t = radius - radius0;
    const w = 2 * radius + 1;
    return (T, S, start, stop, step)=>{
        // stop must be aligned!
        if (!((stop -= step) >= start)) return; // inclusive stop
        let sum = radius0 * S[start];
        const s0 = step * radius0;
        const s1 = s0 + step;
        for(let i = start, j = start + s0; i < j; i += step)sum += S[Math.min(stop, i)];
        for(let i = start, j = stop; i <= j; i += step){
            sum += S[Math.min(stop, i + s0)];
            T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;
            sum -= S[Math.max(start, i - s0)];
        }
    };
}
// Like blurf, but optimized for integer radius.
function bluri(radius) {
    const w = 2 * radius + 1;
    return (T, S, start, stop, step)=>{
        // stop must be aligned!
        if (!((stop -= step) >= start)) return; // inclusive stop
        let sum = radius * S[start];
        const s = step * radius;
        for(let i = start, j = start + s; i < j; i += step)sum += S[Math.min(stop, i)];
        for(let i = start, j = stop; i <= j; i += step){
            sum += S[Math.min(stop, i + s)];
            T[i] = sum / w;
            sum -= S[Math.max(start, i - s)];
        }
    };
}

},{}],"cmZTc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = count;
function count(values, valueof) {
    let count = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) ++count;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) ++count;
    }
    return count;
}

},{}],"iruyc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = cross;
function length(array) {
    return array.length | 0;
}
function empty(length) {
    return !(length > 0);
}
function arrayify(values) {
    return typeof values !== "object" || "length" in values ? values : Array.from(values);
}
function reducer(reduce) {
    return (values)=>reduce(...values);
}
function cross(...values) {
    const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
    values = values.map(arrayify);
    const lengths = values.map(length);
    const j = values.length - 1;
    const index = new Array(j + 1).fill(0);
    const product = [];
    if (j < 0 || lengths.some(empty)) return product;
    while(true){
        product.push(index.map((j, i)=>values[i][j]));
        let i = j;
        while(++index[i] === lengths[i]){
            if (i === 0) return reduce ? product.map(reduce) : product;
            index[i--] = 0;
        }
    }
}

},{}],"lGmoI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = cumsum;
function cumsum(values, valueof) {
    var sum = 0, index = 0;
    return Float64Array.from(values, valueof === undefined ? (v)=>sum += +v || 0 : (v)=>sum += +valueof(v, index++, values) || 0);
}

},{}],"i85eL":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c753834fcc9e9de").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = deviation;
var _variance = _interopRequireDefault(require("daa1c6a564825e79"));
function deviation(values, valueof) {
    const v = (0, _variance.default)(values, valueof);
    return v ? Math.sqrt(v) : v;
}

},{"c753834fcc9e9de":"1P3rZ","daa1c6a564825e79":"c97m2"}],"c97m2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = variance;
function variance(values, valueof) {
    let count = 0;
    let delta;
    let mean = 0;
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
        }
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
        }
    }
    if (count > 1) return sum / (count - 1);
}

},{}],"23XMb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = extent;
function extent(values, valueof) {
    let min;
    let max;
    if (valueof === undefined) {
        for (const value of values)if (value != null) {
            if (min === undefined) {
                if (value >= value) min = max = value;
            } else {
                if (min > value) min = value;
                if (max < value) max = value;
            }
        }
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null) {
            if (min === undefined) {
                if (value >= value) min = max = value;
            } else {
                if (min > value) min = value;
                if (max < value) max = value;
            }
        }
    }
    return [
        min,
        max
    ];
}

},{}],"6jY0D":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Adder = void 0;
exports.fcumsum = fcumsum;
exports.fsum = fsum;
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
    constructor(){
        this._partials = new Float64Array(32);
        this._n = 0;
    }
    add(x) {
        const p = this._partials;
        let i = 0;
        for(let j = 0; j < this._n && j < 32; j++){
            const y = p[j], hi = x + y, lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
            if (lo) p[i++] = lo;
            x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
    }
    valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
            hi = p[--n];
            while(n > 0){
                x = hi;
                y = p[--n];
                hi = x + y;
                lo = y - (hi - x);
                if (lo) break;
            }
            if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
                y = lo * 2;
                x = hi + y;
                if (y == x - hi) hi = x;
            }
        }
        return hi;
    }
}
exports.Adder = Adder;
function fsum(values, valueof) {
    const adder = new Adder();
    if (valueof === undefined) {
        for (let value of values)if (value = +value) adder.add(value);
    } else {
        let index = -1;
        for (let value of values)if (value = +valueof(value, ++index, values)) adder.add(value);
    }
    return +adder;
}
function fcumsum(values, valueof) {
    const adder = new Adder();
    let index = -1;
    return Float64Array.from(values, valueof === undefined ? (v)=>adder.add(+v || 0) : (v)=>adder.add(+valueof(v, ++index, values) || 0));
}

},{}],"e0t7Y":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5ef1009474df1ad6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = group;
exports.flatGroup = flatGroup;
exports.flatRollup = flatRollup;
exports.groups = groups;
exports.index = index;
exports.indexes = indexes;
exports.rollup = rollup;
exports.rollups = rollups;
var _index = require("6f1ab9d18244a295");
var _identity = _interopRequireDefault(require("bb3a8ba2b7870216"));
function group(values, ...keys) {
    return nest(values, _identity.default, _identity.default, keys);
}
function groups(values, ...keys) {
    return nest(values, Array.from, _identity.default, keys);
}
function flatten(groups, keys) {
    for(let i = 1, n = keys.length; i < n; ++i)groups = groups.flatMap((g)=>g.pop().map(([key, value])=>[
                ...g,
                key,
                value
            ]));
    return groups;
}
function flatGroup(values, ...keys) {
    return flatten(groups(values, ...keys), keys);
}
function flatRollup(values, reduce, ...keys) {
    return flatten(rollups(values, reduce, ...keys), keys);
}
function rollup(values, reduce, ...keys) {
    return nest(values, _identity.default, reduce, keys);
}
function rollups(values, reduce, ...keys) {
    return nest(values, Array.from, reduce, keys);
}
function index(values, ...keys) {
    return nest(values, _identity.default, unique, keys);
}
function indexes(values, ...keys) {
    return nest(values, Array.from, unique, keys);
}
function unique(values) {
    if (values.length !== 1) throw new Error("duplicate key");
    return values[0];
}
function nest(values, map, reduce, keys) {
    return function regroup(values, i) {
        if (i >= keys.length) return reduce(values);
        const groups = new _index.InternMap();
        const keyof = keys[i++];
        let index = -1;
        for (const value of values){
            const key = keyof(value, ++index, values);
            const group = groups.get(key);
            if (group) group.push(value);
            else groups.set(key, [
                value
            ]);
        }
        for (const [key, values] of groups)groups.set(key, regroup(values, i));
        return map(groups);
    }(values, 0);
}

},{"5ef1009474df1ad6":"1P3rZ","6f1ab9d18244a295":"dtPxg","bb3a8ba2b7870216":"fn5sD"}],"dtPxg":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InternSet = exports.InternMap = void 0;
class InternMap extends Map {
    constructor(entries, key = keyof){
        super();
        Object.defineProperties(this, {
            _intern: {
                value: new Map()
            },
            _key: {
                value: key
            }
        });
        if (entries != null) for (const [key, value] of entries)this.set(key, value);
    }
    get(key) {
        return super.get(intern_get(this, key));
    }
    has(key) {
        return super.has(intern_get(this, key));
    }
    set(key, value) {
        return super.set(intern_set(this, key), value);
    }
    delete(key) {
        return super.delete(intern_delete(this, key));
    }
}
exports.InternMap = InternMap;
class InternSet extends Set {
    constructor(values, key = keyof){
        super();
        Object.defineProperties(this, {
            _intern: {
                value: new Map()
            },
            _key: {
                value: key
            }
        });
        if (values != null) for (const value of values)this.add(value);
    }
    has(value) {
        return super.has(intern_get(this, value));
    }
    add(value) {
        return super.add(intern_set(this, value));
    }
    delete(value) {
        return super.delete(intern_delete(this, value));
    }
}
exports.InternSet = InternSet;
function intern_get({ _intern, _key }, value) {
    const key = _key(value);
    return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) return _intern.get(key);
    _intern.set(key, value);
    return value;
}
function intern_delete({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) {
        value = _intern.get(key);
        _intern.delete(key);
    }
    return value;
}
function keyof(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
}

},{}],"fn5sD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = identity;
function identity(x) {
    return x;
}

},{}],"9zU9Y":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("2a8a6d739f829fd").default;
var _interopRequireDefault = require("149860a63a641247").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = groupSort;
var _ascending = _interopRequireDefault(require("5f6f002faad9af31"));
var _group = _interopRequireWildcard(require("876c4925fed4c030"));
var _sort = _interopRequireDefault(require("a15ba8c05e767ab8"));
function groupSort(values, reduce, key) {
    return (reduce.length !== 2 ? (0, _sort.default)((0, _group.rollup)(values, reduce, key), ([ak, av], [bk, bv])=>(0, _ascending.default)(av, bv) || (0, _ascending.default)(ak, bk)) : (0, _sort.default)((0, _group.default)(values, key), ([ak, av], [bk, bv])=>reduce(av, bv) || (0, _ascending.default)(ak, bk))).map(([key])=>key);
}

},{"2a8a6d739f829fd":"6TFJp","149860a63a641247":"1P3rZ","5f6f002faad9af31":"LIpRc","876c4925fed4c030":"e0t7Y","a15ba8c05e767ab8":"9VrKf"}],"9VrKf":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("954977965d36651b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ascendingDefined = ascendingDefined;
exports.compareDefined = compareDefined;
exports.default = sort;
var _ascending = _interopRequireDefault(require("950522f8a81e0aa7"));
var _permute = _interopRequireDefault(require("1a22e3cc1509f2d8"));
function sort(values, ...F) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    values = Array.from(values);
    let [f] = F;
    if (f && f.length !== 2 || F.length > 1) {
        const index = Uint32Array.from(values, (d, i)=>i);
        if (F.length > 1) {
            F = F.map((f)=>values.map(f));
            index.sort((i, j)=>{
                for (const f of F){
                    const c = ascendingDefined(f[i], f[j]);
                    if (c) return c;
                }
            });
        } else {
            f = values.map(f);
            index.sort((i, j)=>ascendingDefined(f[i], f[j]));
        }
        return (0, _permute.default)(values, index);
    }
    return values.sort(compareDefined(f));
}
function compareDefined(compare = _ascending.default) {
    if (compare === _ascending.default) return ascendingDefined;
    if (typeof compare !== "function") throw new TypeError("compare is not a function");
    return (a, b)=>{
        const x = compare(a, b);
        if (x || x === 0) return x;
        return (compare(b, b) === 0) - (compare(a, a) === 0);
    };
}
function ascendingDefined(a, b) {
    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
}

},{"954977965d36651b":"1P3rZ","950522f8a81e0aa7":"LIpRc","1a22e3cc1509f2d8":"djMfQ"}],"djMfQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = permute;
function permute(source, keys) {
    return Array.from(keys, (key)=>source[key]);
}

},{}],"l1bDX":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("5fb375de48971223").default;
var _interopRequireDefault = require("2b0547f9634c0899").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = bin;
var _array = require("455785cd3933b0c1");
var _bisect = _interopRequireDefault(require("ffe99fe9ec953575"));
var _constant = _interopRequireDefault(require("58bd01f7f8159311"));
var _extent = _interopRequireDefault(require("d1a11bd27ae73fbb"));
var _identity = _interopRequireDefault(require("893e63e66a303bc1"));
var _nice = _interopRequireDefault(require("4eb3db9370a2dad0"));
var _ticks = _interopRequireWildcard(require("57f756c13bb2c654"));
var _sturges = _interopRequireDefault(require("de9a4fc1a8e07b5"));
function bin() {
    var value = _identity.default, domain = _extent.default, threshold = _sturges.default;
    function histogram(data) {
        if (!Array.isArray(data)) data = Array.from(data);
        var i, n = data.length, x, step, values = new Array(n);
        for(i = 0; i < n; ++i)values[i] = value(data[i], i, data);
        var xz = domain(values), x0 = xz[0], x1 = xz[1], tz = threshold(values, x0, x1);
        // Convert number of thresholds into uniform thresholds, and nice the
        // default domain accordingly.
        if (!Array.isArray(tz)) {
            const max = x1, tn = +tz;
            if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);
            tz = (0, _ticks.default)(x0, x1, tn);
            // If the domain is aligned with the first tick (which it will by
            // default), then we can use quantization rather than bisection to bin
            // values, which is substantially faster.
            if (tz[0] <= x0) step = (0, _ticks.tickIncrement)(x0, x1, tn);
            // If the last threshold is coincident with the domain’s upper bound, the
            // last bin will be zero-width. If the default domain is used, and this
            // last threshold is coincident with the maximum input value, we can
            // extend the niced upper bound by one tick to ensure uniform bin widths;
            // otherwise, we simply remove the last threshold. Note that we don’t
            // coerce values or the domain to numbers, and thus must be careful to
            // compare order (>=) rather than strict equality (===)!
            if (tz[tz.length - 1] >= x1) {
                if (max >= x1 && domain === _extent.default) {
                    const step = (0, _ticks.tickIncrement)(x0, x1, tn);
                    if (isFinite(step)) {
                        if (step > 0) x1 = (Math.floor(x1 / step) + 1) * step;
                        else if (step < 0) x1 = (Math.ceil(x1 * -step) + 1) / -step;
                    }
                } else tz.pop();
            }
        }
        // Remove any thresholds outside the domain.
        // Be careful not to mutate an array owned by the user!
        var m = tz.length, a = 0, b = m;
        while(tz[a] <= x0)++a;
        while(tz[b - 1] > x1)--b;
        if (a || b < m) tz = tz.slice(a, b), m = b - a;
        var bins = new Array(m + 1), bin;
        // Initialize bins.
        for(i = 0; i <= m; ++i){
            bin = bins[i] = [];
            bin.x0 = i > 0 ? tz[i - 1] : x0;
            bin.x1 = i < m ? tz[i] : x1;
        }
        // Assign data to bins by value, ignoring any outside the domain.
        if (isFinite(step)) {
            if (step > 0) {
                for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);
            } else if (step < 0) {
                for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) {
                    const j = Math.floor((x0 - x) * step);
                    bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding
                }
            }
        } else {
            for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
        }
        return bins;
    }
    histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
    };
    histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([
            _[0],
            _[1]
        ]), histogram) : domain;
    };
    histogram.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : (0, _constant.default)(Array.isArray(_) ? _array.slice.call(_) : _), histogram) : threshold;
    };
    return histogram;
}

},{"5fb375de48971223":"6TFJp","2b0547f9634c0899":"1P3rZ","455785cd3933b0c1":"dFNRT","ffe99fe9ec953575":"dRRRo","58bd01f7f8159311":"fpy0K","d1a11bd27ae73fbb":"23XMb","893e63e66a303bc1":"fn5sD","4eb3db9370a2dad0":"bxUgo","57f756c13bb2c654":"ghUoW","de9a4fc1a8e07b5":"jimLA"}],"dFNRT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var slice = exports.slice = array.slice;
var map = exports.map = array.map;

},{}],"fpy0K":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = constant;
function constant(x) {
    return ()=>x;
}

},{}],"bxUgo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nice;
var _ticks = require("5bbd779aa324868");
function nice(start, stop, count) {
    let prestep;
    while(true){
        const step = (0, _ticks.tickIncrement)(start, stop, count);
        if (step === prestep || step === 0 || !isFinite(step)) return [
            start,
            stop
        ];
        else if (step > 0) {
            start = Math.floor(start / step) * step;
            stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
            start = Math.ceil(start * step) / step;
            stop = Math.floor(stop * step) / step;
        }
        prestep = step;
    }
}

},{"5bbd779aa324868":"ghUoW"}],"ghUoW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ticks;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
const e10 = Math.sqrt(50), e5 = Math.sqrt(10), e2 = Math.sqrt(2);
function tickSpec(start, stop, count) {
    const step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log10(step)), error = step / Math.pow(10, power), factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;
    let i1, i2, inc;
    if (power < 0) {
        inc = Math.pow(10, -power) / factor;
        i1 = Math.round(start * inc);
        i2 = Math.round(stop * inc);
        if (i1 / inc < start) ++i1;
        if (i2 / inc > stop) --i2;
        inc = -inc;
    } else {
        inc = Math.pow(10, power) * factor;
        i1 = Math.round(start / inc);
        i2 = Math.round(stop / inc);
        if (i1 * inc < start) ++i1;
        if (i2 * inc > stop) --i2;
    }
    if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);
    return [
        i1,
        i2,
        inc
    ];
}
function ticks(start, stop, count) {
    stop = +stop, start = +start, count = +count;
    if (!(count > 0)) return [];
    if (start === stop) return [
        start
    ];
    const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);
    if (!(i2 >= i1)) return [];
    const n = i2 - i1 + 1, ticks = new Array(n);
    if (reverse) {
        if (inc < 0) for(let i = 0; i < n; ++i)ticks[i] = (i2 - i) / -inc;
        else for(let i = 0; i < n; ++i)ticks[i] = (i2 - i) * inc;
    } else {
        if (inc < 0) for(let i = 0; i < n; ++i)ticks[i] = (i1 + i) / -inc;
        else for(let i = 0; i < n; ++i)ticks[i] = (i1 + i) * inc;
    }
    return ticks;
}
function tickIncrement(start, stop, count) {
    stop = +stop, start = +start, count = +count;
    return tickSpec(start, stop, count)[2];
}
function tickStep(start, stop, count) {
    stop = +stop, start = +start, count = +count;
    const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);
    return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);
}

},{}],"jimLA":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e4296fd5d80aa63d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdSturges;
var _count = _interopRequireDefault(require("84d939ca03df7f08"));
function thresholdSturges(values) {
    return Math.max(1, Math.ceil(Math.log((0, _count.default)(values)) / Math.LN2) + 1);
}

},{"e4296fd5d80aa63d":"1P3rZ","84d939ca03df7f08":"cmZTc"}],"c75t8":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("825f7db9ebf7ff73").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdFreedmanDiaconis;
var _count = _interopRequireDefault(require("db25df88f749083f"));
var _quantile = _interopRequireDefault(require("8fa9b0ebd6b4d8ab"));
function thresholdFreedmanDiaconis(values, min, max) {
    const c = (0, _count.default)(values), d = (0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25);
    return c && d ? Math.ceil((max - min) / (2 * d * Math.pow(c, -1 / 3))) : 1;
}

},{"825f7db9ebf7ff73":"1P3rZ","db25df88f749083f":"cmZTc","8fa9b0ebd6b4d8ab":"cuYku"}],"cuYku":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("d806bb7b16194b99").default;
var _interopRequireDefault = require("5e8810c30fb409f4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantile;
exports.quantileIndex = quantileIndex;
exports.quantileSorted = quantileSorted;
var _max = _interopRequireDefault(require("108733e474c4971a"));
var _maxIndex = _interopRequireDefault(require("4e1ca7ed08f4830f"));
var _min = _interopRequireDefault(require("9c16d198a8076c1a"));
var _minIndex = _interopRequireDefault(require("24e0550d969483"));
var _quickselect = _interopRequireDefault(require("1586e6626b087a20"));
var _number = _interopRequireWildcard(require("50c4f260f6ce5ba"));
var _sort = require("d3cde9a0278778c9");
var _greatest = _interopRequireDefault(require("2da4dc6c7dbb653c"));
function quantile(values, p, valueof) {
    values = Float64Array.from((0, _number.numbers)(values, valueof));
    if (!(n = values.length) || isNaN(p = +p)) return;
    if (p <= 0 || n < 2) return (0, _min.default)(values);
    if (p >= 1) return (0, _max.default)(values);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = (0, _max.default)((0, _quickselect.default)(values, i0).subarray(0, i0 + 1)), value1 = (0, _min.default)(values.subarray(i0 + 1));
    return value0 + (value1 - value0) * (i - i0);
}
function quantileSorted(values, p, valueof = _number.default) {
    if (!(n = values.length) || isNaN(p = +p)) return;
    if (p <= 0 || n < 2) return +valueof(values[0], 0, values);
    if (p >= 1) return +valueof(values[n - 1], n - 1, values);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = +valueof(values[i0], i0, values), value1 = +valueof(values[i0 + 1], i0 + 1, values);
    return value0 + (value1 - value0) * (i - i0);
}
function quantileIndex(values, p, valueof = _number.default) {
    if (isNaN(p = +p)) return;
    numbers = Float64Array.from(values, (_, i)=>(0, _number.default)(valueof(values[i], i, values)));
    if (p <= 0) return (0, _minIndex.default)(numbers);
    if (p >= 1) return (0, _maxIndex.default)(numbers);
    var numbers, index = Uint32Array.from(values, (_, i)=>i), j = numbers.length - 1, i = Math.floor(j * p);
    (0, _quickselect.default)(index, i, 0, j, (i, j)=>(0, _sort.ascendingDefined)(numbers[i], numbers[j]));
    i = (0, _greatest.default)(index.subarray(0, i + 1), (i)=>numbers[i]);
    return i >= 0 ? i : -1;
}

},{"d806bb7b16194b99":"6TFJp","5e8810c30fb409f4":"1P3rZ","108733e474c4971a":"e3INR","4e1ca7ed08f4830f":"iiuKM","9c16d198a8076c1a":"hyovh","24e0550d969483":"9Rmhy","1586e6626b087a20":"58se7","50c4f260f6ce5ba":"h3dPu","d3cde9a0278778c9":"9VrKf","2da4dc6c7dbb653c":"2Y243"}],"e3INR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = max;
function max(values, valueof) {
    let max;
    if (valueof === undefined) {
        for (const value of values)if (value != null && (max < value || max === undefined && value >= value)) max = value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) max = value;
    }
    return max;
}

},{}],"iiuKM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = maxIndex;
function maxIndex(values, valueof) {
    let max;
    let maxIndex = -1;
    let index = -1;
    if (valueof === undefined) for (const value of values){
        ++index;
        if (value != null && (max < value || max === undefined && value >= value)) max = value, maxIndex = index;
    }
    else {
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) max = value, maxIndex = index;
    }
    return maxIndex;
}

},{}],"hyovh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = min;
function min(values, valueof) {
    let min;
    if (valueof === undefined) {
        for (const value of values)if (value != null && (min > value || min === undefined && value >= value)) min = value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) min = value;
    }
    return min;
}

},{}],"9Rmhy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = minIndex;
function minIndex(values, valueof) {
    let min;
    let minIndex = -1;
    let index = -1;
    if (valueof === undefined) for (const value of values){
        ++index;
        if (value != null && (min > value || min === undefined && value >= value)) min = value, minIndex = index;
    }
    else {
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) min = value, minIndex = index;
    }
    return minIndex;
}

},{}],"58se7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quickselect;
var _sort = require("29c084a937f070f4");
// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = Infinity, compare) {
    k = Math.floor(k);
    left = Math.floor(Math.max(0, left));
    right = Math.floor(Math.min(array.length - 1, right));
    if (!(left <= k && k <= right)) return array;
    compare = compare === undefined ? _sort.ascendingDefined : (0, _sort.compareDefined)(compare);
    while(right > left){
        if (right - left > 600) {
            const n = right - left + 1;
            const m = k - left + 1;
            const z = Math.log(n);
            const s = 0.5 * Math.exp(2 * z / 3);
            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
            quickselect(array, k, newLeft, newRight, compare);
        }
        const t = array[k];
        let i = left;
        let j = right;
        swap(array, left, k);
        if (compare(array[right], t) > 0) swap(array, left, right);
        while(i < j){
            swap(array, i, j), ++i, --j;
            while(compare(array[i], t) < 0)++i;
            while(compare(array[j], t) > 0)--j;
        }
        if (compare(array[left], t) === 0) swap(array, left, j);
        else ++j, swap(array, j, right);
        if (j <= k) left = j + 1;
        if (k <= j) right = j - 1;
    }
    return array;
}
function swap(array, i, j) {
    const t = array[i];
    array[i] = array[j];
    array[j] = t;
}

},{"29c084a937f070f4":"9VrKf"}],"2Y243":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("853954272fba20c1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = greatest;
var _ascending = _interopRequireDefault(require("a95c7eef96f4d50d"));
function greatest(values, compare = _ascending.default) {
    let max;
    let defined = false;
    if (compare.length === 1) {
        let maxValue;
        for (const element of values){
            const value = compare(element);
            if (defined ? (0, _ascending.default)(value, maxValue) > 0 : (0, _ascending.default)(value, value) === 0) {
                max = element;
                maxValue = value;
                defined = true;
            }
        }
    } else {
        for (const value of values)if (defined ? compare(value, max) > 0 : compare(value, value) === 0) {
            max = value;
            defined = true;
        }
    }
    return max;
}

},{"853954272fba20c1":"1P3rZ","a95c7eef96f4d50d":"LIpRc"}],"eutvS":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("fc03a86511023f79").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdScott;
var _count = _interopRequireDefault(require("f039d37980ee26d3"));
var _deviation = _interopRequireDefault(require("9008cc1cd2ba9e3f"));
function thresholdScott(values, min, max) {
    const c = (0, _count.default)(values), d = (0, _deviation.default)(values);
    return c && d ? Math.ceil((max - min) * Math.cbrt(c) / (3.49 * d)) : 1;
}

},{"fc03a86511023f79":"1P3rZ","f039d37980ee26d3":"cmZTc","9008cc1cd2ba9e3f":"i85eL"}],"40kch":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = mean;
function mean(values, valueof) {
    let count = 0;
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) ++count, sum += value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) ++count, sum += value;
    }
    if (count) return sum / count;
}

},{}],"bQRMs":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("b37f065fcdc64102").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = median;
exports.medianIndex = medianIndex;
var _quantile = _interopRequireWildcard(require("984cafcb13fb8be6"));
function median(values, valueof) {
    return (0, _quantile.default)(values, 0.5, valueof);
}
function medianIndex(values, valueof) {
    return (0, _quantile.quantileIndex)(values, 0.5, valueof);
}

},{"b37f065fcdc64102":"6TFJp","984cafcb13fb8be6":"cuYku"}],"bigQV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = merge;
function* flatten(arrays) {
    for (const array of arrays)yield* array;
}
function merge(arrays) {
    return Array.from(flatten(arrays));
}

},{}],"77GXm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = mode;
var _index = require("6013a0079e451ac9");
function mode(values, valueof) {
    const counts = new _index.InternMap();
    if (valueof === undefined) {
        for (let value of values)if (value != null && value >= value) counts.set(value, (counts.get(value) || 0) + 1);
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && value >= value) counts.set(value, (counts.get(value) || 0) + 1);
    }
    let modeValue;
    let modeCount = 0;
    for (const [value, count] of counts)if (count > modeCount) {
        modeCount = count;
        modeValue = value;
    }
    return modeValue;
}

},{"6013a0079e451ac9":"dtPxg"}],"iF6gw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = pairs;
exports.pair = pair;
function pairs(values, pairof = pair) {
    const pairs1 = [];
    let previous;
    let first = false;
    for (const value of values){
        if (first) pairs1.push(pairof(previous, value));
        previous = value;
        first = true;
    }
    return pairs1;
}
function pair(a, b) {
    return [
        a,
        b
    ];
}

},{}],"51CVK":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = range;
function range(start, stop, step) {
    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
    var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range = new Array(n);
    while(++i < n)range[i] = start + i * step;
    return range;
}

},{}],"e5hqx":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f0c2a147c92eb4aa").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = rank;
var _ascending = _interopRequireDefault(require("b621173a750c1089"));
var _sort = require("387fa5026d4c48e6");
function rank(values, valueof = _ascending.default) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    let V = Array.from(values);
    const R = new Float64Array(V.length);
    if (valueof.length !== 2) V = V.map(valueof), valueof = _ascending.default;
    const compareIndex = (i, j)=>valueof(V[i], V[j]);
    let k, r;
    values = Uint32Array.from(V, (_, i)=>i);
    // Risky chaining due to Safari 14 https://github.com/d3/d3-array/issues/123
    values.sort(valueof === _ascending.default ? (i, j)=>(0, _sort.ascendingDefined)(V[i], V[j]) : (0, _sort.compareDefined)(compareIndex));
    values.forEach((j, i)=>{
        const c = compareIndex(j, k === undefined ? j : k);
        if (c >= 0) {
            if (k === undefined || c > 0) k = j, r = i;
            R[j] = r;
        } else R[j] = NaN;
    });
    return R;
}

},{"f0c2a147c92eb4aa":"1P3rZ","b621173a750c1089":"LIpRc","387fa5026d4c48e6":"9VrKf"}],"1oadx":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("398a0e9d930c02ed").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = least;
var _ascending = _interopRequireDefault(require("e9454afa15a3561"));
function least(values, compare = _ascending.default) {
    let min;
    let defined = false;
    if (compare.length === 1) {
        let minValue;
        for (const element of values){
            const value = compare(element);
            if (defined ? (0, _ascending.default)(value, minValue) < 0 : (0, _ascending.default)(value, value) === 0) {
                min = element;
                minValue = value;
                defined = true;
            }
        }
    } else {
        for (const value of values)if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {
            min = value;
            defined = true;
        }
    }
    return min;
}

},{"398a0e9d930c02ed":"1P3rZ","e9454afa15a3561":"LIpRc"}],"9Jya6":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d21037b8dbd9d3b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = leastIndex;
var _ascending = _interopRequireDefault(require("6c6b1666e4a0fa7"));
var _minIndex = _interopRequireDefault(require("837686c673915b46"));
function leastIndex(values, compare = _ascending.default) {
    if (compare.length === 1) return (0, _minIndex.default)(values, compare);
    let minValue;
    let min = -1;
    let index = -1;
    for (const value of values){
        ++index;
        if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {
            minValue = value;
            min = index;
        }
    }
    return min;
}

},{"d21037b8dbd9d3b":"1P3rZ","6c6b1666e4a0fa7":"LIpRc","837686c673915b46":"9Rmhy"}],"gibra":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e1b1dcdc955cc74b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = greatestIndex;
var _ascending = _interopRequireDefault(require("2ecdfa44f258d9b6"));
var _maxIndex = _interopRequireDefault(require("dcff54c033aabe22"));
function greatestIndex(values, compare = _ascending.default) {
    if (compare.length === 1) return (0, _maxIndex.default)(values, compare);
    let maxValue;
    let max = -1;
    let index = -1;
    for (const value of values){
        ++index;
        if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {
            maxValue = value;
            max = index;
        }
    }
    return max;
}

},{"e1b1dcdc955cc74b":"1P3rZ","2ecdfa44f258d9b6":"LIpRc","dcff54c033aabe22":"iiuKM"}],"1CT1I":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e1b0411135698248").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = scan;
var _leastIndex = _interopRequireDefault(require("c5a87299af3d39"));
function scan(values, compare) {
    const index = (0, _leastIndex.default)(values, compare);
    return index < 0 ? undefined : index;
}

},{"e1b0411135698248":"1P3rZ","c5a87299af3d39":"9Jya6"}],"eLW0G":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.shuffler = shuffler;
var _default = exports.default = shuffler(Math.random);
function shuffler(random) {
    return function shuffle(array, i0 = 0, i1 = array.length) {
        let m = i1 - (i0 = +i0);
        while(m){
            const i = random() * m-- | 0, t = array[m + i0];
            array[m + i0] = array[i + i0];
            array[i + i0] = t;
        }
        return array;
    };
}

},{}],"aOBcv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sum;
function sum(values, valueof) {
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value = +value) sum += value;
    } else {
        let index = -1;
        for (let value of values)if (value = +valueof(value, ++index, values)) sum += value;
    }
    return sum;
}

},{}],"9JMub":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9588ff1d54ae04c3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = transpose;
var _min = _interopRequireDefault(require("542dbc8796a18a42"));
function transpose(matrix) {
    if (!(n = matrix.length)) return [];
    for(var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;)for(var j = -1, n, row = transpose[i] = new Array(n); ++j < n;)row[j] = matrix[j][i];
    return transpose;
}
function length(d) {
    return d.length;
}

},{"9588ff1d54ae04c3":"1P3rZ","542dbc8796a18a42":"hyovh"}],"7wlht":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("516a6c821f1656bb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = zip;
var _transpose = _interopRequireDefault(require("18bacbd7e6efcef3"));
function zip() {
    return (0, _transpose.default)(arguments);
}

},{"516a6c821f1656bb":"1P3rZ","18bacbd7e6efcef3":"9JMub"}],"edyep":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = every;
function every(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    let index = -1;
    for (const value of values){
        if (!test(value, ++index, values)) return false;
    }
    return true;
}

},{}],"ak1NV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = some;
function some(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    let index = -1;
    for (const value of values){
        if (test(value, ++index, values)) return true;
    }
    return false;
}

},{}],"jIn4p":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = filter;
function filter(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    const array = [];
    let index = -1;
    for (const value of values)if (test(value, ++index, values)) array.push(value);
    return array;
}

},{}],"gsO60":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = map;
function map(values, mapper) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
    return Array.from(values, (value, index)=>mapper(value, index, values));
}

},{}],"7lnPo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = reduce;
function reduce(values, reducer, value) {
    if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
    const iterator = values[Symbol.iterator]();
    let done, next, index = -1;
    if (arguments.length < 3) {
        ({ done, value } = iterator.next());
        if (done) return;
        ++index;
    }
    while({ done, value: next } = iterator.next(), !done)value = reducer(value, next, ++index, values);
    return value;
}

},{}],"l4XFX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = reverse;
function reverse(values) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    return Array.from(values).reverse();
}

},{}],"a2QZQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = difference;
var _index = require("48ebabcbbe80e8db");
function difference(values, ...others) {
    values = new _index.InternSet(values);
    for (const other of others)for (const value of other)values.delete(value);
    return values;
}

},{"48ebabcbbe80e8db":"dtPxg"}],"4I5rB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = disjoint;
var _index = require("1fbb830f453cb08c");
function disjoint(values, other) {
    const iterator = other[Symbol.iterator](), set = new _index.InternSet();
    for (const v of values){
        if (set.has(v)) return false;
        let value, done;
        while({ value, done } = iterator.next()){
            if (done) break;
            if (Object.is(v, value)) return false;
            set.add(value);
        }
    }
    return true;
}

},{"1fbb830f453cb08c":"dtPxg"}],"jsEnJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = intersection;
var _index = require("8a922ed0a3304720");
function intersection(values, ...others) {
    values = new _index.InternSet(values);
    others = others.map(set);
    out: for (const value of values){
        for (const other of others)if (!other.has(value)) {
            values.delete(value);
            continue out;
        }
    }
    return values;
}
function set(values) {
    return values instanceof _index.InternSet ? values : new _index.InternSet(values);
}

},{"8a922ed0a3304720":"dtPxg"}],"aSm4N":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("91268ca05c7bee98").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = subset;
var _superset = _interopRequireDefault(require("d3a2070a8374cc6a"));
function subset(values, other) {
    return (0, _superset.default)(other, values);
}

},{"91268ca05c7bee98":"1P3rZ","d3a2070a8374cc6a":"UNBpG"}],"UNBpG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = superset;
function superset(values, other) {
    const iterator = values[Symbol.iterator](), set = new Set();
    for (const o of other){
        const io = intern(o);
        if (set.has(io)) continue;
        let value, done;
        while({ value, done } = iterator.next()){
            if (done) return false;
            const ivalue = intern(value);
            set.add(ivalue);
            if (Object.is(io, ivalue)) break;
        }
    }
    return true;
}
function intern(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
}

},{}],"7pgaQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = union;
var _index = require("22cd252971f80662");
function union(...others) {
    const set = new _index.InternSet();
    for (const other of others)for (const o of other)set.add(o);
    return set;
}

},{"22cd252971f80662":"dtPxg"}],"el2ZB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.initInterpolator = initInterpolator;
exports.initRange = initRange;
function initRange(domain, range) {
    switch(arguments.length){
        case 0:
            break;
        case 1:
            this.range(domain);
            break;
        default:
            this.range(range).domain(domain);
            break;
    }
    return this;
}
function initInterpolator(domain, interpolator) {
    switch(arguments.length){
        case 0:
            break;
        case 1:
            if (typeof domain === "function") this.interpolator(domain);
            else this.range(domain);
            break;
        default:
            this.domain(domain);
            if (typeof interpolator === "function") this.interpolator(interpolator);
            else this.range(interpolator);
            break;
    }
    return this;
}

},{}],"7Isba":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ordinal;
exports.implicit = void 0;
var _index = require("689459935a0ac4e");
var _init = require("2a02f67762f4a796");
const implicit = exports.implicit = Symbol("implicit");
function ordinal() {
    var index = new _index.InternMap(), domain = [], range = [], unknown = implicit;
    function scale(d) {
        let i = index.get(d);
        if (i === undefined) {
            if (unknown !== implicit) return unknown;
            index.set(d, i = domain.push(d) - 1);
        }
        return range[i % range.length];
    }
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = new _index.InternMap();
        for (const value of _){
            if (index.has(value)) continue;
            index.set(value, domain.push(value) - 1);
        }
        return scale;
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), scale) : range.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return ordinal(domain, range).unknown(unknown);
    };
    _init.initRange.apply(scale, arguments);
    return scale;
}

},{"689459935a0ac4e":"idFA4","2a02f67762f4a796":"el2ZB"}],"apEAv":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e4571db44db1ecbc").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = identity;
var _linear = require("d58c2df9c901702");
var _number = _interopRequireDefault(require("be41f34119ab786f"));
function identity(domain) {
    var unknown;
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : x;
    }
    scale.invert = scale;
    scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), scale) : domain.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return identity(domain).unknown(unknown);
    };
    domain = arguments.length ? Array.from(domain, _number.default) : [
        0,
        1
    ];
    return (0, _linear.linearish)(scale);
}

},{"e4571db44db1ecbc":"1P3rZ","d58c2df9c901702":"gd5hp","be41f34119ab786f":"h89s5"}],"gd5hp":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8f3df1cd99c4d611").default;
var _interopRequireWildcard = require("5ffbd01ee4af8253").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = linear;
exports.linearish = linearish;
var _index = require("77b1dbe25392e3a9");
var _continuous = _interopRequireWildcard(require("aa799645a17508e6"));
var _init = require("a738e68094213f93");
var _tickFormat = _interopRequireDefault(require("1ff7a4d13f21faa2"));
function linearish(scale) {
    var domain = scale.domain;
    scale.ticks = function(count) {
        var d = domain();
        return (0, _index.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
    };
    scale.tickFormat = function(count, specifier) {
        var d = domain();
        return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
    };
    scale.nice = function(count) {
        if (count == null) count = 10;
        var d = domain();
        var i0 = 0;
        var i1 = d.length - 1;
        var start = d[i0];
        var stop = d[i1];
        var prestep;
        var step;
        var maxIter = 10;
        if (stop < start) {
            step = start, start = stop, stop = step;
            step = i0, i0 = i1, i1 = step;
        }
        while(maxIter-- > 0){
            step = (0, _index.tickIncrement)(start, stop, count);
            if (step === prestep) {
                d[i0] = start;
                d[i1] = stop;
                return domain(d);
            } else if (step > 0) {
                start = Math.floor(start / step) * step;
                stop = Math.ceil(stop / step) * step;
            } else if (step < 0) {
                start = Math.ceil(start * step) / step;
                stop = Math.floor(stop * step) / step;
            } else break;
            prestep = step;
        }
        return scale;
    };
    return scale;
}
function linear() {
    var scale = (0, _continuous.default)();
    scale.copy = function() {
        return (0, _continuous.copy)(scale, linear());
    };
    _init.initRange.apply(scale, arguments);
    return linearish(scale);
}

},{"8f3df1cd99c4d611":"1P3rZ","5ffbd01ee4af8253":"6TFJp","77b1dbe25392e3a9":"idFA4","aa799645a17508e6":"6K7X5","a738e68094213f93":"el2ZB","1ff7a4d13f21faa2":"72V7N"}],"6K7X5":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5f4bd0b17f42a7d7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.copy = copy;
exports.default = continuous;
exports.identity = identity;
exports.transformer = transformer;
var _index = require("c72e39e2feda98c1");
var _index2 = require("30dbc94484f8dd21");
var _constant = _interopRequireDefault(require("633b41eb564fa236"));
var _number = _interopRequireDefault(require("86d1216aecbf19b6"));
var unit = [
    0,
    1
];
function identity(x) {
    return x;
}
function normalize(a, b) {
    return (b -= a = +a) ? function(x) {
        return (x - a) / b;
    } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}
function clamper(a, b) {
    var t;
    if (a > b) t = a, a = b, b = t;
    return function(x) {
        return Math.max(a, Math.min(b, x));
    };
}
// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
    if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
    else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
    return function(x) {
        return r0(d0(x));
    };
}
function polymap(domain, range, interpolate) {
    var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;
    // Reverse descending domains.
    if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
    }
    while(++i < j){
        d[i] = normalize(domain[i], domain[i + 1]);
        r[i] = interpolate(range[i], range[i + 1]);
    }
    return function(x) {
        var i = (0, _index.bisect)(domain, x, 1, j) - 1;
        return r[i](d[i](x));
    };
}
function copy(source, target) {
    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
    var domain = unit, range = unit, interpolate = _index2.interpolate, transform, untransform, unknown, clamp = identity, piecewise, output, input;
    function rescale() {
        var n = Math.min(domain.length, range.length);
        if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
        piecewise = n > 2 ? polymap : bimap;
        output = input = null;
        return scale;
    }
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
    }
    scale.invert = function(y) {
        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));
    };
    scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
    };
    scale.rangeRound = function(_) {
        return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
    };
    scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t, u) {
        transform = t, untransform = u;
        return rescale();
    };
}
function continuous() {
    return transformer()(identity, identity);
}

},{"5f4bd0b17f42a7d7":"1P3rZ","c72e39e2feda98c1":"idFA4","30dbc94484f8dd21":"c66Jx","633b41eb564fa236":"cAa0O","86d1216aecbf19b6":"h89s5"}],"c66Jx":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("881dbce8a1bb254d").default;
var _interopRequireDefault = require("22cbfaaea053c418").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "interpolate", {
    enumerable: true,
    get: function() {
        return _value.default;
    }
});
Object.defineProperty(exports, "interpolateArray", {
    enumerable: true,
    get: function() {
        return _array.default;
    }
});
Object.defineProperty(exports, "interpolateBasis", {
    enumerable: true,
    get: function() {
        return _basis.default;
    }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
    enumerable: true,
    get: function() {
        return _basisClosed.default;
    }
});
Object.defineProperty(exports, "interpolateCubehelix", {
    enumerable: true,
    get: function() {
        return _cubehelix.default;
    }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
    enumerable: true,
    get: function() {
        return _cubehelix.cubehelixLong;
    }
});
Object.defineProperty(exports, "interpolateDate", {
    enumerable: true,
    get: function() {
        return _date.default;
    }
});
Object.defineProperty(exports, "interpolateDiscrete", {
    enumerable: true,
    get: function() {
        return _discrete.default;
    }
});
Object.defineProperty(exports, "interpolateHcl", {
    enumerable: true,
    get: function() {
        return _hcl.default;
    }
});
Object.defineProperty(exports, "interpolateHclLong", {
    enumerable: true,
    get: function() {
        return _hcl.hclLong;
    }
});
Object.defineProperty(exports, "interpolateHsl", {
    enumerable: true,
    get: function() {
        return _hsl.default;
    }
});
Object.defineProperty(exports, "interpolateHslLong", {
    enumerable: true,
    get: function() {
        return _hsl.hslLong;
    }
});
Object.defineProperty(exports, "interpolateHue", {
    enumerable: true,
    get: function() {
        return _hue.default;
    }
});
Object.defineProperty(exports, "interpolateLab", {
    enumerable: true,
    get: function() {
        return _lab.default;
    }
});
Object.defineProperty(exports, "interpolateNumber", {
    enumerable: true,
    get: function() {
        return _number.default;
    }
});
Object.defineProperty(exports, "interpolateNumberArray", {
    enumerable: true,
    get: function() {
        return _numberArray.default;
    }
});
Object.defineProperty(exports, "interpolateObject", {
    enumerable: true,
    get: function() {
        return _object.default;
    }
});
Object.defineProperty(exports, "interpolateRgb", {
    enumerable: true,
    get: function() {
        return _rgb.default;
    }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
    enumerable: true,
    get: function() {
        return _rgb.rgbBasis;
    }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
    enumerable: true,
    get: function() {
        return _rgb.rgbBasisClosed;
    }
});
Object.defineProperty(exports, "interpolateRound", {
    enumerable: true,
    get: function() {
        return _round.default;
    }
});
Object.defineProperty(exports, "interpolateString", {
    enumerable: true,
    get: function() {
        return _string.default;
    }
});
Object.defineProperty(exports, "interpolateTransformCss", {
    enumerable: true,
    get: function() {
        return _index.interpolateTransformCss;
    }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
    enumerable: true,
    get: function() {
        return _index.interpolateTransformSvg;
    }
});
Object.defineProperty(exports, "interpolateZoom", {
    enumerable: true,
    get: function() {
        return _zoom.default;
    }
});
Object.defineProperty(exports, "piecewise", {
    enumerable: true,
    get: function() {
        return _piecewise.default;
    }
});
Object.defineProperty(exports, "quantize", {
    enumerable: true,
    get: function() {
        return _quantize.default;
    }
});
var _value = _interopRequireDefault(require("9236b399528f2203"));
var _array = _interopRequireDefault(require("70a4397234b8de80"));
var _basis = _interopRequireDefault(require("842c729f1ed4bef3"));
var _basisClosed = _interopRequireDefault(require("dc6abf4c2c22482a"));
var _date = _interopRequireDefault(require("c8ee0641acbae382"));
var _discrete = _interopRequireDefault(require("30118c01a50ee819"));
var _hue = _interopRequireDefault(require("ce5bba57e7771673"));
var _number = _interopRequireDefault(require("1e51d244d6a014a9"));
var _numberArray = _interopRequireDefault(require("92b6b691eeddc4c"));
var _object = _interopRequireDefault(require("b094581ba04995a"));
var _round = _interopRequireDefault(require("6bb18f26050287f9"));
var _string = _interopRequireDefault(require("3ec1d2575153a81e"));
var _index = require("c7c46d7dbaccd173");
var _zoom = _interopRequireDefault(require("186dff63db6e2ed8"));
var _rgb = _interopRequireWildcard(require("8ffb6265d1fd3a7e"));
var _hsl = _interopRequireWildcard(require("1dee5864242e371d"));
var _lab = _interopRequireDefault(require("2543752a1756750d"));
var _hcl = _interopRequireWildcard(require("928a9b18ce1311b8"));
var _cubehelix = _interopRequireWildcard(require("c9d48a5459993662"));
var _piecewise = _interopRequireDefault(require("ab09b27cd2f095e2"));
var _quantize = _interopRequireDefault(require("d5fd4509a9d50aa5"));

},{"881dbce8a1bb254d":"6TFJp","22cbfaaea053c418":"1P3rZ","9236b399528f2203":"8qJrz","70a4397234b8de80":"kxfvQ","842c729f1ed4bef3":"5KIWA","dc6abf4c2c22482a":"9Jgeo","c8ee0641acbae382":"ky13b","30118c01a50ee819":"EqTbt","ce5bba57e7771673":"6XgkS","1e51d244d6a014a9":"8GHJ1","92b6b691eeddc4c":"2S9cG","b094581ba04995a":"88Mrv","6bb18f26050287f9":"iNYc5","3ec1d2575153a81e":"6jhjU","c7c46d7dbaccd173":"kjn8P","186dff63db6e2ed8":"1979D","8ffb6265d1fd3a7e":"hnA83","1dee5864242e371d":"ghk8C","2543752a1756750d":"bZ9w2","928a9b18ce1311b8":"j3h2f","c9d48a5459993662":"k4V7e","ab09b27cd2f095e2":"5aema","d5fd4509a9d50aa5":"9fx51"}],"8qJrz":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("afd8ec8a6cc672d4").default;
var _interopRequireDefault = require("bb8a70d9d6d440e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _index = require("6efe568f86430c3a");
var _rgb = _interopRequireDefault(require("e170d58983f0df74"));
var _array = require("154213f8dc0a088d");
var _date = _interopRequireDefault(require("1d133bfe650fd009"));
var _number = _interopRequireDefault(require("94f281b1f155b885"));
var _object = _interopRequireDefault(require("4dcbb5b629c2701f"));
var _string = _interopRequireDefault(require("f4b6576ba9e71596"));
var _constant = _interopRequireDefault(require("b727ad2f782ad814"));
var _numberArray = _interopRequireWildcard(require("235252d0385cf123"));
function _default(a, b) {
    var t = typeof b, c;
    return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _index.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _index.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}

},{"afd8ec8a6cc672d4":"6TFJp","bb8a70d9d6d440e":"1P3rZ","6efe568f86430c3a":"9LAN9","e170d58983f0df74":"hnA83","154213f8dc0a088d":"kxfvQ","1d133bfe650fd009":"ky13b","94f281b1f155b885":"8GHJ1","4dcbb5b629c2701f":"88Mrv","f4b6576ba9e71596":"6jhjU","b727ad2f782ad814":"5WWYH","235252d0385cf123":"2S9cG"}],"9LAN9":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2c31644f725907f9").default;
var _interopRequireWildcard = require("595e175b31896991").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "color", {
    enumerable: true,
    get: function() {
        return _color.default;
    }
});
Object.defineProperty(exports, "cubehelix", {
    enumerable: true,
    get: function() {
        return _cubehelix.default;
    }
});
Object.defineProperty(exports, "gray", {
    enumerable: true,
    get: function() {
        return _lab.gray;
    }
});
Object.defineProperty(exports, "hcl", {
    enumerable: true,
    get: function() {
        return _lab.hcl;
    }
});
Object.defineProperty(exports, "hsl", {
    enumerable: true,
    get: function() {
        return _color.hsl;
    }
});
Object.defineProperty(exports, "lab", {
    enumerable: true,
    get: function() {
        return _lab.default;
    }
});
Object.defineProperty(exports, "lch", {
    enumerable: true,
    get: function() {
        return _lab.lch;
    }
});
Object.defineProperty(exports, "rgb", {
    enumerable: true,
    get: function() {
        return _color.rgb;
    }
});
var _color = _interopRequireWildcard(require("4775e3d48c56a404"));
var _lab = _interopRequireWildcard(require("acdb62a6e6693517"));
var _cubehelix = _interopRequireDefault(require("de5828f9706a388e"));

},{"2c31644f725907f9":"1P3rZ","595e175b31896991":"6TFJp","4775e3d48c56a404":"59EmD","acdb62a6e6693517":"ho3Ns","de5828f9706a388e":"i7gBL"}],"59EmD":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("ef3c4a4a72fe9d68").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Color = Color;
exports.Rgb = Rgb;
exports.darker = exports.brighter = void 0;
exports.default = color;
exports.hsl = hsl;
exports.hslConvert = hslConvert;
exports.rgb = rgb;
exports.rgbConvert = rgbConvert;
var _define = _interopRequireWildcard(require("4f4b17f388903ac9"));
function Color() {}
var darker = exports.darker = 0.7;
var brighter = exports.brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*", reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex = /^#([0-9a-f]{3,8})$/, reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`), reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`), reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`), reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`), reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`), reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
var named = {
    aliceblue: 0xf0f8ff,
    antiquewhite: 0xfaebd7,
    aqua: 0x00ffff,
    aquamarine: 0x7fffd4,
    azure: 0xf0ffff,
    beige: 0xf5f5dc,
    bisque: 0xffe4c4,
    black: 0x000000,
    blanchedalmond: 0xffebcd,
    blue: 0x0000ff,
    blueviolet: 0x8a2be2,
    brown: 0xa52a2a,
    burlywood: 0xdeb887,
    cadetblue: 0x5f9ea0,
    chartreuse: 0x7fff00,
    chocolate: 0xd2691e,
    coral: 0xff7f50,
    cornflowerblue: 0x6495ed,
    cornsilk: 0xfff8dc,
    crimson: 0xdc143c,
    cyan: 0x00ffff,
    darkblue: 0x00008b,
    darkcyan: 0x008b8b,
    darkgoldenrod: 0xb8860b,
    darkgray: 0xa9a9a9,
    darkgreen: 0x006400,
    darkgrey: 0xa9a9a9,
    darkkhaki: 0xbdb76b,
    darkmagenta: 0x8b008b,
    darkolivegreen: 0x556b2f,
    darkorange: 0xff8c00,
    darkorchid: 0x9932cc,
    darkred: 0x8b0000,
    darksalmon: 0xe9967a,
    darkseagreen: 0x8fbc8f,
    darkslateblue: 0x483d8b,
    darkslategray: 0x2f4f4f,
    darkslategrey: 0x2f4f4f,
    darkturquoise: 0x00ced1,
    darkviolet: 0x9400d3,
    deeppink: 0xff1493,
    deepskyblue: 0x00bfff,
    dimgray: 0x696969,
    dimgrey: 0x696969,
    dodgerblue: 0x1e90ff,
    firebrick: 0xb22222,
    floralwhite: 0xfffaf0,
    forestgreen: 0x228b22,
    fuchsia: 0xff00ff,
    gainsboro: 0xdcdcdc,
    ghostwhite: 0xf8f8ff,
    gold: 0xffd700,
    goldenrod: 0xdaa520,
    gray: 0x808080,
    green: 0x008000,
    greenyellow: 0xadff2f,
    grey: 0x808080,
    honeydew: 0xf0fff0,
    hotpink: 0xff69b4,
    indianred: 0xcd5c5c,
    indigo: 0x4b0082,
    ivory: 0xfffff0,
    khaki: 0xf0e68c,
    lavender: 0xe6e6fa,
    lavenderblush: 0xfff0f5,
    lawngreen: 0x7cfc00,
    lemonchiffon: 0xfffacd,
    lightblue: 0xadd8e6,
    lightcoral: 0xf08080,
    lightcyan: 0xe0ffff,
    lightgoldenrodyellow: 0xfafad2,
    lightgray: 0xd3d3d3,
    lightgreen: 0x90ee90,
    lightgrey: 0xd3d3d3,
    lightpink: 0xffb6c1,
    lightsalmon: 0xffa07a,
    lightseagreen: 0x20b2aa,
    lightskyblue: 0x87cefa,
    lightslategray: 0x778899,
    lightslategrey: 0x778899,
    lightsteelblue: 0xb0c4de,
    lightyellow: 0xffffe0,
    lime: 0x00ff00,
    limegreen: 0x32cd32,
    linen: 0xfaf0e6,
    magenta: 0xff00ff,
    maroon: 0x800000,
    mediumaquamarine: 0x66cdaa,
    mediumblue: 0x0000cd,
    mediumorchid: 0xba55d3,
    mediumpurple: 0x9370db,
    mediumseagreen: 0x3cb371,
    mediumslateblue: 0x7b68ee,
    mediumspringgreen: 0x00fa9a,
    mediumturquoise: 0x48d1cc,
    mediumvioletred: 0xc71585,
    midnightblue: 0x191970,
    mintcream: 0xf5fffa,
    mistyrose: 0xffe4e1,
    moccasin: 0xffe4b5,
    navajowhite: 0xffdead,
    navy: 0x000080,
    oldlace: 0xfdf5e6,
    olive: 0x808000,
    olivedrab: 0x6b8e23,
    orange: 0xffa500,
    orangered: 0xff4500,
    orchid: 0xda70d6,
    palegoldenrod: 0xeee8aa,
    palegreen: 0x98fb98,
    paleturquoise: 0xafeeee,
    palevioletred: 0xdb7093,
    papayawhip: 0xffefd5,
    peachpuff: 0xffdab9,
    peru: 0xcd853f,
    pink: 0xffc0cb,
    plum: 0xdda0dd,
    powderblue: 0xb0e0e6,
    purple: 0x800080,
    rebeccapurple: 0x663399,
    red: 0xff0000,
    rosybrown: 0xbc8f8f,
    royalblue: 0x4169e1,
    saddlebrown: 0x8b4513,
    salmon: 0xfa8072,
    sandybrown: 0xf4a460,
    seagreen: 0x2e8b57,
    seashell: 0xfff5ee,
    sienna: 0xa0522d,
    silver: 0xc0c0c0,
    skyblue: 0x87ceeb,
    slateblue: 0x6a5acd,
    slategray: 0x708090,
    slategrey: 0x708090,
    snow: 0xfffafa,
    springgreen: 0x00ff7f,
    steelblue: 0x4682b4,
    tan: 0xd2b48c,
    teal: 0x008080,
    thistle: 0xd8bfd8,
    tomato: 0xff6347,
    turquoise: 0x40e0d0,
    violet: 0xee82ee,
    wheat: 0xf5deb3,
    white: 0xffffff,
    whitesmoke: 0xf5f5f5,
    yellow: 0xffff00,
    yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
    copy (channels) {
        return Object.assign(new this.constructor(), this, channels);
    },
    displayable () {
        return this.rgb().displayable();
    },
    hex: color_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
});
function color_formatHex() {
    return this.rgb().formatHex();
}
function color_formatHex8() {
    return this.rgb().formatHex8();
}
function color_formatHsl() {
    return hslConvert(this).formatHsl();
}
function color_formatRgb() {
    return this.rgb().formatRgb();
}
function color(format) {
    var m, l;
    format = (format + "").trim().toLowerCase();
    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
     : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
     : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
     : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
     : null // invalid hex
    ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
     : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
     : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
     : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
     : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
     : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
     : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
     : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}
function rgba(r, g, b, a) {
    if (a <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a);
}
function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb();
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
}
(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
    brighter (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb () {
        return this;
    },
    clamp () {
        return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable () {
        return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
    },
    hex: rgb_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
}));
function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
}
function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function rgb_formatRgb() {
    const a = clampa(this.opacity);
    return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
}
function clampa(opacity) {
    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}
function clampi(value) {
    return Math.max(0, Math.min(255, Math.round(value) || 0));
}
function hex(value) {
    value = clampi(value);
    return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s, l, a) {
    if (a <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a);
}
function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl();
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
    if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
    } else s = l > 0 && l < 1 ? 0 : h;
    return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
}
(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
    brighter (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb () {
        var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
    },
    clamp () {
        return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable () {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
    },
    formatHsl () {
        const a = clampa(this.opacity);
        return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
    }
}));
function clamph(value) {
    value = (value || 0) % 360;
    return value < 0 ? value + 360 : value;
}
function clampt(value) {
    return Math.max(0, Math.min(1, value || 0));
}
/* From FvD 13.37, CSS Color Module Level 3 */ function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

},{"ef3c4a4a72fe9d68":"6TFJp","4f4b17f388903ac9":"i8N2M"}],"i8N2M":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.extend = extend;
function _default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
}
function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for(var key in definition)prototype[key] = definition[key];
    return prototype;
}

},{}],"ho3Ns":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("880a2c28a1b5ccce").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Hcl = Hcl;
exports.Lab = Lab;
exports.default = lab;
exports.gray = gray;
exports.hcl = hcl;
exports.lch = lch;
var _define = _interopRequireWildcard(require("2c90cd92c65c413d"));
var _color = require("98afe11b0933ef52");
var _math = require("4183cb452b167f57");
// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18, Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1;
function labConvert(o) {
    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
    if (o instanceof Hcl) return hcl2lab(o);
    if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
    var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
    if (r === g && g === b) x = z = y;
    else {
        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
    }
    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}
function gray(l, opacity) {
    return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}
function lab(l, a, b, opacity) {
    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}
function Lab(l, a, b, opacity) {
    this.l = +l;
    this.a = +a;
    this.b = +b;
    this.opacity = +opacity;
}
(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
    brighter (k) {
        return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
    },
    darker (k) {
        return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
    },
    rgb () {
        var y = (this.l + 16) / 116, x = isNaN(this.a) ? y : y + this.a / 500, z = isNaN(this.b) ? y : y - this.b / 200;
        x = Xn * lab2xyz(x);
        y = Yn * lab2xyz(y);
        z = Zn * lab2xyz(z);
        return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
    }
}));
function xyz2lab(t) {
    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}
function lab2xyz(t) {
    return t > t1 ? t * t * t : t2 * (t - t0);
}
function lrgb2rgb(x) {
    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}
function rgb2lrgb(x) {
    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}
function hclConvert(o) {
    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
    if (!(o instanceof Lab)) o = labConvert(o);
    if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
    var h = Math.atan2(o.b, o.a) * _math.degrees;
    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function lch(l, c, h, opacity) {
    return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function hcl(h, c, l, opacity) {
    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
    this.h = +h;
    this.c = +c;
    this.l = +l;
    this.opacity = +opacity;
}
function hcl2lab(o) {
    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
    var h = o.h * _math.radians;
    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}
(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
    brighter (k) {
        return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
    },
    darker (k) {
        return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
    },
    rgb () {
        return hcl2lab(this).rgb();
    }
}));

},{"880a2c28a1b5ccce":"6TFJp","2c90cd92c65c413d":"i8N2M","98afe11b0933ef52":"59EmD","4183cb452b167f57":"ajgOW"}],"ajgOW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.radians = exports.degrees = void 0;
const radians = exports.radians = Math.PI / 180;
const degrees = exports.degrees = 180 / Math.PI;

},{}],"i7gBL":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("7bc2f20c80aefdf5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cubehelix = Cubehelix;
exports.default = cubehelix;
var _define = _interopRequireWildcard(require("6e90227dd4085041"));
var _color = require("9a380cec0f939dda");
var _math = require("2e753d4041e671bd");
var A = -0.14861, B = 1.78277, C = -0.29227, D = -0.90649, E = 1.97294, ED = E * D, EB = E * B, BC_DA = B * C - D * A;
function cubehelixConvert(o) {
    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k = (E * (g - l) - C * bl) / D, s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
    h = s ? Math.atan2(k, bl) * _math.degrees - 120 : NaN;
    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}
function cubehelix(h, s, l, opacity) {
    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
}
(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
    brighter (k) {
        k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
    },
    darker (k) {
        k = k == null ? _color.darker : Math.pow(_color.darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
    },
    rgb () {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.radians, l = +this.l, a = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);
        return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
    }
}));

},{"7bc2f20c80aefdf5":"6TFJp","6e90227dd4085041":"i8N2M","9a380cec0f939dda":"59EmD","2e753d4041e671bd":"ajgOW"}],"hnA83":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("c051fb0d5ba84eda").default;
var _interopRequireDefault = require("c87f8b2b942d4a71").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;
var _index = require("9e53a22c0141b354");
var _basis = _interopRequireDefault(require("845cb02494b8726b"));
var _basisClosed = _interopRequireDefault(require("9094046c568253b2"));
var _color = _interopRequireWildcard(require("2a833d101de35592"));
var _default = exports.default = function rgbGamma(y) {
    var color = (0, _color.gamma)(y);
    function rgb(start, end) {
        var r = color((start = (0, _index.rgb)(start)).r, (end = (0, _index.rgb)(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.r = r(t);
            start.g = g(t);
            start.b = b(t);
            start.opacity = opacity(t);
            return start + "";
        };
    }
    rgb.gamma = rgbGamma;
    return rgb;
}(1);
function rgbSpline(spline) {
    return function(colors) {
        var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color;
        for(i = 0; i < n; ++i){
            color = (0, _index.rgb)(colors[i]);
            r[i] = color.r || 0;
            g[i] = color.g || 0;
            b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
            color.r = r(t);
            color.g = g(t);
            color.b = b(t);
            return color + "";
        };
    };
}
var rgbBasis = exports.rgbBasis = rgbSpline(_basis.default);
var rgbBasisClosed = exports.rgbBasisClosed = rgbSpline(_basisClosed.default);

},{"c051fb0d5ba84eda":"6TFJp","c87f8b2b942d4a71":"1P3rZ","9e53a22c0141b354":"9LAN9","845cb02494b8726b":"5KIWA","9094046c568253b2":"9Jgeo","2a833d101de35592":"gllr9"}],"5KIWA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.basis = basis;
exports.default = _default;
function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
function _default(values) {
    var n = values.length - 1;
    return function(t) {
        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
    };
}

},{}],"9Jgeo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _basis = require("99452ea198f6cda6");
function _default(values) {
    var n = values.length;
    return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
        return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
    };
}

},{"99452ea198f6cda6":"5KIWA"}],"gllr9":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3750ced2fb678cab").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nogamma;
exports.gamma = gamma;
exports.hue = hue;
var _constant = _interopRequireDefault(require("91b8d3e222024a9e"));
function linear(a, d) {
    return function(t) {
        return a + t * d;
    };
}
function exponential(a, b, y) {
    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
    };
}
function hue(a, b) {
    var d = b - a;
    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}
function gamma(y) {
    return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
    };
}
function nogamma(a, b) {
    var d = b - a;
    return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}

},{"3750ced2fb678cab":"1P3rZ","91b8d3e222024a9e":"5WWYH"}],"5WWYH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = (x)=>()=>x;
exports.default = _default;

},{}],"kxfvQ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("e7de7c0762604d4d").default;
var _interopRequireDefault = require("5ba76d45a56bbb23").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.genericArray = genericArray;
var _value = _interopRequireDefault(require("d48734c8f71e0087"));
var _numberArray = _interopRequireWildcard(require("f0d5b50c9a43ad9b"));
function _default(a, b) {
    return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}
function genericArray(a, b) {
    var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
    for(i = 0; i < na; ++i)x[i] = (0, _value.default)(a[i], b[i]);
    for(; i < nb; ++i)c[i] = b[i];
    return function(t) {
        for(i = 0; i < na; ++i)c[i] = x[i](t);
        return c;
    };
}

},{"e7de7c0762604d4d":"6TFJp","5ba76d45a56bbb23":"1P3rZ","d48734c8f71e0087":"8qJrz","f0d5b50c9a43ad9b":"2S9cG"}],"2S9cG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;
function _default(a, b) {
    if (!b) b = [];
    var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
    return function(t) {
        for(i = 0; i < n; ++i)c[i] = a[i] * (1 - t) + b[i] * t;
        return c;
    };
}
function isNumberArray(x) {
    return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

},{}],"ky13b":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    var d = new Date();
    return a = +a, b = +b, function(t) {
        return d.setTime(a * (1 - t) + b * t), d;
    };
}

},{}],"8GHJ1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
    };
}

},{}],"88Mrv":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("b64fcca3b8e9adc2").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _value = _interopRequireDefault(require("c1fbe71772345b81"));
function _default(a, b) {
    var i = {}, c = {}, k;
    if (a === null || typeof a !== "object") a = {};
    if (b === null || typeof b !== "object") b = {};
    for(k in b)if (k in a) i[k] = (0, _value.default)(a[k], b[k]);
    else c[k] = b[k];
    return function(t) {
        for(k in i)c[k] = i[k](t);
        return c;
    };
}

},{"b64fcca3b8e9adc2":"1P3rZ","c1fbe71772345b81":"8qJrz"}],"6jhjU":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5c6ccfabc8ad7d3b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _number = _interopRequireDefault(require("e5472fa545112c4"));
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g");
function zero(b) {
    return function() {
        return b;
    };
}
function one(b) {
    return function(t) {
        return b(t) + "";
    };
}
function _default(a, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
    am, // current match in a
    bm, // current match in b
    bs, // string preceding current number in b, if any
    i = -1, // index in s
    s = [], // string constants and placeholders
    q = []; // number interpolators
    // Coerce inputs to strings.
    a = a + "", b = b + "";
    // Interpolate pairs of numbers in a & b.
    while((am = reA.exec(a)) && (bm = reB.exec(b))){
        if ((bs = bm.index) > bi) {
            // a string precedes the next number in b
            bs = b.slice(bi, bs);
            if (s[i]) s[i] += bs; // coalesce with previous string
            else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
            // numbers in a & b match
            if (s[i]) s[i] += bm; // coalesce with previous string
            else s[++i] = bm;
        } else {
            // interpolate non-matching numbers
            s[++i] = null;
            q.push({
                i: i,
                x: (0, _number.default)(am, bm)
            });
        }
        bi = reB.lastIndex;
    }
    // Add remains of b.
    if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs; // coalesce with previous string
        else s[++i] = bs;
    }
    // Special optimization for only a single match.
    // Otherwise, interpolate each of the numbers and rejoin the string.
    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
        for(var i = 0, o; i < b; ++i)s[(o = q[i]).i] = o.x(t);
        return s.join("");
    });
}

},{"5c6ccfabc8ad7d3b":"1P3rZ","e5472fa545112c4":"8GHJ1"}],"EqTbt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(range) {
    var n = range.length;
    return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
    };
}

},{}],"6XgkS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _color = require("da2957c4a5f1055");
function _default(a, b) {
    var i = (0, _color.hue)(+a, +b);
    return function(t) {
        var x = i(t);
        return x - 360 * Math.floor(x / 360);
    };
}

},{"da2957c4a5f1055":"gllr9"}],"iNYc5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return a = +a, b = +b, function(t) {
        return Math.round(a * (1 - t) + b * t);
    };
}

},{}],"kjn8P":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2a33bbb243ddaed7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;
var _number = _interopRequireDefault(require("d757ee9b8d9b3dd4"));
var _parse = require("585f0cf9b7f27543");
function interpolateTransform(parse, pxComma, pxParen, degParen) {
    function pop(s) {
        return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push("translate(", null, pxComma, null, pxParen);
            q.push({
                i: i - 4,
                x: (0, _number.default)(xa, xb)
            }, {
                i: i - 2,
                x: (0, _number.default)(ya, yb)
            });
        } else if (xb || yb) s.push("translate(" + xb + pxComma + yb + pxParen);
    }
    function rotate(a, b, s, q) {
        if (a !== b) {
            if (a - b > 180) b += 360;
            else if (b - a > 180) a += 360; // shortest path
            q.push({
                i: s.push(pop(s) + "rotate(", null, degParen) - 2,
                x: (0, _number.default)(a, b)
            });
        } else if (b) s.push(pop(s) + "rotate(" + b + degParen);
    }
    function skewX(a, b, s, q) {
        if (a !== b) q.push({
            i: s.push(pop(s) + "skewX(", null, degParen) - 2,
            x: (0, _number.default)(a, b)
        });
        else if (b) s.push(pop(s) + "skewX(" + b + degParen);
    }
    function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push(pop(s) + "scale(", null, ",", null, ")");
            q.push({
                i: i - 4,
                x: (0, _number.default)(xa, xb)
            }, {
                i: i - 2,
                x: (0, _number.default)(ya, yb)
            });
        } else if (xb !== 1 || yb !== 1) s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
    return function(a, b) {
        var s = [], // string constants and placeholders
        q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function(t) {
            var i = -1, n = q.length, o;
            while(++i < n)s[(o = q[i]).i] = o.x(t);
            return s.join("");
        };
    };
}
var interpolateTransformCss = exports.interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = exports.interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");

},{"2a33bbb243ddaed7":"1P3rZ","d757ee9b8d9b3dd4":"8GHJ1","585f0cf9b7f27543":"7slNa"}],"7slNa":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("4aedd89db826bf33").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;
var _decompose = _interopRequireWildcard(require("e923718fe4dd6a36"));
var svgNode;
/* eslint-disable no-undef */ function parseCss(value) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
    return m.isIdentity ? _decompose.identity : (0, _decompose.default)(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
    if (value == null) return _decompose.identity;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
    value = value.matrix;
    return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}

},{"4aedd89db826bf33":"6TFJp","e923718fe4dd6a36":"4OoED"}],"4OoED":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = exports.identity = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
};
function _default(a, b, c, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
    return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX: scaleX,
        scaleY: scaleY
    };
}

},{}],"1979D":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var epsilon2 = 1e-12;
function cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
}
function sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
}
function tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}
var _default = exports.default = function zoomRho(rho, rho2, rho4) {
    // p0 = [ux0, uy0, w0]
    // p1 = [ux1, uy1, w1]
    function zoom(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
        // Special case for u0 ≅ u1.
        if (d2 < epsilon2) {
            S = Math.log(w1 / w0) / rho;
            i = function(t) {
                return [
                    ux0 + t * dx,
                    uy0 + t * dy,
                    w0 * Math.exp(rho * t * S)
                ];
            };
        } else {
            var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
            S = (r1 - r0) / rho;
            i = function(t) {
                var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
                return [
                    ux0 + u * dx,
                    uy0 + u * dy,
                    w0 * coshr0 / cosh(rho * s + r0)
                ];
            };
        }
        i.duration = S * 1000 * rho / Math.SQRT2;
        return i;
    }
    zoom.rho = function(_) {
        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
    };
    return zoom;
}(Math.SQRT2, 2, 4);

},{}],"ghk8C":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("f51f3af14e0a476d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hslLong = exports.default = void 0;
var _index = require("860b78197f1507d1");
var _color = _interopRequireWildcard(require("6090772390f4da9d"));
function hsl(hue) {
    return function(start, end) {
        var h = hue((start = (0, _index.hsl)(start)).h, (end = (0, _index.hsl)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(t);
            start.opacity = opacity(t);
            return start + "";
        };
    };
}
var _default = exports.default = hsl(_color.hue);
var hslLong = exports.hslLong = hsl(_color.default);

},{"f51f3af14e0a476d":"6TFJp","860b78197f1507d1":"9LAN9","6090772390f4da9d":"gllr9"}],"bZ9w2":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8db9913471411e59").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = lab;
var _index = require("ea72f439af0d2677");
var _color = _interopRequireDefault(require("4af0a61e2edb1f6e"));
function lab(start, end) {
    var l = (0, _color.default)((start = (0, _index.lab)(start)).l, (end = (0, _index.lab)(end)).l), a = (0, _color.default)(start.a, end.a), b = (0, _color.default)(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
    return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
    };
}

},{"8db9913471411e59":"1P3rZ","ea72f439af0d2677":"9LAN9","4af0a61e2edb1f6e":"gllr9"}],"j3h2f":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("a37615af6a38ab39").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hclLong = exports.default = void 0;
var _index = require("9a2cb2272b1aa350");
var _color = _interopRequireWildcard(require("71492c2d3f9c544a"));
function hcl(hue) {
    return function(start, end) {
        var h = hue((start = (0, _index.hcl)(start)).h, (end = (0, _index.hcl)(end)).h), c = (0, _color.default)(start.c, end.c), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.h = h(t);
            start.c = c(t);
            start.l = l(t);
            start.opacity = opacity(t);
            return start + "";
        };
    };
}
var _default = exports.default = hcl(_color.hue);
var hclLong = exports.hclLong = hcl(_color.default);

},{"a37615af6a38ab39":"6TFJp","9a2cb2272b1aa350":"9LAN9","71492c2d3f9c544a":"gllr9"}],"k4V7e":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("5169a7e380e76338").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.cubehelixLong = void 0;
var _index = require("72f8ee84fa1b0f23");
var _color = _interopRequireWildcard(require("196fcdf92e149815"));
function cubehelix(hue) {
    return function cubehelixGamma(y) {
        y = +y;
        function cubehelix(start, end) {
            var h = hue((start = (0, _index.cubehelix)(start)).h, (end = (0, _index.cubehelix)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
            return function(t) {
                start.h = h(t);
                start.s = s(t);
                start.l = l(Math.pow(t, y));
                start.opacity = opacity(t);
                return start + "";
            };
        }
        cubehelix.gamma = cubehelixGamma;
        return cubehelix;
    }(1);
}
var _default = exports.default = cubehelix(_color.hue);
var cubehelixLong = exports.cubehelixLong = cubehelix(_color.default);

},{"5169a7e380e76338":"6TFJp","72f8ee84fa1b0f23":"9LAN9","196fcdf92e149815":"gllr9"}],"5aema":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("affc6c3881598d36").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = piecewise;
var _value = _interopRequireDefault(require("55b97310ee91fa1c"));
function piecewise(interpolate, values) {
    if (values === undefined) values = interpolate, interpolate = _value.default;
    var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
    while(i < n)I[i] = interpolate(v, v = values[++i]);
    return function(t) {
        var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
        return I[i](t - i);
    };
}

},{"affc6c3881598d36":"1P3rZ","55b97310ee91fa1c":"8qJrz"}],"9fx51":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(interpolator, n) {
    var samples = new Array(n);
    for(var i = 0; i < n; ++i)samples[i] = interpolator(i / (n - 1));
    return samples;
}

},{}],"cAa0O":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = constants;
function constants(x) {
    return function() {
        return x;
    };
}

},{}],"h89s5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = number;
function number(x) {
    return +x;
}

},{}],"72V7N":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = tickFormat;
var _index = require("ab9008545ab5df1");
var _index2 = require("da531db8b5f7af18");
function tickFormat(start, stop, count, specifier) {
    var step = (0, _index.tickStep)(start, stop, count), precision;
    specifier = (0, _index2.formatSpecifier)(specifier == null ? ",f" : specifier);
    switch(specifier.type){
        case "s":
            var value = Math.max(Math.abs(start), Math.abs(stop));
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionPrefix)(step, value))) specifier.precision = precision;
            return (0, _index2.formatPrefix)(specifier, value);
        case "":
        case "e":
        case "g":
        case "p":
        case "r":
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
            break;
        case "f":
        case "%":
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
            break;
    }
    return (0, _index2.format)(specifier);
}

},{"ab9008545ab5df1":"idFA4","da531db8b5f7af18":"8Anah"}],"8Anah":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("95ae83c008c74e50").default;
var _interopRequireWildcard = require("e75176406b07c100").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FormatSpecifier", {
    enumerable: true,
    get: function() {
        return _formatSpecifier.FormatSpecifier;
    }
});
Object.defineProperty(exports, "format", {
    enumerable: true,
    get: function() {
        return _defaultLocale.format;
    }
});
Object.defineProperty(exports, "formatDefaultLocale", {
    enumerable: true,
    get: function() {
        return _defaultLocale.default;
    }
});
Object.defineProperty(exports, "formatLocale", {
    enumerable: true,
    get: function() {
        return _locale.default;
    }
});
Object.defineProperty(exports, "formatPrefix", {
    enumerable: true,
    get: function() {
        return _defaultLocale.formatPrefix;
    }
});
Object.defineProperty(exports, "formatSpecifier", {
    enumerable: true,
    get: function() {
        return _formatSpecifier.default;
    }
});
Object.defineProperty(exports, "precisionFixed", {
    enumerable: true,
    get: function() {
        return _precisionFixed.default;
    }
});
Object.defineProperty(exports, "precisionPrefix", {
    enumerable: true,
    get: function() {
        return _precisionPrefix.default;
    }
});
Object.defineProperty(exports, "precisionRound", {
    enumerable: true,
    get: function() {
        return _precisionRound.default;
    }
});
var _defaultLocale = _interopRequireWildcard(require("c7d0a7f919d34664"));
var _locale = _interopRequireDefault(require("fe6b20ed08891cc7"));
var _formatSpecifier = _interopRequireWildcard(require("9aa5279e48801532"));
var _precisionFixed = _interopRequireDefault(require("e492c684b874f2bf"));
var _precisionPrefix = _interopRequireDefault(require("a15863f48a41a729"));
var _precisionRound = _interopRequireDefault(require("6a231e45d98dde26"));

},{"95ae83c008c74e50":"1P3rZ","e75176406b07c100":"6TFJp","c7d0a7f919d34664":"f14b1","fe6b20ed08891cc7":"3g3KT","9aa5279e48801532":"dcjA6","e492c684b874f2bf":"aCgcS","a15863f48a41a729":"2LEew","6a231e45d98dde26":"i4Gwk"}],"f14b1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e0a2e91797df46e0").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;
var _locale = _interopRequireDefault(require("4de815dc2cedadb1"));
var locale;
var format;
var formatPrefix;
defaultLocale({
    thousands: ",",
    grouping: [
        3
    ],
    currency: [
        "$",
        ""
    ]
});
function defaultLocale(definition) {
    locale = (0, _locale.default)(definition);
    exports.format = format = locale.format;
    exports.formatPrefix = formatPrefix = locale.formatPrefix;
    return locale;
}

},{"e0a2e91797df46e0":"1P3rZ","4de815dc2cedadb1":"3g3KT"}],"3g3KT":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("391f2402f83f7afd").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("4f53d37db87cd42f"));
var _formatGroup = _interopRequireDefault(require("f637e58de73c7652"));
var _formatNumerals = _interopRequireDefault(require("b07b5f493a0aa918"));
var _formatSpecifier = _interopRequireDefault(require("ce20cbe61c9eddb1"));
var _formatTrim = _interopRequireDefault(require("cc5304d9868e93a9"));
var _formatTypes = _interopRequireDefault(require("24558cd10fc31927"));
var _formatPrefixAuto = require("1b4b28264f6c69ff");
var _identity = _interopRequireDefault(require("edf745fb980434c4"));
var map = Array.prototype.map, prefixes = [
    "y",
    "z",
    "a",
    "f",
    "p",
    "n",
    "\xb5",
    "m",
    "",
    "k",
    "M",
    "G",
    "T",
    "P",
    "E",
    "Z",
    "Y"
];
function _default(locale) {
    var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""), currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "", currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "", decimal = locale.decimal === undefined ? "." : locale.decimal + "", numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)), percent = locale.percent === undefined ? "%" : locale.percent + "", minus = locale.minus === undefined ? "\u2212" : locale.minus + "", nan = locale.nan === undefined ? "NaN" : locale.nan + "";
    function newFormat(specifier) {
        specifier = (0, _formatSpecifier.default)(specifier);
        var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
        // The "n" type is an alias for ",g".
        if (type === "n") comma = true, type = "g";
        else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g";
        // If zero fill is specified, padding goes after sign and before digits.
        if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";
        // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
        // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = _formatTypes.default[type], maybeSuffix = /[defgprs%]/.test(type);
        // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
        function format(value) {
            var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
            if (type === "c") {
                valueSuffix = formatType(value) + valueSuffix;
                value = "";
            } else {
                value = +value;
                // Determine the sign. -0 is not less than 0, but 1 / -0 is!
                var valueNegative = value < 0 || 1 / value < 0;
                // Perform the initial formatting.
                value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
                // Trim insignificant zeros.
                if (trim) value = (0, _formatTrim.default)(value);
                // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
                if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;
                // Compute the prefix and suffix.
                valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
                valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
                // Break the formatted value into the integer “value” part that can be
                // grouped, and fractional or exponential “suffix” part that is not.
                if (maybeSuffix) {
                    i = -1, n = value.length;
                    while(++i < n)if (c = value.charCodeAt(i), 48 > c || c > 57) {
                        valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                        value = value.slice(0, i);
                        break;
                    }
                }
            }
            // If the fill character is not "0", grouping is applied before padding.
            if (comma && !zero) value = group(value, Infinity);
            // Compute the padding.
            var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
            // If the fill character is "0", grouping is applied after padding.
            if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
            // Reconstruct the final output based on the desired alignment.
            switch(align){
                case "<":
                    value = valuePrefix + value + valueSuffix + padding;
                    break;
                case "=":
                    value = valuePrefix + padding + value + valueSuffix;
                    break;
                case "^":
                    value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
                    break;
                default:
                    value = padding + valuePrefix + value + valueSuffix;
                    break;
            }
            return numerals(value);
        }
        format.toString = function() {
            return specifier + "";
        };
        return format;
    }
    function formatPrefix(specifier, value) {
        var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
        return function(value) {
            return f(k * value) + prefix;
        };
    }
    return {
        format: newFormat,
        formatPrefix: formatPrefix
    };
}

},{"391f2402f83f7afd":"1P3rZ","4f53d37db87cd42f":"hR4AB","f637e58de73c7652":"hdHyt","b07b5f493a0aa918":"ktwDU","ce20cbe61c9eddb1":"dcjA6","cc5304d9868e93a9":"3xdtL","24558cd10fc31927":"jteNc","1b4b28264f6c69ff":"lJpar","edf745fb980434c4":"i1i2s"}],"hR4AB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _formatDecimal = require("1b11a9be71625f75");
function _default(x) {
    return x = (0, _formatDecimal.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
}

},{"1b11a9be71625f75":"jxSoX"}],"jxSoX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.formatDecimalParts = formatDecimalParts;
function _default(x) {
    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
}
// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
    var i, coefficient = x.slice(0, i);
    // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
    return [
        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
        +x.slice(i + 1)
    ];
}

},{}],"hdHyt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(grouping, thousands) {
    return function(value, width) {
        var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
        while(i > 0 && g > 0){
            if (length + g + 1 > width) g = Math.max(1, width - length);
            t.push(value.substring(i -= g, i + g));
            if ((length += g + 1) > width) break;
            g = grouping[j = (j + 1) % grouping.length];
        }
        return t.reverse().join(thousands);
    };
}

},{}],"ktwDU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(numerals) {
    return function(value) {
        return value.replace(/[0-9]/g, function(i) {
            return numerals[+i];
        });
    };
}

},{}],"dcjA6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FormatSpecifier = FormatSpecifier;
exports.default = formatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
    var match;
    return new FormatSpecifier({
        fill: match[1],
        align: match[2],
        sign: match[3],
        symbol: match[4],
        zero: match[5],
        width: match[6],
        comma: match[7],
        precision: match[8] && match[8].slice(1),
        trim: match[9],
        type: match[10]
    });
}
formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof
function FormatSpecifier(specifier) {
    this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
    this.align = specifier.align === undefined ? ">" : specifier.align + "";
    this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === undefined ? undefined : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === undefined ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

},{}],"3xdtL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
    out: for(var n = s.length, i = 1, i0 = -1, i1; i < n; ++i)switch(s[i]){
        case ".":
            i0 = i1 = i;
            break;
        case "0":
            if (i0 === 0) i0 = i;
            i1 = i;
            break;
        default:
            if (!+s[i]) break out;
            if (i0 > 0) i0 = 0;
            break;
    }
    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

},{}],"jteNc":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("bcc91e3b4b1650e2").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _formatDecimal = _interopRequireDefault(require("5352158e67f93835"));
var _formatPrefixAuto = _interopRequireDefault(require("aa70cb3af3e9da7"));
var _formatRounded = _interopRequireDefault(require("132f953658e56ce3"));
var _default = exports.default = {
    "%": (x, p)=>(x * 100).toFixed(p),
    "b": (x)=>Math.round(x).toString(2),
    "c": (x)=>x + "",
    "d": _formatDecimal.default,
    "e": (x, p)=>x.toExponential(p),
    "f": (x, p)=>x.toFixed(p),
    "g": (x, p)=>x.toPrecision(p),
    "o": (x)=>Math.round(x).toString(8),
    "p": (x, p)=>(0, _formatRounded.default)(x * 100, p),
    "r": _formatRounded.default,
    "s": _formatPrefixAuto.default,
    "X": (x)=>Math.round(x).toString(16).toUpperCase(),
    "x": (x)=>Math.round(x).toString(16)
};

},{"bcc91e3b4b1650e2":"1P3rZ","5352158e67f93835":"jxSoX","aa70cb3af3e9da7":"lJpar","132f953658e56ce3":"kiMi7"}],"lJpar":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.prefixExponent = void 0;
var _formatDecimal = require("ced956c15739f54c");
var prefixExponent;
function _default(x, p) {
    var d = (0, _formatDecimal.formatDecimalParts)(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1], i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

},{"ced956c15739f54c":"jxSoX"}],"kiMi7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _formatDecimal = require("cfc6ec01db59372f");
function _default(x, p) {
    var d = (0, _formatDecimal.formatDecimalParts)(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

},{"cfc6ec01db59372f":"jxSoX"}],"i1i2s":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x) {
    return x;
}

},{}],"aCgcS":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("bb6eb232299f99cf").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("bef54d4b1d2934f9"));
function _default(step) {
    return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}

},{"bb6eb232299f99cf":"1P3rZ","bef54d4b1d2934f9":"hR4AB"}],"2LEew":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("443fe1dd9bdbba0f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("707184cb1f8f8a59"));
function _default(step, value) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}

},{"443fe1dd9bdbba0f":"1P3rZ","707184cb1f8f8a59":"hR4AB"}],"i4Gwk":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("453bde712c872a70").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("20e27f673e89db48"));
function _default(step, max) {
    step = Math.abs(step), max = Math.abs(max) - step;
    return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}

},{"453bde712c872a70":"1P3rZ","20e27f673e89db48":"hR4AB"}],"dnlDY":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d9ab2b63a684f465").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = log;
exports.loggish = loggish;
var _index = require("59a418993cfb341f");
var _index2 = require("51983de7610fe3b4");
var _nice = _interopRequireDefault(require("919338a49247ed84"));
var _continuous = require("acdabff1a0592119");
var _init = require("3afe677ef78af823");
function transformLog(x) {
    return Math.log(x);
}
function transformExp(x) {
    return Math.exp(x);
}
function transformLogn(x) {
    return -Math.log(-x);
}
function transformExpn(x) {
    return -Math.exp(-x);
}
function pow10(x) {
    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}
function powp(base) {
    return base === 10 ? pow10 : base === Math.E ? Math.exp : (x)=>Math.pow(base, x);
}
function logp(base) {
    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x)=>Math.log(x) / base);
}
function reflect(f) {
    return (x, k)=>-f(-x, k);
}
function loggish(transform) {
    const scale = transform(transformLog, transformExp);
    const domain = scale.domain;
    let base = 10;
    let logs;
    let pows;
    function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) {
            logs = reflect(logs), pows = reflect(pows);
            transform(transformLogn, transformExpn);
        } else transform(transformLog, transformExp);
        return scale;
    }
    scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
    };
    scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.ticks = (count)=>{
        const d = domain();
        let u = d[0];
        let v = d[d.length - 1];
        const r = v < u;
        if (r) [u, v] = [
            v,
            u
        ];
        let i = logs(u);
        let j = logs(v);
        let k;
        let t;
        const n = count == null ? 10 : +count;
        let z = [];
        if (!(base % 1) && j - i < n) {
            i = Math.floor(i), j = Math.ceil(j);
            if (u > 0) for(; i <= j; ++i)for(k = 1; k < base; ++k){
                t = i < 0 ? k / pows(-i) : k * pows(i);
                if (t < u) continue;
                if (t > v) break;
                z.push(t);
            }
            else for(; i <= j; ++i)for(k = base - 1; k >= 1; --k){
                t = i > 0 ? k / pows(-i) : k * pows(i);
                if (t < u) continue;
                if (t > v) break;
                z.push(t);
            }
            if (z.length * 2 < n) z = (0, _index.ticks)(u, v, n);
        } else z = (0, _index.ticks)(i, j, Math.min(j - i, n)).map(pows);
        return r ? z.reverse() : z;
    };
    scale.tickFormat = (count, specifier)=>{
        if (count == null) count = 10;
        if (specifier == null) specifier = base === 10 ? "s" : ",";
        if (typeof specifier !== "function") {
            if (!(base % 1) && (specifier = (0, _index2.formatSpecifier)(specifier)).precision == null) specifier.trim = true;
            specifier = (0, _index2.format)(specifier);
        }
        if (count === Infinity) return specifier;
        const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
        return (d)=>{
            let i = d / pows(Math.round(logs(d)));
            if (i * base < base - 0.5) i *= base;
            return i <= k ? specifier(d) : "";
        };
    };
    scale.nice = ()=>{
        return domain((0, _nice.default)(domain(), {
            floor: (x)=>pows(Math.floor(logs(x))),
            ceil: (x)=>pows(Math.ceil(logs(x)))
        }));
    };
    return scale;
}
function log() {
    const scale = loggish((0, _continuous.transformer)()).domain([
        1,
        10
    ]);
    scale.copy = ()=>(0, _continuous.copy)(scale, log()).base(scale.base());
    _init.initRange.apply(scale, arguments);
    return scale;
}

},{"d9ab2b63a684f465":"1P3rZ","59a418993cfb341f":"idFA4","51983de7610fe3b4":"8Anah","919338a49247ed84":"kDfmH","acdabff1a0592119":"6K7X5","3afe677ef78af823":"el2ZB"}],"kDfmH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nice;
function nice(domain, interval) {
    domain = domain.slice();
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
    if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
    }
    domain[i0] = interval.floor(x0);
    domain[i1] = interval.ceil(x1);
    return domain;
}

},{}],"e0aWM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = symlog;
exports.symlogish = symlogish;
var _linear = require("329b4b160835afcf");
var _continuous = require("191c1ee37834b5de");
var _init = require("a2c9f09fe7979ab7");
function transformSymlog(c) {
    return function(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / c));
    };
}
function transformSymexp(c) {
    return function(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
    };
}
function symlogish(transform) {
    var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));
    scale.constant = function(_) {
        return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
    };
    return (0, _linear.linearish)(scale);
}
function symlog() {
    var scale = symlogish((0, _continuous.transformer)());
    scale.copy = function() {
        return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
    };
    return _init.initRange.apply(scale, arguments);
}

},{"329b4b160835afcf":"gd5hp","191c1ee37834b5de":"6K7X5","a2c9f09fe7979ab7":"el2ZB"}],"aMILr":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = pow;
exports.powish = powish;
exports.sqrt = sqrt;
var _linear = require("f47bcb4889372bfd");
var _continuous = require("6d29fdd17a0a2a92");
var _init = require("ddc3002388421e75");
function transformPow(exponent) {
    return function(x) {
        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
    };
}
function transformSqrt(x) {
    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}
function transformSquare(x) {
    return x < 0 ? -x * x : x * x;
}
function powish(transform) {
    var scale = transform(_continuous.identity, _continuous.identity), exponent = 1;
    function rescale() {
        return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
    }
    scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, rescale()) : exponent;
    };
    return (0, _linear.linearish)(scale);
}
function pow() {
    var scale = powish((0, _continuous.transformer)());
    scale.copy = function() {
        return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
    };
    _init.initRange.apply(scale, arguments);
    return scale;
}
function sqrt() {
    return pow.apply(null, arguments).exponent(0.5);
}

},{"f47bcb4889372bfd":"gd5hp","6d29fdd17a0a2a92":"6K7X5","ddc3002388421e75":"el2ZB"}],"5f9YC":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("60b97099b5a332a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = radial;
var _continuous = _interopRequireDefault(require("2eed121cc9910e30"));
var _init = require("d3da2f161aae43e8");
var _linear = require("aad5cf12a3467108");
var _number = _interopRequireDefault(require("599facfa7dcd9968"));
function square(x) {
    return Math.sign(x) * x * x;
}
function unsquare(x) {
    return Math.sign(x) * Math.sqrt(Math.abs(x));
}
function radial() {
    var squared = (0, _continuous.default)(), range = [
        0,
        1
    ], round = false, unknown;
    function scale(x) {
        var y = unsquare(squared(x));
        return isNaN(y) ? unknown : round ? Math.round(y) : y;
    }
    scale.invert = function(y) {
        return squared.invert(square(y));
    };
    scale.domain = function(_) {
        return arguments.length ? (squared.domain(_), scale) : squared.domain();
    };
    scale.range = function(_) {
        return arguments.length ? (squared.range((range = Array.from(_, _number.default)).map(square)), scale) : range.slice();
    };
    scale.rangeRound = function(_) {
        return scale.range(_).round(true);
    };
    scale.round = function(_) {
        return arguments.length ? (round = !!_, scale) : round;
    };
    scale.clamp = function(_) {
        return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return radial(squared.domain(), range).round(round).clamp(squared.clamp()).unknown(unknown);
    };
    _init.initRange.apply(scale, arguments);
    return (0, _linear.linearish)(scale);
}

},{"60b97099b5a332a":"1P3rZ","2eed121cc9910e30":"6K7X5","d3da2f161aae43e8":"el2ZB","aad5cf12a3467108":"gd5hp","599facfa7dcd9968":"h89s5"}],"iiWjd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantile;
var _index = require("99fa0ff0b8d08dd9");
var _init = require("f927f355e9db6522");
function quantile() {
    var domain = [], range = [], thresholds = [], unknown;
    function rescale() {
        var i = 0, n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while(++i < n)thresholds[i - 1] = (0, _index.quantileSorted)(domain, i / n);
        return scale;
    }
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : range[(0, _index.bisect)(thresholds, x)];
    }
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [
            NaN,
            NaN
        ] : [
            i > 0 ? thresholds[i - 1] : domain[0],
            i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
        ];
    };
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _)if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return rescale();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.quantiles = function() {
        return thresholds.slice();
    };
    scale.copy = function() {
        return quantile().domain(domain).range(range).unknown(unknown);
    };
    return _init.initRange.apply(scale, arguments);
}

},{"99fa0ff0b8d08dd9":"idFA4","f927f355e9db6522":"el2ZB"}],"dLV01":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantize;
var _index = require("778350a502bf1fec");
var _linear = require("cc20e74234715534");
var _init = require("f805c5047a29bd1f");
function quantize() {
    var x0 = 0, x1 = 1, n = 1, domain = [
        0.5
    ], range = [
        0,
        1
    ], unknown;
    function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
    }
    function rescale() {
        var i = -1;
        domain = new Array(n);
        while(++i < n)domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [
            x0,
            x1
        ];
    };
    scale.range = function(_) {
        return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
    };
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [
            NaN,
            NaN
        ] : i < 1 ? [
            x0,
            domain[0]
        ] : i >= n ? [
            domain[n - 1],
            x1
        ] : [
            domain[i - 1],
            domain[i]
        ];
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : scale;
    };
    scale.thresholds = function() {
        return domain.slice();
    };
    scale.copy = function() {
        return quantize().domain([
            x0,
            x1
        ]).range(range).unknown(unknown);
    };
    return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}

},{"778350a502bf1fec":"idFA4","cc20e74234715534":"gd5hp","f805c5047a29bd1f":"el2ZB"}],"ezg7i":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = threshold;
var _index = require("df40e55be5f1839d");
var _init = require("c55c9033825f065c");
function threshold() {
    var domain = [
        0.5
    ], range = [
        0,
        1
    ], unknown, n = 1;
    function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
    }
    scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
    };
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [
            domain[i - 1],
            domain[i]
        ];
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return threshold().domain(domain).range(range).unknown(unknown);
    };
    return _init.initRange.apply(scale, arguments);
}

},{"df40e55be5f1839d":"idFA4","c55c9033825f065c":"el2ZB"}],"foPfD":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("12df9ffcafb35ef5").default;
var _interopRequireWildcard = require("2b69b86c370d0dab").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.calendar = calendar;
exports.default = time;
var _index = require("dc595c3db0dfb513");
var _index2 = require("e79b9caf87aac1ce");
var _continuous = _interopRequireWildcard(require("10a8c6f5458e7d77"));
var _init = require("2a7ead2cd37ebe82");
var _nice = _interopRequireDefault(require("6be169a4ece08ded"));
function date(t) {
    return new Date(t);
}
function number(t) {
    return t instanceof Date ? +t : +new Date(+t);
}
function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
    var scale = (0, _continuous.default)(), invert = scale.invert, domain = scale.domain;
    var formatMillisecond = format(".%L"), formatSecond = format(":%S"), formatMinute = format("%I:%M"), formatHour = format("%I %p"), formatDay = format("%a %d"), formatWeek = format("%b %d"), formatMonth = format("%B"), formatYear = format("%Y");
    function tickFormat(date) {
        return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
    }
    scale.invert = function(y) {
        return new Date(invert(y));
    };
    scale.domain = function(_) {
        return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
    };
    scale.ticks = function(interval) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
    };
    scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
    };
    scale.nice = function(interval) {
        var d = domain();
        if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
        return interval ? domain((0, _nice.default)(d, interval)) : scale;
    };
    scale.copy = function() {
        return (0, _continuous.copy)(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
    };
    return scale;
}
function time() {
    return _init.initRange.apply(calendar(_index.timeTicks, _index.timeTickInterval, _index.timeYear, _index.timeMonth, _index.timeWeek, _index.timeDay, _index.timeHour, _index.timeMinute, _index.timeSecond, _index2.timeFormat).domain([
        new Date(2000, 0, 1),
        new Date(2000, 0, 2)
    ]), arguments);
}

},{"12df9ffcafb35ef5":"1P3rZ","2b69b86c370d0dab":"6TFJp","dc595c3db0dfb513":"4aaIL","e79b9caf87aac1ce":"lLXth","10a8c6f5458e7d77":"6K7X5","2a7ead2cd37ebe82":"el2ZB","6be169a4ece08ded":"kDfmH"}],"4aaIL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "timeDay", {
    enumerable: true,
    get: function() {
        return _day.timeDay;
    }
});
Object.defineProperty(exports, "timeDays", {
    enumerable: true,
    get: function() {
        return _day.timeDays;
    }
});
Object.defineProperty(exports, "timeFriday", {
    enumerable: true,
    get: function() {
        return _week.timeFriday;
    }
});
Object.defineProperty(exports, "timeFridays", {
    enumerable: true,
    get: function() {
        return _week.timeFridays;
    }
});
Object.defineProperty(exports, "timeHour", {
    enumerable: true,
    get: function() {
        return _hour.timeHour;
    }
});
Object.defineProperty(exports, "timeHours", {
    enumerable: true,
    get: function() {
        return _hour.timeHours;
    }
});
Object.defineProperty(exports, "timeInterval", {
    enumerable: true,
    get: function() {
        return _interval.timeInterval;
    }
});
Object.defineProperty(exports, "timeMillisecond", {
    enumerable: true,
    get: function() {
        return _millisecond.millisecond;
    }
});
Object.defineProperty(exports, "timeMilliseconds", {
    enumerable: true,
    get: function() {
        return _millisecond.milliseconds;
    }
});
Object.defineProperty(exports, "timeMinute", {
    enumerable: true,
    get: function() {
        return _minute.timeMinute;
    }
});
Object.defineProperty(exports, "timeMinutes", {
    enumerable: true,
    get: function() {
        return _minute.timeMinutes;
    }
});
Object.defineProperty(exports, "timeMonday", {
    enumerable: true,
    get: function() {
        return _week.timeMonday;
    }
});
Object.defineProperty(exports, "timeMondays", {
    enumerable: true,
    get: function() {
        return _week.timeMondays;
    }
});
Object.defineProperty(exports, "timeMonth", {
    enumerable: true,
    get: function() {
        return _month.timeMonth;
    }
});
Object.defineProperty(exports, "timeMonths", {
    enumerable: true,
    get: function() {
        return _month.timeMonths;
    }
});
Object.defineProperty(exports, "timeSaturday", {
    enumerable: true,
    get: function() {
        return _week.timeSaturday;
    }
});
Object.defineProperty(exports, "timeSaturdays", {
    enumerable: true,
    get: function() {
        return _week.timeSaturdays;
    }
});
Object.defineProperty(exports, "timeSecond", {
    enumerable: true,
    get: function() {
        return _second.second;
    }
});
Object.defineProperty(exports, "timeSeconds", {
    enumerable: true,
    get: function() {
        return _second.seconds;
    }
});
Object.defineProperty(exports, "timeSunday", {
    enumerable: true,
    get: function() {
        return _week.timeSunday;
    }
});
Object.defineProperty(exports, "timeSundays", {
    enumerable: true,
    get: function() {
        return _week.timeSundays;
    }
});
Object.defineProperty(exports, "timeThursday", {
    enumerable: true,
    get: function() {
        return _week.timeThursday;
    }
});
Object.defineProperty(exports, "timeThursdays", {
    enumerable: true,
    get: function() {
        return _week.timeThursdays;
    }
});
Object.defineProperty(exports, "timeTickInterval", {
    enumerable: true,
    get: function() {
        return _ticks.timeTickInterval;
    }
});
Object.defineProperty(exports, "timeTicks", {
    enumerable: true,
    get: function() {
        return _ticks.timeTicks;
    }
});
Object.defineProperty(exports, "timeTuesday", {
    enumerable: true,
    get: function() {
        return _week.timeTuesday;
    }
});
Object.defineProperty(exports, "timeTuesdays", {
    enumerable: true,
    get: function() {
        return _week.timeTuesdays;
    }
});
Object.defineProperty(exports, "timeWednesday", {
    enumerable: true,
    get: function() {
        return _week.timeWednesday;
    }
});
Object.defineProperty(exports, "timeWednesdays", {
    enumerable: true,
    get: function() {
        return _week.timeWednesdays;
    }
});
Object.defineProperty(exports, "timeWeek", {
    enumerable: true,
    get: function() {
        return _week.timeSunday;
    }
});
Object.defineProperty(exports, "timeWeeks", {
    enumerable: true,
    get: function() {
        return _week.timeSundays;
    }
});
Object.defineProperty(exports, "timeYear", {
    enumerable: true,
    get: function() {
        return _year.timeYear;
    }
});
Object.defineProperty(exports, "timeYears", {
    enumerable: true,
    get: function() {
        return _year.timeYears;
    }
});
Object.defineProperty(exports, "unixDay", {
    enumerable: true,
    get: function() {
        return _day.unixDay;
    }
});
Object.defineProperty(exports, "unixDays", {
    enumerable: true,
    get: function() {
        return _day.unixDays;
    }
});
Object.defineProperty(exports, "utcDay", {
    enumerable: true,
    get: function() {
        return _day.utcDay;
    }
});
Object.defineProperty(exports, "utcDays", {
    enumerable: true,
    get: function() {
        return _day.utcDays;
    }
});
Object.defineProperty(exports, "utcFriday", {
    enumerable: true,
    get: function() {
        return _week.utcFriday;
    }
});
Object.defineProperty(exports, "utcFridays", {
    enumerable: true,
    get: function() {
        return _week.utcFridays;
    }
});
Object.defineProperty(exports, "utcHour", {
    enumerable: true,
    get: function() {
        return _hour.utcHour;
    }
});
Object.defineProperty(exports, "utcHours", {
    enumerable: true,
    get: function() {
        return _hour.utcHours;
    }
});
Object.defineProperty(exports, "utcMillisecond", {
    enumerable: true,
    get: function() {
        return _millisecond.millisecond;
    }
});
Object.defineProperty(exports, "utcMilliseconds", {
    enumerable: true,
    get: function() {
        return _millisecond.milliseconds;
    }
});
Object.defineProperty(exports, "utcMinute", {
    enumerable: true,
    get: function() {
        return _minute.utcMinute;
    }
});
Object.defineProperty(exports, "utcMinutes", {
    enumerable: true,
    get: function() {
        return _minute.utcMinutes;
    }
});
Object.defineProperty(exports, "utcMonday", {
    enumerable: true,
    get: function() {
        return _week.utcMonday;
    }
});
Object.defineProperty(exports, "utcMondays", {
    enumerable: true,
    get: function() {
        return _week.utcMondays;
    }
});
Object.defineProperty(exports, "utcMonth", {
    enumerable: true,
    get: function() {
        return _month.utcMonth;
    }
});
Object.defineProperty(exports, "utcMonths", {
    enumerable: true,
    get: function() {
        return _month.utcMonths;
    }
});
Object.defineProperty(exports, "utcSaturday", {
    enumerable: true,
    get: function() {
        return _week.utcSaturday;
    }
});
Object.defineProperty(exports, "utcSaturdays", {
    enumerable: true,
    get: function() {
        return _week.utcSaturdays;
    }
});
Object.defineProperty(exports, "utcSecond", {
    enumerable: true,
    get: function() {
        return _second.second;
    }
});
Object.defineProperty(exports, "utcSeconds", {
    enumerable: true,
    get: function() {
        return _second.seconds;
    }
});
Object.defineProperty(exports, "utcSunday", {
    enumerable: true,
    get: function() {
        return _week.utcSunday;
    }
});
Object.defineProperty(exports, "utcSundays", {
    enumerable: true,
    get: function() {
        return _week.utcSundays;
    }
});
Object.defineProperty(exports, "utcThursday", {
    enumerable: true,
    get: function() {
        return _week.utcThursday;
    }
});
Object.defineProperty(exports, "utcThursdays", {
    enumerable: true,
    get: function() {
        return _week.utcThursdays;
    }
});
Object.defineProperty(exports, "utcTickInterval", {
    enumerable: true,
    get: function() {
        return _ticks.utcTickInterval;
    }
});
Object.defineProperty(exports, "utcTicks", {
    enumerable: true,
    get: function() {
        return _ticks.utcTicks;
    }
});
Object.defineProperty(exports, "utcTuesday", {
    enumerable: true,
    get: function() {
        return _week.utcTuesday;
    }
});
Object.defineProperty(exports, "utcTuesdays", {
    enumerable: true,
    get: function() {
        return _week.utcTuesdays;
    }
});
Object.defineProperty(exports, "utcWednesday", {
    enumerable: true,
    get: function() {
        return _week.utcWednesday;
    }
});
Object.defineProperty(exports, "utcWednesdays", {
    enumerable: true,
    get: function() {
        return _week.utcWednesdays;
    }
});
Object.defineProperty(exports, "utcWeek", {
    enumerable: true,
    get: function() {
        return _week.utcSunday;
    }
});
Object.defineProperty(exports, "utcWeeks", {
    enumerable: true,
    get: function() {
        return _week.utcSundays;
    }
});
Object.defineProperty(exports, "utcYear", {
    enumerable: true,
    get: function() {
        return _year.utcYear;
    }
});
Object.defineProperty(exports, "utcYears", {
    enumerable: true,
    get: function() {
        return _year.utcYears;
    }
});
var _interval = require("e61bf751832673e7");
var _millisecond = require("b1d0df14943dbef0");
var _second = require("5c18cbbb92b8469f");
var _minute = require("431c822d61255113");
var _hour = require("da1891557a480183");
var _day = require("b2bbf1754e1923c9");
var _week = require("5540bf8c70489c87");
var _month = require("52d74ff446907945");
var _year = require("1e13d5dc9076054");
var _ticks = require("34ef6e5f4879e6ef");

},{"e61bf751832673e7":"aoXmy","b1d0df14943dbef0":"2vq9j","5c18cbbb92b8469f":"eJK4x","431c822d61255113":"4YUpg","da1891557a480183":"e98EV","b2bbf1754e1923c9":"lSwSE","5540bf8c70489c87":"eSnug","52d74ff446907945":"a0h2I","1e13d5dc9076054":"lNOYf","34ef6e5f4879e6ef":"4cA99"}],"aoXmy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.timeInterval = timeInterval;
const t0 = new Date(), t1 = new Date();
function timeInterval(floori, offseti, count, field) {
    function interval(date) {
        return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
    }
    interval.floor = (date)=>{
        return floori(date = new Date(+date)), date;
    };
    interval.ceil = (date)=>{
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
    };
    interval.round = (date)=>{
        const d0 = interval(date), d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
    };
    interval.offset = (date, step)=>{
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
    };
    interval.range = (start, stop, step)=>{
        const range = [];
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
        let previous;
        do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
        while (previous < start && start < stop);
        return range;
    };
    interval.filter = (test)=>{
        return timeInterval((date)=>{
            if (date >= date) while(floori(date), !test(date))date.setTime(date - 1);
        }, (date, step)=>{
            if (date >= date) {
                if (step < 0) while(++step <= 0){
                    while(offseti(date, -1), !test(date)); // eslint-disable-line no-empty
                }
                else while(--step >= 0){
                    while(offseti(date, 1), !test(date)); // eslint-disable-line no-empty
                }
            }
        });
    };
    if (count) {
        interval.count = (start, end)=>{
            t0.setTime(+start), t1.setTime(+end);
            floori(t0), floori(t1);
            return Math.floor(count(t0, t1));
        };
        interval.every = (step)=>{
            step = Math.floor(step);
            return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? (d)=>field(d) % step === 0 : (d)=>interval.count(0, d) % step === 0);
        };
    }
    return interval;
}

},{}],"2vq9j":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.milliseconds = exports.millisecond = void 0;
var _interval = require("54cf06661effa87d");
const millisecond = exports.millisecond = (0, _interval.timeInterval)(()=>{
// noop
}, (date, step)=>{
    date.setTime(+date + step);
}, (start, end)=>{
    return end - start;
});
// An optimized implementation for this simple case.
millisecond.every = (k)=>{
    k = Math.floor(k);
    if (!isFinite(k) || !(k > 0)) return null;
    if (!(k > 1)) return millisecond;
    return (0, _interval.timeInterval)((date)=>{
        date.setTime(Math.floor(date / k) * k);
    }, (date, step)=>{
        date.setTime(+date + step * k);
    }, (start, end)=>{
        return (end - start) / k;
    });
};
const milliseconds = exports.milliseconds = millisecond.range;

},{"54cf06661effa87d":"aoXmy"}],"eJK4x":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seconds = exports.second = void 0;
var _interval = require("e3a9f3efd70f3df9");
var _duration = require("4133f176b11568ce");
const second = exports.second = (0, _interval.timeInterval)((date)=>{
    date.setTime(date - date.getMilliseconds());
}, (date, step)=>{
    date.setTime(+date + step * _duration.durationSecond);
}, (start, end)=>{
    return (end - start) / _duration.durationSecond;
}, (date)=>{
    return date.getUTCSeconds();
});
const seconds = exports.seconds = second.range;

},{"e3a9f3efd70f3df9":"aoXmy","4133f176b11568ce":"9zvvA"}],"9zvvA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.durationYear = exports.durationWeek = exports.durationSecond = exports.durationMonth = exports.durationMinute = exports.durationHour = exports.durationDay = void 0;
const durationSecond = exports.durationSecond = 1000;
const durationMinute = exports.durationMinute = durationSecond * 60;
const durationHour = exports.durationHour = durationMinute * 60;
const durationDay = exports.durationDay = durationHour * 24;
const durationWeek = exports.durationWeek = durationDay * 7;
const durationMonth = exports.durationMonth = durationDay * 30;
const durationYear = exports.durationYear = durationDay * 365;

},{}],"4YUpg":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcMinutes = exports.utcMinute = exports.timeMinutes = exports.timeMinute = void 0;
var _interval = require("495b63845be4a86d");
var _duration = require("3caaca693f2420ac");
const timeMinute = exports.timeMinute = (0, _interval.timeInterval)((date)=>{
    date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, (date, step)=>{
    date.setTime(+date + step * _duration.durationMinute);
}, (start, end)=>{
    return (end - start) / _duration.durationMinute;
}, (date)=>{
    return date.getMinutes();
});
const timeMinutes = exports.timeMinutes = timeMinute.range;
const utcMinute = exports.utcMinute = (0, _interval.timeInterval)((date)=>{
    date.setUTCSeconds(0, 0);
}, (date, step)=>{
    date.setTime(+date + step * _duration.durationMinute);
}, (start, end)=>{
    return (end - start) / _duration.durationMinute;
}, (date)=>{
    return date.getUTCMinutes();
});
const utcMinutes = exports.utcMinutes = utcMinute.range;

},{"495b63845be4a86d":"aoXmy","3caaca693f2420ac":"9zvvA"}],"e98EV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcHours = exports.utcHour = exports.timeHours = exports.timeHour = void 0;
var _interval = require("570733f8ac441572");
var _duration = require("c20eea4553ff9010");
const timeHour = exports.timeHour = (0, _interval.timeInterval)((date)=>{
    date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, (date, step)=>{
    date.setTime(+date + step * _duration.durationHour);
}, (start, end)=>{
    return (end - start) / _duration.durationHour;
}, (date)=>{
    return date.getHours();
});
const timeHours = exports.timeHours = timeHour.range;
const utcHour = exports.utcHour = (0, _interval.timeInterval)((date)=>{
    date.setUTCMinutes(0, 0, 0);
}, (date, step)=>{
    date.setTime(+date + step * _duration.durationHour);
}, (start, end)=>{
    return (end - start) / _duration.durationHour;
}, (date)=>{
    return date.getUTCHours();
});
const utcHours = exports.utcHours = utcHour.range;

},{"570733f8ac441572":"aoXmy","c20eea4553ff9010":"9zvvA"}],"lSwSE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcDays = exports.utcDay = exports.unixDays = exports.unixDay = exports.timeDays = exports.timeDay = void 0;
var _interval = require("17497f2903330202");
var _duration = require("cd482260859684eb");
const timeDay = exports.timeDay = (0, _interval.timeInterval)((date)=>date.setHours(0, 0, 0, 0), (date, step)=>date.setDate(date.getDate() + step), (start, end)=>(end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay, (date)=>date.getDate() - 1);
const timeDays = exports.timeDays = timeDay.range;
const utcDay = exports.utcDay = (0, _interval.timeInterval)((date)=>{
    date.setUTCHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setUTCDate(date.getUTCDate() + step);
}, (start, end)=>{
    return (end - start) / _duration.durationDay;
}, (date)=>{
    return date.getUTCDate() - 1;
});
const utcDays = exports.utcDays = utcDay.range;
const unixDay = exports.unixDay = (0, _interval.timeInterval)((date)=>{
    date.setUTCHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setUTCDate(date.getUTCDate() + step);
}, (start, end)=>{
    return (end - start) / _duration.durationDay;
}, (date)=>{
    return Math.floor(date / _duration.durationDay);
});
const unixDays = exports.unixDays = unixDay.range;

},{"17497f2903330202":"aoXmy","cd482260859684eb":"9zvvA"}],"eSnug":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcWednesdays = exports.utcWednesday = exports.utcTuesdays = exports.utcTuesday = exports.utcThursdays = exports.utcThursday = exports.utcSundays = exports.utcSunday = exports.utcSaturdays = exports.utcSaturday = exports.utcMondays = exports.utcMonday = exports.utcFridays = exports.utcFriday = exports.timeWednesdays = exports.timeWednesday = exports.timeTuesdays = exports.timeTuesday = exports.timeThursdays = exports.timeThursday = exports.timeSundays = exports.timeSunday = exports.timeSaturdays = exports.timeSaturday = exports.timeMondays = exports.timeMonday = exports.timeFridays = exports.timeFriday = void 0;
var _interval = require("872374c493a07b56");
var _duration = require("f579c0e98d5b2c26");
function timeWeekday(i) {
    return (0, _interval.timeInterval)((date)=>{
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
    }, (date, step)=>{
        date.setDate(date.getDate() + step * 7);
    }, (start, end)=>{
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
    });
}
const timeSunday = exports.timeSunday = timeWeekday(0);
const timeMonday = exports.timeMonday = timeWeekday(1);
const timeTuesday = exports.timeTuesday = timeWeekday(2);
const timeWednesday = exports.timeWednesday = timeWeekday(3);
const timeThursday = exports.timeThursday = timeWeekday(4);
const timeFriday = exports.timeFriday = timeWeekday(5);
const timeSaturday = exports.timeSaturday = timeWeekday(6);
const timeSundays = exports.timeSundays = timeSunday.range;
const timeMondays = exports.timeMondays = timeMonday.range;
const timeTuesdays = exports.timeTuesdays = timeTuesday.range;
const timeWednesdays = exports.timeWednesdays = timeWednesday.range;
const timeThursdays = exports.timeThursdays = timeThursday.range;
const timeFridays = exports.timeFridays = timeFriday.range;
const timeSaturdays = exports.timeSaturdays = timeSaturday.range;
function utcWeekday(i) {
    return (0, _interval.timeInterval)((date)=>{
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
    }, (date, step)=>{
        date.setUTCDate(date.getUTCDate() + step * 7);
    }, (start, end)=>{
        return (end - start) / _duration.durationWeek;
    });
}
const utcSunday = exports.utcSunday = utcWeekday(0);
const utcMonday = exports.utcMonday = utcWeekday(1);
const utcTuesday = exports.utcTuesday = utcWeekday(2);
const utcWednesday = exports.utcWednesday = utcWeekday(3);
const utcThursday = exports.utcThursday = utcWeekday(4);
const utcFriday = exports.utcFriday = utcWeekday(5);
const utcSaturday = exports.utcSaturday = utcWeekday(6);
const utcSundays = exports.utcSundays = utcSunday.range;
const utcMondays = exports.utcMondays = utcMonday.range;
const utcTuesdays = exports.utcTuesdays = utcTuesday.range;
const utcWednesdays = exports.utcWednesdays = utcWednesday.range;
const utcThursdays = exports.utcThursdays = utcThursday.range;
const utcFridays = exports.utcFridays = utcFriday.range;
const utcSaturdays = exports.utcSaturdays = utcSaturday.range;

},{"872374c493a07b56":"aoXmy","f579c0e98d5b2c26":"9zvvA"}],"a0h2I":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcMonths = exports.utcMonth = exports.timeMonths = exports.timeMonth = void 0;
var _interval = require("d25f768522684496");
const timeMonth = exports.timeMonth = (0, _interval.timeInterval)((date)=>{
    date.setDate(1);
    date.setHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setMonth(date.getMonth() + step);
}, (start, end)=>{
    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, (date)=>{
    return date.getMonth();
});
const timeMonths = exports.timeMonths = timeMonth.range;
const utcMonth = exports.utcMonth = (0, _interval.timeInterval)((date)=>{
    date.setUTCDate(1);
    date.setUTCHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setUTCMonth(date.getUTCMonth() + step);
}, (start, end)=>{
    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, (date)=>{
    return date.getUTCMonth();
});
const utcMonths = exports.utcMonths = utcMonth.range;

},{"d25f768522684496":"aoXmy"}],"lNOYf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcYears = exports.utcYear = exports.timeYears = exports.timeYear = void 0;
var _interval = require("526889c9d8b9170");
const timeYear = exports.timeYear = (0, _interval.timeInterval)((date)=>{
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setFullYear(date.getFullYear() + step);
}, (start, end)=>{
    return end.getFullYear() - start.getFullYear();
}, (date)=>{
    return date.getFullYear();
});
// An optimized implementation for this simple case.
timeYear.every = (k)=>{
    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.timeInterval)((date)=>{
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
    }, (date, step)=>{
        date.setFullYear(date.getFullYear() + step * k);
    });
};
const timeYears = exports.timeYears = timeYear.range;
const utcYear = exports.utcYear = (0, _interval.timeInterval)((date)=>{
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
}, (date, step)=>{
    date.setUTCFullYear(date.getUTCFullYear() + step);
}, (start, end)=>{
    return end.getUTCFullYear() - start.getUTCFullYear();
}, (date)=>{
    return date.getUTCFullYear();
});
// An optimized implementation for this simple case.
utcYear.every = (k)=>{
    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.timeInterval)((date)=>{
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
    }, (date, step)=>{
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
    });
};
const utcYears = exports.utcYears = utcYear.range;

},{"526889c9d8b9170":"aoXmy"}],"4cA99":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcTicks = exports.utcTickInterval = exports.timeTicks = exports.timeTickInterval = void 0;
var _index = require("bb535c99f100edcd");
var _duration = require("1811157f3e8f42c3");
var _millisecond = require("5ceddd02fc46c156");
var _second = require("7310d7ee42b3ed04");
var _minute = require("71a0fa9aafffed5e");
var _hour = require("4cdf2dedabb91506");
var _day = require("617985fc70be17a3");
var _week = require("f0c4febdbfc098c8");
var _month = require("721d72f83dbd1c8a");
var _year = require("b309130541484b52");
function ticker(year, month, week, day, hour, minute) {
    const tickIntervals = [
        [
            _second.second,
            1,
            _duration.durationSecond
        ],
        [
            _second.second,
            5,
            5 * _duration.durationSecond
        ],
        [
            _second.second,
            15,
            15 * _duration.durationSecond
        ],
        [
            _second.second,
            30,
            30 * _duration.durationSecond
        ],
        [
            minute,
            1,
            _duration.durationMinute
        ],
        [
            minute,
            5,
            5 * _duration.durationMinute
        ],
        [
            minute,
            15,
            15 * _duration.durationMinute
        ],
        [
            minute,
            30,
            30 * _duration.durationMinute
        ],
        [
            hour,
            1,
            _duration.durationHour
        ],
        [
            hour,
            3,
            3 * _duration.durationHour
        ],
        [
            hour,
            6,
            6 * _duration.durationHour
        ],
        [
            hour,
            12,
            12 * _duration.durationHour
        ],
        [
            day,
            1,
            _duration.durationDay
        ],
        [
            day,
            2,
            2 * _duration.durationDay
        ],
        [
            week,
            1,
            _duration.durationWeek
        ],
        [
            month,
            1,
            _duration.durationMonth
        ],
        [
            month,
            3,
            3 * _duration.durationMonth
        ],
        [
            year,
            1,
            _duration.durationYear
        ]
    ];
    function ticks(start, stop, count) {
        const reverse = stop < start;
        if (reverse) [start, stop] = [
            stop,
            start
        ];
        const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
        const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
        return reverse ? ticks.reverse() : ticks;
    }
    function tickInterval(start, stop, count) {
        const target = Math.abs(stop - start) / count;
        const i = (0, _index.bisector)(([, , step])=>step).right(tickIntervals, target);
        if (i === tickIntervals.length) return year.every((0, _index.tickStep)(start / _duration.durationYear, stop / _duration.durationYear, count));
        if (i === 0) return _millisecond.millisecond.every(Math.max((0, _index.tickStep)(start, stop, count), 1));
        const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        return t.every(step);
    }
    return [
        ticks,
        tickInterval
    ];
}
const [utcTicks, utcTickInterval] = ticker(_year.utcYear, _month.utcMonth, _week.utcSunday, _day.unixDay, _hour.utcHour, _minute.utcMinute);
exports.utcTickInterval = utcTickInterval;
exports.utcTicks = utcTicks;
const [timeTicks, timeTickInterval] = ticker(_year.timeYear, _month.timeMonth, _week.timeSunday, _day.timeDay, _hour.timeHour, _minute.timeMinute);
exports.timeTickInterval = timeTickInterval;
exports.timeTicks = timeTicks;

},{"bb535c99f100edcd":"idFA4","1811157f3e8f42c3":"9zvvA","5ceddd02fc46c156":"2vq9j","7310d7ee42b3ed04":"eJK4x","71a0fa9aafffed5e":"4YUpg","4cdf2dedabb91506":"e98EV","617985fc70be17a3":"lSwSE","f0c4febdbfc098c8":"eSnug","721d72f83dbd1c8a":"a0h2I","b309130541484b52":"lNOYf"}],"lLXth":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("97628ccf9850d121").default;
var _interopRequireWildcard = require("1cd2d46a28cc1dd4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isoFormat", {
    enumerable: true,
    get: function() {
        return _isoFormat.default;
    }
});
Object.defineProperty(exports, "isoParse", {
    enumerable: true,
    get: function() {
        return _isoParse.default;
    }
});
Object.defineProperty(exports, "timeFormat", {
    enumerable: true,
    get: function() {
        return _defaultLocale.timeFormat;
    }
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
    enumerable: true,
    get: function() {
        return _defaultLocale.default;
    }
});
Object.defineProperty(exports, "timeFormatLocale", {
    enumerable: true,
    get: function() {
        return _locale.default;
    }
});
Object.defineProperty(exports, "timeParse", {
    enumerable: true,
    get: function() {
        return _defaultLocale.timeParse;
    }
});
Object.defineProperty(exports, "utcFormat", {
    enumerable: true,
    get: function() {
        return _defaultLocale.utcFormat;
    }
});
Object.defineProperty(exports, "utcParse", {
    enumerable: true,
    get: function() {
        return _defaultLocale.utcParse;
    }
});
var _defaultLocale = _interopRequireWildcard(require("a520411cd2649c19"));
var _locale = _interopRequireDefault(require("188281aa80852860"));
var _isoFormat = _interopRequireDefault(require("9b17dd520d120002"));
var _isoParse = _interopRequireDefault(require("a2407dc9e741d0c4"));

},{"97628ccf9850d121":"1P3rZ","1cd2d46a28cc1dd4":"6TFJp","a520411cd2649c19":"k6Hxn","188281aa80852860":"dMsOp","9b17dd520d120002":"dolw0","a2407dc9e741d0c4":"jCHpc"}],"k6Hxn":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8a5a1280aa4da657").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;
var _locale = _interopRequireDefault(require("fb18c1b968dd49bf"));
var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale({
    dateTime: "%x, %X",
    date: "%-m/%-d/%Y",
    time: "%-I:%M:%S %p",
    periods: [
        "AM",
        "PM"
    ],
    days: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
    ],
    shortDays: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
    ],
    months: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    ],
    shortMonths: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
    ]
});
function defaultLocale(definition) {
    locale = (0, _locale.default)(definition);
    exports.timeFormat = timeFormat = locale.format;
    exports.timeParse = timeParse = locale.parse;
    exports.utcFormat = utcFormat = locale.utcFormat;
    exports.utcParse = utcParse = locale.utcParse;
    return locale;
}

},{"8a5a1280aa4da657":"1P3rZ","fb18c1b968dd49bf":"dMsOp"}],"dMsOp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = formatLocale;
var _index = require("9e23d29ed683bf24");
function localDate(d) {
    if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
    }
    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}
function utcDate(d) {
    if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
    }
    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}
function newDate(y, m, d) {
    return {
        y: y,
        m: m,
        d: d,
        H: 0,
        M: 0,
        S: 0,
        L: 0
    };
}
function formatLocale(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_weekdays = locale.days, locale_shortWeekdays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
    var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "g": formatYearISO,
        "G": formatFullYearISO,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "q": formatQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
    };
    var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "g": formatUTCYearISO,
        "G": formatUTCFullYearISO,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "q": formatUTCQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
    };
    var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "g": parseYear,
        "G": parseFullYear,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "q": parseQuarter,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
    };
    // These recursive directive definitions must be deferred.
    formats.x = newFormat(locale_date, formats);
    formats.X = newFormat(locale_time, formats);
    formats.c = newFormat(locale_dateTime, formats);
    utcFormats.x = newFormat(locale_date, utcFormats);
    utcFormats.X = newFormat(locale_time, utcFormats);
    utcFormats.c = newFormat(locale_dateTime, utcFormats);
    function newFormat(specifier, formats) {
        return function(date) {
            var string = [], i = -1, j = 0, n = specifier.length, c, pad, format;
            if (!(date instanceof Date)) date = new Date(+date);
            while(++i < n)if (specifier.charCodeAt(i) === 37) {
                string.push(specifier.slice(j, i));
                if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
                else pad = c === "e" ? " " : "0";
                if (format = formats[c]) c = format(date, pad);
                string.push(c);
                j = i + 1;
            }
            string.push(specifier.slice(j, i));
            return string.join("");
        };
    }
    function newParse(specifier, Z) {
        return function(string) {
            var d = newDate(1900, undefined, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day;
            if (i != string.length) return null;
            // If a UNIX timestamp is specified, return it.
            if ("Q" in d) return new Date(d.Q);
            if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));
            // If this is utcParse, never use the local timezone.
            if (Z && !("Z" in d)) d.Z = 0;
            // The am-pm flag is 0 for AM, and 1 for PM.
            if ("p" in d) d.H = d.H % 12 + d.p * 12;
            // If the month was not specified, inherit from the quarter.
            if (d.m === undefined) d.m = "q" in d ? d.q : 0;
            // Convert day-of-week and week-of-year to day-of-year.
            if ("V" in d) {
                if (d.V < 1 || d.V > 53) return null;
                if (!("w" in d)) d.w = 1;
                if ("Z" in d) {
                    week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
                    week = day > 4 || day === 0 ? _index.utcMonday.ceil(week) : (0, _index.utcMonday)(week);
                    week = _index.utcDay.offset(week, (d.V - 1) * 7);
                    d.y = week.getUTCFullYear();
                    d.m = week.getUTCMonth();
                    d.d = week.getUTCDate() + (d.w + 6) % 7;
                } else {
                    week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
                    week = day > 4 || day === 0 ? _index.timeMonday.ceil(week) : (0, _index.timeMonday)(week);
                    week = _index.timeDay.offset(week, (d.V - 1) * 7);
                    d.y = week.getFullYear();
                    d.m = week.getMonth();
                    d.d = week.getDate() + (d.w + 6) % 7;
                }
            } else if ("W" in d || "U" in d) {
                if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
                day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
                d.m = 0;
                d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
            }
            // If a time zone is specified, all fields are interpreted as UTC and then
            // offset according to the specified time zone.
            if ("Z" in d) {
                d.H += d.Z / 100 | 0;
                d.M += d.Z % 100;
                return utcDate(d);
            }
            // Otherwise, all fields are in local time.
            return localDate(d);
        };
    }
    function parseSpecifier(d, specifier, string, j) {
        var i = 0, n = specifier.length, m = string.length, c, parse;
        while(i < n){
            if (j >= m) return -1;
            c = specifier.charCodeAt(i++);
            if (c === 37) {
                c = specifier.charAt(i++);
                parse = parses[c in pads ? specifier.charAt(i++) : c];
                if (!parse || (j = parse(d, string, j)) < 0) return -1;
            } else if (c != string.charCodeAt(j++)) return -1;
        }
        return j;
    }
    function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
    }
    function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
    }
    function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
    }
    function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
    }
    function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
    }
    function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
    }
    function formatMonth(d) {
        return locale_months[d.getMonth()];
    }
    function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
    }
    function formatQuarter(d) {
        return 1 + ~~(d.getMonth() / 3);
    }
    function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
    }
    function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
    }
    function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
    }
    function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
    }
    function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
    }
    function formatUTCQuarter(d) {
        return 1 + ~~(d.getUTCMonth() / 3);
    }
    return {
        format: function(specifier) {
            var f = newFormat(specifier += "", formats);
            f.toString = function() {
                return specifier;
            };
            return f;
        },
        parse: function(specifier) {
            var p = newParse(specifier += "", false);
            p.toString = function() {
                return specifier;
            };
            return p;
        },
        utcFormat: function(specifier) {
            var f = newFormat(specifier += "", utcFormats);
            f.toString = function() {
                return specifier;
            };
            return f;
        },
        utcParse: function(specifier) {
            var p = newParse(specifier += "", true);
            p.toString = function() {
                return specifier;
            };
            return p;
        }
    };
}
var pads = {
    "-": "",
    "_": " ",
    "0": "0"
}, numberRe = /^\s*\d+/, // note: ignores next directive
percentRe = /^%/, requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}
function requote(s) {
    return s.replace(requoteRe, "\\$&");
}
function formatRe(names) {
    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
    return new Map(names.map((name, i)=>[
            name.toLowerCase(),
            i
        ]));
}
function parseWeekdayNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.w = +n[0], i + n[0].length) : -1;
}
function parseWeekdayNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.u = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.U = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberISO(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.V = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.W = +n[0], i + n[0].length) : -1;
}
function parseFullYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 4));
    return n ? (d.y = +n[0], i + n[0].length) : -1;
}
function parseYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}
function parseZone(d, string, i) {
    var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}
function parseQuarter(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}
function parseMonthNumber(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}
function parseDayOfMonth(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.d = +n[0], i + n[0].length) : -1;
}
function parseDayOfYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}
function parseHour24(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.H = +n[0], i + n[0].length) : -1;
}
function parseMinutes(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.M = +n[0], i + n[0].length) : -1;
}
function parseSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.S = +n[0], i + n[0].length) : -1;
}
function parseMilliseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.L = +n[0], i + n[0].length) : -1;
}
function parseMicroseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 6));
    return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}
function parseLiteralPercent(d, string, i) {
    var n = percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
}
function parseUnixTimestamp(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.Q = +n[0], i + n[0].length) : -1;
}
function parseUnixTimestampSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.s = +n[0], i + n[0].length) : -1;
}
function formatDayOfMonth(d, p) {
    return pad(d.getDate(), p, 2);
}
function formatHour24(d, p) {
    return pad(d.getHours(), p, 2);
}
function formatHour12(d, p) {
    return pad(d.getHours() % 12 || 12, p, 2);
}
function formatDayOfYear(d, p) {
    return pad(1 + _index.timeDay.count((0, _index.timeYear)(d), d), p, 3);
}
function formatMilliseconds(d, p) {
    return pad(d.getMilliseconds(), p, 3);
}
function formatMicroseconds(d, p) {
    return formatMilliseconds(d, p) + "000";
}
function formatMonthNumber(d, p) {
    return pad(d.getMonth() + 1, p, 2);
}
function formatMinutes(d, p) {
    return pad(d.getMinutes(), p, 2);
}
function formatSeconds(d, p) {
    return pad(d.getSeconds(), p, 2);
}
function formatWeekdayNumberMonday(d) {
    var day = d.getDay();
    return day === 0 ? 7 : day;
}
function formatWeekNumberSunday(d, p) {
    return pad(_index.timeSunday.count((0, _index.timeYear)(d) - 1, d), p, 2);
}
function dISO(d) {
    var day = d.getDay();
    return day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
}
function formatWeekNumberISO(d, p) {
    d = dISO(d);
    return pad(_index.timeThursday.count((0, _index.timeYear)(d), d) + ((0, _index.timeYear)(d).getDay() === 4), p, 2);
}
function formatWeekdayNumberSunday(d) {
    return d.getDay();
}
function formatWeekNumberMonday(d, p) {
    return pad(_index.timeMonday.count((0, _index.timeYear)(d) - 1, d), p, 2);
}
function formatYear(d, p) {
    return pad(d.getFullYear() % 100, p, 2);
}
function formatYearISO(d, p) {
    d = dISO(d);
    return pad(d.getFullYear() % 100, p, 2);
}
function formatFullYear(d, p) {
    return pad(d.getFullYear() % 10000, p, 4);
}
function formatFullYearISO(d, p) {
    var day = d.getDay();
    d = day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
    return pad(d.getFullYear() % 10000, p, 4);
}
function formatZone(d) {
    var z = d.getTimezoneOffset();
    return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}
function formatUTCDayOfMonth(d, p) {
    return pad(d.getUTCDate(), p, 2);
}
function formatUTCHour24(d, p) {
    return pad(d.getUTCHours(), p, 2);
}
function formatUTCHour12(d, p) {
    return pad(d.getUTCHours() % 12 || 12, p, 2);
}
function formatUTCDayOfYear(d, p) {
    return pad(1 + _index.utcDay.count((0, _index.utcYear)(d), d), p, 3);
}
function formatUTCMilliseconds(d, p) {
    return pad(d.getUTCMilliseconds(), p, 3);
}
function formatUTCMicroseconds(d, p) {
    return formatUTCMilliseconds(d, p) + "000";
}
function formatUTCMonthNumber(d, p) {
    return pad(d.getUTCMonth() + 1, p, 2);
}
function formatUTCMinutes(d, p) {
    return pad(d.getUTCMinutes(), p, 2);
}
function formatUTCSeconds(d, p) {
    return pad(d.getUTCSeconds(), p, 2);
}
function formatUTCWeekdayNumberMonday(d) {
    var dow = d.getUTCDay();
    return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d, p) {
    return pad(_index.utcSunday.count((0, _index.utcYear)(d) - 1, d), p, 2);
}
function UTCdISO(d) {
    var day = d.getUTCDay();
    return day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
}
function formatUTCWeekNumberISO(d, p) {
    d = UTCdISO(d);
    return pad(_index.utcThursday.count((0, _index.utcYear)(d), d) + ((0, _index.utcYear)(d).getUTCDay() === 4), p, 2);
}
function formatUTCWeekdayNumberSunday(d) {
    return d.getUTCDay();
}
function formatUTCWeekNumberMonday(d, p) {
    return pad(_index.utcMonday.count((0, _index.utcYear)(d) - 1, d), p, 2);
}
function formatUTCYear(d, p) {
    return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCYearISO(d, p) {
    d = UTCdISO(d);
    return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCFullYear(d, p) {
    return pad(d.getUTCFullYear() % 10000, p, 4);
}
function formatUTCFullYearISO(d, p) {
    var day = d.getUTCDay();
    d = day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
    return pad(d.getUTCFullYear() % 10000, p, 4);
}
function formatUTCZone() {
    return "+0000";
}
function formatLiteralPercent() {
    return "%";
}
function formatUnixTimestamp(d) {
    return +d;
}
function formatUnixTimestampSeconds(d) {
    return Math.floor(+d / 1000);
}

},{"9e23d29ed683bf24":"4aaIL"}],"dolw0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isoSpecifier = exports.default = void 0;
var _defaultLocale = require("e343543371fb078f");
var isoSpecifier = exports.isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative(date) {
    return date.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = exports.default = formatIso;

},{"e343543371fb078f":"k6Hxn"}],"jCHpc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _isoFormat = require("cebf03c43d1fbc23");
var _defaultLocale = require("6e3506f60003d91c");
function parseIsoNative(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
}
var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = exports.default = parseIso;

},{"cebf03c43d1fbc23":"dolw0","6e3506f60003d91c":"k6Hxn"}],"btbgh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = utcTime;
var _index = require("5527dd6defde265c");
var _index2 = require("fd7bab9ed584aa8f");
var _time = require("e6d03e9073cd62df");
var _init = require("a9f336dbd6d53110");
function utcTime() {
    return _init.initRange.apply((0, _time.calendar)(_index.utcTicks, _index.utcTickInterval, _index.utcYear, _index.utcMonth, _index.utcWeek, _index.utcDay, _index.utcHour, _index.utcMinute, _index.utcSecond, _index2.utcFormat).domain([
        Date.UTC(2000, 0, 1),
        Date.UTC(2000, 0, 2)
    ]), arguments);
}

},{"5527dd6defde265c":"4aaIL","fd7bab9ed584aa8f":"lLXth","e6d03e9073cd62df":"foPfD","a9f336dbd6d53110":"el2ZB"}],"e71Y3":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;
exports.sequentialSymlog = sequentialSymlog;
var _index = require("5b06b41969d9f3c6");
var _continuous = require("d3552e36f6d22209");
var _init = require("1811298975a582dd");
var _linear = require("8f1431c8354c944b");
var _log = require("62b21c451de289bd");
var _symlog = require("2322af2fb3bad83e");
var _pow = require("6bfacf6a2ba9877a");
function transformer() {
    var x0 = 0, x1 = 1, t0, t1, k10, transform, interpolator = _continuous.identity, clamp = false, unknown;
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [
            x0,
            x1
        ];
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    function range(interpolate) {
        return function(_) {
            var r0, r1;
            return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [
                interpolator(0),
                interpolator(1)
            ];
        };
    }
    scale.range = range(_index.interpolate);
    scale.rangeRound = range(_index.interpolateRound);
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
        return scale;
    };
}
function copy(source, target) {
    return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
    var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
    scale.copy = function() {
        return copy(scale, sequential());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialLog() {
    var scale = (0, _log.loggish)(transformer()).domain([
        1,
        10
    ]);
    scale.copy = function() {
        return copy(scale, sequentialLog()).base(scale.base());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialSymlog() {
    var scale = (0, _symlog.symlogish)(transformer());
    scale.copy = function() {
        return copy(scale, sequentialSymlog()).constant(scale.constant());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialPow() {
    var scale = (0, _pow.powish)(transformer());
    scale.copy = function() {
        return copy(scale, sequentialPow()).exponent(scale.exponent());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialSqrt() {
    return sequentialPow.apply(null, arguments).exponent(0.5);
}

},{"5b06b41969d9f3c6":"c66Jx","d3552e36f6d22209":"6K7X5","1811298975a582dd":"el2ZB","8f1431c8354c944b":"gd5hp","62b21c451de289bd":"dnlDY","2322af2fb3bad83e":"e0aWM","6bfacf6a2ba9877a":"aMILr"}],"a9bQQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sequentialQuantile;
var _index = require("3768c13ea0b601e3");
var _continuous = require("13c94c0d3c2c0970");
var _init = require("d68624a09186f2c0");
function sequentialQuantile() {
    var domain = [], interpolator = _continuous.identity;
    function scale(x) {
        if (x != null && !isNaN(x = +x)) return interpolator(((0, _index.bisect)(domain, x, 1) - 1) / (domain.length - 1));
    }
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _)if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return scale;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    scale.range = function() {
        return domain.map((d, i)=>interpolator(i / (domain.length - 1)));
    };
    scale.quantiles = function(n) {
        return Array.from({
            length: n + 1
        }, (_, i)=>(0, _index.quantile)(domain, i / n));
    };
    scale.copy = function() {
        return sequentialQuantile(interpolator).domain(domain);
    };
    return _init.initInterpolator.apply(scale, arguments);
}

},{"3768c13ea0b601e3":"idFA4","13c94c0d3c2c0970":"6K7X5","d68624a09186f2c0":"el2ZB"}],"gTeu0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;
exports.divergingSymlog = divergingSymlog;
var _index = require("31faef032abe5835");
var _continuous = require("4868a508913f9d5a");
var _init = require("2659b9912e4c2664");
var _linear = require("72a5d5a158a7f2a9");
var _log = require("e1b9170cec871ff7");
var _sequential = require("316229abb5242850");
var _symlog = require("44636a24a79d22e8");
var _pow = require("c0a6524668ee6dc");
function transformer() {
    var x0 = 0, x1 = 0.5, x2 = 1, s = 1, t0, t1, t2, k10, k21, interpolator = _continuous.identity, transform, clamp = false, unknown;
    function scale(x) {
        return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [
            x0,
            x1,
            x2
        ];
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    function range(interpolate) {
        return function(_) {
            var r0, r1, r2;
            return arguments.length ? ([r0, r1, r2] = _, interpolator = (0, _index.piecewise)(interpolate, [
                r0,
                r1,
                r2
            ]), scale) : [
                interpolator(0),
                interpolator(0.5),
                interpolator(1)
            ];
        };
    }
    scale.range = range(_index.interpolate);
    scale.rangeRound = range(_index.interpolateRound);
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
        return scale;
    };
}
function diverging() {
    var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
    scale.copy = function() {
        return (0, _sequential.copy)(scale, diverging());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingLog() {
    var scale = (0, _log.loggish)(transformer()).domain([
        0.1,
        1,
        10
    ]);
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingSymlog() {
    var scale = (0, _symlog.symlogish)(transformer());
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingPow() {
    var scale = (0, _pow.powish)(transformer());
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingSqrt() {
    return divergingPow.apply(null, arguments).exponent(0.5);
}

},{"31faef032abe5835":"c66Jx","4868a508913f9d5a":"6K7X5","2659b9912e4c2664":"el2ZB","72a5d5a158a7f2a9":"gd5hp","e1b9170cec871ff7":"dnlDY","316229abb5242850":"e71Y3","44636a24a79d22e8":"e0aWM","c0a6524668ee6dc":"aMILr"}],"LO60x":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isBandScaleConfig = isBandScaleConfig;
exports.isPointScaleConfig = isPointScaleConfig;
/**
 * Use this type instead of `AxisScaleConfig` when the values
 * shouldn't be provided by the user.
 */ /**
 * Config that is shared between cartesian and polar axes.
 */ /**
 * Use this type for advanced typing. For basic usage, use `XAxis`, `YAxis`, `RotationAxis` or `RadiusAxis`.
 */ function isBandScaleConfig(scaleConfig) {
    return scaleConfig.scaleType === 'band';
}
function isPointScaleConfig(scaleConfig) {
    return scaleConfig.scaleType === 'point';
} /**
 * The data format returned by onAxisClick.
 */  /**
 * The x-axis configuration with missing values filled with default values.
 */  /**
 * The y-axis configuration with missing values filled with default values.
 */ 

},{}],"8yUXX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getColorScale = getColorScale;
exports.getOrdinalColorScale = getOrdinalColorScale;
exports.getSequentialColorScale = getSequentialColorScale;
var _d3Scale = require("1b2d6e92ba1ee0d5");
function getSequentialColorScale(config) {
    if (config.type === 'piecewise') return (0, _d3Scale.scaleThreshold)(config.thresholds, config.colors);
    return (0, _d3Scale.scaleSequential)([
        config.min ?? 0,
        config.max ?? 100
    ], config.color);
}
function getOrdinalColorScale(config) {
    if (config.values) return (0, _d3Scale.scaleOrdinal)(config.values, config.colors).unknown(config.unknownColor ?? null);
    return (0, _d3Scale.scaleOrdinal)(config.colors.map((_, index)=>index), config.colors).unknown(config.unknownColor ?? null);
}
function getColorScale(config) {
    return config.type === 'ordinal' ? getOrdinalColorScale(config) : getSequentialColorScale(config);
}

},{"1b2d6e92ba1ee0d5":"cBa7c"}],"5xWvO":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("b2b7dd007e7e035").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getTickNumber = getTickNumber;
exports.useTicks = useTicks;
var React = _interopRequireWildcard(require("2d4e8f5f042e2f09"));
var _isBandScale = require("a199583ef61ecc15");
var _isInfinity = require("3ef4092e032fd6d2");
function getTickNumber(params) {
    const { tickMaxStep, tickMinStep, tickNumber, range, domain } = params;
    const maxTicks = tickMinStep === undefined ? 999 : Math.floor(Math.abs(domain[1] - domain[0]) / tickMinStep);
    const minTicks = tickMaxStep === undefined ? 2 : Math.ceil(Math.abs(domain[1] - domain[0]) / tickMaxStep);
    const defaultizedTickNumber = tickNumber ?? Math.floor(Math.abs(range[1] - range[0]) / 50);
    return Math.min(maxTicks, Math.max(minTicks, defaultizedTickNumber));
}
const offsetRatio = {
    start: 0,
    extremities: 0,
    end: 1,
    middle: 0.5
};
function useTicks(options) {
    const { scale, tickNumber, valueFormatter, tickInterval, tickPlacement = 'extremities', tickLabelPlacement: tickLabelPlacementProp } = options;
    return React.useMemo(()=>{
        // band scale
        if ((0, _isBandScale.isBandScale)(scale)) {
            const domain = scale.domain();
            const tickLabelPlacement = tickLabelPlacementProp ?? 'middle';
            if (scale.bandwidth() > 0) {
                // scale type = 'band'
                const filteredDomain = typeof tickInterval === 'function' && domain.filter(tickInterval) || typeof tickInterval === 'object' && tickInterval || domain;
                return [
                    ...filteredDomain.map((value)=>({
                            value,
                            formattedValue: valueFormatter?.(value, {
                                location: 'tick',
                                scale
                            }) ?? `${value}`,
                            offset: scale(value) - (scale.step() - scale.bandwidth()) / 2 + offsetRatio[tickPlacement] * scale.step(),
                            labelOffset: tickLabelPlacement === 'tick' ? 0 : scale.step() * (offsetRatio[tickLabelPlacement] - offsetRatio[tickPlacement])
                        })),
                    ...tickPlacement === 'extremities' ? [
                        {
                            formattedValue: undefined,
                            offset: scale.range()[1],
                            labelOffset: 0
                        }
                    ] : []
                ];
            }
            // scale type = 'point'
            const filteredDomain = typeof tickInterval === 'function' && domain.filter(tickInterval) || typeof tickInterval === 'object' && tickInterval || domain;
            return filteredDomain.map((value)=>({
                    value,
                    formattedValue: valueFormatter?.(value, {
                        location: 'tick',
                        scale
                    }) ?? `${value}`,
                    offset: scale(value),
                    labelOffset: 0
                }));
        }
        const domain = scale.domain();
        // Skip axis rendering if no data is available
        // - The domains contains Infinity for continuous scales.
        if (domain.some(_isInfinity.isInfinity)) return [];
        const tickLabelPlacement = tickLabelPlacementProp;
        const ticks = typeof tickInterval === 'object' ? tickInterval : scale.ticks(tickNumber);
        return ticks.map((value, i)=>{
            return {
                value,
                formattedValue: valueFormatter?.(value, {
                    location: 'tick',
                    scale
                }) ?? scale.tickFormat(tickNumber)(value),
                offset: scale(value),
                // Allowing the label to be placed in the middle of a continuous scale is weird.
                // But it is useful in some cases, like funnel categories with a linear scale.
                labelOffset: tickLabelPlacement === 'middle' ? scale(ticks[i - 1] ?? 0) - (scale(value) + scale(ticks[i - 1] ?? 0)) / 2 : 0
            };
        });
    }, [
        scale,
        tickInterval,
        tickNumber,
        valueFormatter,
        tickPlacement,
        tickLabelPlacementProp
    ]);
}

},{"b2b7dd007e7e035":"6TFJp","2d4e8f5f042e2f09":"jMk1U","a199583ef61ecc15":"58Ehn","3ef4092e032fd6d2":"KDJgK"}],"58Ehn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isBandScale = isBandScale;
function isBandScale(scale) {
    return scale.bandwidth !== undefined;
}

},{}],"KDJgK":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isInfinity = isInfinity;
function isInfinity(v) {
    return typeof v === 'number' && !Number.isFinite(v);
}

},{}],"kzGPD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getScale = getScale;
var _d3Scale = require("a24dd5473df32296");
function getScale(scaleType, domain, range) {
    switch(scaleType){
        case 'log':
            return (0, _d3Scale.scaleLog)(domain, range);
        case 'pow':
            return (0, _d3Scale.scalePow)(domain, range);
        case 'sqrt':
            return (0, _d3Scale.scaleSqrt)(domain, range);
        case 'time':
            return (0, _d3Scale.scaleTime)(domain, range);
        case 'utc':
            return (0, _d3Scale.scaleUtc)(domain, range);
        default:
            return (0, _d3Scale.scaleLinear)(domain, range);
    }
}

},{"a24dd5473df32296":"cBa7c"}],"c6eLI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.zoomScaleRange = void 0;
/**
 * Applies the zoom into the scale range.
 * It changes the screen coordinates that the scale covers.
 * Not the data that is displayed.
 *
 * @param scaleRange the original range in real screen coordinates.
 * @param zoomRange the zoom range in percentage.
 * @returns zoomed range in real screen coordinates.
 */ const zoomScaleRange = (scaleRange, zoomRange)=>{
    const rangeGap = scaleRange[1] - scaleRange[0];
    const zoomGap = zoomRange[1] - zoomRange[0];
    // If current zoom show the scale between p1 and p2 percents
    // The range should be extended by adding [0, p1] and [p2, 100] segments
    const min = scaleRange[0] - zoomRange[0] * rangeGap / zoomGap;
    const max = scaleRange[1] + (100 - zoomRange[1]) * rangeGap / zoomGap;
    return [
        min,
        max
    ];
};
exports.zoomScaleRange = zoomScaleRange;

},{}],"9oVz8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisExtremum = void 0;
var _isCartesian = require("9a4d0fc62132981f");
const axisExtremumCallback = (acc, chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters)=>{
    const getter = axisDirection === 'x' ? seriesConfig[chartType].xExtremumGetter : seriesConfig[chartType].yExtremumGetter;
    const series = formattedSeries[chartType]?.series ?? {};
    const [minChartTypeData, maxChartTypeData] = getter?.({
        series,
        axis,
        axisIndex,
        isDefaultAxis: axisIndex === 0,
        getFilters
    }) ?? [
        Infinity,
        -Infinity
    ];
    const [minData, maxData] = acc;
    return [
        Math.min(minChartTypeData, minData),
        Math.max(maxChartTypeData, maxData)
    ];
};
const getAxisExtremum = (axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters)=>{
    const charTypes = Object.keys(seriesConfig).filter(_isCartesian.isCartesianSeriesType);
    const extremums = charTypes.reduce((acc, charType)=>axisExtremumCallback(acc, charType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters), [
        Infinity,
        -Infinity
    ]);
    if (Number.isNaN(extremums[0]) || Number.isNaN(extremums[1])) return [
        Infinity,
        -Infinity
    ];
    return extremums;
};
exports.getAxisExtremum = getAxisExtremum;

},{"9a4d0fc62132981f":"e7xoy"}],"e7xoy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isCartesianSeriesType = isCartesianSeriesType;
var _configInit = require("d01ffa882b227be");
function isCartesianSeriesType(seriesType) {
    return _configInit.cartesianSeriesTypes.getTypes().has(seriesType);
}

},{"d01ffa882b227be":"exuxV"}],"exuxV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.polarSeriesTypes = exports.cartesianSeriesTypes = void 0;
let cartesianInstance;
let polarInstance;
class CartesianSeriesTypes {
    constructor(){
        this.types = new Set();
        if (cartesianInstance) throw new Error('You can only create one instance!');
        cartesianInstance = this.types;
    }
    addType(value) {
        this.types.add(value);
    }
    getTypes() {
        return this.types;
    }
}
class PolarSeriesTypes {
    constructor(){
        this.types = new Set();
        if (polarInstance) throw new Error('You can only create one instance!');
        polarInstance = this.types;
    }
    addType(value) {
        this.types.add(value);
    }
    getTypes() {
        return this.types;
    }
}
const cartesianSeriesTypes = exports.cartesianSeriesTypes = new CartesianSeriesTypes();
cartesianSeriesTypes.addType('bar');
cartesianSeriesTypes.addType('line');
cartesianSeriesTypes.addType('scatter');
const polarSeriesTypes = exports.polarSeriesTypes = new PolarSeriesTypes();
polarSeriesTypes.addType('radar');

},{}],"obznY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisTriggerTooltip = void 0;
var _isCartesian = require("cbf516026ecc0de2");
const getAxisTriggerTooltip = (axisDirection, seriesConfig, formattedSeries, defaultAxisId)=>{
    const tooltipAxesIds = new Set();
    const chartTypes = Object.keys(seriesConfig).filter(_isCartesian.isCartesianSeriesType);
    chartTypes.forEach((chartType)=>{
        const series = formattedSeries[chartType]?.series ?? {};
        const tooltipAxes = seriesConfig[chartType].axisTooltipGetter?.(series);
        if (tooltipAxes === undefined) return;
        tooltipAxes.forEach(({ axisId, direction })=>{
            if (direction === axisDirection) tooltipAxesIds.add(axisId ?? defaultAxisId);
        });
    });
    return tooltipAxesIds;
};
exports.getAxisTriggerTooltip = getAxisTriggerTooltip;

},{"cbf516026ecc0de2":"e7xoy"}],"hE9Ea":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createAxisFilterMapper = createAxisFilterMapper;
exports.createGetAxisFilters = void 0;
var _isDefined = require("45efb21bc56efe8d");
var _getAxisExtremum = require("ef565a43670714fe");
var _getScale = require("cbe462369efcd4c4");
function createAxisFilterMapper({ zoomMap, zoomOptions, seriesConfig, formattedSeries, direction }) {
    return (axis, axisIndex)=>{
        const zoomOption = zoomOptions[axis.id];
        if (!zoomOption || zoomOption.filterMode !== 'discard') return null;
        const zoom = zoomMap?.get(axis.id);
        if (zoom === undefined || zoom.start <= 0 && zoom.end >= 100) // No zoom, or zoom with all data visible
        return null;
        let extremums = [];
        const scaleType = axis.scaleType;
        if (scaleType === 'point' || scaleType === 'band') extremums = [
            0,
            (axis.data?.length ?? 1) - 1
        ];
        else extremums = (0, _getAxisExtremum.getAxisExtremum)(axis, direction, seriesConfig, axisIndex, formattedSeries);
        let min;
        let max;
        const continuousScaleType = !scaleType || scaleType === 'band' || scaleType === 'point' ? 'linear' : scaleType;
        [min, max] = (0, _getScale.getScale)(continuousScaleType, extremums, [
            0,
            100
        ]).nice().domain();
        min = min instanceof Date ? min.getTime() : min;
        max = max instanceof Date ? max.getTime() : max;
        const minVal = min + zoom.start * (max - min) / 100;
        const maxVal = min + zoom.end * (max - min) / 100;
        return (value, dataIndex)=>{
            const val = value[direction] ?? axis.data?.[dataIndex];
            if (val == null) // If the value does not exist because of missing data point, or out of range index, we just ignore.
            return true;
            if (axis.scaleType === 'point' || axis.scaleType === 'band' || typeof val === 'string') return dataIndex >= minVal && dataIndex <= maxVal;
            return val >= minVal && val <= maxVal;
        };
    };
}
const createGetAxisFilters = (filters)=>({ currentAxisId, seriesXAxisId, seriesYAxisId, isDefaultAxis })=>{
        return (value, dataIndex)=>{
            const axisId = currentAxisId === seriesXAxisId ? seriesYAxisId : seriesXAxisId;
            if (!axisId || isDefaultAxis) return Object.values(filters ?? {})[0]?.(value, dataIndex) ?? true;
            const data = [
                seriesYAxisId,
                seriesXAxisId
            ].filter((id)=>id !== currentAxisId).map((id)=>filters[id ?? '']).filter(_isDefined.isDefined);
            return data.every((f)=>f(value, dataIndex));
        };
    };
exports.createGetAxisFilters = createGetAxisFilters;

},{"45efb21bc56efe8d":"6gANl","ef565a43670714fe":"9oVz8","cbe462369efcd4c4":"kzGPD"}],"6gANl":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isDefined = isDefined;
function isDefined(value) {
    return value !== null && value !== undefined;
}

},{}],"ifSW9":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createZoomLookup = void 0;
var _defaultizeZoom = require("5e05f398f43ac2f2");
const createZoomLookup = (axisDirection)=>(axes = [])=>axes.reduce((acc, v)=>{
            // @ts-ignore
            const { zoom, id: axisId } = v;
            const defaultizedZoom = (0, _defaultizeZoom.defaultizeZoom)(zoom, axisId, axisDirection);
            if (defaultizedZoom) acc[axisId] = defaultizedZoom;
            return acc;
        }, {});
exports.createZoomLookup = createZoomLookup;

},{"5e05f398f43ac2f2":"gXXnU"}],"gXXnU":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2d66b4b2f9a9f764").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultizeZoom = void 0;
var _extends2 = _interopRequireDefault(require("b2eba2403079dbe"));
const defaultZoomOptions = {
    minStart: 0,
    maxEnd: 100,
    step: 5,
    minSpan: 10,
    maxSpan: 100,
    panning: true,
    filterMode: 'keep'
};
const defaultizeZoom = (zoom, axisId, axisDirection)=>{
    if (!zoom) return undefined;
    if (zoom === true) return (0, _extends2.default)({
        axisId,
        axisDirection
    }, defaultZoomOptions);
    return (0, _extends2.default)({
        axisId,
        axisDirection
    }, defaultZoomOptions, zoom);
};
exports.defaultizeZoom = defaultizeZoom;

},{"2d66b4b2f9a9f764":"1P3rZ","b2eba2403079dbe":"lKa0J"}],"196LV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisIndex = getAxisIndex;
exports.getAxisValue = getAxisValue;
var _isBandScale = require("5a00c9c7248ef1ad");
function getAsANumber(value) {
    return value instanceof Date ? value.getTime() : value;
}
/**
 * For a pointer coordinate, this function returns the dataIndex associated.
 * Returns `-1` if no dataIndex matches.
 */ function getAxisIndex(axisConfig, pointerValue) {
    const { scale, data: axisData, reverse } = axisConfig;
    if (!(0, _isBandScale.isBandScale)(scale)) {
        const value = scale.invert(pointerValue);
        if (axisData === undefined) return -1;
        const valueAsNumber = getAsANumber(value);
        const closestIndex = axisData?.findIndex((pointValue, index)=>{
            const v = getAsANumber(pointValue);
            if (v > valueAsNumber) {
                if (index === 0 || Math.abs(valueAsNumber - v) <= Math.abs(valueAsNumber - getAsANumber(axisData[index - 1]))) return true;
            }
            if (v <= valueAsNumber) {
                if (index === axisData.length - 1 || Math.abs(getAsANumber(value) - v) < Math.abs(getAsANumber(value) - getAsANumber(axisData[index + 1]))) return true;
            }
            return false;
        });
        return closestIndex;
    }
    const dataIndex = scale.bandwidth() === 0 ? Math.floor((pointerValue - Math.min(...scale.range()) + scale.step() / 2) / scale.step()) : Math.floor((pointerValue - Math.min(...scale.range())) / scale.step());
    if (dataIndex < 0 || dataIndex >= axisData.length) return -1;
    return reverse ? axisData.length - 1 - dataIndex : dataIndex;
}
/**
 * For a pointer coordinate, this function returns the value associated.
 * Returns `null` if the coordinate has no value associated.
 */ function getAxisValue(axisConfig, pointerValue, dataIndex) {
    const { scale, data: axisData } = axisConfig;
    if (!(0, _isBandScale.isBandScale)(scale)) {
        const value = scale.invert(pointerValue);
        if (dataIndex < 0) return value;
        return axisData[dataIndex];
    }
    if (dataIndex < 0 || dataIndex >= axisData.length) return null;
    return axisData[dataIndex];
}

},{"5a00c9c7248ef1ad":"58Ehn"}],"5546x":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getSVGPoint = getSVGPoint;
/**
 * Transform mouse event position to coordinates inside the SVG.
 * @param svg The SVG element
 * @param event The mouseEvent to transform
 */ function getSVGPoint(svg, event) {
    const pt = svg.createSVGPoint();
    pt.x = event.clientX;
    pt.y = event.clientY;
    return pt.matrixTransform(svg.getScreenCTM().inverse());
}

},{}],"4pi8Z":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartInteraction: true
};
Object.defineProperty(exports, "useChartInteraction", {
    enumerable: true,
    get: function() {
        return _useChartInteraction.useChartInteraction;
    }
});
var _useChartInteraction = require("41eb1d588b55a7e4");
var _useChartInteraction2 = require("796598293429f8af");
Object.keys(_useChartInteraction2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartInteraction2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartInteraction2[key];
        }
    });
});

},{"41eb1d588b55a7e4":"a4ziz","796598293429f8af":"dwY4R"}],"a4ziz":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7154a6df40d36a7b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartInteraction = void 0;
var _extends2 = _interopRequireDefault(require("5f4da93b359ade6e"));
var _useEventCallback = _interopRequireDefault(require("772b24cd8e2f1297"));
const useChartInteraction = ({ store })=>{
    const cleanInteraction = (0, _useEventCallback.default)(()=>{
        store.update((prev)=>{
            return (0, _extends2.default)({}, prev, {
                interaction: {
                    pointer: null,
                    item: null
                }
            });
        });
    });
    const removeItemInteraction = (0, _useEventCallback.default)((itemToRemove)=>{
        store.update((prev)=>{
            const prevItem = prev.interaction.item;
            if (!itemToRemove) // Remove without taking care of the current item
            return prevItem === null ? prev : (0, _extends2.default)({}, prev, {
                interaction: (0, _extends2.default)({}, prev.interaction, {
                    item: null
                })
            });
            if (prevItem === null || Object.keys(itemToRemove).some((key)=>itemToRemove[key] !== prevItem[key])) // The current item is already different from the one to remove. No need to clean it.
            return prev;
            return (0, _extends2.default)({}, prev, {
                interaction: (0, _extends2.default)({}, prev.interaction, {
                    item: null
                })
            });
        });
    });
    const setItemInteraction = (0, _useEventCallback.default)((newItem)=>{
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                interaction: (0, _extends2.default)({}, prev.interaction, {
                    item: newItem
                })
            }));
    });
    const setPointerCoordinate = (0, _useEventCallback.default)((coordinate)=>{
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                interaction: (0, _extends2.default)({}, prev.interaction, {
                    pointer: coordinate
                })
            }));
    });
    return {
        instance: {
            cleanInteraction,
            setItemInteraction,
            removeItemInteraction,
            setPointerCoordinate
        }
    };
};
exports.useChartInteraction = useChartInteraction;
useChartInteraction.getInitialState = ()=>({
        interaction: {
            item: null,
            pointer: null
        }
    });
useChartInteraction.params = {};

},{"7154a6df40d36a7b":"1P3rZ","5f4da93b359ade6e":"lKa0J","772b24cd8e2f1297":"7odel"}],"7odel":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("52c799e74f10efbb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useEventCallback.default;
    }
});
var _useEventCallback = _interopRequireDefault(require("e162981f063f520c"));

},{"52c799e74f10efbb":"1P3rZ","e162981f063f520c":"fqVPL"}],"fqVPL":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("97395a092909d98c").default;
var _interopRequireWildcard = require("b7e73551969fa13d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("564559aa06a2b11"));
var _useEnhancedEffect = _interopRequireDefault(require("deaacaef493326fc"));
/**
 * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892
 * See RFC in https://github.com/reactjs/rfcs/pull/220
 */ function useEventCallback(fn) {
    const ref = React.useRef(fn);
    (0, _useEnhancedEffect.default)(()=>{
        ref.current = fn;
    });
    return React.useRef((...args)=>// @ts-expect-error hide `this`
        (0, ref.current)(...args)).current;
}
var _default = exports.default = useEventCallback;

},{"97395a092909d98c":"1P3rZ","b7e73551969fa13d":"6TFJp","564559aa06a2b11":"jMk1U","deaacaef493326fc":"egHZg"}],"dwY4R":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartsInteractionPointerY = exports.selectorChartsInteractionPointerX = exports.selectorChartsInteractionPointer = exports.selectorChartsInteractionItemIsDefined = exports.selectorChartsInteractionItem = exports.selectorChartsInteractionIsInitialized = void 0;
var _selectors = require("4174ce52eebfaed5");
const selectInteraction = (state)=>state.interaction;
const selectorChartsInteractionIsInitialized = exports.selectorChartsInteractionIsInitialized = (0, _selectors.createSelector)(selectInteraction, (interaction)=>interaction !== undefined);
const selectorChartsInteractionItem = exports.selectorChartsInteractionItem = (0, _selectors.createSelector)(selectInteraction, (interaction)=>interaction?.item ?? null);
const selectorChartsInteractionPointer = exports.selectorChartsInteractionPointer = (0, _selectors.createSelector)(selectInteraction, (interaction)=>interaction?.pointer ?? null);
const selectorChartsInteractionPointerX = exports.selectorChartsInteractionPointerX = (0, _selectors.createSelector)(selectorChartsInteractionPointer, (pointer)=>pointer && pointer.x);
const selectorChartsInteractionPointerY = exports.selectorChartsInteractionPointerY = (0, _selectors.createSelector)(selectorChartsInteractionPointer, (pointer)=>pointer && pointer.y);
const selectorChartsInteractionItemIsDefined = exports.selectorChartsInteractionItemIsDefined = (0, _selectors.createSelector)(selectorChartsInteractionItem, (item)=>item !== null);

},{"4174ce52eebfaed5":"4YBdc"}],"4SAAH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartsInteractionYAxisValue = exports.selectorChartsInteractionYAxisIndex = exports.selectorChartsInteractionXAxisValue = exports.selectorChartsInteractionXAxisIndex = exports.selectorChartsInteractionTooltipYAxes = exports.selectorChartsInteractionTooltipXAxes = exports.selectorChartsInteractionAxisTooltip = void 0;
var _isDeepEqual = require("cd88d88d92fd369");
var _selectors = require("ecb0d5931fcb51f0");
var _useChartInteraction = require("b71a9361648ea51a");
var _getAxisValue = require("74a8626ce6f1bd67");
var _useChartCartesianAxisRendering = require("7883ab237d2c961b");
const optionalGetAxisId = (_, id)=>id;
/**
 * Get interaction indexes
 */ function indexGetter(value, axes, ids = axes.axisIds[0]) {
    return Array.isArray(ids) ? ids.map((id)=>(0, _getAxisValue.getAxisIndex)(axes.axis[id], value)) : (0, _getAxisValue.getAxisIndex)(axes.axis[ids], value);
}
const selectorChartsInteractionXAxisIndex = exports.selectorChartsInteractionXAxisIndex = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerX,
    _useChartCartesianAxisRendering.selectorChartXAxis,
    optionalGetAxisId
], (value, axes, id)=>value === null ? null : indexGetter(value, axes, id));
const selectorChartsInteractionYAxisIndex = exports.selectorChartsInteractionYAxisIndex = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerY,
    _useChartCartesianAxisRendering.selectorChartYAxis,
    optionalGetAxisId
], (value, axes, id)=>value === null ? null : indexGetter(value, axes, id));
/**
 * Get interaction values
 */ function valueGetter(value, axes, indexes, ids = axes.axisIds[0]) {
    return Array.isArray(ids) ? ids.map((id, axisIndex)=>(0, _getAxisValue.getAxisValue)(axes.axis[id], value, indexes[axisIndex])) : (0, _getAxisValue.getAxisValue)(axes.axis[ids], value, indexes);
}
const selectorChartsInteractionXAxisValue = exports.selectorChartsInteractionXAxisValue = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerX,
    _useChartCartesianAxisRendering.selectorChartXAxis,
    selectorChartsInteractionXAxisIndex,
    optionalGetAxisId
], (x, xAxes, xIndex, id)=>{
    if (x === null || xIndex === null || xAxes.axisIds.length === 0) return null;
    return valueGetter(x, xAxes, xIndex, id);
});
const selectorChartsInteractionYAxisValue = exports.selectorChartsInteractionYAxisValue = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerY,
    _useChartCartesianAxisRendering.selectorChartYAxis,
    selectorChartsInteractionYAxisIndex,
    optionalGetAxisId
], (y, yAxes, yIndex, id)=>{
    if (y === null || yIndex === null || yAxes.axisIds.length === 0) return null;
    return valueGetter(y, yAxes, yIndex, id);
});
/**
 * Get x-axis ids and corresponding data index that should be display in the tooltip.
 */ const selectorChartsInteractionTooltipXAxes = exports.selectorChartsInteractionTooltipXAxes = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerX,
    _useChartCartesianAxisRendering.selectorChartXAxis
], (value, axes)=>{
    if (value === null) return [];
    return axes.axisIds.filter((id)=>axes.axis[id].triggerTooltip).map((axisId)=>({
            axisId,
            dataIndex: (0, _getAxisValue.getAxisIndex)(axes.axis[axisId], value)
        })).filter(({ dataIndex })=>dataIndex >= 0);
}, {
    memoizeOptions: {
        // Keep the same reference if array content is the same.
        // If possible, avoid this pattern by creating selectors that
        // uses string/number as arguments.
        resultEqualityCheck: _isDeepEqual.isDeepEqual
    }
});
/**
 * Get y-axis ids and corresponding data index that should be display in the tooltip.
 */ const selectorChartsInteractionTooltipYAxes = exports.selectorChartsInteractionTooltipYAxes = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerY,
    _useChartCartesianAxisRendering.selectorChartYAxis
], (value, axes)=>{
    if (value === null) return [];
    return axes.axisIds.filter((id)=>axes.axis[id].triggerTooltip).map((axisId)=>({
            axisId,
            dataIndex: (0, _getAxisValue.getAxisIndex)(axes.axis[axisId], value)
        })).filter(({ dataIndex })=>dataIndex >= 0);
}, {
    memoizeOptions: {
        // Keep the same reference if array content is the same.
        // If possible, avoid this pattern by creating selectors that
        // uses string/number as arguments.
        resultEqualityCheck: _isDeepEqual.isDeepEqual
    }
});
/**
 * Return `true` if the axis tooltip has something to display.
 */ const selectorChartsInteractionAxisTooltip = exports.selectorChartsInteractionAxisTooltip = (0, _selectors.createSelector)([
    selectorChartsInteractionTooltipXAxes,
    selectorChartsInteractionTooltipYAxes
], (xTooltip, yTooltip)=>xTooltip.length > 0 || yTooltip.length > 0);

},{"cd88d88d92fd369":"5b5Jm","ecb0d5931fcb51f0":"4YBdc","b71a9361648ea51a":"dwY4R","74a8626ce6f1bd67":"196LV","7883ab237d2c961b":"7HxFa"}],"5b5Jm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _isDeepEqual = require("11584a4dab0acf80");
Object.keys(_isDeepEqual).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _isDeepEqual[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _isDeepEqual[key];
        }
    });
});

},{"11584a4dab0acf80":"fMwOg"}],"fMwOg":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isDeepEqual = isDeepEqual;
/**
 * Based on `fast-deep-equal`
 *
 * MIT License
 *
 * Copyright (c) 2017 Evgeny Poberezkin
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ /**
 * Check if two values are deeply equal.
 */ function isDeepEqual(a, b) {
    if (a === b) return true;
    if (a && b && typeof a === 'object' && typeof b === 'object') {
        if (a.constructor !== b.constructor) return false;
        if (Array.isArray(a)) {
            const length = a.length;
            if (length !== b.length) return false;
            for(let i = 0; i < length; i += 1){
                if (!isDeepEqual(a[i], b[i])) return false;
            }
            return true;
        }
        if (a instanceof Map && b instanceof Map) {
            if (a.size !== b.size) return false;
            const entriesA = Array.from(a.entries());
            for(let i = 0; i < entriesA.length; i += 1){
                if (!b.has(entriesA[i][0])) return false;
            }
            for(let i = 0; i < entriesA.length; i += 1){
                const entryA = entriesA[i];
                if (!isDeepEqual(entryA[1], b.get(entryA[0]))) return false;
            }
            return true;
        }
        if (a instanceof Set && b instanceof Set) {
            if (a.size !== b.size) return false;
            const entries = Array.from(a.entries());
            for(let i = 0; i < entries.length; i += 1){
                if (!b.has(entries[i][0])) return false;
            }
            return true;
        }
        if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
            const length = a.length;
            if (length !== b.length) return false;
            for(let i = 0; i < length; i += 1){
                if (a[i] !== b[i]) return false;
            }
            return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
        const keys = Object.keys(a);
        const length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(let i = 0; i < length; i += 1){
            if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        }
        for(let i = 0; i < length; i += 1){
            const key = keys[i];
            if (!isDeepEqual(a[key], b[key])) return false;
        }
        return true;
    }
    // true if both NaN, false otherwise
    // eslint-disable-next-line no-self-compare
    return a !== a && b !== b;
}

},{}],"gwqWR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"1DuPh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartZAxis: true
};
Object.defineProperty(exports, "useChartZAxis", {
    enumerable: true,
    get: function() {
        return _useChartZAxis.useChartZAxis;
    }
});
var _useChartZAxis = require("72984d04ba6c42bc");
var _useChartZAxis2 = require("eb2c90ec7bf320d9");
Object.keys(_useChartZAxis2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartZAxis2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartZAxis2[key];
        }
    });
});

},{"72984d04ba6c42bc":"lXlzK","eb2c90ec7bf320d9":"dFxfN"}],"lXlzK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("49127593c1ef3ddf").default;
var _interopRequireDefault = require("3a7473154ae66720").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartZAxis = void 0;
var _extends2 = _interopRequireDefault(require("8c94bce831236909"));
var React = _interopRequireWildcard(require("42d86bcc7db5dafe"));
var _colorScale = require("e0ec595b2680cadd");
function addDefaultId(axisConfig, defaultId) {
    if (axisConfig.id !== undefined) return axisConfig;
    return (0, _extends2.default)({
        id: defaultId
    }, axisConfig);
}
function processColorMap(axisConfig) {
    if (!axisConfig.colorMap) return axisConfig;
    return (0, _extends2.default)({}, axisConfig, {
        colorScale: axisConfig.colorMap.type === 'ordinal' && axisConfig.data ? (0, _colorScale.getOrdinalColorScale)((0, _extends2.default)({
            values: axisConfig.data
        }, axisConfig.colorMap)) : (0, _colorScale.getColorScale)(axisConfig.colorMap.type === 'continuous' ? (0, _extends2.default)({
            min: axisConfig.min,
            max: axisConfig.max
        }, axisConfig.colorMap) : axisConfig.colorMap)
    });
}
function getZAxisState(zAxis, dataset) {
    if (!zAxis || zAxis.length === 0) return {
        axis: {},
        axisIds: []
    };
    const zAxisLookup = {};
    const axisIds = [];
    zAxis.forEach((axisConfig, index)=>{
        const dataKey = axisConfig.dataKey;
        const defaultizedId = axisConfig.id ?? `defaultized-z-axis-${index}`;
        if (dataKey === undefined || axisConfig.data !== undefined) {
            zAxisLookup[defaultizedId] = processColorMap(addDefaultId(axisConfig, defaultizedId));
            axisIds.push(defaultizedId);
            return;
        }
        if (dataset === undefined) throw new Error('MUI X Charts: z-axis uses `dataKey` but no `dataset` is provided.');
        zAxisLookup[defaultizedId] = processColorMap(addDefaultId((0, _extends2.default)({}, axisConfig, {
            data: dataset.map((d)=>d[dataKey])
        }), defaultizedId));
        axisIds.push(defaultizedId);
    });
    return {
        axis: zAxisLookup,
        axisIds
    };
}
const useChartZAxis = ({ params, store })=>{
    const { zAxis, dataset } = params;
    // The effect do not track any value defined synchronously during the 1st render by hooks called after `useChartZAxis`
    // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one
    const isFirstRender = React.useRef(true);
    React.useEffect(()=>{
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                zAxis: getZAxisState(zAxis, dataset)
            }));
    }, [
        zAxis,
        dataset,
        store
    ]);
    return {};
};
exports.useChartZAxis = useChartZAxis;
useChartZAxis.params = {
    zAxis: true,
    dataset: true
};
useChartZAxis.getInitialState = (params)=>({
        zAxis: getZAxisState(params.zAxis, params.dataset)
    });

},{"49127593c1ef3ddf":"6TFJp","3a7473154ae66720":"1P3rZ","8c94bce831236909":"lKa0J","42d86bcc7db5dafe":"jMk1U","e0ec595b2680cadd":"8yUXX"}],"dFxfN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartZAxis = void 0;
var _selectors = require("2b157f471b1449ec");
const selectRootState = (state)=>state;
const selectorChartZAxis = exports.selectorChartZAxis = (0, _selectors.createSelector)([
    selectRootState
], (state)=>state.zAxis);

},{"2b157f471b1449ec":"4YBdc"}],"2t6MO":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("44fdfda32ecbbfc8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartHighlight = void 0;
var _extends2 = _interopRequireDefault(require("4f7b772329398bb7"));
var _useEventCallback = _interopRequireDefault(require("a5feddfc306348cc"));
var _useEnhancedEffect = _interopRequireDefault(require("b0b0fedbdbdb89af"));
const useChartHighlight = ({ store, params, models })=>{
    (0, _useEnhancedEffect.default)(()=>{
        store.update((prevState)=>(0, _extends2.default)({}, prevState, {
                highlight: (0, _extends2.default)({}, prevState.highlight, {
                    item: models.highlightedItem.value
                })
            }));
    }, [
        store,
        models.highlightedItem.value
    ]);
    const clearHighlight = (0, _useEventCallback.default)(()=>{
        params.onHighlightChange?.(null);
        models.highlightedItem.setControlledValue(null);
    });
    const setHighlight = (0, _useEventCallback.default)((newItem)=>{
        params.onHighlightChange?.(newItem);
        models.highlightedItem.setControlledValue(newItem);
    });
    return {
        instance: {
            clearHighlight,
            setHighlight
        }
    };
};
exports.useChartHighlight = useChartHighlight;
useChartHighlight.models = {
    highlightedItem: {
        getDefaultValue: ()=>null
    }
};
useChartHighlight.getInitialState = (params)=>({
        highlight: {
            item: params.highlightedItem ?? null
        }
    });
useChartHighlight.params = {
    highlightedItem: true,
    onHighlightChange: true
};

},{"44fdfda32ecbbfc8":"1P3rZ","4f7b772329398bb7":"lKa0J","a5feddfc306348cc":"7odel","b0b0fedbdbdb89af":"egHZg"}],"BKYyr":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("10bc9d61a5e8f7c4").default;
var _interopRequireDefault = require("1457d5c9d239ea24").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seriesConfig = void 0;
var _extremums = require("77d0fb8b3405ad10");
var _seriesProcessor = _interopRequireDefault(require("9044fe5d2862d44c"));
var _legend = _interopRequireDefault(require("f652bc83fb571a38"));
var _getColor = _interopRequireDefault(require("1cd5a48e9416d75f"));
var _tooltip = _interopRequireWildcard(require("f1995f7ce9d2f35d"));
var _getSeriesWithDefaultValues = _interopRequireDefault(require("909e0dc65d55b20a"));
const seriesConfig = exports.seriesConfig = {
    seriesProcessor: _seriesProcessor.default,
    colorProcessor: _getColor.default,
    legendGetter: _legend.default,
    tooltipGetter: _tooltip.default,
    axisTooltipGetter: _tooltip.axisTooltipGetter,
    xExtremumGetter: _extremums.getExtremumX,
    yExtremumGetter: _extremums.getExtremumY,
    getSeriesWithDefaultValues: _getSeriesWithDefaultValues.default
};

},{"10bc9d61a5e8f7c4":"6TFJp","1457d5c9d239ea24":"1P3rZ","77d0fb8b3405ad10":"hiydw","9044fe5d2862d44c":"eUp4Q","f652bc83fb571a38":"eLdiN","1cd5a48e9416d75f":"dlmzv","f1995f7ce9d2f35d":"7uW0v","909e0dc65d55b20a":"5M9Ar"}],"hiydw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getExtremumY = exports.getExtremumX = void 0;
const createResult = (data, direction)=>{
    if (direction === 'x') return {
        x: data,
        y: null
    };
    return {
        x: null,
        y: data
    };
};
const getBaseExtremum = (params)=>{
    const { axis, getFilters, isDefaultAxis } = params;
    const filter = getFilters?.({
        currentAxisId: axis.id,
        isDefaultAxis
    });
    const data = filter ? axis.data?.filter((_, i)=>filter({
            x: null,
            y: null
        }, i)) : axis.data;
    const minX = Math.min(...data ?? []);
    const maxX = Math.max(...data ?? []);
    return [
        minX,
        maxX
    ];
};
const getValueExtremum = (direction)=>(params)=>{
        const { series, axis, getFilters, isDefaultAxis } = params;
        return Object.keys(series).filter((seriesId)=>{
            const axisId = direction === 'x' ? series[seriesId].xAxisId : series[seriesId].yAxisId;
            return axisId === axis.id || isDefaultAxis && axisId === undefined;
        }).reduce((acc, seriesId)=>{
            const { stackedData } = series[seriesId];
            const filter = getFilters?.({
                currentAxisId: axis.id,
                isDefaultAxis,
                seriesXAxisId: series[seriesId].xAxisId,
                seriesYAxisId: series[seriesId].yAxisId
            });
            const [seriesMin, seriesMax] = stackedData?.reduce((seriesAcc, values, index)=>{
                if (filter && (!filter(createResult(values[0], direction), index) || !filter(createResult(values[1], direction), index))) return seriesAcc;
                return [
                    Math.min(...values, seriesAcc[0]),
                    Math.max(...values, seriesAcc[1])
                ];
            }, [
                Infinity,
                -Infinity
            ]) ?? [
                Infinity,
                -Infinity
            ];
            return [
                Math.min(seriesMin, acc[0]),
                Math.max(seriesMax, acc[1])
            ];
        }, [
            Infinity,
            -Infinity
        ]);
    };
const getExtremumX = (params)=>{
    // Notice that bar should be all horizontal or all vertical.
    // Don't think it's a problem for now
    const isHorizontal = Object.keys(params.series).some((seriesId)=>params.series[seriesId].layout === 'horizontal');
    if (isHorizontal) return getValueExtremum('x')(params);
    return getBaseExtremum(params);
};
exports.getExtremumX = getExtremumX;
const getExtremumY = (params)=>{
    const isHorizontal = Object.keys(params.series).some((seriesId)=>params.series[seriesId].layout === 'horizontal');
    if (isHorizontal) return getBaseExtremum(params);
    return getValueExtremum('y')(params);
};
exports.getExtremumY = getExtremumY;

},{}],"eUp4Q":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("322732a462570d2c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("12befbcdf52c55d9"));
var _d3Shape = require("c2af72ddbe459b5b");
var _warning = require("8290e1dd8151e844");
var _stackSeries = require("92e914d3c553c55d");
var _defaultizeValueFormatter = require("a999b7a4f9159cc");
const seriesProcessor = (params, dataset)=>{
    const { seriesOrder, series } = params;
    const stackingGroups = (0, _stackSeries.getStackingGroups)(params);
    // Create a data set with format adapted to d3
    const d3Dataset = dataset ?? [];
    seriesOrder.forEach((id)=>{
        const data = series[id].data;
        if (data !== undefined) data.forEach((value, index)=>{
            if (d3Dataset.length <= index) d3Dataset.push({
                [id]: value
            });
            else d3Dataset[index][id] = value;
        });
        else if (dataset === undefined) throw new Error([
            `MUI X Charts: bar series with id='${id}' has no data.`,
            'Either provide a data property to the series or use the dataset prop.'
        ].join('\n'));
    });
    const completedSeries = {};
    stackingGroups.forEach((stackingGroup)=>{
        const { ids, stackingOffset, stackingOrder } = stackingGroup;
        // Get stacked values, and derive the domain
        const stackedSeries = (0, _d3Shape.stack)().keys(ids.map((id)=>{
            // Use dataKey if needed and available
            const dataKey = series[id].dataKey;
            return series[id].data === undefined && dataKey !== undefined ? dataKey : id;
        })).value((d, key)=>d[key] ?? 0) // defaultize null value to 0
        .order(stackingOrder).offset(stackingOffset)(d3Dataset);
        ids.forEach((id, index)=>{
            const dataKey = series[id].dataKey;
            completedSeries[id] = (0, _extends2.default)({
                layout: 'vertical',
                labelMarkType: 'square'
            }, series[id], {
                data: dataKey ? dataset.map((data)=>{
                    const value = data[dataKey];
                    if (typeof value !== 'number') {
                        if (value !== null) (0, _warning.warnOnce)([
                            `MUI X Charts: your dataset key "${dataKey}" is used for plotting bars, but contains nonnumerical elements.`,
                            'Bar plots only support numbers and null values.'
                        ]);
                        return 0;
                    }
                    return value;
                }) : series[id].data,
                stackedData: stackedSeries[index].map(([a, b])=>[
                        a,
                        b
                    ])
            });
        });
    });
    return {
        seriesOrder,
        stackingGroups,
        series: (0, _defaultizeValueFormatter.defaultizeValueFormatter)(completedSeries, (v)=>v == null ? '' : v.toLocaleString())
    };
};
var _default = exports.default = seriesProcessor;

},{"322732a462570d2c":"1P3rZ","12befbcdf52c55d9":"lKa0J","c2af72ddbe459b5b":"bw44j","8290e1dd8151e844":"4GMHX","92e914d3c553c55d":"cbS6l","a999b7a4f9159cc":"koQq3"}],"cbS6l":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getStackingGroups = exports.StackOrder = exports.StackOffset = void 0;
var _d3Shape = require("54305220e06bddec");
const StackOrder = exports.StackOrder = {
    /**
   * Series order such that the earliest series (according to the maximum value) is at the bottom.
   * */ appearance: _d3Shape.stackOrderAppearance,
    /**
   *  Series order such that the smallest series (according to the sum of values) is at the bottom.
   * */ ascending: _d3Shape.stackOrderAscending,
    /**
   * Series order such that the largest series (according to the sum of values) is at the bottom.
   */ descending: _d3Shape.stackOrderDescending,
    /**
   * Series order such that the earliest series (according to the maximum value) are on the inside and the later series are on the outside. This order is recommended for streamgraphs in conjunction with the wiggle offset. See Stacked Graphs—Geometry & Aesthetics by Byron & Wattenberg for more information.
   */ insideOut: _d3Shape.stackOrderInsideOut,
    /**
   * Given series order [0, 1, … n - 1] where n is the number of elements in series. Thus, the stack order is given by the key accessor.
   */ none: _d3Shape.stackOrderNone,
    /**
   * Reverse of the given series order [n - 1, n - 2, … 0] where n is the number of elements in series. Thus, the stack order is given by the reverse of the key accessor.
   */ reverse: _d3Shape.stackOrderReverse
};
const StackOffset = exports.StackOffset = {
    /**
   * Applies a zero baseline and normalizes the values for each point such that the topline is always one.
   * */ expand: _d3Shape.stackOffsetExpand,
    /**
   * Positive values are stacked above zero, negative values are stacked below zero, and zero values are stacked at zero.
   * */ diverging: _d3Shape.stackOffsetDiverging,
    /**
   * Applies a zero baseline.
   * */ none: _d3Shape.stackOffsetNone,
    /**
   * Shifts the baseline down such that the center of the streamgraph is always at zero.
   * */ silhouette: _d3Shape.stackOffsetSilhouette,
    /**
   * Shifts the baseline so as to minimize the weighted wiggle of layers. This offset is recommended for streamgraphs in conjunction with the inside-out order. See Stacked Graphs—Geometry & Aesthetics by Bryon & Wattenberg for more information.
   * */ wiggle: _d3Shape.stackOffsetWiggle
};
/**
 * Takes a set of series and groups their ids
 * @param series the object of all bars series
 * @returns an array of groups, including the ids, the stacking order, and the stacking offset.
 */ const getStackingGroups = (params)=>{
    const { series, seriesOrder, defaultStrategy } = params;
    const stackingGroups = [];
    const stackIndex = {};
    seriesOrder.forEach((id)=>{
        const { stack, stackOrder, stackOffset } = series[id];
        if (stack === undefined) stackingGroups.push({
            ids: [
                id
            ],
            stackingOrder: StackOrder.none,
            stackingOffset: StackOffset.none
        });
        else if (stackIndex[stack] === undefined) {
            stackIndex[stack] = stackingGroups.length;
            stackingGroups.push({
                ids: [
                    id
                ],
                stackingOrder: StackOrder[stackOrder ?? defaultStrategy?.stackOrder ?? 'none'],
                stackingOffset: StackOffset[stackOffset ?? defaultStrategy?.stackOffset ?? 'diverging']
            });
        } else {
            stackingGroups[stackIndex[stack]].ids.push(id);
            if (stackOrder !== undefined) stackingGroups[stackIndex[stack]].stackingOrder = StackOrder[stackOrder];
            if (stackOffset !== undefined) stackingGroups[stackIndex[stack]].stackingOffset = StackOffset[stackOffset];
        }
    });
    return stackingGroups;
};
exports.getStackingGroups = getStackingGroups;

},{"54305220e06bddec":"bw44j"}],"koQq3":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("aa2686784db5b7d1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultizeValueFormatter = defaultizeValueFormatter;
var _extends2 = _interopRequireDefault(require("cde0283933fd4a6"));
function defaultizeValueFormatter(series, defaultValueFormatter) {
    const defaultizedSeries = {};
    Object.keys(series).forEach((seriesId)=>{
        defaultizedSeries[seriesId] = (0, _extends2.default)({}, series[seriesId], {
            valueFormatter: series[seriesId].valueFormatter ?? defaultValueFormatter
        });
    });
    return defaultizedSeries;
}

},{"aa2686784db5b7d1":"1P3rZ","cde0283933fd4a6":"lKa0J"}],"eLdiN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _getLabel = require("b2cae275ea2a0f14");
const legendGetter = (params)=>{
    const { seriesOrder, series } = params;
    return seriesOrder.reduce((acc, seriesId)=>{
        const formattedLabel = (0, _getLabel.getLabel)(series[seriesId].label, 'legend');
        if (formattedLabel === undefined) return acc;
        acc.push({
            markType: series[seriesId].labelMarkType,
            id: seriesId,
            seriesId,
            color: series[seriesId].color,
            label: formattedLabel
        });
        return acc;
    }, []);
};
var _default = exports.default = legendGetter;

},{"b2cae275ea2a0f14":"kBm8x"}],"kBm8x":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getLabel = getLabel;
function getLabel(value, location) {
    return typeof value === 'function' ? value(location) : value;
}

},{}],"dlmzv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const getColor = (series, xAxis, yAxis)=>{
    const verticalLayout = series.layout === 'vertical';
    const bandColorScale = verticalLayout ? xAxis?.colorScale : yAxis?.colorScale;
    const valueColorScale = verticalLayout ? yAxis?.colorScale : xAxis?.colorScale;
    const bandValues = verticalLayout ? xAxis?.data : yAxis?.data;
    if (valueColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = series.data[dataIndex];
        const color = value === null ? series.color : valueColorScale(value);
        if (color === null) return series.color;
        return color;
    };
    if (bandColorScale && bandValues) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = bandValues[dataIndex];
        const color = value === null ? series.color : bandColorScale(value);
        if (color === null) return series.color;
        return color;
    };
    return ()=>series.color;
};
var _default = exports.default = getColor;

},{}],"7uW0v":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.axisTooltipGetter = void 0;
var _getLabel = require("c746d544039d9492");
const tooltipGetter = (params)=>{
    const { series, getColor, identifier } = params;
    if (!identifier || identifier.dataIndex === undefined) return null;
    const label = (0, _getLabel.getLabel)(series.label, 'tooltip');
    const value = series.data[identifier.dataIndex];
    if (value == null) return null;
    const formattedValue = series.valueFormatter(value, {
        dataIndex: identifier.dataIndex
    });
    return {
        identifier,
        color: getColor(identifier.dataIndex),
        label,
        value,
        formattedValue,
        markType: series.labelMarkType
    };
};
const axisTooltipGetter = (series)=>{
    return Object.values(series).map((s)=>s.layout === 'horizontal' ? {
            direction: 'y',
            axisId: s.yAxisId
        } : {
            direction: 'x',
            axisId: s.xAxisId
        });
};
exports.axisTooltipGetter = axisTooltipGetter;
var _default = exports.default = tooltipGetter;

},{"c746d544039d9492":"kBm8x"}],"5M9Ar":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e0abef7905f95093").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("3c0e4af9df94580e"));
const getSeriesWithDefaultValues = (seriesData, seriesIndex, colors)=>{
    return (0, _extends2.default)({
        id: seriesData.id ?? `auto-generated-id-${seriesIndex}`,
        color: colors[seriesIndex % colors.length]
    }, seriesData);
};
var _default = exports.default = getSeriesWithDefaultValues;

},{"e0abef7905f95093":"1P3rZ","3c0e4af9df94580e":"lKa0J"}],"9ghVP":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("421fff8a39d2aa92").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seriesConfig = void 0;
var _extremums = require("f6b3f6dd7d75272c");
var _seriesProcessor = _interopRequireDefault(require("a7d3bafbedd4fcb1"));
var _getColor = _interopRequireDefault(require("295ea89c5863f51c"));
var _legend = _interopRequireDefault(require("3adb06e4dc3cad70"));
var _tooltip = _interopRequireDefault(require("575dd6138a94b29d"));
var _getSeriesWithDefaultValues = _interopRequireDefault(require("3bfcf960742d08a6"));
const seriesConfig = exports.seriesConfig = {
    seriesProcessor: _seriesProcessor.default,
    colorProcessor: _getColor.default,
    legendGetter: _legend.default,
    tooltipGetter: _tooltip.default,
    xExtremumGetter: _extremums.getExtremumX,
    yExtremumGetter: _extremums.getExtremumY,
    getSeriesWithDefaultValues: _getSeriesWithDefaultValues.default
};

},{"421fff8a39d2aa92":"1P3rZ","f6b3f6dd7d75272c":"5bxcJ","a7d3bafbedd4fcb1":"8qiOH","295ea89c5863f51c":"gIQpU","3adb06e4dc3cad70":"b8TkI","575dd6138a94b29d":"3upbJ","3bfcf960742d08a6":"4WnUM"}],"5bxcJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getExtremumY = exports.getExtremumX = void 0;
const mergeMinMax = (acc, val)=>{
    return [
        val[0] === null ? acc[0] : Math.min(acc[0], val[0]),
        val[1] === null ? acc[1] : Math.max(acc[1], val[1])
    ];
};
const getExtremumX = (params)=>{
    const { series, axis, isDefaultAxis, getFilters } = params;
    return Object.keys(series).filter((seriesId)=>{
        const axisId = series[seriesId].xAxisId;
        return axisId === axis.id || axisId === undefined && isDefaultAxis;
    }).reduce((acc, seriesId)=>{
        const filter = getFilters?.({
            currentAxisId: axis.id,
            isDefaultAxis,
            seriesXAxisId: series[seriesId].xAxisId,
            seriesYAxisId: series[seriesId].yAxisId
        });
        const seriesMinMax = series[seriesId].data?.reduce((accSeries, d, dataIndex)=>{
            if (filter && !filter(d, dataIndex)) return accSeries;
            return mergeMinMax(accSeries, [
                d.x,
                d.x
            ]);
        }, [
            Infinity,
            -Infinity
        ]);
        return mergeMinMax(acc, seriesMinMax ?? [
            Infinity,
            -Infinity
        ]);
    }, [
        Infinity,
        -Infinity
    ]);
};
exports.getExtremumX = getExtremumX;
const getExtremumY = (params)=>{
    const { series, axis, isDefaultAxis, getFilters } = params;
    return Object.keys(series).filter((seriesId)=>{
        const axisId = series[seriesId].yAxisId;
        return axisId === axis.id || axisId === undefined && isDefaultAxis;
    }).reduce((acc, seriesId)=>{
        const filter = getFilters?.({
            currentAxisId: axis.id,
            isDefaultAxis,
            seriesXAxisId: series[seriesId].xAxisId,
            seriesYAxisId: series[seriesId].yAxisId
        });
        const seriesMinMax = series[seriesId].data?.reduce((accSeries, d, dataIndex)=>{
            if (filter && !filter(d, dataIndex)) return accSeries;
            return mergeMinMax(accSeries, [
                d.y,
                d.y
            ]);
        }, [
            Infinity,
            -Infinity
        ]);
        return mergeMinMax(acc, seriesMinMax ?? [
            Infinity,
            -Infinity
        ]);
    }, [
        Infinity,
        -Infinity
    ]);
};
exports.getExtremumY = getExtremumY;

},{}],"8qiOH":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4daf090b7d3988af").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("f54ee711c2b70093"));
const seriesProcessor = ({ series, seriesOrder }, dataset)=>{
    const completeSeries = Object.fromEntries(Object.entries(series).map(([seriesId, seriesData])=>{
        const datasetKeys = seriesData?.datasetKeys;
        const missingKeys = [
            'x',
            'y',
            'id'
        ].filter((key)=>typeof datasetKeys?.[key] !== 'string');
        if (seriesData?.datasetKeys && missingKeys.length > 0) throw new Error([
            `MUI X Charts: scatter series with id='${seriesId}' has incomplete datasetKeys.`,
            `Properties ${missingKeys.map((key)=>`"${key}"`).join(', ')} are missing.`
        ].join('\n'));
        const data = !datasetKeys ? seriesData.data ?? [] : dataset?.map((d)=>{
            return {
                x: d[datasetKeys.x] ?? null,
                y: d[datasetKeys.y] ?? null,
                z: datasetKeys.z && d[datasetKeys.z],
                id: datasetKeys.id && d[datasetKeys.id]
            };
        }) ?? [];
        return [
            seriesId,
            (0, _extends2.default)({
                labelMarkType: 'circle',
                markerSize: 4
            }, seriesData, {
                data,
                valueFormatter: seriesData.valueFormatter ?? ((v)=>v && `(${v.x}, ${v.y})`)
            })
        ];
    }));
    return {
        series: completeSeries,
        seriesOrder
    };
};
var _default = exports.default = seriesProcessor;

},{"4daf090b7d3988af":"1P3rZ","f54ee711c2b70093":"lKa0J"}],"gIQpU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const getColor = (series, xAxis, yAxis, zAxis)=>{
    const zColorScale = zAxis?.colorScale;
    const yColorScale = yAxis?.colorScale;
    const xColorScale = xAxis?.colorScale;
    if (zColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        if (zAxis?.data?.[dataIndex] !== undefined) {
            const color = zColorScale(zAxis?.data?.[dataIndex]);
            if (color !== null) return color;
        }
        const value = series.data[dataIndex];
        const color = value === null ? series.color : zColorScale(value.z);
        if (color === null) return series.color;
        return color;
    };
    if (yColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = series.data[dataIndex];
        const color = value === null ? series.color : yColorScale(value.y);
        if (color === null) return series.color;
        return color;
    };
    if (xColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = series.data[dataIndex];
        const color = value === null ? series.color : xColorScale(value.x);
        if (color === null) return series.color;
        return color;
    };
    return ()=>series.color;
};
var _default = exports.default = getColor;

},{}],"b8TkI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _getLabel = require("fbf6fed978fd0a5f");
const legendGetter = (params)=>{
    const { seriesOrder, series } = params;
    return seriesOrder.reduce((acc, seriesId)=>{
        const formattedLabel = (0, _getLabel.getLabel)(series[seriesId].label, 'legend');
        if (formattedLabel === undefined) return acc;
        acc.push({
            markType: series[seriesId].labelMarkType,
            id: seriesId,
            seriesId,
            color: series[seriesId].color,
            label: formattedLabel
        });
        return acc;
    }, []);
};
var _default = exports.default = legendGetter;

},{"fbf6fed978fd0a5f":"kBm8x"}],"3upbJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _getLabel = require("a001e68139ba893c");
const tooltipGetter = (params)=>{
    const { series, getColor, identifier } = params;
    if (!identifier || identifier.dataIndex === undefined) return null;
    const label = (0, _getLabel.getLabel)(series.label, 'tooltip');
    const value = series.data[identifier.dataIndex];
    const formattedValue = series.valueFormatter(value, {
        dataIndex: identifier.dataIndex
    });
    return {
        identifier,
        color: getColor(identifier.dataIndex),
        label,
        value,
        formattedValue,
        markType: series.labelMarkType
    };
};
var _default = exports.default = tooltipGetter;

},{"a001e68139ba893c":"kBm8x"}],"4WnUM":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3aa6bde663f5ed22").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("c36eb673994811bc"));
const getSeriesWithDefaultValues = (seriesData, seriesIndex, colors)=>{
    return (0, _extends2.default)({
        id: seriesData.id ?? `auto-generated-id-${seriesIndex}`,
        color: colors[seriesIndex % colors.length]
    }, seriesData);
};
var _default = exports.default = getSeriesWithDefaultValues;

},{"3aa6bde663f5ed22":"1P3rZ","c36eb673994811bc":"lKa0J"}],"bXncK":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("418f55d5021c6ab7").default;
var _interopRequireDefault = require("a7d44b0f1c4897f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seriesConfig = void 0;
var _extremums = require("bfe14690ec72f7b2");
var _seriesProcessor = _interopRequireDefault(require("879456b69fe9f04"));
var _getColor = _interopRequireDefault(require("b4a3e660840f3f8f"));
var _legend = _interopRequireDefault(require("b97fdacba508b9cd"));
var _tooltip = _interopRequireWildcard(require("78220b38e47bb26c"));
var _getSeriesWithDefaultValues = _interopRequireDefault(require("5f543da7147682e7"));
const seriesConfig = exports.seriesConfig = {
    colorProcessor: _getColor.default,
    seriesProcessor: _seriesProcessor.default,
    legendGetter: _legend.default,
    tooltipGetter: _tooltip.default,
    axisTooltipGetter: _tooltip.axisTooltipGetter,
    xExtremumGetter: _extremums.getExtremumX,
    yExtremumGetter: _extremums.getExtremumY,
    getSeriesWithDefaultValues: _getSeriesWithDefaultValues.default
};

},{"418f55d5021c6ab7":"6TFJp","a7d44b0f1c4897f":"1P3rZ","bfe14690ec72f7b2":"4aXA7","879456b69fe9f04":"e1PLA","b4a3e660840f3f8f":"awyA2","b97fdacba508b9cd":"1QFY3","78220b38e47bb26c":"71Sm3","5f543da7147682e7":"g0ukK"}],"4aXA7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getExtremumY = exports.getExtremumX = void 0;
const getExtremumX = (params)=>{
    const { axis } = params;
    const minX = Math.min(...axis.data ?? []);
    const maxX = Math.max(...axis.data ?? []);
    return [
        minX,
        maxX
    ];
};
exports.getExtremumX = getExtremumX;
function getSeriesExtremums(getValues, data, stackedData, filter) {
    return stackedData.reduce((seriesAcc, stackedValue, index)=>{
        if (data[index] === null) return seriesAcc;
        const [base, value] = getValues(stackedValue);
        if (filter && (!filter({
            y: base,
            x: null
        }, index) || !filter({
            y: value,
            x: null
        }, index))) return seriesAcc;
        return [
            Math.min(base, value, seriesAcc[0]),
            Math.max(base, value, seriesAcc[1])
        ];
    }, [
        Infinity,
        -Infinity
    ]);
}
const getExtremumY = (params)=>{
    const { series, axis, isDefaultAxis, getFilters } = params;
    return Object.keys(series).filter((seriesId)=>{
        const yAxisId = series[seriesId].yAxisId;
        return yAxisId === axis.id || isDefaultAxis && yAxisId === undefined;
    }).reduce((acc, seriesId)=>{
        const { area, stackedData, data } = series[seriesId];
        const isArea = area !== undefined;
        const filter = getFilters?.({
            currentAxisId: axis.id,
            isDefaultAxis,
            seriesXAxisId: series[seriesId].xAxisId,
            seriesYAxisId: series[seriesId].yAxisId
        });
        // Since this series is not used to display an area, we do not consider the base (the d[0]).
        const getValues = isArea && axis.scaleType !== 'log' && typeof series[seriesId].baseline !== 'string' ? (d)=>d : (d)=>[
                d[1],
                d[1]
            ];
        const seriesExtremums = getSeriesExtremums(getValues, data, stackedData, filter);
        const [seriesMin, seriesMax] = seriesExtremums;
        return [
            Math.min(seriesMin, acc[0]),
            Math.max(seriesMax, acc[1])
        ];
    }, [
        Infinity,
        -Infinity
    ]);
};
exports.getExtremumY = getExtremumY;

},{}],"e1PLA":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e51f4633759acf1f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("55f14295c5d29798"));
var _d3Shape = require("c9c5b4846a8ec4a6");
var _warning = require("c847e0543321957e");
var _stackSeries = require("9db0df1ed5f2d58d");
var _defaultizeValueFormatter = require("574a85491ee3ad94");
// For now it's a copy past of bar charts formatter, but maybe will diverge later
const seriesProcessor = (params, dataset)=>{
    const { seriesOrder, series } = params;
    const stackingGroups = (0, _stackSeries.getStackingGroups)((0, _extends2.default)({}, params, {
        defaultStrategy: {
            stackOffset: 'none'
        }
    }));
    // Create a data set with format adapted to d3
    const d3Dataset = dataset ?? [];
    seriesOrder.forEach((id)=>{
        const data = series[id].data;
        if (data !== undefined) data.forEach((value, index)=>{
            if (d3Dataset.length <= index) d3Dataset.push({
                [id]: value
            });
            else d3Dataset[index][id] = value;
        });
        else if (dataset === undefined && true) throw new Error([
            `MUI X Charts: line series with id='${id}' has no data.`,
            'Either provide a data property to the series or use the dataset prop.'
        ].join('\n'));
    });
    const completedSeries = {};
    stackingGroups.forEach((stackingGroup)=>{
        // Get stacked values, and derive the domain
        const { ids, stackingOrder, stackingOffset } = stackingGroup;
        const stackedSeries = (0, _d3Shape.stack)().keys(ids.map((id)=>{
            // Use dataKey if needed and available
            const dataKey = series[id].dataKey;
            return series[id].data === undefined && dataKey !== undefined ? dataKey : id;
        })).value((d, key)=>d[key] ?? 0) // defaultize null value to 0
        .order(stackingOrder).offset(stackingOffset)(d3Dataset);
        ids.forEach((id, index)=>{
            const dataKey = series[id].dataKey;
            completedSeries[id] = (0, _extends2.default)({
                labelMarkType: 'line'
            }, series[id], {
                data: dataKey ? dataset.map((data)=>{
                    const value = data[dataKey];
                    if (typeof value !== 'number') {
                        if (value !== null) (0, _warning.warnOnce)([
                            `MUI X Charts: Your dataset key "${dataKey}" is used for plotting line, but contains nonnumerical elements.`,
                            'Line plots only support numbers and null values.'
                        ]);
                        return null;
                    }
                    return value;
                }) : series[id].data,
                stackedData: stackedSeries[index].map(([a, b])=>[
                        a,
                        b
                    ])
            });
        });
    });
    return {
        seriesOrder,
        stackingGroups,
        series: (0, _defaultizeValueFormatter.defaultizeValueFormatter)(completedSeries, (v)=>v == null ? '' : v.toLocaleString())
    };
};
var _default = exports.default = seriesProcessor;

},{"e51f4633759acf1f":"1P3rZ","55f14295c5d29798":"lKa0J","c9c5b4846a8ec4a6":"bw44j","c847e0543321957e":"4GMHX","9db0df1ed5f2d58d":"cbS6l","574a85491ee3ad94":"koQq3"}],"awyA2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const getColor = (series, xAxis, yAxis)=>{
    const yColorScale = yAxis?.colorScale;
    const xColorScale = xAxis?.colorScale;
    if (yColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = series.data[dataIndex];
        const color = value === null ? series.color : yColorScale(value);
        if (color === null) return series.color;
        return color;
    };
    if (xColorScale) return (dataIndex)=>{
        if (dataIndex === undefined) return series.color;
        const value = xAxis.data?.[dataIndex];
        const color = value === null ? series.color : xColorScale(value);
        if (color === null) return series.color;
        return color;
    };
    return ()=>series.color;
};
var _default = exports.default = getColor;

},{}],"1QFY3":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _getLabel = require("c66f470e6b12ae1e");
const legendGetter = (params)=>{
    const { seriesOrder, series } = params;
    return seriesOrder.reduce((acc, seriesId)=>{
        const formattedLabel = (0, _getLabel.getLabel)(series[seriesId].label, 'legend');
        if (formattedLabel === undefined) return acc;
        acc.push({
            markType: series[seriesId].labelMarkType,
            id: seriesId,
            seriesId,
            color: series[seriesId].color,
            label: formattedLabel
        });
        return acc;
    }, []);
};
var _default = exports.default = legendGetter;

},{"c66f470e6b12ae1e":"kBm8x"}],"71Sm3":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.axisTooltipGetter = void 0;
var _getLabel = require("84f8aa919a6f487");
const tooltipGetter = (params)=>{
    const { series, getColor, identifier } = params;
    if (!identifier || identifier.dataIndex === undefined) return null;
    const label = (0, _getLabel.getLabel)(series.label, 'tooltip');
    const value = series.data[identifier.dataIndex];
    const formattedValue = series.valueFormatter(value, {
        dataIndex: identifier.dataIndex
    });
    return {
        identifier,
        color: getColor(identifier.dataIndex),
        label,
        value,
        formattedValue,
        markType: series.labelMarkType
    };
};
const axisTooltipGetter = (series)=>{
    return Object.values(series).map((s)=>({
            direction: 'x',
            axisId: s.xAxisId
        }));
};
exports.axisTooltipGetter = axisTooltipGetter;
var _default = exports.default = tooltipGetter;

},{"84f8aa919a6f487":"kBm8x"}],"g0ukK":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("fa79107e304626d1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("ac1c4cf7fead6aab"));
const getSeriesWithDefaultValues = (seriesData, seriesIndex, colors)=>{
    return (0, _extends2.default)({
        id: seriesData.id ?? `auto-generated-id-${seriesIndex}`,
        color: colors[seriesIndex % colors.length]
    }, seriesData);
};
var _default = exports.default = getSeriesWithDefaultValues;

},{"fa79107e304626d1":"1P3rZ","ac1c4cf7fead6aab":"lKa0J"}],"7KCOq":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("b29ddd6fd8d00753").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seriesConfig = void 0;
var _seriesProcessor = _interopRequireDefault(require("429b8a79bfa62606"));
var _getColor = _interopRequireDefault(require("5295a43549d09a28"));
var _legend = _interopRequireDefault(require("3f76bc6748538138"));
var _tooltip = _interopRequireDefault(require("423f3a7a9e46bafd"));
var _getSeriesWithDefaultValues = _interopRequireDefault(require("56833944a608ff7b"));
const seriesConfig = exports.seriesConfig = {
    colorProcessor: _getColor.default,
    seriesProcessor: _seriesProcessor.default,
    legendGetter: _legend.default,
    tooltipGetter: _tooltip.default,
    getSeriesWithDefaultValues: _getSeriesWithDefaultValues.default
};

},{"b29ddd6fd8d00753":"1P3rZ","429b8a79bfa62606":"3L5aC","5295a43549d09a28":"g6Inv","3f76bc6748538138":"cWzBC","423f3a7a9e46bafd":"au0Zb","56833944a608ff7b":"cs7kA"}],"3L5aC":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("34e3839ea0f06d27").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("5b93dd24244235b3"));
var _d3Shape = require("ecb8d6f940dec744");
var _getLabel = require("8c8a3a0353c2a664");
const getSortingComparator = (comparator = 'none')=>{
    if (typeof comparator === 'function') return comparator;
    switch(comparator){
        case 'none':
            return null;
        case 'desc':
            return (a, b)=>b - a;
        case 'asc':
            return (a, b)=>a - b;
        default:
            return null;
    }
};
const seriesProcessor = (params)=>{
    const { seriesOrder, series } = params;
    const defaultizedSeries = {};
    seriesOrder.forEach((seriesId)=>{
        const arcs = (0, _d3Shape.pie)().startAngle(2 * Math.PI * (series[seriesId].startAngle ?? 0) / 360).endAngle(2 * Math.PI * (series[seriesId].endAngle ?? 360) / 360).padAngle(2 * Math.PI * (series[seriesId].paddingAngle ?? 0) / 360).sortValues(getSortingComparator(series[seriesId].sortingValues ?? 'none'))(series[seriesId].data.map((piePoint)=>piePoint.value));
        defaultizedSeries[seriesId] = (0, _extends2.default)({
            labelMarkType: 'circle',
            valueFormatter: (item)=>item.value.toLocaleString()
        }, series[seriesId], {
            data: series[seriesId].data.map((item, index)=>(0, _extends2.default)({}, item, {
                    id: item.id ?? `auto-generated-pie-id-${seriesId}-${index}`
                }, arcs[index])).map((item, index)=>(0, _extends2.default)({
                    labelMarkType: 'circle'
                }, item, {
                    formattedValue: series[seriesId].valueFormatter?.((0, _extends2.default)({}, item, {
                        label: (0, _getLabel.getLabel)(item.label, 'arc')
                    }), {
                        dataIndex: index
                    }) ?? item.value.toLocaleString()
                }))
        });
    });
    return {
        seriesOrder,
        series: defaultizedSeries
    };
};
var _default = exports.default = seriesProcessor;

},{"34e3839ea0f06d27":"1P3rZ","5b93dd24244235b3":"lKa0J","ecb8d6f940dec744":"bw44j","8c8a3a0353c2a664":"kBm8x"}],"g6Inv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const getColor = (series)=>{
    return (dataIndex)=>{
        return series.data[dataIndex].color;
    };
};
var _default = exports.default = getColor;

},{}],"cWzBC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _getLabel = require("4834dc4817fa542a");
const legendGetter = (params)=>{
    const { seriesOrder, series } = params;
    return seriesOrder.reduce((acc, seriesId)=>{
        series[seriesId].data.forEach((item, dataIndex)=>{
            const formattedLabel = (0, _getLabel.getLabel)(item.label, 'legend');
            if (formattedLabel === undefined) return;
            acc.push({
                markType: item.labelMarkType ?? series[seriesId].labelMarkType,
                id: item.id ?? dataIndex,
                seriesId,
                color: item.color,
                label: formattedLabel,
                itemId: item.id ?? dataIndex
            });
        });
        return acc;
    }, []);
};
var _default = exports.default = legendGetter;

},{"4834dc4817fa542a":"kBm8x"}],"au0Zb":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("30c4d4ce94afe34f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("15b8b26d1f8407ae"));
var _getLabel = require("65fa82c62b577688");
const tooltipGetter = (params)=>{
    const { series, getColor, identifier } = params;
    if (!identifier || identifier.dataIndex === undefined) return null;
    const point = series.data[identifier.dataIndex];
    if (point == null) return null;
    const label = (0, _getLabel.getLabel)(point.label, 'tooltip');
    const value = (0, _extends2.default)({}, point, {
        label
    });
    const formattedValue = series.valueFormatter(value, {
        dataIndex: identifier.dataIndex
    });
    return {
        identifier,
        color: getColor(identifier.dataIndex),
        label,
        value,
        formattedValue,
        markType: point.labelMarkType ?? series.labelMarkType
    };
};
var _default = exports.default = tooltipGetter;

},{"30c4d4ce94afe34f":"1P3rZ","15b8b26d1f8407ae":"lKa0J","65fa82c62b577688":"kBm8x"}],"cs7kA":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("afd8f03cd7bbf35a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("be8ae0e6201602ee"));
const getSeriesWithDefaultValues = (seriesData, seriesIndex, colors)=>{
    return (0, _extends2.default)({
        id: seriesData.id ?? `auto-generated-id-${seriesIndex}`
    }, seriesData, {
        data: seriesData.data.map((d, index)=>(0, _extends2.default)({
                color: colors[index % colors.length]
            }, d))
    });
};
var _default = exports.default = getSeriesWithDefaultValues;

},{"afd8f03cd7bbf35a":"1P3rZ","be8ae0e6201602ee":"lKa0J"}],"j8MRP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"iJG32":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("3f0b53c786aa6352").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartContext = void 0;
var React = _interopRequireWildcard(require("8072764cec0bf836"));
var _ChartContext = require("4ab3743448d74d3a");
const useChartContext = ()=>{
    const context = React.useContext(_ChartContext.ChartContext);
    if (context == null) throw new Error([
        'MUI X Charts: Could not find the Chart context.',
        'It looks like you rendered your component outside of a ChartDataProvider.',
        'This can also happen if you are bundling multiple versions of the library.'
    ].join('\n'));
    return context;
};
exports.useChartContext = useChartContext;

},{"3f0b53c786aa6352":"6TFJp","8072764cec0bf836":"jMk1U","4ab3743448d74d3a":"365nn"}],"bzOyV":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useItemHighlighted = useItemHighlighted;
var _useStore = require("8b9284e0272f380c");
var _useSelector = require("86c22b7a985e9636");
var _useChartHighlight = require("c2e7e5e6166341f7");
/**
 * A hook to check the highlighted state of the item.
 * This function already calculates that an item is not faded if it is highlighted.
 *
 * If you need fine control over the state, use the `useItemHighlightedGetter` hook instead.
 *
 * @param {HighlightItemData | null} item is the item to check
 * @returns {UseItemHighlightedReturnType} the state of the item
 */ function useItemHighlighted(item) {
    const store = (0, _useStore.useStore)();
    const isHighlighted = (0, _useSelector.useSelector)(store, _useChartHighlight.selectorChartsIsHighlighted, item);
    const isFaded = (0, _useSelector.useSelector)(store, _useChartHighlight.selectorChartsIsFaded, item);
    return {
        isHighlighted,
        isFaded: !isHighlighted && isFaded
    };
}

},{"8b9284e0272f380c":"6viTh","86c22b7a985e9636":"65ofz","c2e7e5e6166341f7":"i6CFN"}],"6viTh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useStore = useStore;
var _ChartProvider = require("9342b3728ea322cc");
// This hook should be removed because user and us should not interact with the store directly, but with public/private APIs
function useStore() {
    const context = (0, _ChartProvider.useChartContext)();
    if (!context) throw new Error([
        'MUI X Charts: Could not find the charts context.',
        'It looks like you rendered your component outside of a ChartContainer parent component.'
    ].join('\n'));
    return context.store;
}

},{"9342b3728ea322cc":"8cPIy"}],"i6CFN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartHighlight: true
};
Object.defineProperty(exports, "useChartHighlight", {
    enumerable: true,
    get: function() {
        return _useChartHighlight.useChartHighlight;
    }
});
var _useChartHighlight = require("a887cd24cc1e5f2f");
var _useChartHighlight2 = require("51ccb378d9e8b8d4");
Object.keys(_useChartHighlight2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartHighlight2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartHighlight2[key];
        }
    });
});

},{"a887cd24cc1e5f2f":"2t6MO","51ccb378d9e8b8d4":"gFn6P"}],"gFn6P":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartsIsHighlightedCallback = exports.selectorChartsIsHighlighted = exports.selectorChartsIsFadedCallback = exports.selectorChartsIsFaded = exports.selectorChartsHighlightedItem = exports.selectorChartsHighlightScopePerSeriesId = exports.selectorChartsHighlightScope = void 0;
var _selectors = require("7520913b6669b414");
var _createIsHighlighted = require("602d4c17fa95cfd5");
var _createIsFaded = require("159a57ba99850e88");
const selectHighlight = (state)=>state.highlight;
const selectSeries = (state)=>state.series;
const selectorChartsHighlightScopePerSeriesId = exports.selectorChartsHighlightScopePerSeriesId = (0, _selectors.createSelector)(selectSeries, (series)=>{
    const map = new Map();
    Object.keys(series.processedSeries).forEach((seriesType)=>{
        const seriesData = series.processedSeries[seriesType];
        Object.keys(seriesData?.series ?? {}).forEach((seriesId)=>{
            const seriesItem = seriesData?.series[seriesId];
            map.set(seriesId, seriesItem?.highlightScope);
        });
    });
    return map;
});
const selectorChartsHighlightedItem = exports.selectorChartsHighlightedItem = (0, _selectors.createSelector)(selectHighlight, (highlight)=>highlight.item);
const selectorChartsHighlightScope = exports.selectorChartsHighlightScope = (0, _selectors.createSelector)([
    selectorChartsHighlightScopePerSeriesId,
    selectorChartsHighlightedItem
], (seriesIdToHighlightScope, highlightedItem)=>{
    if (!highlightedItem) return null;
    const highlightScope = seriesIdToHighlightScope.get(highlightedItem.seriesId);
    if (highlightScope === undefined) return null;
    return highlightScope;
});
const selectorChartsIsHighlightedCallback = exports.selectorChartsIsHighlightedCallback = (0, _selectors.createSelector)([
    selectorChartsHighlightScope,
    selectorChartsHighlightedItem
], _createIsHighlighted.createIsHighlighted);
const selectorChartsIsFadedCallback = exports.selectorChartsIsFadedCallback = (0, _selectors.createSelector)([
    selectorChartsHighlightScope,
    selectorChartsHighlightedItem
], _createIsFaded.createIsFaded);
const selectorChartsIsHighlighted = exports.selectorChartsIsHighlighted = (0, _selectors.createSelector)([
    selectorChartsHighlightScope,
    selectorChartsHighlightedItem,
    (_, item)=>item
], (highlightScope, highlightedItem, item)=>(0, _createIsHighlighted.createIsHighlighted)(highlightScope, highlightedItem)(item));
const selectorChartsIsFaded = exports.selectorChartsIsFaded = (0, _selectors.createSelector)([
    selectorChartsHighlightScope,
    selectorChartsHighlightedItem,
    (_, item)=>item
], (highlightScope, highlightedItem, item)=>(0, _createIsFaded.createIsFaded)(highlightScope, highlightedItem)(item));

},{"7520913b6669b414":"4YBdc","602d4c17fa95cfd5":"jHM3v","159a57ba99850e88":"f6iUJ"}],"jHM3v":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createIsHighlighted = void 0;
const createIsHighlighted = (highlightScope, highlightedItem)=>(item)=>{
        if (!highlightScope || !highlightedItem || !item) return false;
        if (highlightScope.highlight === 'series') return item.seriesId === highlightedItem.seriesId;
        if (highlightScope.highlight === 'item') return item.dataIndex === highlightedItem.dataIndex && item.seriesId === highlightedItem.seriesId;
        return false;
    };
exports.createIsHighlighted = createIsHighlighted;

},{}],"f6iUJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createIsFaded = void 0;
const createIsFaded = (highlightScope, highlightedItem)=>(item)=>{
        if (!highlightScope || !highlightedItem || !item) return false;
        if (highlightScope.fade === 'series') return item.seriesId === highlightedItem.seriesId && item.dataIndex !== highlightedItem.dataIndex;
        if (highlightScope.fade === 'global') return item.seriesId !== highlightedItem.seriesId || item.dataIndex !== highlightedItem.dataIndex;
        return false;
    };
exports.createIsFaded = createIsFaded;

},{}],"ipIWo":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("11250341de6ba3e7").default;
var _interopRequireWildcard = require("7fec204ffeef4bd4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AnimatedArea = AnimatedArea;
var _extends2 = _interopRequireDefault(require("b87882303073a58f"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("1d9fe33c19344e6b"));
var React = _interopRequireWildcard(require("7df67dba7fa62081"));
var _propTypes = _interopRequireDefault(require("1e73c25a356f9c7b"));
var _useAnimateArea = require("4004d85fa88c728d");
var _AppearingMask = require("e63c9c0ad868a739");
var _jsxRuntime = require("21f9bf1973a1c6e");
const _excluded = [
    "skipAnimation",
    "ownerState"
];
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)
 *
 * API:
 *
 * - [AreaElement API](https://mui.com/x/api/charts/animated-area/)
 */ function AnimatedArea(props) {
    const { skipAnimation, ownerState } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const animatedProps = (0, _useAnimateArea.useAnimateArea)(props);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_AppearingMask.AppearingMask, {
        skipAnimation: skipAnimation,
        id: `${ownerState.id}-area-clip`,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("path", (0, _extends2.default)({
            fill: ownerState.gradientId ? `url(#${ownerState.gradientId})` : ownerState.color,
            filter: // eslint-disable-next-line no-nested-ternary
            ownerState.isHighlighted ? 'brightness(140%)' : ownerState.gradientId ? undefined : 'brightness(120%)',
            opacity: ownerState.isFaded ? 0.3 : 1,
            stroke: "none"
        }, other, animatedProps))
    });
}
AnimatedArea.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    d: _propTypes.default.string.isRequired,
    ownerState: _propTypes.default.shape({
        classes: _propTypes.default.object,
        color: _propTypes.default.string.isRequired,
        gradientId: _propTypes.default.string,
        id: _propTypes.default.oneOfType([
            _propTypes.default.number,
            _propTypes.default.string
        ]).isRequired,
        isFaded: _propTypes.default.bool.isRequired,
        isHighlighted: _propTypes.default.bool.isRequired
    }).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool
};

},{"11250341de6ba3e7":"1P3rZ","7fec204ffeef4bd4":"6TFJp","b87882303073a58f":"lKa0J","1d9fe33c19344e6b":"17jFf","7df67dba7fa62081":"jMk1U","1e73c25a356f9c7b":"GNqOQ","4004d85fa88c728d":"4RKH4","e63c9c0ad868a739":"8Ju4X","21f9bf1973a1c6e":"05iiF"}],"4RKH4":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimateArea = useAnimateArea;
var _d3Interpolate = require("86c15464469fc2f1");
var _useAnimate = require("5722fd8894f00617");
/** Animates an area of a line chart using a `path` element.
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called.
 */ function useAnimateArea(props) {
    return (0, _useAnimate.useAnimate)({
        d: props.d
    }, {
        createInterpolator: (lastProps, newProps)=>{
            const interpolate = (0, _d3Interpolate.interpolateString)(lastProps.d, newProps.d);
            return (t)=>({
                    d: interpolate(t)
                });
        },
        applyProps: (element, { d })=>element.setAttribute('d', d),
        transformProps: (p)=>p,
        skip: props.skipAnimation,
        ref: props.ref
    });
}

},{"86c15464469fc2f1":"2yPAl","5722fd8894f00617":"9IpEI"}],"2yPAl":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-interpolate` (CommonJS)
// See upstream license: https://github.com/d3/d3-interpolate/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("64ba72f933cdb44a");

},{"64ba72f933cdb44a":"f2QIz"}],"f2QIz":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-interpolate` (CommonJS)
// See upstream license: https://github.com/d3/d3-interpolate/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-interpolate`
module.exports = require("95377e57d9443162");

},{"95377e57d9443162":"c66Jx"}],"9IpEI":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("d22f3b036babdb81").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimate = useAnimate;
var _extends2 = _interopRequireDefault(require("9f66a2c64e8a587b"));
var _useForkRef = _interopRequireDefault(require("169b9d53d9d30861"));
var _useAnimateInternal = require("14faa7dd71ce3dd8");
/**
 * Hook to customize the animation of an element.
 * Animates a ref from `initialProps` to `props`.
 *
 * @param {object} props The props to animate to.
 *
 * @returns an object containing a ref that should be passed to the element to animate and the transformed props.
 * If `skip` is true, the transformed props are the `props` to animate to; if it is false, the transformed props are the
 * `initialProps`.
 *
 * The animated props are only accessible in `applyProps`. The props returned from this hook are not animated.
 *
 * When an animation starts, an interpolator is created using `createInterpolator`.
 * On every animation frame:
 * 1. The interpolator is called to get the interpolated props;
 * 2. `transformProps` is called to transform the interpolated props;
 * 3. `applyProps` is called to apply the transformed props to the element.
 *
 * If `props` change while an animation is progress, the animation will continue towards the new `props`.
 *
 * The animation can be skipped by setting `skip` to true. If a transition is in progress, it will immediately end
 * and `applyProps` be called with the final value. If there isn't a transition in progress, a new one won't be
 * started and `applyProps` will not be called.
 * */ function useAnimate(props, { createInterpolator, transformProps, applyProps, skip, initialProps = props, ref }) {
    const transform = transformProps ?? ((p)=>p);
    const animateRef = (0, _useAnimateInternal.useAnimateInternal)(props, {
        initialProps,
        createInterpolator,
        applyProps: (element, animatedProps)=>applyProps(element, transform(animatedProps)),
        skip
    });
    const usedProps = skip ? props : initialProps;
    return (0, _extends2.default)({}, transformProps(usedProps), {
        ref: (0, _useForkRef.default)(animateRef, ref)
    });
}

},{"d22f3b036babdb81":"1P3rZ","9f66a2c64e8a587b":"lKa0J","169b9d53d9d30861":"g7kn5","14faa7dd71ce3dd8":"3uszO"}],"3uszO":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("82ee16910a227fc2").default;
var _interopRequireWildcard = require("5762519aee72d20f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimateInternal = useAnimateInternal;
var React = _interopRequireWildcard(require("4a516d31f11fd45e"));
var _useEnhancedEffect = _interopRequireDefault(require("f2d715aafb7215f2"));
var _animation = require("8a74117fe2e58955");
var _Transition = require("f9dbf92595a394df");
var _shallowEqual = require("e7ed9a3e9af43845");
/** Animates a ref. The animation can be skipped by setting {@link skip} to true.
 *
 * If possible, prefer {@link useAnimate}.
 *
 * - If {@link skip} is false, a transition will be started.
 * - If {@link skip} is true and no transition is in progress, no transition will be started and {@link applyProps} will
 *   never be called.
 * - If {@link skip} becomes true and a transition is in progress, the transition will immediately end and
 *   {@link applyProps} be called with the final value.
 * */ function useAnimateInternal(props, { createInterpolator, applyProps, skip, initialProps = props }) {
    const lastInterpolatedPropsRef = React.useRef(initialProps);
    const transitionRef = React.useRef(null);
    const elementRef = React.useRef(null);
    const lastPropsRef = React.useRef(props);
    (0, _useEnhancedEffect.default)(()=>{
        lastPropsRef.current = props;
    }, [
        props
    ]);
    (0, _useEnhancedEffect.default)(()=>{
        if (skip) {
            transitionRef.current?.finish();
            transitionRef.current = null;
            elementRef.current = null;
            lastInterpolatedPropsRef.current = props;
        }
    }, [
        props,
        skip
    ]);
    const animate = React.useCallback((element)=>{
        const lastInterpolatedProps = lastInterpolatedPropsRef.current;
        const interpolate = createInterpolator(lastInterpolatedProps, props);
        transitionRef.current = new _Transition.Transition(_animation.ANIMATION_DURATION_MS, _animation.ANIMATION_TIMING_FUNCTION_JS, (t)=>{
            const interpolatedProps = interpolate(t);
            lastInterpolatedPropsRef.current = interpolatedProps;
            applyProps(element, interpolatedProps);
        });
    }, [
        applyProps,
        createInterpolator,
        props
    ]);
    const setRef = React.useCallback((element)=>{
        if (element === null) {
            transitionRef.current?.stop();
            return;
        }
        const lastElement = elementRef.current;
        if (lastElement === element) {
            // If it's the same element and same props, resume the transition.
            if ((0, _shallowEqual.shallowEqual)(lastPropsRef.current, props)) {
                transitionRef.current?.resume();
                return;
            }
            // If props aren't the same, stop the transition and start a new animation.
            transitionRef.current?.stop();
        }
        // If it's a different element, stop the transition of the last element and start a new animation.
        if (lastElement) transitionRef.current?.stop();
        elementRef.current = element;
        if (transitionRef.current || !skip) animate(element);
    }, [
        animate,
        props,
        skip
    ]);
    return setRef;
}

},{"82ee16910a227fc2":"1P3rZ","5762519aee72d20f":"6TFJp","4a516d31f11fd45e":"jMk1U","f2d715aafb7215f2":"egHZg","8a74117fe2e58955":"aSuCR","f9dbf92595a394df":"gw1FU","e7ed9a3e9af43845":"3DqfC"}],"aSuCR":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6f87f1ad933e2ef5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ANIMATION_TIMING_FUNCTION_JS = exports.ANIMATION_TIMING_FUNCTION = exports.ANIMATION_DURATION_MS = void 0;
var _bezierEasing = _interopRequireDefault(require("5abd5accb0b71c56"));
const ANIMATION_DURATION_MS = exports.ANIMATION_DURATION_MS = 300;
const ANIMATION_TIMING_FUNCTION = exports.ANIMATION_TIMING_FUNCTION = 'cubic-bezier(0.66, 0, 0.34, 1)';
const ANIMATION_TIMING_FUNCTION_JS = exports.ANIMATION_TIMING_FUNCTION_JS = (0, _bezierEasing.default)(0.66, 0, 0.34, 1);

},{"6f87f1ad933e2ef5":"1P3rZ","5abd5accb0b71c56":"bTCsH"}],"bTCsH":[function(require,module,exports,__globalThis) {
/**
 * https://github.com/gre/bezier-easing
 * BezierEasing - use bezier curve for transition easing function
 * by Gaëtan Renaudeau 2014 - 2015 – MIT License
 */ // These values are established by empiricism with tests (tradeoff: performance VS precision)
var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;
var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);
var float32ArraySupported = typeof Float32Array === 'function';
function A(aA1, aA2) {
    return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
    return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
    return 3.0 * aA1;
}
// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
function calcBezier(aT, aA1, aA2) {
    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}
// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
function getSlope(aT, aA1, aA2) {
    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}
function binarySubdivide(aX, aA, aB, mX1, mX2) {
    var currentX, currentT, i = 0;
    do {
        currentT = aA + (aB - aA) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - aX;
        if (currentX > 0.0) aB = currentT;
        else aA = currentT;
    }while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
    return currentT;
}
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for(var i = 0; i < NEWTON_ITERATIONS; ++i){
        var currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0.0) return aGuessT;
        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
}
function LinearEasing(x) {
    return x;
}
module.exports = function bezier(mX1, mY1, mX2, mY2) {
    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) throw new Error('bezier x values must be in [0, 1] range');
    if (mX1 === mY1 && mX2 === mY2) return LinearEasing;
    // Precompute samples table
    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
    for(var i = 0; i < kSplineTableSize; ++i)sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    function getTForX(aX) {
        var intervalStart = 0.0;
        var currentSample = 1;
        var lastSample = kSplineTableSize - 1;
        for(; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample)intervalStart += kSampleStepSize;
        --currentSample;
        // Interpolate to provide an initial guess for t
        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
        var guessForT = intervalStart + dist * kSampleStepSize;
        var initialSlope = getSlope(guessForT, mX1, mX2);
        if (initialSlope >= NEWTON_MIN_SLOPE) return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
        else if (initialSlope === 0.0) return guessForT;
        else return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
    return function BezierEasing(x) {
        // Because JavaScript number are imprecise, we should guarantee the extremes are right.
        if (x === 0) return 0;
        if (x === 1) return 1;
        return calcBezier(getTForX(x), mY1, mY2);
    };
};

},{}],"gw1FU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Transition = void 0;
var _d3Timer = require("341dc0e69cd64d09");
/**
 * A resumable transition class inspired by d3-transition.
 * Allows for starting, and stopping and resuming transitions.
 *
 * The transition is started automatically.
 * A transition cannot be restarted after it has finished.
 * Resuming a transition will continue from the point it was stopped, i.e., easing will continue from the point it was
 * stopped.
 */ class Transition {
    /**
   * Create a new ResumableTransition.
   * @param duration Duration in milliseconds
   * @param easingFn The easing function
   * @param onTick Callback function called on each animation frame with the eased time in range [0, 1].
   */ constructor(duration, easingFn, onTick){
        this.duration = void 0;
        this.elapsed = 0;
        this.easingFn = void 0;
        this.timer = null;
        this.onTickCallback = void 0;
        this.duration = duration;
        this.easingFn = easingFn;
        this.onTickCallback = onTick;
        this.resume();
    }
    get running() {
        return this.timer !== null;
    }
    timerCallback(elapsed) {
        this.elapsed = Math.min(elapsed, this.duration);
        const t = this.duration === 0 ? 1 : this.elapsed / this.duration;
        const easedT = this.easingFn(t);
        // Call the tick callback with the current value
        this.onTickCallback(easedT);
        if (this.elapsed >= this.duration) this.stop();
    }
    /**
   * Resume the transition
   */ resume() {
        if (this.running || this.elapsed >= this.duration) return this;
        /* If we're resuming the transition, then subtract elapsed to continue the easing. */ const time = (0, _d3Timer.now)() - this.elapsed;
        this.timer = (0, _d3Timer.timer)((elapsed)=>this.timerCallback(elapsed), 0, time);
        (0, _d3Timer.timerFlush)();
        return this;
    }
    /**
   * Stops the transition.
   */ stop() {
        if (!this.running) return this;
        if (this.timer) {
            this.timer.stop();
            this.timer = null;
        }
        return this;
    }
    /**
   * Immediately finishes the transition and calls the tick callback with the final value.
   */ finish() {
        this.stop();
        (0, _d3Timer.timeout)(()=>this.timerCallback(this.duration));
        (0, _d3Timer.timerFlush)();
        return this;
    }
}
exports.Transition = Transition;

},{"341dc0e69cd64d09":"hq0o6"}],"hq0o6":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-timer` (CommonJS)
// See upstream license: https://github.com/d3/d3-timer/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("284c30af1ca49e5e");

},{"284c30af1ca49e5e":"a20Xy"}],"a20Xy":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-timer` (CommonJS)
// See upstream license: https://github.com/d3/d3-timer/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-timer`
module.exports = require("2ea00e8d490a986d");

},{"2ea00e8d490a986d":"iE6MT"}],"iE6MT":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a80780c3daa740cd").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "interval", {
    enumerable: true,
    get: function() {
        return _interval.default;
    }
});
Object.defineProperty(exports, "now", {
    enumerable: true,
    get: function() {
        return _timer.now;
    }
});
Object.defineProperty(exports, "timeout", {
    enumerable: true,
    get: function() {
        return _timeout.default;
    }
});
Object.defineProperty(exports, "timer", {
    enumerable: true,
    get: function() {
        return _timer.timer;
    }
});
Object.defineProperty(exports, "timerFlush", {
    enumerable: true,
    get: function() {
        return _timer.timerFlush;
    }
});
var _timer = require("daa466b82eadc048");
var _timeout = _interopRequireDefault(require("f7f72b8b136f1f3e"));
var _interval = _interopRequireDefault(require("bbdde46bce707b81"));

},{"a80780c3daa740cd":"1P3rZ","daa466b82eadc048":"ksn6s","f7f72b8b136f1f3e":"5iXrq","bbdde46bce707b81":"kRgyu"}],"ksn6s":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Timer = Timer;
exports.now = now;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0, // is an animation frame pending?
timeout = 0, // is a timeout pending?
interval = 0, // are any timers active?
pokeDelay = 1000, // how frequently we check for clock skew
taskHead, taskTail, clockLast = 0, clockNow = 0, clockSkew = 0, clock = typeof performance === "object" && performance.now ? performance : Date, setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
};
function now() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
    clockNow = 0;
}
function Timer() {
    this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
    constructor: Timer,
    restart: function(callback, delay, time) {
        if (typeof callback !== "function") throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
            if (taskTail) taskTail._next = this;
            else taskHead = this;
            taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
    },
    stop: function() {
        if (this._call) {
            this._call = null;
            this._time = Infinity;
            sleep();
        }
    }
};
function timer(callback, delay, time) {
    var t = new Timer();
    t.restart(callback, delay, time);
    return t;
}
function timerFlush() {
    now(); // Get the current time, if not already set.
    ++frame; // Pretend we’ve set an alarm, if we haven’t already.
    var t = taskHead, e;
    while(t){
        if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);
        t = t._next;
    }
    --frame;
}
function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
        timerFlush();
    } finally{
        frame = 0;
        nap();
        clockNow = 0;
    }
}
function poke() {
    var now = clock.now(), delay = now - clockLast;
    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}
function nap() {
    var t0, t1 = taskHead, t2, time = Infinity;
    while(t1)if (t1._call) {
        if (time > t1._time) time = t1._time;
        t0 = t1, t1 = t1._next;
    } else {
        t2 = t1._next, t1._next = null;
        t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
    taskTail = t0;
    sleep(time);
}
function sleep(time) {
    if (frame) return; // Soonest alarm already set, or will be.
    if (timeout) timeout = clearTimeout(timeout);
    var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
    if (delay > 24) {
        if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
        if (interval) interval = clearInterval(interval);
    } else {
        if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
    }
}

},{}],"5iXrq":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _timer = require("145e796428e02298");
function _default(callback, delay, time) {
    var t = new _timer.Timer();
    delay = delay == null ? 0 : +delay;
    t.restart((elapsed)=>{
        t.stop();
        callback(elapsed + delay);
    }, delay, time);
    return t;
}

},{"145e796428e02298":"ksn6s"}],"kRgyu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _timer = require("b5767b0313c66499");
function _default(callback, delay, time) {
    var t = new _timer.Timer(), total = delay;
    if (delay == null) return t.restart(callback, delay, time), t;
    t._restart = t.restart;
    t.restart = function(callback, delay, time) {
        delay = +delay, time = time == null ? (0, _timer.now)() : +time;
        t._restart(function tick(elapsed) {
            elapsed += total;
            t._restart(tick, total += delay, time);
            callback(elapsed);
        }, delay, time);
    };
    t.restart(callback, delay, time);
    return t;
}

},{"b5767b0313c66499":"ksn6s"}],"3DqfC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.shallowEqual = shallowEqual;
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 *
 * Source: https://github.com/facebook/react/blob/c2a196174763e0b4f16ed1c512ed4442b062395e/packages/shared/shallowEqual.js#L18
 */ function shallowEqual(objA, objB) {
    if (Object.is(objA, objB)) return true;
    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    // Test for A's keys different from B.
    for(let i = 0; i < keysA.length; i += 1){
        const currentKey = keysA[i];
        if (!Object.prototype.hasOwnProperty.call(objB, currentKey) || // @ts-ignore
        !Object.is(objA[currentKey], objB[currentKey])) return false;
    }
    return true;
}

},{}],"8Ju4X":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("d50d4e9b6117c92b").default;
var _interopRequireWildcard = require("e34ead02850f091d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AppearingMask = AppearingMask;
exports.appearingMaskClasses = void 0;
var React = _interopRequireWildcard(require("9124afb096ab261b"));
var _styles = require("5873bb980c3c00fa");
var _generateUtilityClasses = _interopRequireDefault(require("83eb1bd037dbd7ed"));
var _clsx = _interopRequireDefault(require("ad09183061fde500"));
var _animation = require("b69855067545d966");
var _cleanId = require("ae052246a685f424");
var _hooks = require("a94941b7a1c75d8c");
var _jsxRuntime = require("8bee02f93b26d046");
const appearingMaskClasses = exports.appearingMaskClasses = (0, _generateUtilityClasses.default)('MuiAppearingMask', [
    'animate'
]);
const AnimatedRect = (0, _styles.styled)('rect')({
    animationName: 'animate-width',
    animationTimingFunction: _animation.ANIMATION_TIMING_FUNCTION,
    animationDuration: '0s',
    [`&.${appearingMaskClasses.animate}`]: {
        animationDuration: `${_animation.ANIMATION_DURATION_MS}ms`
    },
    '@keyframes animate-width': {
        from: {
            width: 0
        }
    }
});
/**
 * @ignore - internal component.
 */ function AppearingMask(props) {
    const drawingArea = (0, _hooks.useDrawingArea)();
    const chartId = (0, _hooks.useChartId)();
    const clipId = (0, _cleanId.cleanId)(`${chartId}-${props.id}`);
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxRuntime.jsx)("clipPath", {
                id: clipId,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(AnimatedRect, {
                    className: (0, _clsx.default)(!props.skipAnimation && appearingMaskClasses.animate),
                    x: 0,
                    y: 0,
                    width: drawingArea.left + drawingArea.width + drawingArea.right,
                    height: drawingArea.top + drawingArea.height + drawingArea.bottom
                })
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", {
                clipPath: `url(#${clipId})`,
                children: props.children
            })
        ]
    });
}

},{"d50d4e9b6117c92b":"1P3rZ","e34ead02850f091d":"6TFJp","9124afb096ab261b":"jMk1U","5873bb980c3c00fa":"7eExx","83eb1bd037dbd7ed":"3J0Rs","ad09183061fde500":"dOSJC","b69855067545d966":"aSuCR","ae052246a685f424":"lwbEq","a94941b7a1c75d8c":"92Hil","8bee02f93b26d046":"05iiF"}],"lwbEq":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cleanId = cleanId;
/**
 * Remove spaces to have viable ids
 */ function cleanId(id) {
    return id.replace(' ', '_');
}

},{}],"92Hil":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartGradientId: true,
    useChartGradientIdObjectBound: true
};
Object.defineProperty(exports, "useChartGradientId", {
    enumerable: true,
    get: function() {
        return _useChartGradientId.useChartGradientId;
    }
});
Object.defineProperty(exports, "useChartGradientIdObjectBound", {
    enumerable: true,
    get: function() {
        return _useChartGradientId.useChartGradientIdObjectBound;
    }
});
var _useDrawingArea = require("fc3e1f51b493f472");
Object.keys(_useDrawingArea).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useDrawingArea[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useDrawingArea[key];
        }
    });
});
var _useChartId = require("1f843c4dc16e6ac6");
Object.keys(_useChartId).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartId[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartId[key];
        }
    });
});
var _useScale = require("4b39127c151470f7");
Object.keys(_useScale).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useScale[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useScale[key];
        }
    });
});
var _useAxis = require("b1004d5fa6241c92");
Object.keys(_useAxis).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useAxis[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAxis[key];
        }
    });
});
var _useZAxis = require("482406ba9e6b9f");
Object.keys(_useZAxis).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useZAxis[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useZAxis[key];
        }
    });
});
var _useColorScale = require("8731c224df87f2d5");
Object.keys(_useColorScale).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useColorScale[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useColorScale[key];
        }
    });
});
var _useSvgRef = require("e68d8712bdad5f57");
Object.keys(_useSvgRef).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useSvgRef[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useSvgRef[key];
        }
    });
});
var _useSeries = require("3037e8b7bd87147f");
Object.keys(_useSeries).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useSeries[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useSeries[key];
        }
    });
});
var _useScatterSeries = require("40f043e8934067d");
Object.keys(_useScatterSeries).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useScatterSeries[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useScatterSeries[key];
        }
    });
});
var _usePieSeries = require("29ba56a22b3736c");
Object.keys(_usePieSeries).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _usePieSeries[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _usePieSeries[key];
        }
    });
});
var _useBarSeries = require("25830cad3e4df3cc");
Object.keys(_useBarSeries).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useBarSeries[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useBarSeries[key];
        }
    });
});
var _useLineSeries = require("a75143421f57dcaf");
Object.keys(_useLineSeries).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useLineSeries[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useLineSeries[key];
        }
    });
});
var _useItemHighlighted = require("a87f49ed96584022");
Object.keys(_useItemHighlighted).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useItemHighlighted[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useItemHighlighted[key];
        }
    });
});
var _useItemHighlightedGetter = require("bd07a86618fa9b04");
Object.keys(_useItemHighlightedGetter).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useItemHighlightedGetter[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useItemHighlightedGetter[key];
        }
    });
});
var _useLegend = require("6d9997af11a6b817");
Object.keys(_useLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useLegend[key];
        }
    });
});
var _useChartGradientId = require("ef9392fbfe0055af");
var _animation = require("f8e0127b67f73f96");
Object.keys(_animation).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _animation[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _animation[key];
        }
    });
});
var _useChartRootRef = require("64b13896b4cd4d26");
Object.keys(_useChartRootRef).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartRootRef[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartRootRef[key];
        }
    });
});
var _useChartsLocalization = require("b42e5bbc6464e98");
Object.keys(_useChartsLocalization).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartsLocalization[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartsLocalization[key];
        }
    });
});

},{"fc3e1f51b493f472":"6LtKb","1f843c4dc16e6ac6":"82HoH","4b39127c151470f7":"uL1ts","b1004d5fa6241c92":"gzVB1","482406ba9e6b9f":"ew8Tr","8731c224df87f2d5":"7pVQ9","e68d8712bdad5f57":"2YtYD","3037e8b7bd87147f":"aMvY8","40f043e8934067d":"eLptf","29ba56a22b3736c":"ddnXv","25830cad3e4df3cc":"h0EoO","a75143421f57dcaf":"kI0zE","a87f49ed96584022":"bzOyV","bd07a86618fa9b04":"4tLo6","6d9997af11a6b817":"aMDAZ","ef9392fbfe0055af":"8rjJB","f8e0127b67f73f96":"3z0TS","64b13896b4cd4d26":"fNeDq","b42e5bbc6464e98":"8bMMH"}],"6LtKb":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useDrawingArea = useDrawingArea;
var _useStore = require("9758d33117c798bf");
var _useSelector = require("16e07abb43eee233");
var _useChartDimensions = require("32c0c98ba025297e");
/**
 * Get the drawing area dimensions and coordinates. The drawing area is the area where the chart is rendered.
 *
 * It includes the left, top, width, height, bottom, and right dimensions.
 *
 * @returns The drawing area dimensions.
 */ function useDrawingArea() {
    const store = (0, _useStore.useStore)();
    return (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);
}

},{"9758d33117c798bf":"6viTh","16e07abb43eee233":"65ofz","32c0c98ba025297e":"fCnQx"}],"82HoH":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartId = useChartId;
var _useStore = require("1ad92673e58de435");
var _useSelector = require("356c471d57f785ab");
var _useChartId = require("1869e9e0ccece777");
/**
 * Get the unique identifier of the chart.
 * @returns chartId if it exists.
 */ function useChartId() {
    const store = (0, _useStore.useStore)();
    return (0, _useSelector.useSelector)(store, _useChartId.selectorChartId);
}

},{"1ad92673e58de435":"6viTh","356c471d57f785ab":"65ofz","1869e9e0ccece777":"9KlER"}],"uL1ts":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getValueToPositionMapper = getValueToPositionMapper;
exports.useRadiusScale = useRadiusScale;
exports.useRotationScale = useRotationScale;
exports.useXScale = useXScale;
exports.useYScale = useYScale;
var _isBandScale = require("f2dc3fa73ec53f4f");
var _useAxis = require("1d8c63b70ac657c1");
/**
 * For a given scale return a function that map value to their position.
 * Useful when dealing with specific scale such as band.
 * @param {D3Scale} scale The scale to use
 * @returns {(value: any) => number} A function that map value to their position
 */ function getValueToPositionMapper(scale) {
    if ((0, _isBandScale.isBandScale)(scale)) return (value)=>(scale(value) ?? 0) + scale.bandwidth() / 2;
    return (value)=>scale(value);
}
/**
 * Get the X scale.
 *
 * @param {AxisId | undefined} axisId - If provided returns the scale for the x axis with axisId, else returns the values for the default x axis.
 * @returns {AxisScaleConfig[S]['scale']} The scale for the specified X axis.
 */ function useXScale(axisId) {
    const axis = (0, _useAxis.useXAxis)(axisId);
    return axis.scale;
}
/**
 * Get the Y scale.
 *
 * @param {AxisId | undefined} axisId - If provided returns the scale for the y axis with axisId, else returns the values for the default y axis.
 * @returns {AxisScaleConfig[S]['scale']} The scale for the specified Y axis.
 */ function useYScale(axisId) {
    const axis = (0, _useAxis.useYAxis)(axisId);
    return axis.scale;
}
function useRotationScale(identifier) {
    const axis = (0, _useAxis.useRotationAxis)(identifier);
    return axis?.scale;
}
function useRadiusScale(identifier) {
    const axis = (0, _useAxis.useRadiusAxis)(identifier);
    return axis?.scale;
}

},{"f2dc3fa73ec53f4f":"58Ehn","1d8c63b70ac657c1":"gzVB1"}],"gzVB1":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useRadiusAxes = useRadiusAxes;
exports.useRadiusAxis = useRadiusAxis;
exports.useRotationAxes = useRotationAxes;
exports.useRotationAxis = useRotationAxis;
exports.useXAxes = useXAxes;
exports.useXAxis = useXAxis;
exports.useYAxes = useYAxes;
exports.useYAxis = useYAxis;
var _useChartCartesianAxisRendering = require("d3b4cf14a090d74e");
var _useChartPolarAxis = require("2468ac957504e65a");
var _useSelector = require("ffab39dccb56de0b");
var _useStore = require("a24ae3045a95d305");
/**
 * Get all the x-axes.
 *
 * - `xAxis` is an object with the shape `{ [axisId]: axis }`.
 * - `xAxisIds` is an array of axis IDs.
 *
 * If access to a specific X axis is needed, use the `useXAxis` hook instead.
 *
 * @returns `{ xAxis, xAxisIds }` - The x-axes and their IDs.
 */ function useXAxes() {
    const store = (0, _useStore.useStore)();
    const { axis: xAxis, axisIds: xAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartXAxis);
    return {
        xAxis,
        xAxisIds
    };
}
/**
 * Get all the y-axes.
 *
 * - `yAxis` is an object with the shape `{ [axisId]: axis }`.
 * - `yAxisIds` is an array of axis IDs.
 *
 * If access to a specific Y axis is needed, use the `useYAxis` hook instead.
 *
 * @returns `{ yAxis, yAxisIds }` - The y-axes and their IDs.
 */ function useYAxes() {
    const store = (0, _useStore.useStore)();
    const { axis: yAxis, axisIds: yAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartYAxis);
    return {
        yAxis,
        yAxisIds
    };
}
/**
 * Get the X axis.
 * @param {AxisId | undefined} axisId - If provided returns the x axis with axisId, else returns the values for the default x axis.
 * @returns The X axis.
 */ function useXAxis(axisId) {
    const store = (0, _useStore.useStore)();
    const { axis: xAxis, axisIds: xAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartXAxis);
    const id = axisId ?? xAxisIds[0];
    return xAxis[id];
}
/**
 * Get the Y axis.
 * @param {AxisId | undefined} axisId - If provided returns the y axis with axisId, else returns the values for the default y axis.
 * @returns The Y axis.
 */ function useYAxis(axisId) {
    const store = (0, _useStore.useStore)();
    const { axis: yAxis, axisIds: yAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartYAxis);
    const id = axisId ?? yAxisIds[0];
    return yAxis[id];
}
function useRotationAxes() {
    const store = (0, _useStore.useStore)();
    const { axis: rotationAxis, axisIds: rotationAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRotationAxis);
    return {
        rotationAxis,
        rotationAxisIds
    };
}
function useRadiusAxes() {
    const store = (0, _useStore.useStore)();
    const { axis: radiusAxis, axisIds: radiusAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRadiusAxis);
    return {
        radiusAxis,
        radiusAxisIds
    };
}
function useRotationAxis(identifier) {
    const store = (0, _useStore.useStore)();
    const { axis: rotationAxis, axisIds: rotationAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRotationAxis);
    const id = typeof identifier === 'string' ? identifier : rotationAxisIds[identifier ?? 0];
    return rotationAxis[id];
}
function useRadiusAxis(identifier) {
    const store = (0, _useStore.useStore)();
    const { axis: radiusAxis, axisIds: radiusAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRadiusAxis);
    const id = typeof identifier === 'string' ? identifier : radiusAxisIds[identifier ?? 0];
    return radiusAxis[id];
}

},{"d3b4cf14a090d74e":"7HxFa","2468ac957504e65a":"eNmV7","ffab39dccb56de0b":"65ofz","a24ae3045a95d305":"6viTh"}],"eNmV7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartPolarAxis: true
};
Object.defineProperty(exports, "useChartPolarAxis", {
    enumerable: true,
    get: function() {
        return _useChartPolarAxis.useChartPolarAxis;
    }
});
var _useChartPolarAxis = require("81491a917ce212df");
var _useChartPolarAxis2 = require("378850b420b7d3c2");
Object.keys(_useChartPolarAxis2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartPolarAxis2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartPolarAxis2[key];
        }
    });
});

},{"81491a917ce212df":"afNzW","378850b420b7d3c2":"261wY"}],"afNzW":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("dd2f73968031e58c").default;
var _interopRequireDefault = require("9f193108efe6ebe9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartPolarAxis = void 0;
var _extends2 = _interopRequireDefault(require("48bb442b087222c2"));
var React = _interopRequireWildcard(require("6dea44cfa68a18b3"));
var _warning = require("cbc04fcf09fd0a22");
var _useSelector = require("e02c8e719b132e33");
var _useChartDimensions = require("9d8f1cfb35344d62");
var _defaultizeAxis = require("66b39172850469ec");
var _useChartInteraction = require("c9daa838ce85850c");
var _useChartPolarAxis = require("74698c7d49652c1d");
var _getSVGPoint = require("d44e051f1ca151f4");
var _coordinateTransformation = require("3572d90273dbdb16");
const useChartPolarAxis = ({ params, store, seriesConfig, svgRef, instance })=>{
    const { rotationAxis, radiusAxis, dataset } = params;
    {
        const ids = [
            ...rotationAxis ?? [],
            ...radiusAxis ?? []
        ].filter((axis)=>axis.id).map((axis)=>axis.id);
        const duplicates = new Set(ids.filter((id, index)=>ids.indexOf(id) !== index));
        if (duplicates.size > 0) (0, _warning.warnOnce)([
            `MUI X Charts: The following axis ids are duplicated: ${Array.from(duplicates).join(', ')}.`,
            `Please make sure that each axis has a unique id.`
        ].join('\n'), 'error');
    }
    const drawingArea = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);
    const center = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartPolarCenter);
    const isInteractionEnabled = (0, _useSelector.useSelector)(store, _useChartInteraction.selectorChartsInteractionIsInitialized);
    const { axis: rotationAxisWithScale, axisIds: rotationAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRotationAxis);
    const { axis: radiusAxisWithScale, axisIds: radiusAxisIds } = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRadiusAxis);
    // The effect do not track any value defined synchronously during the 1st render by hooks called after `useChartPolarAxis`
    // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one
    const isFirstRender = React.useRef(true);
    React.useEffect(()=>{
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                polarAxis: (0, _extends2.default)({}, prev.polarAxis, {
                    rotation: (0, _defaultizeAxis.defaultizeAxis)(rotationAxis, dataset, 'rotation'),
                    radius: (0, _defaultizeAxis.defaultizeAxis)(radiusAxis, dataset, 'radius')
                })
            }));
    }, [
        seriesConfig,
        drawingArea,
        rotationAxis,
        radiusAxis,
        dataset,
        store
    ]);
    const svg2rotation = React.useMemo(()=>(0, _coordinateTransformation.generateSvg2rotation)({
            cx: center.cx,
            cy: center.cy
        }), [
        center.cx,
        center.cy
    ]);
    const svg2polar = React.useMemo(()=>(0, _coordinateTransformation.generateSvg2polar)({
            cx: center.cx,
            cy: center.cy
        }), [
        center.cx,
        center.cy
    ]);
    const polar2svg = React.useMemo(()=>(0, _coordinateTransformation.generatePolar2svg)({
            cx: center.cx,
            cy: center.cy
        }), [
        center.cx,
        center.cy
    ]);
    const usedRotationAxisId = rotationAxisIds[0];
    const usedRadiusAxisId = radiusAxisIds[0];
    // Use a ref to avoid rerendering on every mousemove event.
    const mousePosition = React.useRef({
        isInChart: false,
        x: -1,
        y: -1
    });
    React.useEffect(()=>{
        const element = svgRef.current;
        if (!isInteractionEnabled || element === null || params.disableAxisListener) return ()=>{};
        const handleOut = ()=>{
            mousePosition.current = {
                isInChart: false,
                x: -1,
                y: -1
            };
            instance.cleanInteraction?.();
        };
        const handleMove = (event)=>{
            const target = 'targetTouches' in event ? event.targetTouches[0] : event;
            const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, target);
            mousePosition.current.x = svgPoint.x;
            mousePosition.current.y = svgPoint.y;
            // Test if it's in the drawing area
            if (!instance.isPointInside(svgPoint, {
                targetElement: event.target
            })) {
                if (mousePosition.current.isInChart) {
                    instance?.cleanInteraction();
                    mousePosition.current.isInChart = false;
                }
                return;
            }
            // Test if it's in the radar circle
            const radiusSquare = (center.cx - svgPoint.x) ** 2 + (center.cy - svgPoint.y) ** 2;
            const maxRadius = radiusAxisWithScale[usedRadiusAxisId].scale.range()[1];
            if (radiusSquare > maxRadius ** 2) {
                if (mousePosition.current.isInChart) {
                    instance?.cleanInteraction();
                    mousePosition.current.isInChart = false;
                }
                return;
            }
            mousePosition.current.isInChart = true;
            instance.setPointerCoordinate?.(svgPoint);
        };
        const handleDown = (event)=>{
            const target = event.currentTarget;
            if (!target) return;
            if ('hasPointerCapture' in target && target.hasPointerCapture(event.pointerId)) target.releasePointerCapture(event.pointerId);
        };
        element.addEventListener('pointerdown', handleDown);
        element.addEventListener('pointermove', handleMove);
        element.addEventListener('pointerout', handleOut);
        element.addEventListener('pointercancel', handleOut);
        element.addEventListener('pointerleave', handleOut);
        return ()=>{
            element.removeEventListener('pointerdown', handleDown);
            element.removeEventListener('pointermove', handleMove);
            element.removeEventListener('pointerout', handleOut);
            element.removeEventListener('pointercancel', handleOut);
            element.removeEventListener('pointerleave', handleOut);
        };
    }, [
        svgRef,
        store,
        center,
        radiusAxisWithScale,
        usedRadiusAxisId,
        rotationAxisWithScale,
        usedRotationAxisId,
        instance,
        params.disableAxisListener,
        isInteractionEnabled,
        svg2rotation
    ]);
    return {
        instance: {
            svg2polar,
            svg2rotation,
            polar2svg
        }
    };
};
exports.useChartPolarAxis = useChartPolarAxis;
useChartPolarAxis.params = {
    rotationAxis: true,
    radiusAxis: true,
    dataset: true,
    disableAxisListener: true
};
useChartPolarAxis.getInitialState = (params)=>({
        polarAxis: {
            rotation: (0, _defaultizeAxis.defaultizeAxis)(params.rotationAxis, params.dataset, 'rotation'),
            radius: (0, _defaultizeAxis.defaultizeAxis)(params.radiusAxis, params.dataset, 'radius')
        }
    });

},{"dd2f73968031e58c":"6TFJp","9f193108efe6ebe9":"1P3rZ","48bb442b087222c2":"lKa0J","6dea44cfa68a18b3":"jMk1U","cbc04fcf09fd0a22":"4GMHX","e02c8e719b132e33":"65ofz","9d8f1cfb35344d62":"fCnQx","66b39172850469ec":"1kzS4","c9daa838ce85850c":"4pi8Z","74698c7d49652c1d":"261wY","d44e051f1ca151f4":"5546x","3572d90273dbdb16":"evkKb"}],"1kzS4":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("875963988763a40a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultizeAxis = defaultizeAxis;
var _extends2 = _interopRequireDefault(require("5c685d8524f6893"));
var _constants = require("8bf3b9a41d29784d");
function defaultizeAxis(inAxis, dataset, axisName) {
    const DEFAULT_AXIS_KEY = axisName === 'rotation' ? _constants.DEFAULT_ROTATION_AXIS_KEY : _constants.DEFAULT_RADIUS_AXIS_KEY;
    const inputAxes = inAxis && inAxis.length > 0 ? inAxis : [
        {
            id: DEFAULT_AXIS_KEY
        }
    ];
    return inputAxes.map((axisConfig, index)=>{
        const id = `defaultized-${axisName}-axis-${index}`;
        const dataKey = axisConfig.dataKey;
        if (dataKey === undefined || axisConfig.data !== undefined) return (0, _extends2.default)({
            id
        }, axisConfig);
        if (dataset === undefined) throw new Error(`MUI X Charts: ${axisName}-axis uses \`dataKey\` but no \`dataset\` is provided.`);
        return (0, _extends2.default)({
            id,
            data: dataset.map((d)=>d[dataKey])
        }, axisConfig);
    });
}

},{"875963988763a40a":"1P3rZ","5c685d8524f6893":"lKa0J","8bf3b9a41d29784d":"2sqkC"}],"261wY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartRotationAxis = exports.selectorChartRawRotationAxis = exports.selectorChartRawRadiusAxis = exports.selectorChartRadiusAxis = exports.selectorChartPolarCenter = exports.selectorChartPolarAxisState = void 0;
var _useChartDimensions = require("2d46e748d6cec597");
var _useChartSeries = require("bced0b17db70e0d");
var _selectors = require("73e3845229c66d19");
var _computeAxisValue = require("18689109ffc74c9");
const selectorChartPolarAxisState = (state)=>state.polarAxis;
exports.selectorChartPolarAxisState = selectorChartPolarAxisState;
const selectorChartRawRotationAxis = exports.selectorChartRawRotationAxis = (0, _selectors.createSelector)(selectorChartPolarAxisState, (axis)=>axis?.rotation);
const selectorChartRawRadiusAxis = exports.selectorChartRawRadiusAxis = (0, _selectors.createSelector)(selectorChartPolarAxisState, (axis)=>axis?.radius);
/**
 * The only interesting selectors that merge axis data and zoom if provided.
 */ const selectorChartRotationAxis = exports.selectorChartRotationAxis = (0, _selectors.createSelector)([
    selectorChartRawRotationAxis,
    _useChartDimensions.selectorChartDrawingArea,
    _useChartSeries.selectorChartSeriesProcessed,
    _useChartSeries.selectorChartSeriesConfig
], (axis, drawingArea, formattedSeries, seriesConfig)=>(0, _computeAxisValue.computeAxisValue)({
        drawingArea,
        formattedSeries,
        axis,
        seriesConfig,
        axisDirection: 'rotation'
    }));
const selectorChartRadiusAxis = exports.selectorChartRadiusAxis = (0, _selectors.createSelector)([
    selectorChartRawRadiusAxis,
    _useChartDimensions.selectorChartDrawingArea,
    _useChartSeries.selectorChartSeriesProcessed,
    _useChartSeries.selectorChartSeriesConfig
], (axis, drawingArea, formattedSeries, seriesConfig)=>(0, _computeAxisValue.computeAxisValue)({
        drawingArea,
        formattedSeries,
        axis,
        seriesConfig,
        axisDirection: 'radius'
    }));
const selectorChartPolarCenter = exports.selectorChartPolarCenter = (0, _selectors.createSelector)([
    _useChartDimensions.selectorChartDrawingArea
], (drawingArea)=>({
        cx: drawingArea.left + drawingArea.width / 2,
        cy: drawingArea.top + drawingArea.height / 2
    }));

},{"2d46e748d6cec597":"5c4j2","bced0b17db70e0d":"3wdVT","73e3845229c66d19":"4YBdc","18689109ffc74c9":"9KUm5"}],"9KUm5":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("72433acc0b9194c1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.computeAxisValue = computeAxisValue;
var _extends2 = _interopRequireDefault(require("1538e886e49ba9c1"));
var _d3Scale = require("41d6a7cd55e2a6b2");
var _axis = require("6a7aec0383a0ecb0");
var _colorScale = require("c2769dc2cdabfe80");
var _useTicks = require("7d885b49978d91fe");
var _getScale = require("784cf0fa867975f4");
var _getAxisExtremum = require("6c63f2e71136f9ff");
var _angleConversion = require("a8fbbfbcca5f544f");
var _getAxisTriggerTooltip = require("7b0983d6efd8e96");
function getRange(drawingArea, axisDirection, axis) {
    if (axisDirection === 'rotation') {
        if (axis.scaleType === 'point') {
            const angles = [
                (0, _angleConversion.deg2rad)(axis.startAngle, 0),
                (0, _angleConversion.deg2rad)(axis.endAngle, 2 * Math.PI)
            ];
            const diff = angles[1] - angles[0];
            if (diff > Math.PI * 2 - 0.1) // If we cover a full circle, we remove a slice to avoid having data point at the same place.
            angles[1] -= diff / axis.data.length;
            return angles;
        }
        return [
            (0, _angleConversion.deg2rad)(axis.startAngle, 0),
            (0, _angleConversion.deg2rad)(axis.endAngle, 2 * Math.PI)
        ];
    }
    return [
        0,
        Math.min(drawingArea.height, drawingArea.width) / 2
    ];
}
const isDateData = (data)=>data?.[0] instanceof Date;
function createDateFormatter(axis, range) {
    const timeScale = (0, _d3Scale.scaleTime)(axis.data, range);
    return (v, { location })=>location === 'tick' ? timeScale.tickFormat(axis.tickNumber)(v) : `${v.toLocaleString()}`;
}
const DEFAULT_CATEGORY_GAP_RATIO = 0.2;
const DEFAULT_BAR_GAP_RATIO = 0.1;
function computeAxisValue({ drawingArea, formattedSeries, axis: allAxis, seriesConfig, axisDirection }) {
    if (allAxis === undefined) return {
        axis: {},
        axisIds: []
    };
    const axisIdsTriggeringTooltip = (0, _getAxisTriggerTooltip.getAxisTriggerTooltip)(axisDirection, seriesConfig, formattedSeries, allAxis[0].id);
    const completeAxis = {};
    allAxis.forEach((eachAxis, axisIndex)=>{
        const axis = eachAxis;
        const range = getRange(drawingArea, axisDirection, axis);
        const [minData, maxData] = (0, _getAxisExtremum.getAxisExtremum)(axis, axisDirection, seriesConfig, axisIndex, formattedSeries);
        const triggerTooltip = !axis.ignoreTooltip && axisIdsTriggeringTooltip.has(axis.id);
        const data = axis.data ?? [];
        if ((0, _axis.isBandScaleConfig)(axis)) {
            const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;
            const barGapRatio = axis.barGapRatio ?? DEFAULT_BAR_GAP_RATIO;
            completeAxis[axis.id] = (0, _extends2.default)({
                offset: 0,
                categoryGapRatio,
                barGapRatio,
                triggerTooltip
            }, axis, {
                data,
                scale: (0, _d3Scale.scaleBand)(axis.data, range).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),
                tickNumber: axis.data.length,
                colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? (0, _colorScale.getOrdinalColorScale)((0, _extends2.default)({
                    values: axis.data
                }, axis.colorMap)) : (0, _colorScale.getColorScale)(axis.colorMap))
            });
            if (isDateData(axis.data)) {
                const dateFormatter = createDateFormatter(axis, range);
                completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;
            }
        }
        if ((0, _axis.isPointScaleConfig)(axis)) {
            completeAxis[axis.id] = (0, _extends2.default)({
                offset: 0,
                triggerTooltip
            }, axis, {
                data,
                scale: (0, _d3Scale.scalePoint)(axis.data, range),
                tickNumber: axis.data.length,
                colorScale: axis.colorMap && (axis.colorMap.type === 'ordinal' ? (0, _colorScale.getOrdinalColorScale)((0, _extends2.default)({
                    values: axis.data
                }, axis.colorMap)) : (0, _colorScale.getColorScale)(axis.colorMap))
            });
            if (isDateData(axis.data)) {
                const dateFormatter = createDateFormatter(axis, range);
                completeAxis[axis.id].valueFormatter = axis.valueFormatter ?? dateFormatter;
            }
        }
        if (axis.scaleType === 'band' || axis.scaleType === 'point') // Could be merged with the two previous "if conditions" but then TS does not get that `axis.scaleType` can't be `band` or `point`.
        return;
        const scaleType = axis.scaleType ?? 'linear';
        const domainLimit = axis.domainLimit ?? 'nice';
        const axisExtremums = [
            axis.min ?? minData,
            axis.max ?? maxData
        ];
        if (typeof domainLimit === 'function') {
            const { min, max } = domainLimit(minData, maxData);
            axisExtremums[0] = min;
            axisExtremums[1] = max;
        }
        const rawTickNumber = (0, _useTicks.getTickNumber)((0, _extends2.default)({}, axis, {
            range,
            domain: axisExtremums
        }));
        const tickNumber = rawTickNumber / ((range[1] - range[0]) / 100);
        const scale = (0, _getScale.getScale)(scaleType, axisExtremums, range);
        const finalScale = domainLimit === 'nice' ? scale.nice(rawTickNumber) : scale;
        const [minDomain, maxDomain] = finalScale.domain();
        const domain = [
            axis.min ?? minDomain,
            axis.max ?? maxDomain
        ];
        completeAxis[axis.id] = (0, _extends2.default)({
            offset: 0,
            triggerTooltip
        }, axis, {
            data,
            scaleType: scaleType,
            scale: finalScale.domain(domain),
            tickNumber,
            colorScale: axis.colorMap && (0, _colorScale.getColorScale)(axis.colorMap)
        });
    });
    return {
        axis: completeAxis,
        axisIds: allAxis.map(({ id })=>id)
    };
}

},{"72433acc0b9194c1":"1P3rZ","1538e886e49ba9c1":"lKa0J","41d6a7cd55e2a6b2":"cBa7c","6a7aec0383a0ecb0":"LO60x","c2769dc2cdabfe80":"8yUXX","7d885b49978d91fe":"5xWvO","784cf0fa867975f4":"kzGPD","6c63f2e71136f9ff":"eW8KC","a8fbbfbcca5f544f":"64kiJ","7b0983d6efd8e96":"cQDOC"}],"eW8KC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisExtremum = void 0;
var _isPolar = require("7f1f9886ac612733");
const axisExtremumCallback = (acc, chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries)=>{
    const getter = axisDirection === 'rotation' ? seriesConfig[chartType].rotationExtremumGetter : seriesConfig[chartType].radiusExtremumGetter;
    const series = formattedSeries[chartType]?.series ?? {};
    const [minChartTypeData, maxChartTypeData] = getter?.({
        series,
        axis,
        axisIndex,
        isDefaultAxis: axisIndex === 0
    }) ?? [
        Infinity,
        -Infinity
    ];
    const [minData, maxData] = acc;
    return [
        Math.min(minChartTypeData, minData),
        Math.max(maxChartTypeData, maxData)
    ];
};
const getAxisExtremum = (axis, axisDirection, seriesConfig, axisIndex, formattedSeries)=>{
    const polarSeriesTypes = Object.keys(seriesConfig).filter(_isPolar.isPolarSeriesType);
    const extremums = polarSeriesTypes.reduce((acc, charType)=>axisExtremumCallback(acc, charType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries), [
        Infinity,
        -Infinity
    ]);
    if (Number.isNaN(extremums[0]) || Number.isNaN(extremums[1])) return [
        Infinity,
        -Infinity
    ];
    return extremums;
};
exports.getAxisExtremum = getAxisExtremum;

},{"7f1f9886ac612733":"aEWka"}],"aEWka":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isPolarSeriesType = isPolarSeriesType;
var _configInit = require("d3ba86af9bdb3bb3");
function isPolarSeriesType(seriesType) {
    return _configInit.polarSeriesTypes.getTypes().has(seriesType);
}

},{"d3ba86af9bdb3bb3":"exuxV"}],"64kiJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rad2deg = exports.deg2rad = void 0;
const deg2rad = (value, defaultRad)=>{
    if (value === undefined) return defaultRad;
    return Math.PI * value / 180;
};
exports.deg2rad = deg2rad;
const rad2deg = (value, defaultDeg)=>{
    if (value === undefined) return defaultDeg;
    return 180 * value / Math.PI;
};
exports.rad2deg = rad2deg;

},{}],"cQDOC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisTriggerTooltip = void 0;
var _isPolar = require("47dd2eeec14e22a");
const getAxisTriggerTooltip = (axisDirection, seriesConfig, formattedSeries, defaultAxisId)=>{
    const tooltipAxesIds = new Set();
    const chartTypes = Object.keys(seriesConfig).filter(_isPolar.isPolarSeriesType);
    chartTypes.forEach((chartType)=>{
        const series = formattedSeries[chartType]?.series ?? {};
        const tooltipAxes = seriesConfig[chartType].axisTooltipGetter?.(series);
        if (tooltipAxes === undefined) return;
        tooltipAxes.forEach(({ axisId, direction })=>{
            if (direction === axisDirection) tooltipAxesIds.add(axisId ?? defaultAxisId);
        });
    });
    return tooltipAxesIds;
};
exports.getAxisTriggerTooltip = getAxisTriggerTooltip;

},{"47dd2eeec14e22a":"aEWka"}],"evkKb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.generateSvg2rotation = exports.generateSvg2polar = exports.generatePolar2svg = void 0;
const generateSvg2rotation = (center)=>(x, y)=>Math.atan2(x - center.cx, center.cy - y);
exports.generateSvg2rotation = generateSvg2rotation;
const generateSvg2polar = (center)=>(x, y)=>{
        const angle = Math.atan2(x - center.cx, center.cy - y);
        return [
            Math.sqrt((x - center.cx) ** 2 + (center.cy - y) ** 2),
            angle
        ];
    };
exports.generateSvg2polar = generateSvg2polar;
const generatePolar2svg = (center)=>(radius, rotation)=>{
        return [
            center.cx + radius * Math.sin(rotation),
            center.cy - radius * Math.cos(rotation)
        ];
    };
exports.generatePolar2svg = generatePolar2svg;

},{}],"ew8Tr":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useZAxes = useZAxes;
exports.useZAxis = useZAxis;
var _useStore = require("fcf2b2892a38f937");
var _useChartZAxis = require("56511cfaa1a49d4f");
var _useSelector = require("a6c931992aab4ee6");
function useZAxes() {
    const store = (0, _useStore.useStore)();
    const { axis: zAxis, axisIds: zAxisIds } = (0, _useSelector.useSelector)(store, _useChartZAxis.selectorChartZAxis) ?? {
        axis: {},
        axisIds: []
    };
    return {
        zAxis,
        zAxisIds
    };
}
function useZAxis(identifier) {
    const { zAxis, zAxisIds } = useZAxes();
    const id = typeof identifier === 'string' ? identifier : zAxisIds[identifier ?? 0];
    return zAxis[id];
}

},{"fcf2b2892a38f937":"6viTh","56511cfaa1a49d4f":"1DuPh","a6c931992aab4ee6":"65ofz"}],"7pVQ9":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useXColorScale = useXColorScale;
exports.useYColorScale = useYColorScale;
exports.useZColorScale = useZColorScale;
var _useAxis = require("3f0f6b5c0ff4a205");
var _useZAxis = require("ac5bbf032047b13b");
/**
 * Get the X axis color scale.
 *
 * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.
 * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified X axis, or undefined if not found.
 */ function useXColorScale(axisId) {
    const axis = (0, _useAxis.useXAxis)(axisId);
    return axis.colorScale;
}
/**
 * Get the Y axis color scale.
 *
 * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.
 * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Y axis, or undefined if not found.
 */ function useYColorScale(axisId) {
    const axis = (0, _useAxis.useYAxis)(axisId);
    return axis.colorScale;
}
/**
 * Get the Z axis color scale.
 *
 * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.
 * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Z axis, or undefined if not found.
 */ function useZColorScale(axisId) {
    const axis = (0, _useZAxis.useZAxis)(axisId);
    return axis.colorScale;
}

},{"3f0f6b5c0ff4a205":"gzVB1","ac5bbf032047b13b":"ew8Tr"}],"2YtYD":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useSvgRef = useSvgRef;
var _ChartProvider = require("4097d36f02465bb2");
/**
 * Get the ref for the SVG element.
 * @returns The SVG ref.
 */ function useSvgRef() {
    const context = (0, _ChartProvider.useChartContext)();
    if (!context) throw new Error([
        'MUI X Charts: Could not find the svg ref context.',
        'It looks like you rendered your component outside of a ChartContainer parent component.'
    ].join('\n'));
    return context.svgRef;
}

},{"4097d36f02465bb2":"8cPIy"}],"aMvY8":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useSeries = useSeries;
var _useStore = require("3faa15eaa94bc76f");
var _useSelector = require("b9d4a0c53bc35420");
var _useChartSeries = require("241c6b8b01cb95ed");
/**
 * Get access to the internal state of series.
 * Structured by type of series:
 * { seriesType?: { series: { id1: precessedValue, ... }, seriesOrder: [id1, ...] } }
 * @returns FormattedSeries series
 */ function useSeries() {
    const store = (0, _useStore.useStore)();
    return (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesProcessed);
}

},{"3faa15eaa94bc76f":"6viTh","b9d4a0c53bc35420":"65ofz","241c6b8b01cb95ed":"79Eww"}],"eLptf":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useScatterSeries = useScatterSeries;
exports.useScatterSeriesContext = useScatterSeriesContext;
var _createSeriesSelectorOfType = require("11faf47a17d8bdae");
const useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('scatter');
const useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('scatter');
/**
 * Get access to the internal state of scatter series.
 *
 * @param {SeriesId} seriesId The id of the series to get.
 * @returns {UseScatterSeriesReturnValue} the scatter series
 */ /**
 * Get access to the internal state of scatter series.
 *
 * When called without arguments, it returns all scatter series.
 *
 * @returns {UseScatterSeriesReturnValue[]} the scatter series
 */ /**
 * Get access to the internal state of scatter series.
 *
 * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.
 * @returns {UseScatterSeriesReturnValue[]} the scatter series
 */ function useScatterSeries(seriesIds) {
    return useSelectorSeries(seriesIds);
}
/**
 * Get access to the internal state of scatter series.
 * The returned object contains:
 * - series: a mapping from ids to series attributes.
 * - seriesOrder: the array of series ids.
 * @returns the scatter series
 */ function useScatterSeriesContext() {
    return useSelectorSeriesContext();
}

},{"11faf47a17d8bdae":"5z2Wk"}],"5z2Wk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createAllSeriesSelectorOfType = createAllSeriesSelectorOfType;
exports.createSeriesSelectorsOfType = createSeriesSelectorsOfType;
var _fastArrayCompare = require("8300359d92661bb5");
var _warning = require("8721222dea18812a");
var _selectors = require("e4415c0b2511e11e");
var _useChartSeries = require("df29616789b6573b");
var _useStore = require("26336638cdcd3f52");
var _useSelector = require("de86d8efebb62935");
function createSeriesSelectorsOfType(seriesType) {
    const selectorSeriesWithIds = (0, _selectors.createSelector)([
        _useChartSeries.selectorChartSeriesProcessed,
        (_, ids)=>ids
    ], (processedSeries, ids)=>{
        if (!ids || Array.isArray(ids) && ids.length === 0) return processedSeries[seriesType]?.seriesOrder?.map((seriesId)=>processedSeries[seriesType]?.series[seriesId]) ?? [];
        if (!Array.isArray(ids)) return processedSeries[seriesType]?.series?.[ids];
        const result = [];
        const failedIds = [];
        for (const id of ids){
            const series = processedSeries[seriesType]?.series?.[id];
            if (series) result.push(series);
            else failedIds.push(id);
        }
        if (failedIds.length > 0) {
            const formattedIds = failedIds.map((v)=>JSON.stringify(v)).join(', ');
            const fnName = `use${seriesType.charAt(0).toUpperCase()}${seriesType.slice(1)}Series`;
            (0, _warning.warnOnce)([
                `MUI X Charts: The following ids provided to "${fnName}" could not be found: ${formattedIds}.`,
                `Make sure that they exist and their series are using the "${seriesType}" series type.`
            ]);
        }
        return result;
    });
    return (ids)=>{
        const store = (0, _useStore.useStore)();
        return (0, _useSelector.useSelector)(store, selectorSeriesWithIds, ids, _fastArrayCompare.fastArrayCompare);
    };
}
function createAllSeriesSelectorOfType(seriesType) {
    const selectorSeries = (0, _selectors.createSelector)(_useChartSeries.selectorChartSeriesProcessed, (processedSeries)=>processedSeries[seriesType]);
    return ()=>{
        const store = (0, _useStore.useStore)();
        return (0, _useSelector.useSelector)(store, selectorSeries);
    };
}

},{"8300359d92661bb5":"4Xp7y","8721222dea18812a":"4GMHX","e4415c0b2511e11e":"4YBdc","df29616789b6573b":"79Eww","26336638cdcd3f52":"6viTh","de86d8efebb62935":"65ofz"}],"4Xp7y":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "fastArrayCompare", {
    enumerable: true,
    get: function() {
        return _fastArrayCompare.fastArrayCompare;
    }
});
var _fastArrayCompare = require("1a47c094f92762bd");

},{"1a47c094f92762bd":"4lYbW"}],"4lYbW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fastArrayCompare = fastArrayCompare;
/**
 * A fast array comparison function that compares two arrays for equality.
 *
 * Assumes that the arrays are ordered and contain only primitive values.
 *
 * It is faster than `fastObjectShallowCompare` for arrays.
 *
 * Returns true for instance equality, even if inputs are not arrays.
 *
 * @returns true if arrays contain the same elements in the same order, false otherwise.
 */ function fastArrayCompare(a, b) {
    if (a === b) return true;
    if (!Array.isArray(a) || !Array.isArray(b)) return false;
    let i = a.length;
    if (i !== b.length) return false;
    // eslint-disable-next-line no-plusplus
    while(i--){
        if (a[i] !== b[i]) return false;
    }
    return true;
}

},{}],"ddnXv":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.usePieSeries = usePieSeries;
exports.usePieSeriesContext = usePieSeriesContext;
var _createSeriesSelectorOfType = require("2d320393f914b414");
const useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('pie');
const useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('pie');
/**
 * Get access to the internal state of pie series.
 *
 * @param {SeriesId} seriesId The id of the series to get.
 * @returns {UsePieSeriesReturnValue} the pie series
 */ /**
 * Get access to the internal state of pie series.
 *
 * When called without arguments, it returns all pie series.
 *
 * @returns {UsePieSeriesReturnValue[]} the pie series
 */ /**
 * Get access to the internal state of pie series.
 *
 * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.
 * @returns {UsePieSeriesReturnValue[]} the pie series
 */ function usePieSeries(seriesIds) {
    return useSelectorSeries(seriesIds);
}
/**
 * Get access to the internal state of pie series.
 * The returned object contains:
 * - series: a mapping from ids to series attributes.
 * - seriesOrder: the array of series ids.
 * @returns the pie series
 */ function usePieSeriesContext() {
    return useSelectorSeriesContext();
}

},{"2d320393f914b414":"5z2Wk"}],"h0EoO":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useBarSeries = useBarSeries;
exports.useBarSeriesContext = useBarSeriesContext;
var _createSeriesSelectorOfType = require("7870c949a81b5114");
const useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('bar');
const useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('bar');
/**
 * Get access to the internal state of bar series.
 *
 * @param {SeriesId} seriesId The id of the series to get.
 * @returns {UseBarSeriesReturnValue} the bar series
 */ /**
 * Get access to the internal state of bar series.
 *
 * When called without arguments, it returns all bar series.
 *
 * @returns {UseBarSeriesReturnValue[]} the bar series
 */ /**
 * Get access to the internal state of bar series.
 *
 * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.
 * @returns {UseBarSeriesReturnValue[]} the bar series
 */ function useBarSeries(seriesIds) {
    return useSelectorSeries(seriesIds);
}
/**
 * Get access to the internal state of bar series.
 * The returned object contains:
 * - series: a mapping from ids to series attributes.
 * - seriesOrder: the array of series ids.
 * - stackingGroups: the array of stacking groups. Each group contains the series ids stacked and the strategy to use.
 * @returns the bar series
 */ function useBarSeriesContext() {
    return useSelectorSeriesContext();
}

},{"7870c949a81b5114":"5z2Wk"}],"kI0zE":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useLineSeries = useLineSeries;
exports.useLineSeriesContext = useLineSeriesContext;
var _createSeriesSelectorOfType = require("7e65f5285c3d9afe");
const useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('line');
const useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('line');
/**
 * Get access to the internal state of line series.
 *
 * @param {SeriesId} seriesId The id of the series to get.
 * @returns {UseLineSeriesReturnValue} the line series
 */ /**
 * Get access to the internal state of line series.
 *
 * When called without arguments, it returns all line series.
 *
 * @returns {UseLineSeriesReturnValue[]} the line series
 */ /**
 * Get access to the internal state of line series.
 *
 * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.
 * @returns {UseLineSeriesReturnValue[]} the line series
 */ function useLineSeries(seriesIds) {
    return useSelectorSeries(seriesIds);
}
/**
 * Get access to the internal state of line series.
 * The returned object contains:
 * - series: a mapping from ids to series attributes.
 * - seriesOrder: the array of series ids.
 * - stackingGroups: the array of stacking groups. Each group contains the series ids stacked and the strategy to use.
 * @returns the line series
 */ function useLineSeriesContext() {
    return useSelectorSeriesContext();
}

},{"7e65f5285c3d9afe":"5z2Wk"}],"4tLo6":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useItemHighlightedGetter = useItemHighlightedGetter;
var _useSelector = require("376b246fe5d0a776");
var _useStore = require("68afbed3ae506fa9");
var _useChartHighlight = require("8103652467901929");
/**
 * A hook to check the highlighted state of multiple items.
 * If you're interested by a single one, consider using `useItemHighlighted`.
 *
 * Warning: highlighted and faded can both be true at the same time.
 * We recommend to first test if item is highlighted: `const faded = !highlighted && isFaded(item)`
 * @returns {{ isHighlighted, isFaded }} callbacks to get the state of the item.
 */ function useItemHighlightedGetter() {
    const store = (0, _useStore.useStore)();
    const isHighlighted = (0, _useSelector.useSelector)(store, _useChartHighlight.selectorChartsIsHighlightedCallback);
    const isFaded = (0, _useSelector.useSelector)(store, _useChartHighlight.selectorChartsIsFadedCallback);
    return {
        isHighlighted,
        isFaded
    };
}

},{"376b246fe5d0a776":"65ofz","68afbed3ae506fa9":"6viTh","8103652467901929":"gFn6P"}],"aMDAZ":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useLegend = useLegend;
var _useChartSeries = require("6b2fa8b166e3ae5d");
var _useSeries = require("6aff929b1890914d");
var _useStore = require("dad09bb99dca1255");
var _useSelector = require("1cc47dc940cb7dfd");
function getSeriesToDisplay(series, seriesConfig) {
    return Object.keys(series).flatMap((seriesType)=>{
        const getter = seriesConfig[seriesType].legendGetter;
        return getter === undefined ? [] : getter(series[seriesType]);
    });
}
/**
 * Get the legend items to display.
 *
 * This hook is used by the `ChartsLegend` component. And will return the legend items formatted for display.
 *
 * An alternative is to use the `useSeries` hook and format the legend items yourself.
 *
 * @returns legend data
 */ function useLegend() {
    const series = (0, _useSeries.useSeries)();
    const store = (0, _useStore.useStore)();
    const seriesConfig = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesConfig);
    return {
        items: getSeriesToDisplay(series, seriesConfig)
    };
}

},{"6b2fa8b166e3ae5d":"3wdVT","6aff929b1890914d":"aMvY8","dad09bb99dca1255":"6viTh","1cc47dc940cb7dfd":"65ofz"}],"8rjJB":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("7d9355441e3b00ee").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartGradientId = useChartGradientId;
exports.useChartGradientIdBuilder = useChartGradientIdBuilder;
exports.useChartGradientIdObjectBound = useChartGradientIdObjectBound;
exports.useChartGradientIdObjectBoundBuilder = useChartGradientIdObjectBoundBuilder;
var React = _interopRequireWildcard(require("f0cf9dc2a972ca16"));
var _useChartId = require("b88b7c48aa0b370c");
/**
 * Returns a function that generates a gradient id for the given axis id.
 */ function useChartGradientIdBuilder() {
    const chartId = (0, _useChartId.useChartId)();
    return React.useCallback((axisId)=>`${chartId}-gradient-${axisId}`, [
        chartId
    ]);
}
/**
 * Returns a function that generates a gradient id for the given axis id.
 */ function useChartGradientIdObjectBoundBuilder() {
    const chartId = (0, _useChartId.useChartId)();
    return React.useCallback((axisId)=>`${chartId}-gradient-${axisId}-object-bound`, [
        chartId
    ]);
}
/**
 * Returns a gradient id for the given axis id.
 *
 * Can be useful when reusing the same gradient on custom components.
 *
 * For a gradient that respects the coordinates of the object on which it is applied, use `useChartGradientIdObjectBound` instead.
 *
 * @param axisId the axis id
 * @returns the gradient id
 */ function useChartGradientId(axisId) {
    return useChartGradientIdBuilder()(axisId);
}
/**
 * Returns a gradient id for the given axis id.
 *
 * Can be useful when reusing the same gradient on custom components.
 *
 * This gradient differs from `useChartGradientId` in that it respects the coordinates of the object on which it is applied.
 *
 * @param axisId the axis id
 * @returns the gradient id
 */ function useChartGradientIdObjectBound(axisId) {
    return useChartGradientIdObjectBoundBuilder()(axisId);
}

},{"7d9355441e3b00ee":"6TFJp","f0cf9dc2a972ca16":"jMk1U","b88b7c48aa0b370c":"82HoH"}],"3z0TS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _useAnimate = require("7a6427d41481f37c");
Object.keys(_useAnimate).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimate[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimate[key];
        }
    });
});
var _useAnimateArea = require("3b42d377231008db");
Object.keys(_useAnimateArea).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimateArea[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimateArea[key];
        }
    });
});
var _useAnimateBar = require("4f1da5234756c98e");
Object.keys(_useAnimateBar).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimateBar[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimateBar[key];
        }
    });
});
var _useAnimateBarLabel = require("e51b95b451bd0bd8");
Object.keys(_useAnimateBarLabel).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimateBarLabel[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimateBarLabel[key];
        }
    });
});
var _useAnimateLine = require("f3bbcdb57c190ae9");
Object.keys(_useAnimateLine).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimateLine[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimateLine[key];
        }
    });
});
var _useAnimatePieArc = require("a1d7e5c2e91909d6");
Object.keys(_useAnimatePieArc).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimatePieArc[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimatePieArc[key];
        }
    });
});
var _useAnimatePieArcLabel = require("dfe01f404a8a81e6");
Object.keys(_useAnimatePieArcLabel).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _useAnimatePieArcLabel[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAnimatePieArcLabel[key];
        }
    });
});

},{"7a6427d41481f37c":"9IpEI","3b42d377231008db":"4RKH4","4f1da5234756c98e":"5Ib0k","e51b95b451bd0bd8":"0UwFH","f3bbcdb57c190ae9":"b9mAX","a1d7e5c2e91909d6":"6gXas","dfe01f404a8a81e6":"9NILU"}],"5Ib0k":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimateBar = useAnimateBar;
var _d3Interpolate = require("2034e9c9c2b99121");
var _useAnimate = require("e2999a541e5bbf3e");
function barPropsInterpolator(from, to) {
    const interpolateX = (0, _d3Interpolate.interpolateNumber)(from.x, to.x);
    const interpolateY = (0, _d3Interpolate.interpolateNumber)(from.y, to.y);
    const interpolateWidth = (0, _d3Interpolate.interpolateNumber)(from.width, to.width);
    const interpolateHeight = (0, _d3Interpolate.interpolateNumber)(from.height, to.height);
    return (t)=>{
        return {
            x: interpolateX(t),
            y: interpolateY(t),
            width: interpolateWidth(t),
            height: interpolateHeight(t)
        };
    };
}
/**
 * Animates a bar from the start of the axis (x-axis for vertical layout, y-axis for horizontal layout) to its
 * final position.
 *
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called.
 */ function useAnimateBar(props) {
    const initialProps = {
        x: props.layout === 'vertical' ? props.x : props.xOrigin,
        y: props.layout === 'vertical' ? props.yOrigin : props.y,
        width: props.layout === 'vertical' ? props.width : 0,
        height: props.layout === 'vertical' ? 0 : props.height
    };
    return (0, _useAnimate.useAnimate)({
        x: props.x,
        y: props.y,
        width: props.width,
        height: props.height
    }, {
        createInterpolator: barPropsInterpolator,
        applyProps (element, animatedProps) {
            element.setAttribute('x', animatedProps.x.toString());
            element.setAttribute('y', animatedProps.y.toString());
            element.setAttribute('width', animatedProps.width.toString());
            element.setAttribute('height', animatedProps.height.toString());
        },
        transformProps: (p)=>p,
        initialProps,
        skip: props.skipAnimation,
        ref: props.ref
    });
}

},{"2034e9c9c2b99121":"2yPAl","e2999a541e5bbf3e":"9IpEI"}],"0UwFH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimateBarLabel = useAnimateBarLabel;
var _d3Interpolate = require("8f67d000501b545e");
var _useAnimate = require("9a62142d7e44ac56");
function barLabelPropsInterpolator(from, to) {
    const interpolateX = (0, _d3Interpolate.interpolateNumber)(from.x, to.x);
    const interpolateY = (0, _d3Interpolate.interpolateNumber)(from.y, to.y);
    const interpolateWidth = (0, _d3Interpolate.interpolateNumber)(from.width, to.width);
    const interpolateHeight = (0, _d3Interpolate.interpolateNumber)(from.height, to.height);
    return (t)=>{
        return {
            x: interpolateX(t),
            y: interpolateY(t),
            width: interpolateWidth(t),
            height: interpolateHeight(t)
        };
    };
}
/**
 * Animates a bar label from the start of the axis (x-axis for vertical layout, y-axis for horizontal layout) to the
 * center of the bar it belongs to.
 * The label is horizontally centered within the bar when the layout is vertical, and vertically centered for laid out
 * horizontally.
 *
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called.
 */ function useAnimateBarLabel(props) {
    const initialProps = {
        x: props.layout === 'vertical' ? props.x + props.width / 2 : props.xOrigin,
        y: props.layout === 'vertical' ? props.yOrigin : props.y + props.height / 2,
        width: props.width,
        height: props.height
    };
    const currentProps = {
        x: props.x + props.width / 2,
        y: props.y + props.height / 2,
        width: props.width,
        height: props.height
    };
    return (0, _useAnimate.useAnimate)(currentProps, {
        createInterpolator: barLabelPropsInterpolator,
        transformProps: (p)=>p,
        applyProps (element, animatedProps) {
            element.setAttribute('x', animatedProps.x.toString());
            element.setAttribute('y', animatedProps.y.toString());
            element.setAttribute('width', animatedProps.width.toString());
            element.setAttribute('height', animatedProps.height.toString());
        },
        initialProps,
        skip: props.skipAnimation,
        ref: props.ref
    });
}

},{"8f67d000501b545e":"2yPAl","9a62142d7e44ac56":"9IpEI"}],"b9mAX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimateLine = useAnimateLine;
var _d3Interpolate = require("7785c1fa80e272c3");
var _useAnimate = require("e306a413d06b21d2");
/** Animates a line of a line chart using a `path` element.
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called. */ function useAnimateLine(props) {
    return (0, _useAnimate.useAnimate)({
        d: props.d
    }, {
        createInterpolator: (lastProps, newProps)=>{
            const interpolate = (0, _d3Interpolate.interpolateString)(lastProps.d, newProps.d);
            return (t)=>({
                    d: interpolate(t)
                });
        },
        applyProps: (element, { d })=>element.setAttribute('d', d),
        skip: props.skipAnimation,
        transformProps: (p)=>p,
        ref: props.ref
    });
}

},{"7785c1fa80e272c3":"2yPAl","e306a413d06b21d2":"9IpEI"}],"6gXas":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimatePieArc = useAnimatePieArc;
var _d3Shape = require("378c64a8c15664e7");
var _d3Interpolate = require("2dbd7925f98c0897");
var _useAnimate = require("3515e47e7ac7721a");
function pieArcPropsInterpolator(from, to) {
    const interpolateStartAngle = (0, _d3Interpolate.interpolateNumber)(from.startAngle, to.startAngle);
    const interpolateEndAngle = (0, _d3Interpolate.interpolateNumber)(from.endAngle, to.endAngle);
    const interpolateInnerRadius = (0, _d3Interpolate.interpolateNumber)(from.innerRadius, to.innerRadius);
    const interpolateOuterRadius = (0, _d3Interpolate.interpolateNumber)(from.outerRadius, to.outerRadius);
    const interpolatePaddingAngle = (0, _d3Interpolate.interpolateNumber)(from.paddingAngle, to.paddingAngle);
    const interpolateCornerRadius = (0, _d3Interpolate.interpolateNumber)(from.cornerRadius, to.cornerRadius);
    return (t)=>{
        return {
            startAngle: interpolateStartAngle(t),
            endAngle: interpolateEndAngle(t),
            innerRadius: interpolateInnerRadius(t),
            outerRadius: interpolateOuterRadius(t),
            paddingAngle: interpolatePaddingAngle(t),
            cornerRadius: interpolateCornerRadius(t)
        };
    };
}
/** Animates a slice of a pie chart by increasing the start and end angles from the middle angle to their final values.
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called. */ function useAnimatePieArc(props) {
    const initialProps = {
        startAngle: (props.startAngle + props.endAngle) / 2,
        endAngle: (props.startAngle + props.endAngle) / 2,
        innerRadius: props.innerRadius,
        outerRadius: props.outerRadius,
        paddingAngle: props.paddingAngle,
        cornerRadius: props.cornerRadius
    };
    return (0, _useAnimate.useAnimate)({
        startAngle: props.startAngle,
        endAngle: props.endAngle,
        innerRadius: props.innerRadius,
        outerRadius: props.outerRadius,
        paddingAngle: props.paddingAngle,
        cornerRadius: props.cornerRadius
    }, {
        createInterpolator: pieArcPropsInterpolator,
        transformProps: (p)=>({
                d: (0, _d3Shape.arc)().cornerRadius(p.cornerRadius)({
                    padAngle: p.paddingAngle,
                    innerRadius: p.innerRadius,
                    outerRadius: p.outerRadius,
                    startAngle: p.startAngle,
                    endAngle: p.endAngle
                }),
                visibility: p.startAngle === p.endAngle ? 'hidden' : 'visible'
            }),
        applyProps (element, p) {
            element.setAttribute('d', p.d);
            element.setAttribute('visibility', p.visibility);
        },
        initialProps,
        skip: props.skipAnimation,
        ref: props.ref
    });
}

},{"378c64a8c15664e7":"bw44j","2dbd7925f98c0897":"2yPAl","3515e47e7ac7721a":"9IpEI"}],"9NILU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAnimatePieArcLabel = useAnimatePieArcLabel;
var _d3Shape = require("c9c12661b7cd1574");
var _d3Interpolate = require("7aceedd6682f098d");
var _useAnimate = require("2e726344247f0a95");
function pieArcLabelPropsInterpolator(from, to) {
    const interpolateStartAngle = (0, _d3Interpolate.interpolateNumber)(from.startAngle, to.startAngle);
    const interpolateEndAngle = (0, _d3Interpolate.interpolateNumber)(from.endAngle, to.endAngle);
    const interpolateInnerRadius = (0, _d3Interpolate.interpolateNumber)(from.innerRadius, to.innerRadius);
    const interpolateOuterRadius = (0, _d3Interpolate.interpolateNumber)(from.outerRadius, to.outerRadius);
    const interpolatePaddingAngle = (0, _d3Interpolate.interpolateNumber)(from.paddingAngle, to.paddingAngle);
    const interpolateCornerRadius = (0, _d3Interpolate.interpolateNumber)(from.cornerRadius, to.cornerRadius);
    return (t)=>{
        return {
            startAngle: interpolateStartAngle(t),
            endAngle: interpolateEndAngle(t),
            innerRadius: interpolateInnerRadius(t),
            outerRadius: interpolateOuterRadius(t),
            paddingAngle: interpolatePaddingAngle(t),
            cornerRadius: interpolateCornerRadius(t)
        };
    };
}
/** Animates the label of pie slice from its middle point to the centroid of the slice.
 * The props object also accepts a `ref` which will be merged with the ref returned from this hook. This means you can
 * pass the ref returned by this hook to the `path` element and the `ref` provided as argument will also be called. */ function useAnimatePieArcLabel(props) {
    const initialProps = {
        startAngle: (props.startAngle + props.endAngle) / 2,
        endAngle: (props.startAngle + props.endAngle) / 2,
        innerRadius: props.innerRadius,
        outerRadius: props.outerRadius,
        paddingAngle: props.paddingAngle,
        cornerRadius: props.cornerRadius
    };
    return (0, _useAnimate.useAnimate)({
        startAngle: props.startAngle,
        endAngle: props.endAngle,
        innerRadius: props.innerRadius,
        outerRadius: props.outerRadius,
        paddingAngle: props.paddingAngle,
        cornerRadius: props.cornerRadius
    }, {
        createInterpolator: pieArcLabelPropsInterpolator,
        transformProps: (animatedProps)=>{
            const [x, y] = (0, _d3Shape.arc)().cornerRadius(animatedProps.cornerRadius).centroid({
                padAngle: animatedProps.paddingAngle,
                startAngle: animatedProps.startAngle,
                endAngle: animatedProps.endAngle,
                innerRadius: animatedProps.innerRadius,
                outerRadius: animatedProps.outerRadius
            });
            return {
                x,
                y
            };
        },
        applyProps (element, { x, y }) {
            element.setAttribute('x', x.toString());
            element.setAttribute('y', y.toString());
        },
        initialProps,
        skip: props.skipAnimation,
        ref: props.ref
    });
}

},{"c9c12661b7cd1574":"bw44j","7aceedd6682f098d":"2yPAl","2e726344247f0a95":"9IpEI"}],"fNeDq":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartRootRef = useChartRootRef;
var _ChartProvider = require("ed3025f3e291b72f");
/**
 * Get the ref for the root chart element.
 * @returns The root chart element ref.
 */ function useChartRootRef() {
    const context = (0, _ChartProvider.useChartContext)();
    return context.chartRootRef;
}

},{"ed3025f3e291b72f":"8cPIy"}],"8bMMH":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("905ba352e9113cee").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartsLocalization = void 0;
var React = _interopRequireWildcard(require("aff6c6a1a452bee"));
var _ChartsLocalizationProvider = require("65d597e5cdad5eed");
const useChartsLocalization = ()=>{
    const localization = React.useContext(_ChartsLocalizationProvider.ChartsLocalizationContext);
    if (localization === null) throw new Error([
        'MUI X Charts: Can not find the charts localization context.',
        'It looks like you forgot to wrap your component in ChartsLocalizationProvider.',
        'This can also happen if you are bundling multiple versions of the `@mui/x-charts` package'
    ].join('\n'));
    return localization;
};
exports.useChartsLocalization = useChartsLocalization;

},{"905ba352e9113cee":"6TFJp","aff6c6a1a452bee":"jMk1U","65d597e5cdad5eed":"8X1WH"}],"8X1WH":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("95fb875a3bd66a7d").default;
var _interopRequireWildcard = require("f6229f174358ece").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLocalizationContext = void 0;
exports.ChartsLocalizationProvider = ChartsLocalizationProvider;
var _extends2 = _interopRequireDefault(require("c95b57924b44fc10"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("ef8bf3447b806585"));
var React = _interopRequireWildcard(require("797c3a6b580647a0"));
var _propTypes = _interopRequireDefault(require("acae5301d5b347d3"));
var _styles = require("e6afa6a27c838eb5");
var _enUS = require("895ba544a4a4274e");
var _jsxRuntime = require("4d34138e49b2ec41");
const _excluded = [
    "localeText"
];
const ChartsLocalizationContext = exports.ChartsLocalizationContext = /*#__PURE__*/ React.createContext(null);
ChartsLocalizationContext.displayName = 'ChartsLocalizationContext';
/**
 * Demos:
 *
 * - [localization](https://mui.com/x/react-charts/localization/)
 *
 * API:
 *
 * - [ChartsLocalizationProvider API](https://mui.com/x/api/charts/charts-localization-provider/)
 */ function ChartsLocalizationProvider(inProps) {
    const { localeText: inLocaleText } = inProps, other = (0, _objectWithoutPropertiesLoose2.default)(inProps, _excluded);
    const { localeText: parentLocaleText } = React.useContext(ChartsLocalizationContext) ?? {
        localeText: undefined
    };
    const props = (0, _styles.useThemeProps)({
        // We don't want to pass the `localeText` prop to the theme, that way it will always return the theme value,
        // We will then merge this theme value with our value manually
        props: other,
        name: 'MuiChartsLocalizationProvider'
    });
    const { children, localeText: themeLocaleText } = props;
    const localeText = React.useMemo(()=>(0, _extends2.default)({}, _enUS.DEFAULT_LOCALE, themeLocaleText, parentLocaleText, inLocaleText), [
        themeLocaleText,
        parentLocaleText,
        inLocaleText
    ]);
    const contextValue = React.useMemo(()=>{
        return {
            localeText
        };
    }, [
        localeText
    ]);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(ChartsLocalizationContext.Provider, {
        value: contextValue,
        children: children
    });
}
ChartsLocalizationProvider.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    children: _propTypes.default.node,
    /**
   * Localized text for chart components.
   */ localeText: _propTypes.default.object
};

},{"95fb875a3bd66a7d":"1P3rZ","f6229f174358ece":"6TFJp","c95b57924b44fc10":"lKa0J","ef8bf3447b806585":"17jFf","797c3a6b580647a0":"jMk1U","acae5301d5b347d3":"GNqOQ","e6afa6a27c838eb5":"7eExx","895ba544a4a4274e":"lWf3r","4d34138e49b2ec41":"05iiF"}],"lWf3r":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.enUSLocaleText = exports.enUS = exports.DEFAULT_LOCALE = void 0;
var _getChartsLocalization = require("ea99a468564a10d0");
// This object is not Partial<ChartsLocaleText> because it is the default values
const enUSLocaleText = exports.enUSLocaleText = {
    // Overlay
    loading: "Loading data\u2026",
    noData: 'No data to display'
};
const DEFAULT_LOCALE = exports.DEFAULT_LOCALE = enUSLocaleText;
const enUS = exports.enUS = (0, _getChartsLocalization.getChartsLocalization)(enUSLocaleText);

},{"ea99a468564a10d0":"4yom7"}],"4yom7":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8a7bcec58e949e8e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getChartsLocalization = void 0;
var _extends2 = _interopRequireDefault(require("6ebcabc62d606818"));
/**
 * Helper to pass translation to all charts thanks to the MUI theme.
 * @param chartsTranslations The translation object.
 * @returns an object to pass the translation by using the MUI theme default props
 */ const getChartsLocalization = (chartsTranslations)=>{
    return {
        components: {
            MuiChartsLocalizationProvider: {
                defaultProps: {
                    localeText: (0, _extends2.default)({}, chartsTranslations)
                }
            }
        }
    };
};
exports.getChartsLocalization = getChartsLocalization;

},{"8a7bcec58e949e8e":"1P3rZ","6ebcabc62d606818":"lKa0J"}],"nkH9c":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCurveFactory = getCurveFactory;
var _d3Shape = require("ddcc06415f14f943");
function getCurveFactory(curveType) {
    switch(curveType){
        case 'catmullRom':
            return _d3Shape.curveCatmullRom.alpha(0.5);
        case 'linear':
            return _d3Shape.curveLinear;
        case 'monotoneX':
            return _d3Shape.curveMonotoneX;
        case 'monotoneY':
            return _d3Shape.curveMonotoneY;
        case 'natural':
            return _d3Shape.curveNatural;
        case 'step':
            return _d3Shape.curveStep;
        case 'stepBefore':
            return _d3Shape.curveStepBefore;
        case 'stepAfter':
            return _d3Shape.curveStepAfter;
        case 'bumpY':
            return _d3Shape.curveBumpY;
        case 'bumpX':
            return _d3Shape.curveBumpX;
        default:
            return _d3Shape.curveMonotoneX;
    }
}

},{"ddcc06415f14f943":"bw44j"}],"3OF6M":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useSkipAnimation = useSkipAnimation;
var _useChartAnimation = require("3440174a3241891f");
var _useStore = require("18f1755dd2e7b0b");
var _useSelector = require("a1922a0dc4189472");
/**
 * A hook to get if chart animations should be skipped.
 *
 * @returns {boolean} whether to skip animations
 */ function useSkipAnimation(skipAnimation) {
    const store = (0, _useStore.useStore)();
    const storeSkipAnimation = (0, _useSelector.useSelector)(store, _useChartAnimation.selectorChartSkipAnimation);
    return skipAnimation || storeSkipAnimation;
}

},{"3440174a3241891f":"2TGrt","18f1755dd2e7b0b":"6viTh","a1922a0dc4189472":"65ofz"}],"hjVOe":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useInternalIsZoomInteracting = useInternalIsZoomInteracting;
var _useSelector = require("d3e12eae67848f2b");
var _useStore = require("5d301427c15d489b");
var _useChartCartesianAxisRendering = require("660efb807b74c445");
/**
 * Check if the zoom is interacting.
 *
 * This should probably be moved/merged to the AnimationContext when we move it to the new API.
 *
 * @ignore Internal hook, similar to the PRO one.
 *
 * @returns {boolean} Inform the zoom is interacting.
 */ function useInternalIsZoomInteracting() {
    const store = (0, _useStore.useStore)();
    const isInteracting = (0, _useSelector.useSelector)(store, _useChartCartesianAxisRendering.selectorChartZoomIsInteracting);
    return isInteracting;
}

},{"d3e12eae67848f2b":"65ofz","5d301427c15d489b":"6viTh","660efb807b74c445":"7HxFa"}],"f6SFl":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("3f583e4a05e14c40").default;
var _interopRequireWildcard = require("9674c385d1cb0da6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LinePlot = LinePlot;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("c2c2c0df09c277cd"));
var _extends2 = _interopRequireDefault(require("eb650e5e1a169ba7"));
var React = _interopRequireWildcard(require("df56cba9c39a59bf"));
var _propTypes = _interopRequireDefault(require("93bd9006401ca429"));
var _styles = require("a4739abe45860e95");
var _warning = require("b235f5af61f8b6eb");
var _d3Shape = require("9fa071cf3f0787c7");
var _LineElement = require("762af27bdf47840f");
var _useScale = require("f9bc5c256af1367c");
var _getCurve = require("f9fa8f7b24d20e71");
var _isBandScale = require("e53f48641c5551c3");
var _constants = require("c529439bda3a2428");
var _useLineSeries = require("63eef38c3d64d553");
var _useSkipAnimation = require("77c8fbc859a31aed");
var _useChartGradientId = require("7dd8886002e43801");
var _hooks = require("f703d77635d21391");
var _useInternalIsZoomInteracting = require("d5f3f32620686bf8");
var _jsxRuntime = require("f73faee14f67b1f1");
const _excluded = [
    "slots",
    "slotProps",
    "skipAnimation",
    "onItemClick"
];
const LinePlotRoot = (0, _styles.styled)('g', {
    name: 'MuiAreaPlot',
    slot: 'Root'
})({
    [`& .${_LineElement.lineElementClasses.root}`]: {
        transition: 'opacity 0.2s ease-in, fill 0.2s ease-in'
    }
});
const useAggregatedData = ()=>{
    const seriesData = (0, _useLineSeries.useLineSeriesContext)();
    const { xAxis, xAxisIds } = (0, _hooks.useXAxes)();
    const { yAxis, yAxisIds } = (0, _hooks.useYAxes)();
    const getGradientId = (0, _useChartGradientId.useChartGradientIdBuilder)();
    // This memo prevents odd line chart behavior when hydrating.
    const allData = React.useMemo(()=>{
        if (seriesData === undefined) return [];
        const { series, stackingGroups } = seriesData;
        const defaultXAxisId = xAxisIds[0];
        const defaultYAxisId = yAxisIds[0];
        return stackingGroups.flatMap(({ ids: groupIds })=>{
            return groupIds.flatMap((seriesId)=>{
                const { xAxisId = defaultXAxisId, yAxisId = defaultYAxisId, stackedData, data, connectNulls, curve, strictStepCurve } = series[seriesId];
                const xScale = xAxis[xAxisId].scale;
                const xPosition = (0, _useScale.getValueToPositionMapper)(xScale);
                const yScale = yAxis[yAxisId].scale;
                const xData = xAxis[xAxisId].data;
                const gradientId = yAxis[yAxisId].colorScale && getGradientId(yAxisId) || xAxis[xAxisId].colorScale && getGradientId(xAxisId) || undefined;
                if (xData === undefined) throw new Error(`MUI X Charts: ${xAxisId === _constants.DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id "${xAxisId}"`} should have data property to be able to display a line plot.`);
                if (xData.length < stackedData.length) (0, _warning.warnOnce)(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`, 'error');
                const shouldExpand = curve?.includes('step') && !strictStepCurve && (0, _isBandScale.isBandScale)(xScale);
                const formattedData = xData?.flatMap((x, index)=>{
                    const nullData = data[index] == null;
                    if (shouldExpand) {
                        const rep = [
                            {
                                x,
                                y: stackedData[index],
                                nullData,
                                isExtension: false
                            }
                        ];
                        if (!nullData && (index === 0 || data[index - 1] == null)) rep.unshift({
                            x: (xScale(x) ?? 0) - (xScale.step() - xScale.bandwidth()) / 2,
                            y: stackedData[index],
                            nullData,
                            isExtension: true
                        });
                        if (!nullData && (index === data.length - 1 || data[index + 1] == null)) rep.push({
                            x: (xScale(x) ?? 0) + (xScale.step() + xScale.bandwidth()) / 2,
                            y: stackedData[index],
                            nullData,
                            isExtension: true
                        });
                        return rep;
                    }
                    return {
                        x,
                        y: stackedData[index],
                        nullData
                    };
                }) ?? [];
                const d3Data = connectNulls ? formattedData.filter((d)=>!d.nullData) : formattedData;
                const linePath = (0, _d3Shape.line)().x((d)=>d.isExtension ? d.x : xPosition(d.x)).defined((d)=>connectNulls || !d.nullData || !!d.isExtension).y((d)=>yScale(d.y[1]));
                const d = linePath.curve((0, _getCurve.getCurveFactory)(curve))(d3Data) || '';
                return (0, _extends2.default)({}, series[seriesId], {
                    gradientId,
                    d,
                    seriesId
                });
            });
        });
    }, [
        seriesData,
        xAxisIds,
        yAxisIds,
        xAxis,
        yAxis,
        getGradientId
    ]);
    return allData;
};
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LinePlot API](https://mui.com/x/api/charts/line-plot/)
 */ function LinePlot(props) {
    const { slots, slotProps, skipAnimation: inSkipAnimation, onItemClick } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const isZoomInteracting = (0, _useInternalIsZoomInteracting.useInternalIsZoomInteracting)();
    const skipAnimation = (0, _useSkipAnimation.useSkipAnimation)(isZoomInteracting || inSkipAnimation);
    const completedData = useAggregatedData();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(LinePlotRoot, (0, _extends2.default)({}, other, {
        children: completedData.map(({ d, seriesId, color, gradientId })=>{
            return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_LineElement.LineElement, {
                id: seriesId,
                d: d,
                color: color,
                gradientId: gradientId,
                skipAnimation: skipAnimation,
                slots: slots,
                slotProps: slotProps,
                onClick: onItemClick && ((event)=>onItemClick(event, {
                        type: 'line',
                        seriesId
                    }))
            }, seriesId);
        })
    }));
}
LinePlot.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Callback fired when a line item is clicked.
   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.
   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.
   */ onItemClick: _propTypes.default.func,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"3f583e4a05e14c40":"1P3rZ","9674c385d1cb0da6":"6TFJp","c2c2c0df09c277cd":"17jFf","eb650e5e1a169ba7":"lKa0J","df56cba9c39a59bf":"jMk1U","93bd9006401ca429":"GNqOQ","a4739abe45860e95":"7eExx","b235f5af61f8b6eb":"4GMHX","9fa071cf3f0787c7":"bw44j","762af27bdf47840f":"iQ0Vf","f9bc5c256af1367c":"uL1ts","f9fa8f7b24d20e71":"nkH9c","e53f48641c5551c3":"58Ehn","c529439bda3a2428":"2sqkC","63eef38c3d64d553":"kI0zE","77c8fbc859a31aed":"3OF6M","7dd8886002e43801":"8rjJB","f703d77635d21391":"92Hil","d5f3f32620686bf8":"hjVOe","f73faee14f67b1f1":"05iiF"}],"iQ0Vf":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("39d4ad2a870a1c67").default;
var _interopRequireWildcard = require("807a0bf5e262f19c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LineElement = LineElement;
exports.getLineElementUtilityClass = getLineElementUtilityClass;
exports.lineElementClasses = void 0;
var _extends2 = _interopRequireDefault(require("b78a33ac64bd8061"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("6c5453b6b9e3b0f5"));
var React = _interopRequireWildcard(require("68ef82faaa109"));
var _propTypes = _interopRequireDefault(require("12045e2bba5c677a"));
var _composeClasses = _interopRequireDefault(require("60a6d234cfdbd2ee"));
var _useSlotProps = _interopRequireDefault(require("e99558a72d5d8665"));
var _generateUtilityClass = _interopRequireDefault(require("3aa73eddf6d483c4"));
var _generateUtilityClasses = _interopRequireDefault(require("4ad2b6f2e7b0412c"));
var _useInteractionItemProps = require("2fb8e81c0c7e44b4");
var _AnimatedLine = require("aff0b4dcfa4966f4");
var _useItemHighlighted = require("ae13bc2906588407");
var _jsxRuntime = require("99ee6bb7a6a3fc3b");
const _excluded = [
    "id",
    "classes",
    "color",
    "gradientId",
    "slots",
    "slotProps",
    "onClick"
];
function getLineElementUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiLineElement', slot);
}
const lineElementClasses = exports.lineElementClasses = (0, _generateUtilityClasses.default)('MuiLineElement', [
    'root',
    'highlighted',
    'faded',
    'series'
]);
const useUtilityClasses = (ownerState)=>{
    const { classes, id, isFaded, isHighlighted } = ownerState;
    const slots = {
        root: [
            'root',
            `series-${id}`,
            isHighlighted && 'highlighted',
            isFaded && 'faded'
        ]
    };
    return (0, _composeClasses.default)(slots, getLineElementUtilityClass, classes);
};
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LineElement API](https://mui.com/x/api/charts/line-element/)
 */ function LineElement(props) {
    const { id, classes: innerClasses, color, gradientId, slots, slotProps, onClick } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
        type: 'line',
        seriesId: id
    });
    const { isFaded, isHighlighted } = (0, _useItemHighlighted.useItemHighlighted)({
        seriesId: id
    });
    const ownerState = {
        id,
        classes: innerClasses,
        color,
        gradientId,
        isFaded,
        isHighlighted
    };
    const classes = useUtilityClasses(ownerState);
    const Line = slots?.line ?? _AnimatedLine.AnimatedLine;
    const lineProps = (0, _useSlotProps.default)({
        elementType: Line,
        externalSlotProps: slotProps?.line,
        additionalProps: (0, _extends2.default)({}, interactionProps, {
            onClick,
            cursor: onClick ? 'pointer' : 'unset'
        }),
        className: classes.root,
        ownerState
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Line, (0, _extends2.default)({}, other, lineProps));
}
LineElement.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    classes: _propTypes.default.object,
    color: _propTypes.default.string.isRequired,
    d: _propTypes.default.string.isRequired,
    gradientId: _propTypes.default.string,
    id: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"39d4ad2a870a1c67":"1P3rZ","807a0bf5e262f19c":"6TFJp","b78a33ac64bd8061":"lKa0J","6c5453b6b9e3b0f5":"17jFf","68ef82faaa109":"jMk1U","12045e2bba5c677a":"GNqOQ","60a6d234cfdbd2ee":"gluJr","e99558a72d5d8665":"7cNZ5","3aa73eddf6d483c4":"iAc9p","4ad2b6f2e7b0412c":"3J0Rs","2fb8e81c0c7e44b4":"beDHx","aff0b4dcfa4966f4":"lqeRY","ae13bc2906588407":"bzOyV","99ee6bb7a6a3fc3b":"05iiF"}],"lqeRY":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("442d24d4bfc88ebe").default;
var _interopRequireWildcard = require("817e51a90410dcf2").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AnimatedLine = void 0;
var _extends2 = _interopRequireDefault(require("54f3794eac2c14e7"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("b6e16509be5bc303"));
var React = _interopRequireWildcard(require("14fa2dae62d055e6"));
var _propTypes = _interopRequireDefault(require("96d6d872b3fefac4"));
var _hooks = require("a102cf8ddba93c93");
var _AppearingMask = require("4f0d03f8571d93d3");
var _jsxRuntime = require("fafc7e0d5081c821");
const _excluded = [
    "skipAnimation",
    "ownerState"
];
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [AnimatedLine API](https://mui.com/x/api/charts/animated-line/)
 */ const AnimatedLine = exports.AnimatedLine = /*#__PURE__*/ React.forwardRef(function AnimatedLine(props, ref) {
    const { skipAnimation, ownerState } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const animateProps = (0, _hooks.useAnimateLine)((0, _extends2.default)({}, props, {
        ref
    }));
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_AppearingMask.AppearingMask, {
        skipAnimation: skipAnimation,
        id: `${ownerState.id}-line-clip`,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("path", (0, _extends2.default)({
            stroke: ownerState.gradientId ? `url(#${ownerState.gradientId})` : ownerState.color,
            strokeWidth: 2,
            strokeLinejoin: "round",
            fill: "none",
            filter: ownerState.isHighlighted ? 'brightness(120%)' : undefined,
            opacity: ownerState.isFaded ? 0.3 : 1
        }, other, animateProps))
    });
});
AnimatedLine.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    d: _propTypes.default.string.isRequired,
    ownerState: _propTypes.default.shape({
        classes: _propTypes.default.object,
        color: _propTypes.default.string.isRequired,
        gradientId: _propTypes.default.string,
        id: _propTypes.default.oneOfType([
            _propTypes.default.number,
            _propTypes.default.string
        ]).isRequired,
        isFaded: _propTypes.default.bool.isRequired,
        isHighlighted: _propTypes.default.bool.isRequired
    }).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool
};

},{"442d24d4bfc88ebe":"1P3rZ","817e51a90410dcf2":"6TFJp","54f3794eac2c14e7":"lKa0J","b6e16509be5bc303":"17jFf","14fa2dae62d055e6":"jMk1U","96d6d872b3fefac4":"GNqOQ","a102cf8ddba93c93":"92Hil","4f0d03f8571d93d3":"8Ju4X","fafc7e0d5081c821":"05iiF"}],"jy13i":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("b63c3dc90c2f122c").default;
var _interopRequireWildcard = require("b672144593e053df").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MarkPlot = MarkPlot;
var _extends2 = _interopRequireDefault(require("a1c7f2cff54298d2"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("8055f9f985b055e7"));
var _propTypes = _interopRequireDefault(require("a11150ed5244cb00"));
var React = _interopRequireWildcard(require("cfdc89d4eebed6bf"));
var _constants = require("80b451aa7c30dfb6");
var _useSkipAnimation = require("2b434cd094ea62ea");
var _useChartId = require("c2ca1e1721c44b8d");
var _useScale = require("b765633ce9012827");
var _useLineSeries = require("d02a037051f91aa");
var _cleanId = require("4810e3c62ee00b3");
var _CircleMarkElement = require("e5f39615eaa01763");
var _getColor = _interopRequireDefault(require("f6fcd3706e1547d"));
var _MarkElement = require("6182e3ebdc1d75f0");
var _ChartProvider = require("df9fb3547140cb4d");
var _hooks = require("b49370abb2e5b728");
var _useInternalIsZoomInteracting = require("23de7dff7ad19713");
var _jsxRuntime = require("fa90aca03c68ac6f");
const _excluded = [
    "slots",
    "slotProps",
    "skipAnimation",
    "onItemClick"
];
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [MarkPlot API](https://mui.com/x/api/charts/mark-plot/)
 */ function MarkPlot(props) {
    const { slots, slotProps, skipAnimation: inSkipAnimation, onItemClick } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const isZoomInteracting = (0, _useInternalIsZoomInteracting.useInternalIsZoomInteracting)();
    const skipAnimation = (0, _useSkipAnimation.useSkipAnimation)(isZoomInteracting || inSkipAnimation);
    const seriesData = (0, _useLineSeries.useLineSeriesContext)();
    const { xAxis, xAxisIds } = (0, _hooks.useXAxes)();
    const { yAxis, yAxisIds } = (0, _hooks.useYAxes)();
    const chartId = (0, _useChartId.useChartId)();
    const { instance } = (0, _ChartProvider.useChartContext)();
    if (seriesData === undefined) return null;
    const { series, stackingGroups } = seriesData;
    const defaultXAxisId = xAxisIds[0];
    const defaultYAxisId = yAxisIds[0];
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", (0, _extends2.default)({}, other, {
        children: stackingGroups.flatMap(({ ids: groupIds })=>{
            return groupIds.map((seriesId)=>{
                const { xAxisId = defaultXAxisId, yAxisId = defaultYAxisId, stackedData, data, showMark = true, shape = 'circle' } = series[seriesId];
                if (showMark === false) return null;
                const xScale = (0, _useScale.getValueToPositionMapper)(xAxis[xAxisId].scale);
                const yScale = yAxis[yAxisId].scale;
                const xData = xAxis[xAxisId].data;
                if (xData === undefined) throw new Error(`MUI X Charts: ${xAxisId === _constants.DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id "${xAxisId}"`} should have data property to be able to display a line plot.`);
                const clipId = (0, _cleanId.cleanId)(`${chartId}-${seriesId}-line-clip`); // We assume that if displaying line mark, the line will also be rendered
                const colorGetter = (0, _getColor.default)(series[seriesId], xAxis[xAxisId], yAxis[yAxisId]);
                const Mark = slots?.mark ?? (shape === 'circle' ? _CircleMarkElement.CircleMarkElement : _MarkElement.MarkElement);
                return /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", {
                    clipPath: `url(#${clipId})`,
                    children: xData?.map((x, index)=>{
                        const value = data[index] == null ? null : stackedData[index][1];
                        return {
                            x: xScale(x),
                            y: value === null ? null : yScale(value),
                            position: x,
                            value,
                            index
                        };
                    }).filter(({ x, y, index, position, value })=>{
                        if (value === null || y === null) // Remove missing data point
                        return false;
                        if (!instance.isPointInside({
                            x,
                            y
                        })) // Remove out of range
                        return false;
                        if (showMark === true) return true;
                        return showMark({
                            x,
                            y,
                            index,
                            position,
                            value
                        });
                    }).map(({ x, y, index })=>{
                        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Mark, (0, _extends2.default)({
                            id: seriesId,
                            dataIndex: index,
                            shape: shape,
                            color: colorGetter(index),
                            x: x,
                            y: y // Don't know why TS doesn't get from the filter that y can't be null
                            ,
                            skipAnimation: skipAnimation,
                            onClick: onItemClick && ((event)=>onItemClick(event, {
                                    type: 'line',
                                    seriesId,
                                    dataIndex: index
                                }))
                        }, slotProps?.mark), `${seriesId}-${index}`);
                    })
                }, seriesId);
            });
        })
    }));
}
MarkPlot.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Callback fired when a line mark item is clicked.
   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.
   * @param {LineItemIdentifier} lineItemIdentifier The line mark item identifier.
   */ onItemClick: _propTypes.default.func,
    /**
   * If `true`, animations are skipped.
   */ skipAnimation: _propTypes.default.bool,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"b63c3dc90c2f122c":"1P3rZ","b672144593e053df":"6TFJp","a1c7f2cff54298d2":"lKa0J","8055f9f985b055e7":"17jFf","a11150ed5244cb00":"GNqOQ","cfdc89d4eebed6bf":"jMk1U","80b451aa7c30dfb6":"2sqkC","2b434cd094ea62ea":"3OF6M","c2ca1e1721c44b8d":"82HoH","b765633ce9012827":"uL1ts","d02a037051f91aa":"kI0zE","4810e3c62ee00b3":"lwbEq","e5f39615eaa01763":"h1ntC","f6fcd3706e1547d":"awyA2","6182e3ebdc1d75f0":"jgXTd","df9fb3547140cb4d":"8cPIy","b49370abb2e5b728":"92Hil","23de7dff7ad19713":"hjVOe","fa90aca03c68ac6f":"05iiF"}],"h1ntC":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("445c980faa8f659e").default;
var _interopRequireWildcard = require("fc46d50073fff156").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CircleMarkElement = CircleMarkElement;
var _extends2 = _interopRequireDefault(require("65cb4e258f1af6ce"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("1732087bdac81a51"));
var React = _interopRequireWildcard(require("b89699310fecbed8"));
var _propTypes = _interopRequireDefault(require("2e94424c04d49542"));
var _styles = require("7e11b6a9c0481c6b");
var _animation = require("38e6371fa10cea45");
var _useInteractionItemProps = require("60ef709d6e0cb784");
var _useItemHighlighted = require("2f5e248433afe13f");
var _markElementClasses = require("47f4641950e99766");
var _useSelector = require("3c476c9108d261d5");
var _useChartCartesianAxis = require("664b92f5f5947c6");
var _useStore = require("29851f24e2c7fb63");
var _jsxRuntime = require("ca2d3e9fc64344b4");
const _excluded = [
    "x",
    "y",
    "id",
    "classes",
    "color",
    "dataIndex",
    "onClick",
    "skipAnimation"
];
const Circle = (0, _styles.styled)('circle')({
    [`&.${_markElementClasses.markElementClasses.animate}`]: {
        transitionDuration: `${_animation.ANIMATION_DURATION_MS}ms`,
        transitionProperty: 'cx, cy',
        transitionTimingFunction: _animation.ANIMATION_TIMING_FUNCTION
    }
});
/**
 * The line mark element that only render circle for performance improvement.
 *
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [CircleMarkElement API](https://mui.com/x/api/charts/circle-mark-element/)
 */ function CircleMarkElement(props) {
    const { x, y, id, classes: innerClasses, color, dataIndex, onClick, skipAnimation } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const theme = (0, _styles.useTheme)();
    const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
        type: 'line',
        seriesId: id,
        dataIndex
    });
    const { isFaded, isHighlighted } = (0, _useItemHighlighted.useItemHighlighted)({
        seriesId: id
    });
    const store = (0, _useStore.useStore)();
    const xAxisInteractionIndex = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionXAxisIndex);
    const ownerState = {
        id,
        classes: innerClasses,
        isHighlighted: xAxisInteractionIndex === dataIndex || isHighlighted,
        isFaded,
        color,
        skipAnimation
    };
    const classes = (0, _markElementClasses.useUtilityClasses)(ownerState);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Circle, (0, _extends2.default)({}, other, {
        cx: x,
        cy: y,
        r: 5,
        fill: (theme.vars || theme).palette.background.paper,
        stroke: color,
        strokeWidth: 2,
        className: classes.root,
        onClick: onClick,
        cursor: onClick ? 'pointer' : 'unset'
    }, interactionProps));
}
CircleMarkElement.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    classes: _propTypes.default.object,
    /**
   * The index to the element in the series' data array.
   */ dataIndex: _propTypes.default.number.isRequired,
    id: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]).isRequired,
    /**
   * The shape of the marker.
   */ shape: _propTypes.default.oneOf([
        'circle',
        'cross',
        'diamond',
        'square',
        'star',
        'triangle',
        'wye'
    ]).isRequired,
    /**
   * If `true`, animations are skipped.
   * @default false
   */ skipAnimation: _propTypes.default.bool
};

},{"445c980faa8f659e":"1P3rZ","fc46d50073fff156":"6TFJp","65cb4e258f1af6ce":"lKa0J","1732087bdac81a51":"17jFf","b89699310fecbed8":"jMk1U","2e94424c04d49542":"GNqOQ","7e11b6a9c0481c6b":"7eExx","38e6371fa10cea45":"aSuCR","60ef709d6e0cb784":"beDHx","2f5e248433afe13f":"bzOyV","47f4641950e99766":"8Buob","3c476c9108d261d5":"65ofz","664b92f5f5947c6":"iMsPz","29851f24e2c7fb63":"6viTh","ca2d3e9fc64344b4":"05iiF"}],"8Buob":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("ef305d734ab26dd").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getMarkElementUtilityClass = getMarkElementUtilityClass;
exports.useUtilityClasses = exports.markElementClasses = void 0;
var _composeClasses = _interopRequireDefault(require("b143b6eaf5604a2"));
var _generateUtilityClass = _interopRequireDefault(require("99442d87b91561d0"));
var _generateUtilityClasses = _interopRequireDefault(require("6d81cd62ba732b75"));
function getMarkElementUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiMarkElement', slot);
}
const markElementClasses = exports.markElementClasses = (0, _generateUtilityClasses.default)('MuiMarkElement', [
    'root',
    'highlighted',
    'faded',
    'animate',
    'series'
]);
const useUtilityClasses = (ownerState)=>{
    const { classes, id, isFaded, isHighlighted, skipAnimation } = ownerState;
    const slots = {
        root: [
            'root',
            `series-${id}`,
            isHighlighted && 'highlighted',
            isFaded && 'faded',
            skipAnimation ? undefined : 'animate'
        ]
    };
    return (0, _composeClasses.default)(slots, getMarkElementUtilityClass, classes);
};
exports.useUtilityClasses = useUtilityClasses;

},{"ef305d734ab26dd":"1P3rZ","b143b6eaf5604a2":"gluJr","99442d87b91561d0":"iAc9p","6d81cd62ba732b75":"3J0Rs"}],"jgXTd":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("3f6bd842a50e0107").default;
var _interopRequireWildcard = require("10ac5c9fdeb68f34").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MarkElement = MarkElement;
var _extends2 = _interopRequireDefault(require("7ee19ad8bb57ad39"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("72584dcdc8ed2f52"));
var React = _interopRequireWildcard(require("b1203c1c0f3301a6"));
var _propTypes = _interopRequireDefault(require("2bd00ff12a30dd72"));
var _styles = require("371003678f3f066c");
var _d3Shape = require("3e33738acf1c9046");
var _animation = require("12906de2b18e29ac");
var _getSymbol = require("2728e3ad53c1418e");
var _useInteractionItemProps = require("2190c7f108af80ce");
var _useItemHighlighted = require("5a5d629472fe0e42");
var _useChartCartesianAxis = require("d86268b3a5024b2f");
var _markElementClasses = require("f1ed7499e42da6e3");
var _useSelector = require("59243e8666555ccf");
var _useStore = require("b58067bd300062c2");
var _jsxRuntime = require("d179c3e4ecac4139");
const _excluded = [
    "x",
    "y",
    "id",
    "classes",
    "color",
    "shape",
    "dataIndex",
    "onClick",
    "skipAnimation"
];
const MarkElementPath = (0, _styles.styled)('path', {
    name: 'MuiMarkElement',
    slot: 'Root'
})(({ ownerState, theme })=>({
        fill: (theme.vars || theme).palette.background.paper,
        stroke: ownerState.color,
        strokeWidth: 2,
        [`&.${_markElementClasses.markElementClasses.animate}`]: {
            transitionDuration: `${_animation.ANIMATION_DURATION_MS}ms`,
            transitionProperty: 'transform, transform-origin',
            transitionTimingFunction: _animation.ANIMATION_TIMING_FUNCTION
        }
    }));
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [MarkElement API](https://mui.com/x/api/charts/mark-element/)
 */ function MarkElement(props) {
    const { x, y, id, classes: innerClasses, color, shape, dataIndex, onClick, skipAnimation } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
        type: 'line',
        seriesId: id,
        dataIndex
    });
    const { isFaded, isHighlighted } = (0, _useItemHighlighted.useItemHighlighted)({
        seriesId: id
    });
    const store = (0, _useStore.useStore)();
    const xAxisInteractionIndex = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionXAxisIndex);
    const ownerState = {
        id,
        classes: innerClasses,
        isHighlighted: xAxisInteractionIndex === dataIndex || isHighlighted,
        isFaded,
        color,
        skipAnimation
    };
    const classes = (0, _markElementClasses.useUtilityClasses)(ownerState);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(MarkElementPath, (0, _extends2.default)({}, other, {
        style: {
            transform: `translate(${x}px, ${y}px)`,
            transformOrigin: `${x}px ${y}px`
        },
        ownerState: ownerState,
        className: classes.root,
        d: (0, _d3Shape.symbol)(_d3Shape.symbolsFill[(0, _getSymbol.getSymbol)(shape)])(),
        onClick: onClick,
        cursor: onClick ? 'pointer' : 'unset'
    }, interactionProps));
}
MarkElement.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    classes: _propTypes.default.object,
    /**
   * The index to the element in the series' data array.
   */ dataIndex: _propTypes.default.number.isRequired,
    id: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]).isRequired,
    /**
   * The shape of the marker.
   */ shape: _propTypes.default.oneOf([
        'circle',
        'cross',
        'diamond',
        'square',
        'star',
        'triangle',
        'wye'
    ]).isRequired,
    /**
   * If `true`, animations are skipped.
   */ skipAnimation: _propTypes.default.bool
};

},{"3f6bd842a50e0107":"1P3rZ","10ac5c9fdeb68f34":"6TFJp","7ee19ad8bb57ad39":"lKa0J","72584dcdc8ed2f52":"17jFf","b1203c1c0f3301a6":"jMk1U","2bd00ff12a30dd72":"GNqOQ","371003678f3f066c":"7eExx","3e33738acf1c9046":"bw44j","12906de2b18e29ac":"aSuCR","2728e3ad53c1418e":"cnV0V","2190c7f108af80ce":"beDHx","5a5d629472fe0e42":"bzOyV","d86268b3a5024b2f":"iMsPz","f1ed7499e42da6e3":"8Buob","59243e8666555ccf":"65ofz","b58067bd300062c2":"6viTh","d179c3e4ecac4139":"05iiF"}],"cnV0V":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getSymbol = getSymbol;
function getSymbol(shape) {
    // prettier-ignore
    switch(shape){
        case 'circle':
            return 0;
        case 'cross':
            return 1;
        case 'diamond':
            return 2;
        case 'square':
            return 3;
        case 'star':
            return 4;
        case 'triangle':
            return 5;
        case 'wye':
            return 6;
        default:
            return 0;
    }
}

},{}],"1btmG":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("e7055e3671e3ffd7").default;
var _interopRequireWildcard = require("b01a4fb4c4deea4a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsAxis = ChartsAxis;
var React = _interopRequireWildcard(require("6c139619143475d1"));
var _propTypes = _interopRequireDefault(require("79d8eb45eea9877a"));
var _ChartsXAxis = require("91b46a90d8301211");
var _ChartsYAxis = require("95c01b9e181ea44");
var _hooks = require("2303863bacf3ba0b");
var _jsxRuntime = require("ffe2ddb0b98eb6df");
/**
 * Demos:
 *
 * - [Axis](https://mui.com/x/react-charts/axis/)
 *
 * API:
 *
 * - [ChartsAxis API](https://mui.com/x/api/charts/charts-axis/)
 */ function ChartsAxis(props) {
    const { slots, slotProps } = props;
    const { xAxisIds, xAxis } = (0, _hooks.useXAxes)();
    const { yAxisIds, yAxis } = (0, _hooks.useYAxes)();
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
        children: [
            xAxisIds.map((axisId)=>{
                if (!xAxis[axisId].position || xAxis[axisId].position === 'none') return null;
                return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsXAxis.ChartsXAxis, {
                    slots: slots,
                    slotProps: slotProps,
                    axisId: axisId
                }, axisId);
            }),
            yAxisIds.map((axisId)=>{
                if (!yAxis[axisId].position || yAxis[axisId].position === 'none') return null;
                return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsYAxis.ChartsYAxis, {
                    slots: slots,
                    slotProps: slotProps,
                    axisId: axisId
                }, axisId);
            })
        ]
    });
}
ChartsAxis.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"e7055e3671e3ffd7":"1P3rZ","b01a4fb4c4deea4a":"6TFJp","6c139619143475d1":"jMk1U","79d8eb45eea9877a":"GNqOQ","91b46a90d8301211":"jjFIO","95c01b9e181ea44":"26hIk","2303863bacf3ba0b":"92Hil","ffe2ddb0b98eb6df":"05iiF"}],"jjFIO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsXAxis = require("82ac77714465c0f7");
Object.keys(_ChartsXAxis).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsXAxis[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsXAxis[key];
        }
    });
});

},{"82ac77714465c0f7":"aVdY8"}],"aVdY8":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("760df03681c73eb").default;
var _interopRequireWildcard = require("8db012e6ce6bf5a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsXAxis = ChartsXAxis;
var _extends2 = _interopRequireDefault(require("8f090e548e3549ce"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("c5b3d8bf6fb5960"));
var React = _interopRequireWildcard(require("c681ec78e0535537"));
var _propTypes = _interopRequireDefault(require("2131914f454bcae5"));
var _useSlotProps = _interopRequireDefault(require("bdca6fa01fd6b527"));
var _composeClasses = _interopRequireDefault(require("de55951d79e637ef"));
var _styles = require("60b9f34ca602f169");
var _RtlProvider = require("73b2398cac2d8f20");
var _clampAngle = require("e79e829656fabb01");
var _useIsHydrated = require("b84131b365dacf5a");
var _ellipsize = require("3129fe3398a8ba40");
var _domUtils = require("de4a03947d5fe865");
var _useTicks = require("8fd01613c9de7d34");
var _axisClasses = require("d50ef50e1379efbb");
var _AxisSharedComponents = require("aa78d5954b8d1ef");
var _ChartsText = require("563c1b3b5d0e28f0");
var _geometry = require("e9888369235c37c5");
var _useMounted = require("c5da5afee6e47792");
var _useDrawingArea = require("52d298ee666b3b65");
var _getWordsByLines = require("233d03b39b4fb15d");
var _isInfinity = require("bc13ba288cfc89b0");
var _isBandScale = require("40438d25b0e83a54");
var _useChartContext = require("523c7b754434f465");
var _useAxis = require("1a36d19132690780");
var _defaultTextPlacement = require("ef1bf46217818196");
var _invertTextAnchor = require("aad65b6730e649c7");
var _jsxRuntime = require("411bfe1157dd2bea");
const _excluded = [
    "scale",
    "tickNumber",
    "reverse"
];
const useUtilityClasses = (ownerState)=>{
    const { classes, position } = ownerState;
    const slots = {
        root: [
            'root',
            'directionX',
            position
        ],
        line: [
            'line'
        ],
        tickContainer: [
            'tickContainer'
        ],
        tick: [
            'tick'
        ],
        tickLabel: [
            'tickLabel'
        ],
        label: [
            'label'
        ]
    };
    return (0, _composeClasses.default)(slots, _axisClasses.getAxisUtilityClass, classes);
};
/* Gap between a tick and its label. */ const TICK_LABEL_GAP = 3;
/* Gap between the axis label and tick labels. */ const AXIS_LABEL_TICK_LABEL_GAP = 4;
/* Returns a set of indices of the tick labels that should be visible.  */ function getVisibleLabels(xTicks, { tickLabelStyle: style, tickLabelInterval, tickLabelMinGap, reverse, isMounted, isPointInside }) {
    const getTickLabelSize = (tick)=>{
        if (!isMounted || tick.formattedValue === undefined) return {
            width: 0,
            height: 0
        };
        const tickSizes = (0, _getWordsByLines.getWordsByLines)({
            style,
            needsComputation: true,
            text: tick.formattedValue
        });
        return {
            width: Math.max(...tickSizes.map((size)=>size.width)),
            height: Math.max(tickSizes.length * tickSizes[0].height)
        };
    };
    if (typeof tickLabelInterval === 'function') return new Set(xTicks.filter((item, index)=>tickLabelInterval(item.value, index)));
    // Filter label to avoid overlap
    let previousTextLimit = 0;
    const direction = reverse ? -1 : 1;
    return new Set(xTicks.filter((item, labelIndex)=>{
        const { offset, labelOffset } = item;
        const textPosition = offset + labelOffset;
        if (labelIndex > 0 && direction * textPosition < direction * (previousTextLimit + tickLabelMinGap)) return false;
        if (!isPointInside(textPosition)) return false;
        /* Measuring text width is expensive, so we need to delay it as much as possible to improve performance. */ const { width, height } = getTickLabelSize(item);
        const distance = (0, _geometry.getMinXTranslation)(width, height, style?.angle);
        const currentTextLimit = textPosition - direction * distance / 2;
        if (labelIndex > 0 && direction * currentTextLimit < direction * (previousTextLimit + tickLabelMinGap)) // Except for the first label, we skip all label that overlap with the last accepted.
        // Notice that the early return prevents `previousTextLimit` from being updated.
        return false;
        previousTextLimit = textPosition + direction * distance / 2;
        return true;
    }));
}
function shortenLabels(visibleLabels, drawingArea, maxHeight, isRtl, tickLabelStyle) {
    const shortenedLabels = new Map();
    const angle = (0, _clampAngle.clampAngle)(tickLabelStyle?.angle ?? 0);
    // Multiplying the space available to the left of the text position by leftBoundFactor returns the max width of the text.
    // Same for rightBoundFactor
    let leftBoundFactor = 1;
    let rightBoundFactor = 1;
    if (tickLabelStyle?.textAnchor === 'start') {
        leftBoundFactor = Infinity;
        rightBoundFactor = 1;
    } else if (tickLabelStyle?.textAnchor === 'end') {
        leftBoundFactor = 1;
        rightBoundFactor = Infinity;
    } else {
        leftBoundFactor = 2;
        rightBoundFactor = 2;
    }
    if (angle > 90 && angle < 270) [leftBoundFactor, rightBoundFactor] = [
        rightBoundFactor,
        leftBoundFactor
    ];
    if (isRtl) [leftBoundFactor, rightBoundFactor] = [
        rightBoundFactor,
        leftBoundFactor
    ];
    for (const item of visibleLabels)if (item.formattedValue) {
        // That maximum width of the tick depends on its proximity to the axis bounds.
        const width = Math.min((item.offset + item.labelOffset) * leftBoundFactor, (drawingArea.left + drawingArea.width + drawingArea.right - item.offset - item.labelOffset) * rightBoundFactor);
        const doesTextFit = (text)=>(0, _ellipsize.doesTextFitInRect)(text, {
                width,
                height: maxHeight,
                angle,
                measureText: (string)=>(0, _domUtils.getStringSize)(string, tickLabelStyle)
            });
        shortenedLabels.set(item, (0, _ellipsize.ellipsize)(item.formattedValue.toString(), doesTextFit));
    }
    return shortenedLabels;
}
const XAxisRoot = (0, _styles.styled)(_AxisSharedComponents.AxisRoot, {
    name: 'MuiChartsXAxis',
    slot: 'Root'
})({});
const defaultProps = {
    disableLine: false,
    disableTicks: false,
    tickSize: 6,
    tickLabelMinGap: 4
};
/**
 * Demos:
 *
 * - [Axis](https://mui.com/x/react-charts/axis/)
 *
 * API:
 *
 * - [ChartsXAxis API](https://mui.com/x/api/charts/charts-x-axis/)
 */ function ChartsXAxis(inProps) {
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const _xAxis = xAxis[inProps.axisId ?? xAxisIds[0]], { scale: xScale, tickNumber, reverse } = _xAxis, settings = (0, _objectWithoutPropertiesLoose2.default)(_xAxis, _excluded);
    const isMounted = (0, _useMounted.useMounted)();
    const themedProps = (0, _styles.useThemeProps)({
        props: (0, _extends2.default)({}, settings, inProps),
        name: 'MuiChartsXAxis'
    });
    const defaultizedProps = (0, _extends2.default)({}, defaultProps, themedProps);
    const { position, disableLine, disableTicks, tickLabelStyle, label, labelStyle, tickSize: tickSizeProp, valueFormatter, slots, slotProps, tickInterval, tickLabelInterval, tickPlacement, tickLabelPlacement, tickLabelMinGap, sx, offset, height: axisHeight } = defaultizedProps;
    const theme = (0, _styles.useTheme)();
    const isRtl = (0, _RtlProvider.useRtl)();
    const classes = useUtilityClasses(defaultizedProps);
    const drawingArea = (0, _useDrawingArea.useDrawingArea)();
    const { left, top, width, height } = drawingArea;
    const { instance } = (0, _useChartContext.useChartContext)();
    const isHydrated = (0, _useIsHydrated.useIsHydrated)();
    const tickSize = disableTicks ? 4 : tickSizeProp;
    const positionSign = position === 'bottom' ? 1 : -1;
    const Line = slots?.axisLine ?? 'line';
    const Tick = slots?.axisTick ?? 'line';
    const TickLabel = slots?.axisTickLabel ?? _ChartsText.ChartsText;
    const Label = slots?.axisLabel ?? _ChartsText.ChartsText;
    const defaultTextAnchor = (0, _defaultTextPlacement.getDefaultTextAnchor)((position === 'bottom' ? 0 : 180) - (tickLabelStyle?.angle ?? 0));
    const defaultDominantBaseline = (0, _defaultTextPlacement.getDefaultBaseline)((position === 'bottom' ? 0 : 180) - (tickLabelStyle?.angle ?? 0));
    const axisTickLabelProps = (0, _useSlotProps.default)({
        elementType: TickLabel,
        externalSlotProps: slotProps?.axisTickLabel,
        additionalProps: {
            style: (0, _extends2.default)({}, theme.typography.caption, {
                fontSize: 12,
                lineHeight: 1.25,
                textAnchor: isRtl ? (0, _invertTextAnchor.invertTextAnchor)(defaultTextAnchor) : defaultTextAnchor,
                dominantBaseline: defaultDominantBaseline
            }, tickLabelStyle)
        },
        className: classes.tickLabel,
        ownerState: {}
    });
    const xTicks = (0, _useTicks.useTicks)({
        scale: xScale,
        tickNumber,
        valueFormatter,
        tickInterval,
        tickPlacement,
        tickLabelPlacement
    });
    const visibleLabels = getVisibleLabels(xTicks, {
        tickLabelStyle: axisTickLabelProps.style,
        tickLabelInterval,
        tickLabelMinGap,
        reverse,
        isMounted,
        isPointInside: (x)=>instance.isPointInside({
                x,
                y: -1
            }, {
                direction: 'x'
            })
    });
    const axisLabelProps = (0, _useSlotProps.default)({
        elementType: Label,
        externalSlotProps: slotProps?.axisLabel,
        additionalProps: {
            style: (0, _extends2.default)({}, theme.typography.body1, {
                lineHeight: 1,
                fontSize: 14,
                textAnchor: 'middle',
                dominantBaseline: position === 'bottom' ? 'text-after-edge' : 'text-before-edge'
            }, labelStyle)
        },
        ownerState: {}
    });
    const domain = xScale.domain();
    const ordinalAxis = (0, _isBandScale.isBandScale)(xScale);
    // Skip axis rendering if no data is available
    // - The domain is an empty array for band/point scales.
    // - The domains contains Infinity for continuous scales.
    // - The position is set to 'none'.
    if (ordinalAxis && domain.length === 0 || !ordinalAxis && domain.some(_isInfinity.isInfinity) || position === 'none') return null;
    const labelHeight = label ? (0, _domUtils.getStringSize)(label, axisLabelProps.style).height : 0;
    const labelRefPoint = {
        x: left + width / 2,
        y: positionSign * axisHeight
    };
    /* If there's an axis title, the tick labels have less space to render  */ const tickLabelsMaxHeight = Math.max(0, axisHeight - (label ? labelHeight + AXIS_LABEL_TICK_LABEL_GAP : 0) - tickSize - TICK_LABEL_GAP);
    const tickLabels = isHydrated ? shortenLabels(visibleLabels, drawingArea, tickLabelsMaxHeight, isRtl, axisTickLabelProps.style) : new Map(Array.from(visibleLabels).map((item)=>[
            item,
            item.formattedValue
        ]));
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(XAxisRoot, {
        transform: `translate(0, ${position === 'bottom' ? top + height + offset : top - offset})`,
        className: classes.root,
        sx: sx,
        children: [
            !disableLine && /*#__PURE__*/ (0, _jsxRuntime.jsx)(Line, (0, _extends2.default)({
                x1: left,
                x2: left + width,
                className: classes.line
            }, slotProps?.axisLine)),
            xTicks.map((item, index)=>{
                const { offset: tickOffset, labelOffset } = item;
                const xTickLabel = labelOffset ?? 0;
                const yTickLabel = positionSign * (tickSize + TICK_LABEL_GAP);
                const showTick = instance.isPointInside({
                    x: tickOffset,
                    y: -1
                }, {
                    direction: 'x'
                });
                const tickLabel = tickLabels.get(item);
                const showTickLabel = visibleLabels.has(item);
                return /*#__PURE__*/ (0, _jsxRuntime.jsxs)("g", {
                    transform: `translate(${tickOffset}, 0)`,
                    className: classes.tickContainer,
                    children: [
                        !disableTicks && showTick && /*#__PURE__*/ (0, _jsxRuntime.jsx)(Tick, (0, _extends2.default)({
                            y2: positionSign * tickSize,
                            className: classes.tick
                        }, slotProps?.axisTick)),
                        tickLabel !== undefined && showTickLabel && /*#__PURE__*/ (0, _jsxRuntime.jsx)(TickLabel, (0, _extends2.default)({
                            x: xTickLabel,
                            y: yTickLabel
                        }, axisTickLabelProps, {
                            text: tickLabel
                        }))
                    ]
                }, index);
            }),
            label && /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", {
                className: classes.label,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(Label, (0, _extends2.default)({}, labelRefPoint, axisLabelProps, {
                    text: label
                }))
            })
        ]
    });
}
ChartsXAxis.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    axis: _propTypes.default.oneOf([
        'x'
    ]),
    /**
   * The id of the axis to render.
   * If undefined, it will be the first defined axis.
   */ axisId: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]),
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * If true, the axis line is disabled.
   * @default false
   */ disableLine: _propTypes.default.bool,
    /**
   * If true, the ticks are disabled.
   * @default false
   */ disableTicks: _propTypes.default.bool,
    /**
   * The fill color of the axis text.
   * @default 'currentColor'
   */ fill: _propTypes.default.string,
    /**
   * The label of the axis.
   */ label: _propTypes.default.string,
    /**
   * The style applied to the axis label.
   */ labelStyle: _propTypes.default.object,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object,
    /**
   * The stroke color of the axis line.
   * @default 'currentColor'
   */ stroke: _propTypes.default.string,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Defines which ticks are displayed.
   * Its value can be:
   * - 'auto' In such case the ticks are computed based on axis scale and other parameters.
   * - a filtering function of the form `(value, index) => boolean` which is available only if the axis has "point" scale.
   * - an array containing the values where ticks should be displayed.
   * @see See {@link https://mui.com/x/react-charts/axis/#fixed-tick-positions}
   * @default 'auto'
   */ tickInterval: _propTypes.default.oneOfType([
        _propTypes.default.oneOf([
            'auto'
        ]),
        _propTypes.default.array,
        _propTypes.default.func
    ]),
    /**
   * Defines which ticks get its label displayed. Its value can be:
   * - 'auto' In such case, labels are displayed if they do not overlap with the previous one.
   * - a filtering function of the form (value, index) => boolean. Warning: the index is tick index, not data ones.
   * @default 'auto'
   */ tickLabelInterval: _propTypes.default.oneOfType([
        _propTypes.default.oneOf([
            'auto'
        ]),
        _propTypes.default.func
    ]),
    /**
   * The minimum gap in pixels between two tick labels.
   * If two tick labels are closer than this minimum gap, one of them will be hidden.
   * @default 4
   */ tickLabelMinGap: _propTypes.default.number,
    /**
   * The placement of ticks label. Can be the middle of the band, or the tick position.
   * Only used if scale is 'band'.
   * @default 'middle'
   */ tickLabelPlacement: _propTypes.default.oneOf([
        'middle',
        'tick'
    ]),
    /**
   * The style applied to ticks text.
   */ tickLabelStyle: _propTypes.default.object,
    /**
   * Maximal step between two ticks.
   * When using time data, the value is assumed to be in ms.
   * Not supported by categorical axis (band, points).
   */ tickMaxStep: _propTypes.default.number,
    /**
   * Minimal step between two ticks.
   * When using time data, the value is assumed to be in ms.
   * Not supported by categorical axis (band, points).
   */ tickMinStep: _propTypes.default.number,
    /**
   * The number of ticks. This number is not guaranteed.
   * Not supported by categorical axis (band, points).
   */ tickNumber: _propTypes.default.number,
    /**
   * The placement of ticks in regard to the band interval.
   * Only used if scale is 'band'.
   * @default 'extremities'
   */ tickPlacement: _propTypes.default.oneOf([
        'end',
        'extremities',
        'middle',
        'start'
    ]),
    /**
   * The size of the ticks.
   * @default 6
   */ tickSize: _propTypes.default.number
};

},{"760df03681c73eb":"1P3rZ","8db012e6ce6bf5a":"6TFJp","8f090e548e3549ce":"lKa0J","c5b3d8bf6fb5960":"17jFf","c681ec78e0535537":"jMk1U","2131914f454bcae5":"GNqOQ","bdca6fa01fd6b527":"7cNZ5","de55951d79e637ef":"gluJr","60b9f34ca602f169":"7eExx","73b2398cac2d8f20":"13k4W","e79e829656fabb01":"8waTE","b84131b365dacf5a":"ccx4k","3129fe3398a8ba40":"17ZRu","de4a03947d5fe865":"2r8wF","8fd01613c9de7d34":"5xWvO","d50ef50e1379efbb":"fIsVl","aa78d5954b8d1ef":"w0rmS","563c1b3b5d0e28f0":"iOUf1","e9888369235c37c5":"6bNZa","c5da5afee6e47792":"j0qQn","52d298ee666b3b65":"6LtKb","233d03b39b4fb15d":"3P8fp","bc13ba288cfc89b0":"KDJgK","40438d25b0e83a54":"58Ehn","523c7b754434f465":"iJG32","1a36d19132690780":"gzVB1","ef1bf46217818196":"5Jrnb","aad65b6730e649c7":"8eSLt","411bfe1157dd2bea":"05iiF"}],"8waTE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.clampAngle = clampAngle;
exports.clampAngleRad = clampAngleRad;
/**
 * Clamp angle to [0, 360[.
 */ function clampAngle(angle) {
    return (angle % 360 + 360) % 360;
}
const TWO_PI = 2 * Math.PI;
/** Clamp angle to [0, 2 * Math.PI[. */ function clampAngleRad(angle) {
    return (angle % TWO_PI + TWO_PI) % TWO_PI;
}

},{}],"ccx4k":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("da324f56139bf713").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useIsHydrated = useIsHydrated;
var React = _interopRequireWildcard(require("9a767ad592b252cd"));
/** Returns true after hydration is done on the client.
 *
 * Basically a implementation of Option 2 of this gist: https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85#option-2-lazily-show-component-with-uselayouteffect. */ function useIsHydrated() {
    const [isHydrated, setIsHydrated] = React.useState(typeof window !== 'undefined' || false);
    React.useEffect(()=>{
        setIsHydrated(true);
    }, []);
    return isHydrated;
}

},{"da324f56139bf713":"6TFJp","9a767ad592b252cd":"jMk1U"}],"17ZRu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.doesTextFitInRect = doesTextFitInRect;
exports.ellipsize = ellipsize;
var _getGraphemeCount = require("b2ccc45ba0968cab");
var _degToRad = require("4d1679fa132f1dae");
var _sliceUntil = require("9379fb7bb07dcf60");
const ELLIPSIS = "\u2026";
function doesTextFitInRect(text, config) {
    const { width, height, measureText } = config;
    const angle = (0, _degToRad.degToRad)(config.angle);
    const textSize = measureText(text);
    const angledWidth = Math.abs(textSize.width * Math.cos(angle)) + Math.abs(textSize.height * Math.sin(angle));
    const angledHeight = Math.abs(textSize.width * Math.sin(angle)) + Math.abs(textSize.height * Math.cos(angle));
    return angledWidth <= width && angledHeight <= height;
}
/** This function finds the best place to clip the text to add an ellipsis.
 *  This function assumes that the {@link doesTextFit} never returns true for longer text after returning false for
 *  shorter text.
 *
 *  @param text Text to ellipsize if needed
 *  @param doesTextFit a function that returns whether a string fits inside a container.
 */ function ellipsize(text, doesTextFit) {
    if (doesTextFit(text)) return text;
    let shortenedText = text;
    let step = 1;
    let by = 0.5;
    const graphemeCount = (0, _getGraphemeCount.getGraphemeCount)(text);
    let newLength = graphemeCount;
    let lastLength = graphemeCount;
    let longestFittingText = null;
    do {
        lastLength = newLength;
        newLength = Math.floor(graphemeCount * by);
        if (newLength === 0) break;
        shortenedText = (0, _sliceUntil.sliceUntil)(text, newLength).trim();
        const fits = doesTextFit(shortenedText + ELLIPSIS);
        step += 1;
        if (fits) {
            longestFittingText = shortenedText;
            by += 1 / 2 ** step;
        } else by -= 1 / 2 ** step;
    }while (Math.abs(newLength - lastLength) !== 1);
    return longestFittingText ? longestFittingText + ELLIPSIS : '';
}

},{"b2ccc45ba0968cab":"giqrq","4d1679fa132f1dae":"jjqyU","9379fb7bb07dcf60":"bw8VV"}],"giqrq":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getGraphemeCount = void 0;
const segmenter = typeof window !== 'undefined' && 'Intl' in window && 'Segmenter' in Intl ? new Intl.Segmenter(undefined, {
    granularity: 'grapheme'
}) : null;
function getGraphemeCountFallback(text) {
    return text.length;
}
function getGraphemeCountModern(text) {
    const segments = segmenter.segment(text);
    let count = 0;
    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/naming-convention,no-underscore-dangle
    for (const _unused of segments)count += 1;
    return count;
}
/** Returns the number of graphemes (basically characters) present in {@link text}. */ const getGraphemeCount = exports.getGraphemeCount = segmenter ? getGraphemeCountModern : getGraphemeCountFallback;

},{}],"jjqyU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.degToRad = degToRad;
/** Converts degrees to radians. */ function degToRad(degrees) {
    return degrees * (Math.PI / 180);
}

},{}],"bw8VV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sliceUntil = void 0;
const segmenter = typeof window !== 'undefined' && 'Intl' in window && 'Segmenter' in Intl ? new Intl.Segmenter(undefined, {
    granularity: 'grapheme'
}) : null;
function sliceUntilFallback(text, endIndex) {
    return text.slice(0, endIndex);
}
function sliceUntilModern(text, endIndex) {
    const segments = segmenter.segment(text);
    let newText = '';
    let i = 0;
    for (const segment of segments){
        newText += segment.segment;
        i += 1;
        if (i >= endIndex) break;
    }
    return newText;
}
/** Creates a slice of {@link text} from the start until the {@link endIndex}th grapheme (basically character). */ const sliceUntil = exports.sliceUntil = segmenter ? sliceUntilModern : sliceUntilFallback;

},{}],"2r8wF":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7b377c9f6eb5e87").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getStyleString = exports.getStringSize = exports.MEASUREMENT_SPAN_ID = void 0;
exports.unstable_cleanupDOM = unstable_cleanupDOM;
var _extends2 = _interopRequireDefault(require("a0586bb853731efb"));
// DOM utils taken from
// https://github.com/recharts/recharts/blob/master/src/util/DOMUtils.ts
function isSsr() {
    return typeof window === 'undefined';
}
const stringCache = {
    widthCache: {},
    cacheCount: 0
};
const MAX_CACHE_NUM = 2000;
const SPAN_STYLE = {
    position: 'absolute',
    top: '-20000px',
    left: 0,
    padding: 0,
    margin: 0,
    border: 'none',
    whiteSpace: 'pre'
};
const STYLE_LIST = [
    'minWidth',
    'maxWidth',
    'width',
    'minHeight',
    'maxHeight',
    'height',
    'top',
    'left',
    'fontSize',
    'padding',
    'margin',
    'paddingLeft',
    'paddingRight',
    'paddingTop',
    'paddingBottom',
    'marginLeft',
    'marginRight',
    'marginTop',
    'marginBottom'
];
const MEASUREMENT_SPAN_ID = exports.MEASUREMENT_SPAN_ID = 'mui_measurement_span';
/**
 *
 * @param name CSS property name
 * @param value
 * @returns add 'px' for distance properties
 */ function autoCompleteStyle(name, value) {
    if (STYLE_LIST.indexOf(name) >= 0 && value === +value) return `${value}px`;
    return value;
}
/**
 *
 * @param text camelcase css property
 * @returns css property
 */ function camelToMiddleLine(text) {
    const strs = text.split('');
    const formatStrs = strs.reduce((result, entry)=>{
        if (entry === entry.toUpperCase()) return [
            ...result,
            '-',
            entry.toLowerCase()
        ];
        return [
            ...result,
            entry
        ];
    }, []);
    return formatStrs.join('');
}
/**
 *
 * @param style React style object
 * @returns CSS styling string
 */ const getStyleString = (style)=>Object.keys(style).sort().reduce((result, s)=>`${result}${camelToMiddleLine(s)}:${autoCompleteStyle(s, style[s])};`, '');
exports.getStyleString = getStyleString;
let domCleanTimeout;
/**
 *
 * @param text The string to estimate
 * @param style The style applied
 * @returns width and height of the text
 */ const getStringSize = (text, style = {})=>{
    if (text === undefined || text === null || isSsr()) return {
        width: 0,
        height: 0
    };
    const str = `${text}`;
    const styleString = getStyleString(style);
    const cacheKey = `${str}-${styleString}`;
    if (stringCache.widthCache[cacheKey]) return stringCache.widthCache[cacheKey];
    try {
        let measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
        if (measurementSpan === null) {
            measurementSpan = document.createElement('span');
            measurementSpan.setAttribute('id', MEASUREMENT_SPAN_ID);
            measurementSpan.setAttribute('aria-hidden', 'true');
            document.body.appendChild(measurementSpan);
        }
        // Need to use CSS Object Model (CSSOM) to be able to comply with Content Security Policy (CSP)
        // https://en.wikipedia.org/wiki/Content_Security_Policy
        const measurementSpanStyle = (0, _extends2.default)({}, SPAN_STYLE, style);
        Object.keys(measurementSpanStyle).map((styleKey)=>{
            measurementSpan.style[camelToMiddleLine(styleKey)] = autoCompleteStyle(styleKey, measurementSpanStyle[styleKey]);
            return styleKey;
        });
        measurementSpan.textContent = str;
        const rect = measurementSpan.getBoundingClientRect();
        const result = {
            width: rect.width,
            height: rect.height
        };
        stringCache.widthCache[cacheKey] = result;
        if (stringCache.cacheCount + 1 > MAX_CACHE_NUM) {
            stringCache.cacheCount = 0;
            stringCache.widthCache = {};
        } else stringCache.cacheCount += 1;
        if (domCleanTimeout) clearTimeout(domCleanTimeout);
        domCleanTimeout = setTimeout(()=>{
            // Limit node cleaning to once per render cycle
            measurementSpan.textContent = '';
        }, 0);
        return result;
    } catch  {
        return {
            width: 0,
            height: 0
        };
    }
};
// eslint-disable-next-line @typescript-eslint/naming-convention
exports.getStringSize = getStringSize;
function unstable_cleanupDOM() {
// const measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
// measurementSpan?.remove();
}

},{"7b377c9f6eb5e87":"1P3rZ","a0586bb853731efb":"lKa0J"}],"fIsVl":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9340e44c98880623").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.axisClasses = void 0;
exports.getAxisUtilityClass = getAxisUtilityClass;
var _generateUtilityClass = _interopRequireDefault(require("f31b7e71c1a34b17"));
var _generateUtilityClasses = _interopRequireDefault(require("49aba2c0e07e86b"));
function getAxisUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsAxis', slot);
}
const axisClasses = exports.axisClasses = (0, _generateUtilityClasses.default)('MuiChartsAxis', [
    'root',
    'line',
    'tickContainer',
    'tick',
    'tickLabel',
    'label',
    'directionX',
    'directionY',
    'top',
    'bottom',
    'left',
    'right'
]);

},{"9340e44c98880623":"1P3rZ","f31b7e71c1a34b17":"iAc9p","49aba2c0e07e86b":"3J0Rs"}],"w0rmS":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("601b7c48b07eae6e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AxisRoot = void 0;
var _extends2 = _interopRequireDefault(require("a4d644b71551c016"));
var _styles = require("e5dbdd66d8ceec93");
var _axisClasses = require("3042ed1c4317c661");
const AxisRoot = exports.AxisRoot = (0, _styles.styled)('g', {
    name: 'MuiChartsAxis',
    slot: 'Root'
})(({ theme })=>({
        [`& .${_axisClasses.axisClasses.tickLabel}`]: (0, _extends2.default)({}, theme.typography.caption, {
            fill: (theme.vars || theme).palette.text.primary
        }),
        [`& .${_axisClasses.axisClasses.label}`]: {
            fill: (theme.vars || theme).palette.text.primary
        },
        [`& .${_axisClasses.axisClasses.line}`]: {
            stroke: (theme.vars || theme).palette.text.primary,
            shapeRendering: 'crispEdges',
            strokeWidth: 1
        },
        [`& .${_axisClasses.axisClasses.tick}`]: {
            stroke: (theme.vars || theme).palette.text.primary,
            shapeRendering: 'crispEdges'
        }
    }));

},{"601b7c48b07eae6e":"1P3rZ","a4d644b71551c016":"lKa0J","e5dbdd66d8ceec93":"7eExx","3042ed1c4317c661":"fIsVl"}],"iOUf1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChartsText", {
    enumerable: true,
    get: function() {
        return _ChartsText.ChartsText;
    }
});
var _ChartsText = require("e45be98448c25b7b");

},{"e45be98448c25b7b":"fGAHR"}],"fGAHR":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("ab7e247937e092e2").default;
var _interopRequireWildcard = require("201867012ad8b594").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsText = ChartsText;
var _extends2 = _interopRequireDefault(require("ad1b9b97929fe929"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("815c547a014e46bb"));
var React = _interopRequireWildcard(require("ff98e130e80b89e4"));
var _propTypes = _interopRequireDefault(require("e581523f8a992753"));
var _getWordsByLines = require("b8876d455887dbea");
var _useIsHydrated = require("17204b4f5a675015");
var _jsxRuntime = require("dccf171cfa0b6404");
const _excluded = [
    "x",
    "y",
    "style",
    "text",
    "ownerState"
], _excluded2 = [
    "angle",
    "textAnchor",
    "dominantBaseline"
];
/**
 * Helper component to manage multiline text in SVG
 */ function ChartsText(props) {
    const { x, y, style: styleProps, text } = props, textProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const _ref = styleProps ?? {}, { angle, textAnchor, dominantBaseline } = _ref, style = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded2);
    const isHydrated = (0, _useIsHydrated.useIsHydrated)();
    const wordsByLines = React.useMemo(()=>(0, _getWordsByLines.getWordsByLines)({
            style,
            needsComputation: isHydrated && text.includes('\n'),
            text
        }), [
        style,
        text,
        isHydrated
    ]);
    let startDy;
    switch(dominantBaseline){
        case 'hanging':
        case 'text-before-edge':
            startDy = 0;
            break;
        case 'central':
            startDy = (wordsByLines.length - 1) / 2 * -wordsByLines[0].height;
            break;
        default:
            startDy = (wordsByLines.length - 1) * -wordsByLines[0].height;
            break;
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("text", (0, _extends2.default)({}, textProps, {
        transform: angle ? `rotate(${angle}, ${x}, ${y})` : undefined,
        x: x,
        y: y,
        textAnchor: textAnchor,
        dominantBaseline: dominantBaseline,
        style: style,
        children: wordsByLines.map((line, index)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)("tspan", {
                x: x,
                dy: `${index === 0 ? startDy : wordsByLines[0].height}px`,
                dominantBaseline: dominantBaseline // Propagated to fix Safari issue: https://github.com/mui/mui-x/issues/10808
                ,
                children: line.text
            }, index))
    }));
}
ChartsText.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Height of a text line (in `em`).
   */ lineHeight: _propTypes.default.number,
    /**
   * If `true`, the line width is computed.
   * @default false
   */ needsComputation: _propTypes.default.bool,
    ownerState: _propTypes.default.any,
    /**
   * Style applied to text elements.
   */ style: _propTypes.default.object,
    /**
   * Text displayed.
   */ text: _propTypes.default.string.isRequired
};

},{"ab7e247937e092e2":"1P3rZ","201867012ad8b594":"6TFJp","ad1b9b97929fe929":"lKa0J","815c547a014e46bb":"17jFf","ff98e130e80b89e4":"jMk1U","e581523f8a992753":"GNqOQ","b8876d455887dbea":"3P8fp","17204b4f5a675015":"ccx4k","dccf171cfa0b6404":"05iiF"}],"3P8fp":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("2038e348dd118893").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getWordsByLines = getWordsByLines;
var _extends2 = _interopRequireDefault(require("1762c241b10c3001"));
var _domUtils = require("12782db5b07b927b");
function getWordsByLines({ style, needsComputation, text }) {
    return text.split('\n').map((subText)=>(0, _extends2.default)({
            text: subText
        }, needsComputation ? (0, _domUtils.getStringSize)(subText, style) : {
            width: 0,
            height: 0
        }));
}

},{"2038e348dd118893":"1P3rZ","1762c241b10c3001":"lKa0J","12782db5b07b927b":"2r8wF"}],"6bNZa":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getMinXTranslation = getMinXTranslation;
var _warning = require("decce29b5ae78a8b");
var _angleConversion = require("dfd471f9659c8d58");
const ANGLE_APPROX = 5; // Angle (in deg) for which we approximate the rectangle as perfectly horizontal/vertical
/**
 * Return the minimal translation along the x-axis to avoid overflow of a rectangle of a given width, height, and rotation.
 * This assumes that all rectangles have the same height and angle between -90 and 90.
 * Otherwise it would be problematic because you need the height/width of the next rectangle to do the correct computation.
 * @param width the side along the x-axis.
 * @param height the side along the y-axis.
 * @param angle the rotation in degrees.
 */ function getMinXTranslation(width, height, angle = 0) {
    if (angle > 90 && angle < -90) (0, _warning.warnOnce)([
        `MUI X Charts: It seems you applied an angle larger than 90\xb0 or smaller than -90\xb0 to an axis text.`,
        `This could cause some text overlapping.`,
        `If you encounter a use case where it's needed, please open an issue.`
    ]);
    const standardAngle = Math.min(Math.abs(angle) % 180, Math.abs(Math.abs(angle) % 180 - 180) % 180); // Map from R to [0, 90]
    if (standardAngle < ANGLE_APPROX) // It's nearly horizontal
    return width;
    if (standardAngle > 90 - ANGLE_APPROX) // It's nearly vertical
    return height;
    const radAngle = (0, _angleConversion.deg2rad)(standardAngle);
    const angleSwich = Math.atan2(height, width);
    if (radAngle < angleSwich) return width / Math.cos(radAngle);
    return height / Math.sin(radAngle);
}

},{"decce29b5ae78a8b":"4GMHX","dfd471f9659c8d58":"64kiJ"}],"j0qQn":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("c5b58e0e88840fc7").default;
var _interopRequireWildcard = require("e26f8d69d61bc56e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useMounted = useMounted;
var React = _interopRequireWildcard(require("96271f803f9e621b"));
var _useEnhancedEffect = _interopRequireDefault(require("89c9c8152f737a8b"));
function useMounted(defer = false) {
    const [mountedState, setMountedState] = React.useState(false);
    (0, _useEnhancedEffect.default)(()=>{
        if (!defer) setMountedState(true);
    }, [
        defer
    ]);
    React.useEffect(()=>{
        if (defer) setMountedState(true);
    }, [
        defer
    ]);
    return mountedState;
}

},{"c5b58e0e88840fc7":"1P3rZ","e26f8d69d61bc56e":"6TFJp","96271f803f9e621b":"jMk1U","89c9c8152f737a8b":"egHZg"}],"5Jrnb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getDefaultBaseline = getDefaultBaseline;
exports.getDefaultTextAnchor = getDefaultTextAnchor;
var _clampAngle = require("739eb52ea8ca7d6f");
/**
 * Provide the text-anchor based on the angle between the text and the associated element.
 * - 0 means the element is on top of the text, 180 bellow, and 90 on the right of the text.
 * @param {number} angle The angle between the text and the element.
 * @returns
 */ function getDefaultTextAnchor(angle) {
    const adjustedAngle = (0, _clampAngle.clampAngle)(angle);
    if (adjustedAngle <= 30 || adjustedAngle >= 330) // +/-30° around 0°
    return 'middle';
    if (adjustedAngle <= 210 && adjustedAngle >= 150) // +/-30° around 180°
    return 'middle';
    if (adjustedAngle <= 180) return 'end';
    return 'start';
}
function getDefaultBaseline(angle) {
    const adjustedAngle = (0, _clampAngle.clampAngle)(angle);
    if (adjustedAngle <= 30 || adjustedAngle >= 330) // +/-60° around 0°
    return 'hanging';
    if (adjustedAngle <= 210 && adjustedAngle >= 150) // +/-60° around 180°
    return 'auto';
    return 'central';
}

},{"739eb52ea8ca7d6f":"8waTE"}],"8eSLt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.invertTextAnchor = invertTextAnchor;
function invertTextAnchor(textAnchor) {
    switch(textAnchor){
        case 'start':
            return 'end';
        case 'end':
            return 'start';
        default:
            return textAnchor;
    }
}

},{}],"26hIk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsYAxis = require("1aae6484f61a69f5");
Object.keys(_ChartsYAxis).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsYAxis[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsYAxis[key];
        }
    });
});

},{"1aae6484f61a69f5":"eD2Vw"}],"eD2Vw":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("a7ec10f840a59205").default;
var _interopRequireWildcard = require("3e2cc4b6421126fb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsYAxis = ChartsYAxis;
var _extends2 = _interopRequireDefault(require("4213b2568f3f907d"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("c754d70f90d0e703"));
var React = _interopRequireWildcard(require("ba9f9bc823717f8"));
var _propTypes = _interopRequireDefault(require("7be1c0b6b45cd9f3"));
var _useSlotProps = _interopRequireDefault(require("a83abcf678c5bca"));
var _composeClasses = _interopRequireDefault(require("3bebb2a846039631"));
var _styles = require("b35212ef041d3f7b");
var _RtlProvider = require("2a0bb4aea11faf75");
var _useIsHydrated = require("2ec811e416813533");
var _defaultTextPlacement = require("ccfa0fc87fe24e3c");
var _ellipsize = require("2ff3bcbcbe815925");
var _domUtils = require("9bb63d3661992f29");
var _useTicks = require("ae8a1e3f07233385");
var _useDrawingArea = require("4d582fcea5279869");
var _AxisSharedComponents = require("f0a888b9fc14d7f9");
var _ChartsText = require("b75f4f171c98822f");
var _axisClasses = require("beb2e301ad9c809f");
var _isInfinity = require("824fac482aad4611");
var _isBandScale = require("43ff3332a5291721");
var _ChartProvider = require("e12b80198a3d6829");
var _hooks = require("18ec154fcc001e27");
var _clampAngle = require("bfc7ab698df05227");
var _invertTextAnchor = require("432c6bd9c10489fe");
var _jsxRuntime = require("b76131c25889bb42");
const _excluded = [
    "scale",
    "tickNumber"
];
const useUtilityClasses = (ownerState)=>{
    const { classes, position } = ownerState;
    const slots = {
        root: [
            'root',
            'directionY',
            position
        ],
        line: [
            'line'
        ],
        tickContainer: [
            'tickContainer'
        ],
        tick: [
            'tick'
        ],
        tickLabel: [
            'tickLabel'
        ],
        label: [
            'label'
        ]
    };
    return (0, _composeClasses.default)(slots, _axisClasses.getAxisUtilityClass, classes);
};
/* Gap between a tick and its label. */ const TICK_LABEL_GAP = 2;
/* Gap between the axis label and tick labels. */ const AXIS_LABEL_TICK_LABEL_GAP = 2;
function shortenLabels(visibleLabels, drawingArea, maxWidth, isRtl, tickLabelStyle) {
    const shortenedLabels = new Map();
    const angle = (0, _clampAngle.clampAngle)(tickLabelStyle?.angle ?? 0);
    let topBoundFactor = 1;
    let bottomBoundFactor = 1;
    if (tickLabelStyle?.textAnchor === 'start') {
        topBoundFactor = Infinity;
        bottomBoundFactor = 1;
    } else if (tickLabelStyle?.textAnchor === 'end') {
        topBoundFactor = 1;
        bottomBoundFactor = Infinity;
    } else {
        topBoundFactor = 2;
        bottomBoundFactor = 2;
    }
    if (angle > 180) [topBoundFactor, bottomBoundFactor] = [
        bottomBoundFactor,
        topBoundFactor
    ];
    if (isRtl) [topBoundFactor, bottomBoundFactor] = [
        bottomBoundFactor,
        topBoundFactor
    ];
    for (const item of visibleLabels)if (item.formattedValue) {
        // That maximum height of the tick depends on its proximity to the axis bounds.
        const height = Math.min((item.offset + item.labelOffset) * topBoundFactor, (drawingArea.top + drawingArea.height + drawingArea.bottom - item.offset - item.labelOffset) * bottomBoundFactor);
        const doesTextFit = (text)=>(0, _ellipsize.doesTextFitInRect)(text, {
                width: maxWidth,
                height,
                angle,
                measureText: (string)=>(0, _domUtils.getStringSize)(string, tickLabelStyle)
            });
        shortenedLabels.set(item, (0, _ellipsize.ellipsize)(item.formattedValue.toString(), doesTextFit));
    }
    return shortenedLabels;
}
const YAxisRoot = (0, _styles.styled)(_AxisSharedComponents.AxisRoot, {
    name: 'MuiChartsYAxis',
    slot: 'Root'
})({});
const defaultProps = {
    disableLine: false,
    disableTicks: false,
    tickSize: 6
};
/**
 * Demos:
 *
 * - [Axis](https://mui.com/x/react-charts/axis/)
 *
 * API:
 *
 * - [ChartsYAxis API](https://mui.com/x/api/charts/charts-y-axis/)
 */ function ChartsYAxis(inProps) {
    const { yAxisIds, yAxis } = (0, _hooks.useYAxes)();
    const _yAxis = yAxis[inProps.axisId ?? yAxisIds[0]], { scale: yScale, tickNumber } = _yAxis, settings = (0, _objectWithoutPropertiesLoose2.default)(_yAxis, _excluded);
    const themedProps = (0, _styles.useThemeProps)({
        props: (0, _extends2.default)({}, settings, inProps),
        name: 'MuiChartsYAxis'
    });
    const defaultizedProps = (0, _extends2.default)({}, defaultProps, themedProps);
    const { position, disableLine, disableTicks, label, labelStyle, tickLabelStyle, tickSize: tickSizeProp, valueFormatter, slots, slotProps, tickPlacement, tickLabelPlacement, tickInterval, tickLabelInterval, sx, offset, width: axisWidth } = defaultizedProps;
    const theme = (0, _styles.useTheme)();
    const isRtl = (0, _RtlProvider.useRtl)();
    const isHydrated = (0, _useIsHydrated.useIsHydrated)();
    const classes = useUtilityClasses(defaultizedProps);
    const { instance } = (0, _ChartProvider.useChartContext)();
    const drawingArea = (0, _useDrawingArea.useDrawingArea)();
    const { left, top, width, height } = drawingArea;
    const tickSize = disableTicks ? 4 : tickSizeProp;
    const yTicks = (0, _useTicks.useTicks)({
        scale: yScale,
        tickNumber,
        valueFormatter,
        tickPlacement,
        tickLabelPlacement,
        tickInterval
    });
    const positionSign = position === 'right' ? 1 : -1;
    const tickFontSize = typeof tickLabelStyle?.fontSize === 'number' ? tickLabelStyle.fontSize : 12;
    const Line = slots?.axisLine ?? 'line';
    const Tick = slots?.axisTick ?? 'line';
    const TickLabel = slots?.axisTickLabel ?? _ChartsText.ChartsText;
    const Label = slots?.axisLabel ?? _ChartsText.ChartsText;
    const defaultTextAnchor = (0, _defaultTextPlacement.getDefaultTextAnchor)((position === 'right' ? -90 : 90) - (tickLabelStyle?.angle ?? 0));
    const defaultDominantBaseline = (0, _defaultTextPlacement.getDefaultBaseline)((position === 'right' ? -90 : 90) - (tickLabelStyle?.angle ?? 0));
    const axisTickLabelProps = (0, _useSlotProps.default)({
        elementType: TickLabel,
        externalSlotProps: slotProps?.axisTickLabel,
        additionalProps: {
            style: (0, _extends2.default)({}, theme.typography.caption, {
                fontSize: tickFontSize,
                textAnchor: isRtl ? (0, _invertTextAnchor.invertTextAnchor)(defaultTextAnchor) : defaultTextAnchor,
                dominantBaseline: defaultDominantBaseline
            }, tickLabelStyle)
        },
        className: classes.tickLabel,
        ownerState: {}
    });
    const axisLabelProps = (0, _useSlotProps.default)({
        elementType: Label,
        externalSlotProps: slotProps?.axisLabel,
        additionalProps: {
            style: (0, _extends2.default)({}, theme.typography.body1, {
                lineHeight: 1,
                fontSize: 14,
                angle: positionSign * 90,
                textAnchor: 'middle',
                dominantBaseline: 'text-before-edge'
            }, labelStyle)
        },
        ownerState: {}
    });
    const lineSlotProps = (0, _useSlotProps.default)({
        elementType: Line,
        externalSlotProps: slotProps?.axisLine,
        additionalProps: {
            strokeLinecap: 'square'
        },
        ownerState: {}
    });
    const domain = yScale.domain();
    const ordinalAxis = (0, _isBandScale.isBandScale)(yScale);
    // Skip axis rendering if no data is available
    // - The domain is an empty array for band/point scales.
    // - The domains contains Infinity for continuous scales.
    // - The position is 'none'.
    if (ordinalAxis && domain.length === 0 || !ordinalAxis && domain.some(_isInfinity.isInfinity) || position === 'none') return null;
    const labelRefPoint = {
        x: positionSign * axisWidth,
        y: top + height / 2
    };
    /* If there's an axis title, the tick labels have less space to render  */ const tickLabelsMaxWidth = Math.max(0, axisWidth - (label ? (0, _domUtils.getStringSize)(label, axisLabelProps.style).height + AXIS_LABEL_TICK_LABEL_GAP : 0) - tickSize - TICK_LABEL_GAP);
    const tickLabels = isHydrated ? shortenLabels(yTicks, drawingArea, tickLabelsMaxWidth, isRtl, axisTickLabelProps.style) : new Map(Array.from(yTicks).map((item)=>[
            item,
            item.formattedValue
        ]));
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(YAxisRoot, {
        transform: `translate(${position === 'right' ? left + width + offset : left - offset}, 0)`,
        className: classes.root,
        sx: sx,
        children: [
            !disableLine && /*#__PURE__*/ (0, _jsxRuntime.jsx)(Line, (0, _extends2.default)({
                y1: top,
                y2: top + height,
                className: classes.line
            }, lineSlotProps)),
            yTicks.map((item, index)=>{
                const { offset: tickOffset, labelOffset, value } = item;
                const xTickLabel = positionSign * (tickSize + TICK_LABEL_GAP);
                const yTickLabel = labelOffset;
                const skipLabel = typeof tickLabelInterval === 'function' && !tickLabelInterval?.(value, index);
                const showLabel = instance.isPointInside({
                    x: -1,
                    y: tickOffset
                }, {
                    direction: 'y'
                });
                const tickLabel = tickLabels.get(item);
                if (!showLabel) return null;
                return /*#__PURE__*/ (0, _jsxRuntime.jsxs)("g", {
                    transform: `translate(0, ${tickOffset})`,
                    className: classes.tickContainer,
                    children: [
                        !disableTicks && /*#__PURE__*/ (0, _jsxRuntime.jsx)(Tick, (0, _extends2.default)({
                            x2: positionSign * tickSize,
                            className: classes.tick
                        }, slotProps?.axisTick)),
                        tickLabel !== undefined && !skipLabel && /*#__PURE__*/ (0, _jsxRuntime.jsx)(TickLabel, (0, _extends2.default)({
                            x: xTickLabel,
                            y: yTickLabel,
                            text: tickLabel
                        }, axisTickLabelProps))
                    ]
                }, index);
            }),
            label && isHydrated && /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", {
                className: classes.label,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(Label, (0, _extends2.default)({}, labelRefPoint, axisLabelProps, {
                    text: label
                }))
            })
        ]
    });
}
ChartsYAxis.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    axis: _propTypes.default.oneOf([
        'y'
    ]),
    /**
   * The id of the axis to render.
   * If undefined, it will be the first defined axis.
   */ axisId: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]),
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * If true, the axis line is disabled.
   * @default false
   */ disableLine: _propTypes.default.bool,
    /**
   * If true, the ticks are disabled.
   * @default false
   */ disableTicks: _propTypes.default.bool,
    /**
   * The fill color of the axis text.
   * @default 'currentColor'
   */ fill: _propTypes.default.string,
    /**
   * The label of the axis.
   */ label: _propTypes.default.string,
    /**
   * The style applied to the axis label.
   */ labelStyle: _propTypes.default.object,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object,
    /**
   * The stroke color of the axis line.
   * @default 'currentColor'
   */ stroke: _propTypes.default.string,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Defines which ticks are displayed.
   * Its value can be:
   * - 'auto' In such case the ticks are computed based on axis scale and other parameters.
   * - a filtering function of the form `(value, index) => boolean` which is available only if the axis has "point" scale.
   * - an array containing the values where ticks should be displayed.
   * @see See {@link https://mui.com/x/react-charts/axis/#fixed-tick-positions}
   * @default 'auto'
   */ tickInterval: _propTypes.default.oneOfType([
        _propTypes.default.oneOf([
            'auto'
        ]),
        _propTypes.default.array,
        _propTypes.default.func
    ]),
    /**
   * Defines which ticks get its label displayed. Its value can be:
   * - 'auto' In such case, labels are displayed if they do not overlap with the previous one.
   * - a filtering function of the form (value, index) => boolean. Warning: the index is tick index, not data ones.
   * @default 'auto'
   */ tickLabelInterval: _propTypes.default.oneOfType([
        _propTypes.default.oneOf([
            'auto'
        ]),
        _propTypes.default.func
    ]),
    /**
   * The placement of ticks label. Can be the middle of the band, or the tick position.
   * Only used if scale is 'band'.
   * @default 'middle'
   */ tickLabelPlacement: _propTypes.default.oneOf([
        'middle',
        'tick'
    ]),
    /**
   * The style applied to ticks text.
   */ tickLabelStyle: _propTypes.default.object,
    /**
   * Maximal step between two ticks.
   * When using time data, the value is assumed to be in ms.
   * Not supported by categorical axis (band, points).
   */ tickMaxStep: _propTypes.default.number,
    /**
   * Minimal step between two ticks.
   * When using time data, the value is assumed to be in ms.
   * Not supported by categorical axis (band, points).
   */ tickMinStep: _propTypes.default.number,
    /**
   * The number of ticks. This number is not guaranteed.
   * Not supported by categorical axis (band, points).
   */ tickNumber: _propTypes.default.number,
    /**
   * The placement of ticks in regard to the band interval.
   * Only used if scale is 'band'.
   * @default 'extremities'
   */ tickPlacement: _propTypes.default.oneOf([
        'end',
        'extremities',
        'middle',
        'start'
    ]),
    /**
   * The size of the ticks.
   * @default 6
   */ tickSize: _propTypes.default.number
};

},{"a7ec10f840a59205":"1P3rZ","3e2cc4b6421126fb":"6TFJp","4213b2568f3f907d":"lKa0J","c754d70f90d0e703":"17jFf","ba9f9bc823717f8":"jMk1U","7be1c0b6b45cd9f3":"GNqOQ","a83abcf678c5bca":"7cNZ5","3bebb2a846039631":"gluJr","b35212ef041d3f7b":"7eExx","2a0bb4aea11faf75":"13k4W","2ec811e416813533":"ccx4k","ccfa0fc87fe24e3c":"5Jrnb","2ff3bcbcbe815925":"17ZRu","9bb63d3661992f29":"2r8wF","ae8a1e3f07233385":"5xWvO","4d582fcea5279869":"6LtKb","f0a888b9fc14d7f9":"w0rmS","b75f4f171c98822f":"iOUf1","beb2e301ad9c809f":"fIsVl","824fac482aad4611":"KDJgK","43ff3332a5291721":"58Ehn","e12b80198a3d6829":"8cPIy","18ec154fcc001e27":"92Hil","bfc7ab698df05227":"8waTE","432c6bd9c10489fe":"8eSLt","b76131c25889bb42":"05iiF"}],"feJPJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    getChartsTooltipUtilityClass: true,
    chartsTooltipClasses: true,
    useItemTooltip: true,
    useRadarItemTooltip: true,
    useMouseTracker: true
};
Object.defineProperty(exports, "chartsTooltipClasses", {
    enumerable: true,
    get: function() {
        return _chartsTooltipClasses.chartsTooltipClasses;
    }
});
Object.defineProperty(exports, "getChartsTooltipUtilityClass", {
    enumerable: true,
    get: function() {
        return _chartsTooltipClasses.getChartsTooltipUtilityClass;
    }
});
Object.defineProperty(exports, "useItemTooltip", {
    enumerable: true,
    get: function() {
        return _useItemTooltip.useItemTooltip;
    }
});
Object.defineProperty(exports, "useMouseTracker", {
    enumerable: true,
    get: function() {
        return _utils.useMouseTracker;
    }
});
Object.defineProperty(exports, "useRadarItemTooltip", {
    enumerable: true,
    get: function() {
        return _useItemTooltip.useRadarItemTooltip;
    }
});
var _ChartsTooltip = require("135cfbab3591e35");
Object.keys(_ChartsTooltip).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsTooltip[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsTooltip[key];
        }
    });
});
var _ChartsTooltipContainer = require("fbf474a9fc1da8e2");
Object.keys(_ChartsTooltipContainer).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsTooltipContainer[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsTooltipContainer[key];
        }
    });
});
var _chartsTooltipClasses = require("6f2bfcfc247388f");
var _ChartsAxisTooltipContent = require("7cf78d7298b78ee4");
Object.keys(_ChartsAxisTooltipContent).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsAxisTooltipContent[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsAxisTooltipContent[key];
        }
    });
});
var _ChartsItemTooltipContent = require("3b891b02f2fa3292");
Object.keys(_ChartsItemTooltipContent).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsItemTooltipContent[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsItemTooltipContent[key];
        }
    });
});
var _ChartsTooltipTable = require("2e9286a5baa18094");
Object.keys(_ChartsTooltipTable).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsTooltipTable[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsTooltipTable[key];
        }
    });
});
var _useItemTooltip = require("c3eb5997deafc6c9");
var _useAxisTooltip = require("8e5d97bb8f4aae61");
Object.keys(_useAxisTooltip).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useAxisTooltip[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAxisTooltip[key];
        }
    });
});
var _useAxesTooltip = require("97fdd770ff87f8f8");
Object.keys(_useAxesTooltip).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useAxesTooltip[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useAxesTooltip[key];
        }
    });
});
var _utils = require("963c0ac6b89a377f");
var _ChartTooltip = require("f8a17181569d4ee1");
Object.keys(_ChartTooltip).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartTooltip[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartTooltip[key];
        }
    });
});

},{"135cfbab3591e35":"8VMIs","fbf474a9fc1da8e2":"atFOa","6f2bfcfc247388f":"bzqsE","7cf78d7298b78ee4":"fdcAT","3b891b02f2fa3292":"lJXPe","2e9286a5baa18094":"eQA0B","c3eb5997deafc6c9":"4ml2i","8e5d97bb8f4aae61":"9RdbK","97fdd770ff87f8f8":"g2FTL","963c0ac6b89a377f":"l6GPd","f8a17181569d4ee1":"1RTSF"}],"8VMIs":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("dd9dd1f67bf716d1").default;
var _interopRequireDefault = require("1a69df72b7afaef8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsTooltip = ChartsTooltip;
var _extends2 = _interopRequireDefault(require("dc97a1abff8e3d5"));
var React = _interopRequireWildcard(require("ae5fd9301b21c6cb"));
var _propTypes = _interopRequireDefault(require("9ec9c945140e7da3"));
var _HTMLElementType = _interopRequireDefault(require("3b54c02577ee4dfd"));
var _ChartsItemTooltipContent = require("5a68c0e4fa29ec63");
var _ChartsAxisTooltipContent = require("f6eecdafdb2bdf29");
var _ChartsTooltipContainer = require("838fbf14054827e");
var _chartsTooltipClasses = require("d6ad9bf300fc1e0e");
var _jsxRuntime = require("624b3d8390b42af9");
/**
 * Demos:
 *
 * - [ChartsTooltip](https://mui.com/x/react-charts/tooltip/)
 *
 * API:
 *
 * - [ChartsTooltip API](https://mui.com/x/api/charts/charts-tool-tip/)
 */ function ChartsTooltip(props) {
    const { classes: propClasses, trigger = 'axis' } = props;
    const classes = (0, _chartsTooltipClasses.useUtilityClasses)(propClasses);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipContainer.ChartsTooltipContainer, (0, _extends2.default)({}, props, {
        classes: classes,
        children: trigger === 'axis' ? /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisTooltipContent.ChartsAxisTooltipContent, {
            classes: classes
        }) : /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsItemTooltipContent.ChartsItemTooltipContent, {
            classes: classes
        })
    }));
}
ChartsTooltip.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */ anchorEl: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _HTMLElementType.default,
        _propTypes.default.object,
        _propTypes.default.func
    ]),
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypes.default.elementType,
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ components: _propTypes.default.shape({
        Root: _propTypes.default.elementType
    }),
    /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ componentsProps: _propTypes.default.shape({
        root: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object
        ])
    }),
    /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypes.default.oneOfType([
        (props, propName)=>{
            if (props[propName] == null) return new Error(`Prop '${propName}' is required but wasn't specified`);
            if (typeof props[propName] !== 'object' || props[propName].nodeType !== 1) return new Error(`Expected prop '${propName}' to be of type Element`);
            return null;
        },
        _propTypes.default.func
    ]),
    /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */ disablePortal: _propTypes.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */ keepMounted: _propTypes.default.bool,
    /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */ modifiers: _propTypes.default.arrayOf(_propTypes.default.shape({
        data: _propTypes.default.object,
        effect: _propTypes.default.func,
        enabled: _propTypes.default.bool,
        fn: _propTypes.default.func,
        name: _propTypes.default.any,
        options: _propTypes.default.object,
        phase: _propTypes.default.oneOf([
            'afterMain',
            'afterRead',
            'afterWrite',
            'beforeMain',
            'beforeRead',
            'beforeWrite',
            'main',
            'read',
            'write'
        ]),
        requires: _propTypes.default.arrayOf(_propTypes.default.string),
        requiresIfExists: _propTypes.default.arrayOf(_propTypes.default.string)
    })),
    /**
   * If `true`, the component is shown.
   */ open: _propTypes.default.bool,
    /**
   * Popper placement.
   * @default 'bottom'
   */ placement: _propTypes.default.oneOf([
        'auto-end',
        'auto-start',
        'auto',
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */ popperOptions: _propTypes.default.shape({
        modifiers: _propTypes.default.array,
        onFirstUpdate: _propTypes.default.func,
        placement: _propTypes.default.oneOf([
            'auto-end',
            'auto-start',
            'auto',
            'bottom-end',
            'bottom-start',
            'bottom',
            'left-end',
            'left-start',
            'left',
            'right-end',
            'right-start',
            'right',
            'top-end',
            'top-start',
            'top'
        ]),
        strategy: _propTypes.default.oneOf([
            'absolute',
            'fixed'
        ])
    }),
    /**
   * A ref that points to the used popper instance.
   */ popperRef: _propTypes.default.oneOfType([
        _propTypes.default.func,
        _propTypes.default.shape({
            current: _propTypes.default.shape({
                destroy: _propTypes.default.func.isRequired,
                forceUpdate: _propTypes.default.func.isRequired,
                setOptions: _propTypes.default.func.isRequired,
                state: _propTypes.default.shape({
                    attributes: _propTypes.default.object.isRequired,
                    elements: _propTypes.default.object.isRequired,
                    modifiersData: _propTypes.default.object.isRequired,
                    options: _propTypes.default.object.isRequired,
                    orderedModifiers: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
                    placement: _propTypes.default.oneOf([
                        'auto-end',
                        'auto-start',
                        'auto',
                        'bottom-end',
                        'bottom-start',
                        'bottom',
                        'left-end',
                        'left-start',
                        'left',
                        'right-end',
                        'right-start',
                        'right',
                        'top-end',
                        'top-start',
                        'top'
                    ]).isRequired,
                    rects: _propTypes.default.object.isRequired,
                    reset: _propTypes.default.bool.isRequired,
                    scrollParents: _propTypes.default.object.isRequired,
                    strategy: _propTypes.default.oneOf([
                        'absolute',
                        'fixed'
                    ]).isRequired,
                    styles: _propTypes.default.object.isRequired
                }).isRequired,
                update: _propTypes.default.func.isRequired
            })
        })
    ]),
    /**
   * The props used for each slot inside the Popper.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */ slots: _propTypes.default.object,
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */ transition: _propTypes.default.bool,
    /**
   * Select the kind of tooltip to display
   * - 'item': Shows data about the item below the mouse.
   * - 'axis': Shows values associated with the hovered x value
   * - 'none': Does not display tooltip
   * @default 'axis'
   */ trigger: _propTypes.default.oneOf([
        'axis',
        'item',
        'none'
    ])
};

},{"dd9dd1f67bf716d1":"6TFJp","1a69df72b7afaef8":"1P3rZ","dc97a1abff8e3d5":"lKa0J","ae5fd9301b21c6cb":"jMk1U","9ec9c945140e7da3":"GNqOQ","3b54c02577ee4dfd":"azl5Y","5a68c0e4fa29ec63":"lJXPe","f6eecdafdb2bdf29":"fdcAT","838fbf14054827e":"atFOa","d6ad9bf300fc1e0e":"bzqsE","624b3d8390b42af9":"05iiF"}],"azl5Y":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("89e8fb25f09695e1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _HTMLElementType.default;
    }
});
var _HTMLElementType = _interopRequireDefault(require("88ee6fc53668f5c7"));

},{"89e8fb25f09695e1":"1P3rZ","88ee6fc53668f5c7":"8mCTW"}],"8mCTW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = HTMLElementType;
function HTMLElementType(props, propName, componentName, location, propFullName) {
    const propValue = props[propName];
    const safePropName = propFullName || propName;
    if (propValue == null) return null;
    if (propValue && propValue.nodeType !== 1) return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an HTMLElement.`);
    return null;
}

},{}],"lJXPe":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("50267095b2f59662").default;
var _interopRequireWildcard = require("833cf7fc341c04f7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsItemTooltipContent = ChartsItemTooltipContent;
var React = _interopRequireWildcard(require("fc673cffdc4dcd25"));
var _propTypes = _interopRequireDefault(require("706eb7e2d8f2e6fe"));
var _clsx = _interopRequireDefault(require("62caf8d386ef4b7f"));
var _Typography = _interopRequireDefault(require("2f6a977fef330c99"));
var _chartsTooltipClasses = require("3e169512236dc5b1");
var _useItemTooltip = require("8bdce3df3312d860");
var _ChartsTooltipTable = require("ae3ed06eb23985ce");
var _ChartsLabelMark = require("e86484c7940a92f");
var _jsxRuntime = require("a3e159e6fb9b96ab");
function ChartsItemTooltipContent(props) {
    const { classes: propClasses, sx } = props;
    const tooltipData = (0, _useItemTooltip.useInternalItemTooltip)();
    const classes = (0, _chartsTooltipClasses.useUtilityClasses)(propClasses);
    if (!tooltipData) return null;
    if ('values' in tooltipData) {
        const { label: seriesLabel, color, markType } = tooltipData;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipPaper, {
            sx: sx,
            className: classes.paper,
            children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipTable, {
                className: classes.table,
                children: [
                    /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_Typography.default, {
                        component: "caption",
                        children: [
                            /*#__PURE__*/ (0, _jsxRuntime.jsx)("div", {
                                className: classes.markContainer,
                                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelMark.ChartsLabelMark, {
                                    type: markType,
                                    color: color,
                                    className: classes.mark
                                })
                            }),
                            seriesLabel
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxRuntime.jsx)("tbody", {
                        children: tooltipData.values.map(({ formattedValue, label })=>/*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipRow, {
                                className: classes.row,
                                children: [
                                    /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipCell, {
                                        className: (0, _clsx.default)(classes.labelCell, classes.cell),
                                        component: "th",
                                        children: label
                                    }),
                                    /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipCell, {
                                        className: (0, _clsx.default)(classes.valueCell, classes.cell),
                                        component: "td",
                                        children: formattedValue
                                    })
                                ]
                            }, label))
                    })
                ]
            })
        });
    }
    const { color, label, formattedValue, markType } = tooltipData;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipPaper, {
        sx: sx,
        className: classes.paper,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipTable, {
            className: classes.table,
            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("tbody", {
                children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipRow, {
                    className: classes.row,
                    children: [
                        /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipCell, {
                            className: (0, _clsx.default)(classes.labelCell, classes.cell),
                            component: "th",
                            children: [
                                /*#__PURE__*/ (0, _jsxRuntime.jsx)("div", {
                                    className: classes.markContainer,
                                    children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelMark.ChartsLabelMark, {
                                        type: markType,
                                        color: color,
                                        className: classes.mark
                                    })
                                }),
                                label
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipCell, {
                            className: (0, _clsx.default)(classes.valueCell, classes.cell),
                            component: "td",
                            children: formattedValue
                        })
                    ]
                })
            })
        })
    });
}
ChartsItemTooltipContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ])
};

},{"50267095b2f59662":"1P3rZ","833cf7fc341c04f7":"6TFJp","fc673cffdc4dcd25":"jMk1U","706eb7e2d8f2e6fe":"GNqOQ","62caf8d386ef4b7f":"dOSJC","2f6a977fef330c99":"kngBC","3e169512236dc5b1":"bzqsE","8bdce3df3312d860":"4ml2i","ae3ed06eb23985ce":"eQA0B","e86484c7940a92f":"hyAIM","a3e159e6fb9b96ab":"05iiF"}],"kngBC":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("ad9436f9c705699b").default;
var _interopRequireDefault = require("9fe783a6c8bd3a06").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    typographyClasses: true
};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _Typography.default;
    }
});
Object.defineProperty(exports, "typographyClasses", {
    enumerable: true,
    get: function() {
        return _typographyClasses.default;
    }
});
var _Typography = _interopRequireDefault(require("6cac80498254eafe"));
var _typographyClasses = _interopRequireWildcard(require("e698cb73fb00ce6d"));
Object.keys(_typographyClasses).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _typographyClasses[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _typographyClasses[key];
        }
    });
});

},{"ad9436f9c705699b":"6TFJp","9fe783a6c8bd3a06":"1P3rZ","6cac80498254eafe":"4ak4Y","e698cb73fb00ce6d":"fHq0T"}],"4ak4Y":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("29832c84122f038b").default;
var _interopRequireWildcard = require("f9284f18f32b29ef").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.TypographyRoot = void 0;
var React = _interopRequireWildcard(require("b17e5109419248a7"));
var _propTypes = _interopRequireDefault(require("f0cf6fbe354b7d65"));
var _clsx = _interopRequireDefault(require("71ca9b6715f84763"));
var _composeClasses = _interopRequireDefault(require("9ec2b2b0041cf1c5"));
var _zeroStyled = require("5077ea93c74e5d43");
var _memoTheme = _interopRequireDefault(require("4076d486fb34bf95"));
var _DefaultPropsProvider = require("5a901e81ef5715d1");
var _capitalize = _interopRequireDefault(require("3d51e07104d52b93"));
var _createSimplePaletteValueFilter = _interopRequireDefault(require("dcc178672edf1cbd"));
var _typographyClasses = require("af613e50d3f213c4");
var _jsxRuntime = require("6b94c8e123fd171e");
const v6Colors = {
    primary: true,
    secondary: true,
    error: true,
    info: true,
    success: true,
    warning: true,
    textPrimary: true,
    textSecondary: true,
    textDisabled: true
};
const extendSxProp = (0, _zeroStyled.internal_createExtendSxProp)();
const useUtilityClasses = (ownerState)=>{
    const { align, gutterBottom, noWrap, paragraph, variant, classes } = ownerState;
    const slots = {
        root: [
            'root',
            variant,
            ownerState.align !== 'inherit' && `align${(0, _capitalize.default)(align)}`,
            gutterBottom && 'gutterBottom',
            noWrap && 'noWrap',
            paragraph && 'paragraph'
        ]
    };
    return (0, _composeClasses.default)(slots, _typographyClasses.getTypographyUtilityClass, classes);
};
const TypographyRoot = exports.TypographyRoot = (0, _zeroStyled.styled)('span', {
    name: 'MuiTypography',
    slot: 'Root',
    overridesResolver: (props, styles)=>{
        const { ownerState } = props;
        return [
            styles.root,
            ownerState.variant && styles[ownerState.variant],
            ownerState.align !== 'inherit' && styles[`align${(0, _capitalize.default)(ownerState.align)}`],
            ownerState.noWrap && styles.noWrap,
            ownerState.gutterBottom && styles.gutterBottom,
            ownerState.paragraph && styles.paragraph
        ];
    }
})((0, _memoTheme.default)(({ theme })=>({
        margin: 0,
        variants: [
            {
                props: {
                    variant: 'inherit'
                },
                style: {
                    // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
                    font: 'inherit',
                    lineHeight: 'inherit',
                    letterSpacing: 'inherit'
                }
            },
            ...Object.entries(theme.typography).filter(([variant, value])=>variant !== 'inherit' && value && typeof value === 'object').map(([variant, value])=>({
                    props: {
                        variant
                    },
                    style: value
                })),
            ...Object.entries(theme.palette).filter((0, _createSimplePaletteValueFilter.default)()).map(([color])=>({
                    props: {
                        color
                    },
                    style: {
                        color: (theme.vars || theme).palette[color].main
                    }
                })),
            ...Object.entries(theme.palette?.text || {}).filter(([, value])=>typeof value === 'string').map(([color])=>({
                    props: {
                        color: `text${(0, _capitalize.default)(color)}`
                    },
                    style: {
                        color: (theme.vars || theme).palette.text[color]
                    }
                })),
            {
                props: ({ ownerState })=>ownerState.align !== 'inherit',
                style: {
                    textAlign: 'var(--Typography-textAlign)'
                }
            },
            {
                props: ({ ownerState })=>ownerState.noWrap,
                style: {
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                }
            },
            {
                props: ({ ownerState })=>ownerState.gutterBottom,
                style: {
                    marginBottom: '0.35em'
                }
            },
            {
                props: ({ ownerState })=>ownerState.paragraph,
                style: {
                    marginBottom: 16
                }
            }
        ]
    })));
const defaultVariantMapping = {
    h1: 'h1',
    h2: 'h2',
    h3: 'h3',
    h4: 'h4',
    h5: 'h5',
    h6: 'h6',
    subtitle1: 'h6',
    subtitle2: 'h6',
    body1: 'p',
    body2: 'p',
    inherit: 'p'
};
const Typography = /*#__PURE__*/ React.forwardRef(function Typography(inProps, ref) {
    const { color, ...themeProps } = (0, _DefaultPropsProvider.useDefaultProps)({
        props: inProps,
        name: 'MuiTypography'
    });
    const isSxColor = !v6Colors[color];
    // TODO: Remove `extendSxProp` in v7
    const props = extendSxProp({
        ...themeProps,
        ...isSxColor && {
            color
        }
    });
    const { align = 'inherit', className, component, gutterBottom = false, noWrap = false, paragraph = false, variant = 'body1', variantMapping = defaultVariantMapping, ...other } = props;
    const ownerState = {
        ...props,
        align,
        color,
        className,
        component,
        gutterBottom,
        noWrap,
        paragraph,
        variant,
        variantMapping
    };
    const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
    const classes = useUtilityClasses(ownerState);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(TypographyRoot, {
        as: Component,
        ref: ref,
        className: (0, _clsx.default)(classes.root, className),
        ...other,
        ownerState: ownerState,
        style: {
            ...align !== 'inherit' && {
                '--Typography-textAlign': align
            },
            ...other.style
        }
    });
});
Typography.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * Set the text-align on the component.
   * @default 'inherit'
   */ align: _propTypes.default.oneOf([
        'center',
        'inherit',
        'justify',
        'left',
        'right'
    ]),
    /**
   * The content of the component.
   */ children: _propTypes.default.node,
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * @ignore
   */ className: _propTypes.default.string,
    /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */ color: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypes.default.oneOf([
            'primary',
            'secondary',
            'success',
            'error',
            'info',
            'warning',
            'textPrimary',
            'textSecondary',
            'textDisabled'
        ]),
        _propTypes.default.string
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypes.default.elementType,
    /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */ gutterBottom: _propTypes.default.bool,
    /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */ noWrap: _propTypes.default.bool,
    /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */ paragraph: _propTypes.default.bool,
    /**
   * @ignore
   */ style: _propTypes.default.object,
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Applies the theme typography styles.
   * @default 'body1'
   */ variant: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypes.default.oneOf([
            'body1',
            'body2',
            'button',
            'caption',
            'h1',
            'h2',
            'h3',
            'h4',
            'h5',
            'h6',
            'inherit',
            'overline',
            'subtitle1',
            'subtitle2'
        ]),
        _propTypes.default.string
    ]),
    /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */ variantMapping: _propTypes.default/* @typescript-to-proptypes-ignore */ .object
};
var _default = exports.default = Typography;

},{"29832c84122f038b":"1P3rZ","f9284f18f32b29ef":"6TFJp","b17e5109419248a7":"jMk1U","f0cf6fbe354b7d65":"GNqOQ","71ca9b6715f84763":"dOSJC","9ec2b2b0041cf1c5":"gluJr","5077ea93c74e5d43":"7wsk9","4076d486fb34bf95":"02BGR","5a901e81ef5715d1":"jO2tX","3d51e07104d52b93":"ltCvY","dcc178672edf1cbd":"jfajD","af613e50d3f213c4":"fHq0T","6b94c8e123fd171e":"05iiF"}],"7wsk9":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("407069ea89e26f09").default;
var _interopRequireWildcard = require("31f2783b9a91bef7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "css", {
    enumerable: true,
    get: function() {
        return _system.css;
    }
});
exports.globalCss = globalCss;
exports.internal_createExtendSxProp = internal_createExtendSxProp;
Object.defineProperty(exports, "keyframes", {
    enumerable: true,
    get: function() {
        return _system.keyframes;
    }
});
Object.defineProperty(exports, "styled", {
    enumerable: true,
    get: function() {
        return _styled.default;
    }
});
Object.defineProperty(exports, "useTheme", {
    enumerable: true,
    get: function() {
        return _useTheme.default;
    }
});
var React = _interopRequireWildcard(require("3e71abd26e55f26b"));
var _styleFunctionSx = require("bfd0e1aeb380e6d1");
var _useTheme = _interopRequireDefault(require("d299e6c723c421bf"));
var _GlobalStyles = _interopRequireDefault(require("27d002377f60cb4e"));
var _jsxRuntime = require("6713fc0ccce24c19");
var _system = require("4a4d550ba1eacd52");
var _styled = _interopRequireDefault(require("2ed34ee38246058d"));
function globalCss(styles) {
    return function GlobalStylesWrapper(props) {
        return(/*#__PURE__*/ // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
        (0, _jsxRuntime.jsx)(_GlobalStyles.default, {
            styles: typeof styles === 'function' ? (theme)=>styles({
                    theme,
                    ...props
                }) : styles
        }));
    };
}
// eslint-disable-next-line @typescript-eslint/naming-convention
function internal_createExtendSxProp() {
    return _styleFunctionSx.extendSxProp;
}

},{"407069ea89e26f09":"1P3rZ","31f2783b9a91bef7":"6TFJp","3e71abd26e55f26b":"jMk1U","bfd0e1aeb380e6d1":"3qmy1","d299e6c723c421bf":"03DWO","27d002377f60cb4e":"eiQV8","6713fc0ccce24c19":"05iiF","4a4d550ba1eacd52":"1WaIj","2ed34ee38246058d":"gU1yq"}],"eiQV8":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("f9880f8d885ac2e8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _GlobalStyles.default;
    }
});
var _GlobalStyles = _interopRequireDefault(require("b9f4976014d6913f"));

},{"f9880f8d885ac2e8":"1P3rZ","b9f4976014d6913f":"fqcFY"}],"fqcFY":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("1392d07de526b602").default;
var _interopRequireWildcard = require("b6c7628a193f95bd").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("5856fa52a3decdab"));
var _propTypes = _interopRequireDefault(require("7185862242ebb481"));
var _system = require("b58da0205ef0cfe2");
var _defaultTheme = _interopRequireDefault(require("bbea7f156f2694a7"));
var _identifier = _interopRequireDefault(require("2e904b2a2708b805"));
var _jsxRuntime = require("33d9951a73ac4f90");
function GlobalStyles(props) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_system.GlobalStyles, {
        ...props,
        defaultTheme: _defaultTheme.default,
        themeId: _identifier.default
    });
}
GlobalStyles.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * The styles you want to apply globally.
   */ styles: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypes.default.array,
        _propTypes.default.func,
        _propTypes.default.number,
        _propTypes.default.object,
        _propTypes.default.string,
        _propTypes.default.bool
    ])
};
var _default = exports.default = GlobalStyles;

},{"1392d07de526b602":"1P3rZ","b6c7628a193f95bd":"6TFJp","5856fa52a3decdab":"jMk1U","7185862242ebb481":"GNqOQ","b58da0205ef0cfe2":"1WaIj","bbea7f156f2694a7":"dsVJp","2e904b2a2708b805":"6SSma","33d9951a73ac4f90":"05iiF"}],"02BGR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _system = require("f03a4bb5a097fe86");
const memoTheme = _system.unstable_memoTheme;
var _default = exports.default = memoTheme;

},{"f03a4bb5a097fe86":"1WaIj"}],"jO2tX":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("7ca0498996ac6a9a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _DefaultPropsProvider.default;
    }
});
Object.defineProperty(exports, "useDefaultProps", {
    enumerable: true,
    get: function() {
        return _DefaultPropsProvider.useDefaultProps;
    }
});
var _DefaultPropsProvider = _interopRequireWildcard(require("fa58f46e6a8e5fa6"));

},{"7ca0498996ac6a9a":"6TFJp","fa58f46e6a8e5fa6":"8hAw8"}],"8hAw8":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("934db433ace115f4").default;
var _interopRequireWildcard = require("482328344ea8d058").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.useDefaultProps = useDefaultProps;
var React = _interopRequireWildcard(require("61ef5b59ca892097"));
var _propTypes = _interopRequireDefault(require("a6d8746085aadd0f"));
var _DefaultPropsProvider = _interopRequireWildcard(require("86fb11f1887166d1"));
var _jsxRuntime = require("dc11d023c4c98e16");
function DefaultPropsProvider(props) {
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_DefaultPropsProvider.default, {
        ...props
    });
}
DefaultPropsProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: _propTypes.default.node,
    /**
   * @ignore
   */ value: _propTypes.default.object.isRequired
};
var _default = exports.default = DefaultPropsProvider;
function useDefaultProps(params) {
    return (0, _DefaultPropsProvider.useDefaultProps)(params);
}

},{"934db433ace115f4":"1P3rZ","482328344ea8d058":"6TFJp","61ef5b59ca892097":"jMk1U","a6d8746085aadd0f":"GNqOQ","86fb11f1887166d1":"bIXtM","dc11d023c4c98e16":"05iiF"}],"ltCvY":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("75f0dec6104f6363").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _capitalize = _interopRequireDefault(require("4a6ed00df881e6ba"));
var _default = exports.default = _capitalize.default;

},{"75f0dec6104f6363":"1P3rZ","4a6ed00df881e6ba":"igOKi"}],"jfajD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createSimplePaletteValueFilter;
/**
 * Type guard to check if the object has a "main" property of type string.
 *
 * @param obj - the object to check
 * @returns boolean
 */ function hasCorrectMainProperty(obj) {
    return typeof obj.main === 'string';
}
/**
 * Checks if the object conforms to the SimplePaletteColorOptions type.
 * The minimum requirement is that the object has a "main" property of type string, this is always checked.
 * Optionally, you can pass additional properties to check.
 *
 * @param obj - The object to check
 * @param additionalPropertiesToCheck - Array containing "light", "dark", and/or "contrastText"
 * @returns boolean
 */ function checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {
    if (!hasCorrectMainProperty(obj)) return false;
    for (const value of additionalPropertiesToCheck){
        if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') return false;
    }
    return true;
}
/**
 * Creates a filter function used to filter simple palette color options.
 * The minimum requirement is that the object has a "main" property of type string, this is always checked.
 * Optionally, you can pass additional properties to check.
 *
 * @param additionalPropertiesToCheck - Array containing "light", "dark", and/or "contrastText"
 * @returns ([, value]: [any, PaletteColorOptions]) => boolean
 */ function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {
    return ([, value])=>value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);
}

},{}],"fHq0T":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e01dbbe41bd2788e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.getTypographyUtilityClass = getTypographyUtilityClass;
var _generateUtilityClasses = _interopRequireDefault(require("1dd4280384e8cce"));
var _generateUtilityClass = _interopRequireDefault(require("ce5411f127704b12"));
function getTypographyUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiTypography', slot);
}
const typographyClasses = (0, _generateUtilityClasses.default)('MuiTypography', [
    'root',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'subtitle1',
    'subtitle2',
    'body1',
    'body2',
    'inherit',
    'button',
    'caption',
    'overline',
    'alignLeft',
    'alignRight',
    'alignCenter',
    'alignJustify',
    'noWrap',
    'gutterBottom',
    'paragraph'
]);
var _default = exports.default = typographyClasses;

},{"e01dbbe41bd2788e":"1P3rZ","1dd4280384e8cce":"3J0Rs","ce5411f127704b12":"iAc9p"}],"bzqsE":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("cad575824318c28c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.chartsTooltipClasses = void 0;
exports.getChartsTooltipUtilityClass = getChartsTooltipUtilityClass;
exports.useUtilityClasses = void 0;
var _generateUtilityClass = _interopRequireDefault(require("d01b37906d1be103"));
var _generateUtilityClasses = _interopRequireDefault(require("f9a075214277cb63"));
var _composeClasses = _interopRequireDefault(require("e5499cca9b7d9b3c"));
function getChartsTooltipUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsTooltip', slot);
}
const chartsTooltipClasses = exports.chartsTooltipClasses = (0, _generateUtilityClasses.default)('MuiChartsTooltip', [
    'root',
    'paper',
    'table',
    'row',
    'cell',
    'mark',
    'markContainer',
    'labelCell',
    'valueCell',
    'axisValueCell'
]);
const useUtilityClasses = (classes)=>{
    const slots = {
        root: [
            'root'
        ],
        paper: [
            'paper'
        ],
        table: [
            'table'
        ],
        row: [
            'row'
        ],
        cell: [
            'cell'
        ],
        mark: [
            'mark'
        ],
        markContainer: [
            'markContainer'
        ],
        labelCell: [
            'labelCell'
        ],
        valueCell: [
            'valueCell'
        ],
        axisValueCell: [
            'axisValueCell'
        ]
    };
    return (0, _composeClasses.default)(slots, getChartsTooltipUtilityClass, classes);
};
exports.useUtilityClasses = useUtilityClasses;

},{"cad575824318c28c":"1P3rZ","d01b37906d1be103":"iAc9p","f9a075214277cb63":"3J0Rs","e5499cca9b7d9b3c":"gluJr"}],"4ml2i":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useInternalItemTooltip = useInternalItemTooltip;
exports.useRadarItemTooltip = exports.useItemTooltip = void 0;
var _useSeries = require("fb7e665d77663cc7");
var _useChartInteraction = require("98af453f6449c2ca");
var _useSelector = require("66ed61d83f9f879a");
var _useStore = require("e32431af571794ab");
var _useAxis = require("955d7b6eb33ac202");
var _useZAxis = require("25cc89e4dd4b539f");
var _useChartSeries = require("4875839c51c3f7a8");
function useInternalItemTooltip() {
    const store = (0, _useStore.useStore)();
    const identifier = (0, _useSelector.useSelector)(store, _useChartInteraction.selectorChartsInteractionItem);
    const seriesConfig = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesConfig);
    const series = (0, _useSeries.useSeries)();
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const { yAxis, yAxisIds } = (0, _useAxis.useYAxes)();
    const { zAxis, zAxisIds } = (0, _useZAxis.useZAxes)();
    const { rotationAxis, rotationAxisIds } = (0, _useAxis.useRotationAxes)();
    const { radiusAxis, radiusAxisIds } = (0, _useAxis.useRadiusAxes)();
    const xAxisId = series.xAxisId ?? xAxisIds[0];
    const yAxisId = series.yAxisId ?? yAxisIds[0];
    const zAxisId = series.zAxisId ?? zAxisIds[0];
    const rotationAxisId = series.rotationAxisId ?? rotationAxisIds[0];
    const radiusAxisId = series.radiusAxisId ?? radiusAxisIds[0];
    if (!identifier) return null;
    const itemSeries = series[identifier.type]?.series[identifier.seriesId];
    if (!itemSeries) return null;
    const getColor = seriesConfig[itemSeries.type].colorProcessor?.(itemSeries, xAxisId && xAxis[xAxisId], yAxisId && yAxis[yAxisId], zAxisId && zAxis[zAxisId]) ?? (()=>'');
    const axesConfig = {};
    if (xAxisId !== undefined) axesConfig.x = xAxis[xAxisId];
    if (yAxisId !== undefined) axesConfig.y = yAxis[yAxisId];
    if (rotationAxisId !== undefined) axesConfig.rotation = rotationAxis[rotationAxisId];
    if (radiusAxisId !== undefined) axesConfig.radius = radiusAxis[radiusAxisId];
    return seriesConfig[itemSeries.type].tooltipGetter({
        series: itemSeries,
        axesConfig,
        getColor,
        identifier
    });
}
/**
 * Returns a config object when the tooltip contains a single item to display.
 * Some specific charts like radar need more complex structure. Use specific hook like `useRadarItemTooltip` for them.
 * @returns The tooltip item config
 */ const useItemTooltip = ()=>{
    return useInternalItemTooltip();
};
/**
 * Contains an object per value with their content and the label of the associated metric.
 * @returns The tooltip item configs
 */ exports.useItemTooltip = useItemTooltip;
const useRadarItemTooltip = ()=>{
    return useInternalItemTooltip();
};
exports.useRadarItemTooltip = useRadarItemTooltip;

},{"fb7e665d77663cc7":"aMvY8","98af453f6449c2ca":"4pi8Z","66ed61d83f9f879a":"65ofz","e32431af571794ab":"6viTh","955d7b6eb33ac202":"gzVB1","25cc89e4dd4b539f":"ew8Tr","4875839c51c3f7a8":"79Eww"}],"eQA0B":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("c0fada1298e64a3c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsTooltipTable = exports.ChartsTooltipRow = exports.ChartsTooltipPaper = exports.ChartsTooltipCell = void 0;
var _styles = require("51cb5cb492df4de2");
var _Typography = _interopRequireDefault(require("bf76e89ae0cadb27"));
var _chartsTooltipClasses = require("da4e6de0762317b4");
/**
 * @ignore - internal component.
 */ const ChartsTooltipPaper = exports.ChartsTooltipPaper = (0, _styles.styled)('div', {
    name: 'MuiChartsTooltip',
    slot: 'Container',
    overridesResolver: (props, styles)=>styles.paper // FIXME: Inconsistent naming with slot
})(({ theme })=>({
        backgroundColor: (theme.vars || theme).palette.background.paper,
        color: (theme.vars || theme).palette.text.primary,
        borderRadius: (theme.vars || theme).shape?.borderRadius,
        border: `solid ${(theme.vars || theme).palette.divider} 1px`
    }));
/**
 * @ignore - internal component.
 */ const ChartsTooltipTable = exports.ChartsTooltipTable = (0, _styles.styled)('table', {
    name: 'MuiChartsTooltip',
    slot: 'Table'
})(({ theme })=>({
        borderSpacing: 0,
        [`& .${_chartsTooltipClasses.chartsTooltipClasses.markContainer}`]: {
            display: 'inline-block',
            width: `calc(20px + ${theme.spacing(1.5)})`,
            verticalAlign: 'middle'
        },
        '& caption': {
            borderBottom: `solid ${(theme.vars || theme).palette.divider} 1px`,
            padding: theme.spacing(0.5, 1.5),
            textAlign: 'start',
            whiteSpace: 'nowrap',
            '& span': {
                marginRight: theme.spacing(1.5)
            }
        }
    }));
/**
 * @ignore - internal component.
 */ const ChartsTooltipRow = exports.ChartsTooltipRow = (0, _styles.styled)('tr', {
    name: 'MuiChartsTooltip',
    slot: 'Row'
})(({ theme })=>({
        'tr:first-of-type& td': {
            paddingTop: theme.spacing(0.5)
        },
        'tr:last-of-type& td': {
            paddingBottom: theme.spacing(0.5)
        }
    }));
/**
 * @ignore - internal component.
 */ const ChartsTooltipCell = exports.ChartsTooltipCell = (0, _styles.styled)(_Typography.default, {
    name: 'MuiChartsTooltip',
    slot: 'Cell'
})(({ theme })=>({
        verticalAlign: 'middle',
        color: (theme.vars || theme).palette.text.secondary,
        textAlign: 'start',
        [`&.${_chartsTooltipClasses.chartsTooltipClasses.cell}`]: {
            paddingLeft: theme.spacing(1),
            paddingRight: theme.spacing(1)
        },
        [`&.${_chartsTooltipClasses.chartsTooltipClasses.labelCell}`]: {
            fontWeight: theme.typography.fontWeightRegular
        },
        [`&.${_chartsTooltipClasses.chartsTooltipClasses.valueCell}, &.${_chartsTooltipClasses.chartsTooltipClasses.axisValueCell}`]: {
            color: (theme.vars || theme).palette.text.primary,
            fontWeight: theme.typography.fontWeightMedium
        },
        [`&.${_chartsTooltipClasses.chartsTooltipClasses.valueCell}`]: {
            paddingLeft: theme.spacing(1.5),
            paddingRight: theme.spacing(1.5)
        },
        'td:first-of-type&, th:first-of-type&': {
            paddingLeft: theme.spacing(1.5)
        },
        'td:last-of-type&, th:last-of-type&': {
            paddingRight: theme.spacing(1.5)
        }
    }));

},{"c0fada1298e64a3c":"1P3rZ","51cb5cb492df4de2":"7eExx","bf76e89ae0cadb27":"kngBC","da4e6de0762317b4":"bzqsE"}],"hyAIM":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("96975bd1604e4565").default;
var _interopRequireWildcard = require("d9c983934983cbd4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLabelMark = void 0;
var _extends2 = _interopRequireDefault(require("8523780ba4877e0a"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("bd350a75da29a5fe"));
var React = _interopRequireWildcard(require("ee131f7cfc1fbdf"));
var _propTypes = _interopRequireDefault(require("e3d721dafff9d864"));
var _styles = require("ff7b9f6fce52e083");
var _clsx = _interopRequireDefault(require("d4bce1f4e3508e5b"));
var _labelMarkClasses = require("fdc096d375e21450");
var _consumeThemeProps = require("8b43c70735acb21f");
var _jsxRuntime = require("85416ccd3a6937ba");
const _excluded = [
    "type",
    "color",
    "className",
    "classes"
];
const Root = (0, _styles.styled)('div', {
    name: 'MuiChartsLabelMark',
    slot: 'Root'
})(()=>{
    return {
        display: 'flex',
        width: 14,
        height: 14,
        [`&.${_labelMarkClasses.labelMarkClasses.line}`]: {
            width: 16,
            height: 'unset',
            alignItems: 'center',
            [`.${_labelMarkClasses.labelMarkClasses.mask}`]: {
                height: 4,
                width: '100%',
                borderRadius: 1,
                overflow: 'hidden'
            }
        },
        [`&.${_labelMarkClasses.labelMarkClasses.square}`]: {
            height: 13,
            width: 13,
            borderRadius: 2,
            overflow: 'hidden'
        },
        [`&.${_labelMarkClasses.labelMarkClasses.circle}`]: {
            height: 15,
            width: 15
        },
        svg: {
            display: 'block'
        },
        [`& .${_labelMarkClasses.labelMarkClasses.mask} > *`]: {
            height: '100%',
            width: '100%'
        },
        [`& .${_labelMarkClasses.labelMarkClasses.mask}`]: {
            height: '100%',
            width: '100%'
        }
    };
});
/**
 * Generates the label mark for the tooltip and legend.
 * @ignore - internal component.
 */ const ChartsLabelMark = exports.ChartsLabelMark = (0, _consumeThemeProps.consumeThemeProps)('MuiChartsLabelMark', {
    defaultProps: {
        type: 'square'
    },
    classesResolver: _labelMarkClasses.useUtilityClasses
}, function ChartsLabelMark(props, ref) {
    const { type, color, className, classes } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const Component = type;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Root, (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ownerState: props,
        "aria-hidden": "true",
        ref: ref
    }, other, {
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("div", {
            className: classes?.mask,
            children: typeof Component === 'function' ? /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, {
                className: classes?.fill,
                color: color
            }) : /*#__PURE__*/ (0, _jsxRuntime.jsx)("svg", {
                viewBox: "0 0 24 24",
                preserveAspectRatio: type === 'line' ? 'none' : undefined,
                children: type === 'circle' ? /*#__PURE__*/ (0, _jsxRuntime.jsx)("circle", {
                    className: classes?.fill,
                    r: "12",
                    cx: "12",
                    cy: "12",
                    fill: color
                }) : /*#__PURE__*/ (0, _jsxRuntime.jsx)("rect", {
                    className: classes?.fill,
                    width: "24",
                    height: "24",
                    fill: color
                })
            })
        })
    }));
});
ChartsLabelMark.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * The color of the mark.
   */ color: _propTypes.default.string,
    /**
   * The type of the mark.
   * @default 'square'
   */ type: _propTypes.default.oneOf([
        'circle',
        'line',
        'square'
    ])
};

},{"96975bd1604e4565":"1P3rZ","d9c983934983cbd4":"6TFJp","8523780ba4877e0a":"lKa0J","bd350a75da29a5fe":"17jFf","ee131f7cfc1fbdf":"jMk1U","e3d721dafff9d864":"GNqOQ","ff7b9f6fce52e083":"7eExx","d4bce1f4e3508e5b":"dOSJC","fdc096d375e21450":"6Tnsg","8b43c70735acb21f":"4S77q","85416ccd3a6937ba":"05iiF"}],"6Tnsg":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5149f2f2e621df4d").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getLabelMarkUtilityClass = getLabelMarkUtilityClass;
exports.useUtilityClasses = exports.labelMarkClasses = void 0;
var _composeClasses = _interopRequireDefault(require("3fd238796a1bda24"));
var _generateUtilityClass = _interopRequireDefault(require("2ae9c0639f1751ff"));
var _generateUtilityClasses = _interopRequireDefault(require("d6497873f9556971"));
function getLabelMarkUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsLabelMark', slot);
}
const labelMarkClasses = exports.labelMarkClasses = (0, _generateUtilityClasses.default)('MuiChartsLabelMark', [
    'root',
    'line',
    'square',
    'circle',
    'mask',
    'fill'
]);
const useUtilityClasses = (props)=>{
    const { type } = props;
    const slots = {
        root: typeof type === 'function' ? [
            'root'
        ] : [
            'root',
            type
        ],
        mask: [
            'mask'
        ],
        fill: [
            'fill'
        ]
    };
    return (0, _composeClasses.default)(slots, getLabelMarkUtilityClass, props.classes);
};
exports.useUtilityClasses = useUtilityClasses;

},{"5149f2f2e621df4d":"1P3rZ","3fd238796a1bda24":"gluJr","2ae9c0639f1751ff":"iAc9p","d6497873f9556971":"3J0Rs"}],"4S77q":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("759a3acaef07904c").default;
var _interopRequireDefault = require("3eb46bbf6abc60cc").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.consumeThemeProps = void 0;
var _extends2 = _interopRequireDefault(require("4d90499ce044e1f6"));
var _styles = require("1110684178a53d53");
var _resolveProps = _interopRequireDefault(require("c5791f7a2dcb981a"));
var React = _interopRequireWildcard(require("93837478f55f1903"));
var _jsxRuntime = require("5f67c0d304d58b76");
/**
 * A higher order component that consumes and merges the theme `defaultProps` and handles the `classes` and renders the component.
 *
 * This HOC will wrap a single component.
 * If you need to render multiple components, you can manually consume the theme and render them in your component instead of using this HOC.
 *
 * In the example below, `MyComponent` will render the `DefaultComponent` with the `direction` prop set to `'row'` and the className set to `'my-custom-root'`.
 *
 * @example
 * ```tsx
 * createTheme({
 *   components: {
 *     MuiMyComponent: {
 *       defaultProps: {
 *         direction: 'row',
 *       },
 *     },
 *   },
 * })
 *
 * type MyComponentProps = {
 *   direction: 'row' | 'column';
 *   classes?: Record<'root', string>;
 * };
 *
 * const MyComponent = consumeThemeProps(
 *   'MuiMyComponent',
 *   function DefaultComponent(props: MyComponentProps) {
 *     return (
 *       <div className={props.classes.root}>
 *         {props.direction}
 *       </div>
 *     );
 *   }
 * );
 *
 * render(<MyComponent classes={{ root: 'my-custom-root' }} />);
 * ```
 *
 * @param {string} name The mui component name.
 * @param {object} options Options for the HOC.
 * @param {Record<string, any>} options.defaultProps A set of defaults for the component, will be deep merged with the props.
 * @param {Function} options.classesResolver A function that returns the classes for the component. It receives the props, after theme props and defaults have been applied. And the theme object as the second argument.
 * @param InComponent The component to render if the slot is not provided.
 */ const consumeThemeProps = (name, options, InComponent)=>/*#__PURE__*/ React.forwardRef(function ConsumeThemeInternal(props, ref) {
        const themedProps = (0, _styles.useThemeProps)({
            props,
            // eslint-disable-next-line material-ui/mui-name-matches-component-name
            name
        });
        const defaultProps = typeof options.defaultProps === 'function' ? options.defaultProps(themedProps) : options.defaultProps ?? {};
        const outProps = (0, _resolveProps.default)(defaultProps, themedProps);
        const theme = (0, _styles.useTheme)();
        const classes = options.classesResolver?.(outProps, theme);
        const OutComponent = /*#__PURE__*/ React.forwardRef(InComponent);
        OutComponent.displayName = `consumeThemeProps(${name})`;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(OutComponent, (0, _extends2.default)({}, outProps, {
            classes: classes,
            ref: ref
        }));
    });
exports.consumeThemeProps = consumeThemeProps;

},{"759a3acaef07904c":"6TFJp","3eb46bbf6abc60cc":"1P3rZ","4d90499ce044e1f6":"lKa0J","1110684178a53d53":"7eExx","c5791f7a2dcb981a":"hO4GV","93837478f55f1903":"jMk1U","5f67c0d304d58b76":"05iiF"}],"fdcAT":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("e2646dd31f22ed10").default;
var _interopRequireWildcard = require("7ba29cf4dba68d8b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsAxisTooltipContent = ChartsAxisTooltipContent;
var React = _interopRequireWildcard(require("b956d307daa1ec41"));
var _propTypes = _interopRequireDefault(require("85d369a02bbd1638"));
var _Typography = _interopRequireDefault(require("d4f693b061e82369"));
var _clsx = _interopRequireDefault(require("1506b2f3ec1518e8"));
var _chartsTooltipClasses = require("c14ab91ffdcbc5d6");
var _ChartsTooltipTable = require("8bd0a8add03d6363");
var _useAxesTooltip = require("ca90ca55962967a2");
var _ChartsLabelMark = require("ae6412040ec2bef3");
var _jsxRuntime = require("4740822b44a4477a");
function ChartsAxisTooltipContent(props) {
    const classes = (0, _chartsTooltipClasses.useUtilityClasses)(props.classes);
    const tooltipData = (0, _useAxesTooltip.useAxesTooltip)();
    if (tooltipData === null) return null;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipPaper, {
        sx: props.sx,
        className: classes.paper,
        children: tooltipData.map(({ axisId, mainAxis, axisValue, axisFormattedValue, seriesItems })=>{
            return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipTable, {
                className: classes.table,
                children: [
                    axisValue != null && !mainAxis.hideTooltip && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_Typography.default, {
                        component: "caption",
                        children: axisFormattedValue
                    }),
                    /*#__PURE__*/ (0, _jsxRuntime.jsx)("tbody", {
                        children: seriesItems.map(({ seriesId, color, formattedValue, formattedLabel, markType })=>{
                            if (formattedValue == null) return null;
                            return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipRow, {
                                className: classes.row,
                                children: [
                                    /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_ChartsTooltipTable.ChartsTooltipCell, {
                                        className: (0, _clsx.default)(classes.labelCell, classes.cell),
                                        component: "th",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxRuntime.jsx)("div", {
                                                className: classes.markContainer,
                                                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelMark.ChartsLabelMark, {
                                                    type: markType,
                                                    color: color,
                                                    className: classes.mark
                                                })
                                            }),
                                            formattedLabel || null
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsTooltipTable.ChartsTooltipCell, {
                                        className: (0, _clsx.default)(classes.valueCell, classes.cell),
                                        component: "td",
                                        children: formattedValue
                                    })
                                ]
                            }, seriesId);
                        })
                    })
                ]
            }, axisId);
        })
    });
}
ChartsAxisTooltipContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ])
};

},{"e2646dd31f22ed10":"1P3rZ","7ba29cf4dba68d8b":"6TFJp","b956d307daa1ec41":"jMk1U","85d369a02bbd1638":"GNqOQ","d4f693b061e82369":"kngBC","1506b2f3ec1518e8":"dOSJC","c14ab91ffdcbc5d6":"bzqsE","8bd0a8add03d6363":"eQA0B","ca90ca55962967a2":"g2FTL","ae6412040ec2bef3":"hyAIM","4740822b44a4477a":"05iiF"}],"g2FTL":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("197b013682778847").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAxesTooltip = useAxesTooltip;
var _extends2 = _interopRequireDefault(require("9bc2b21d442a911d"));
var _useAxisTooltip = require("1e7974be268ddcd3");
/**
 * Returns the axes to display in the tooltip and the series item related to them.
 */ function useAxesTooltip(params) {
    return (0, _useAxisTooltip.useAxisTooltip)((0, _extends2.default)({}, params, {
        multipleAxes: true
    }));
}

},{"197b013682778847":"1P3rZ","9bc2b21d442a911d":"lKa0J","1e7974be268ddcd3":"9RdbK"}],"9RdbK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAxisTooltip = useAxisTooltip;
var _useSeries = require("9db06d8ae51e6ccc");
var _useColorProcessor = require("1fd301ed710deb3d");
var _useStore = require("e5d24b49de4e9c63");
var _useSelector = require("c53ba969096c4478");
var _getLabel = require("ee55437dd625a6f1");
var _isCartesian = require("eb1c02803fb6aae8");
var _utils = require("cc1b491b4186b05c");
var _useAxis = require("757cd7888ea2c6d8");
var _useZAxis = require("141f705f45368fdb");
var _useChartCartesianAxis = require("f8cc871f037362be");
var _useChartPolarInteraction = require("74ff667a2ef43098");
var _isPolar = require("b3caeabd8abc047b");
function defaultAxisTooltipConfig(axis, dataIndex, axisDirection) {
    const axisValue = axis.data?.[dataIndex] ?? null;
    const axisFormatter = axis.valueFormatter ?? ((v)=>axis.scaleType === 'utc' ? (0, _utils.utcFormatter)(v) : v.toLocaleString());
    const axisFormattedValue = axisFormatter(axisValue, {
        location: 'tooltip',
        scale: axis.scale
    });
    return {
        axisDirection,
        axisId: axis.id,
        mainAxis: axis,
        dataIndex,
        axisValue,
        axisFormattedValue,
        seriesItems: []
    };
}
/**
 * @deprecated Use `useAxesTooltip` instead.
 */ function useAxisTooltip(params = {}) {
    const { multipleAxes, directions } = params;
    const defaultXAxis = (0, _useAxis.useXAxis)();
    const defaultYAxis = (0, _useAxis.useYAxis)();
    const defaultRotationAxis = (0, _useAxis.useRotationAxis)();
    const store = (0, _useStore.useStore)();
    const tooltipXAxes = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionTooltipXAxes);
    const tooltipYAxes = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionTooltipYAxes);
    const tooltipRotationAxes = (0, _useSelector.useSelector)(store, _useChartPolarInteraction.selectorChartsInteractionTooltipRotationAxes);
    const series = (0, _useSeries.useSeries)();
    const { xAxis } = (0, _useAxis.useXAxes)();
    const { yAxis } = (0, _useAxis.useYAxes)();
    const { zAxis, zAxisIds } = (0, _useZAxis.useZAxes)();
    const { rotationAxis } = (0, _useAxis.useRotationAxes)();
    const colorProcessors = (0, _useColorProcessor.useColorProcessor)();
    if (tooltipXAxes.length === 0 && tooltipYAxes.length === 0 && tooltipRotationAxes.length === 0) return null;
    const tooltipAxes = [];
    if (directions === undefined || directions.includes('x')) tooltipXAxes.forEach(({ axisId, dataIndex })=>{
        if (!multipleAxes && tooltipAxes.length > 1) return;
        tooltipAxes.push(defaultAxisTooltipConfig(xAxis[axisId], dataIndex, 'x'));
    });
    if (directions === undefined || directions.includes('y')) tooltipYAxes.forEach(({ axisId, dataIndex })=>{
        if (!multipleAxes && tooltipAxes.length > 1) return;
        tooltipAxes.push(defaultAxisTooltipConfig(yAxis[axisId], dataIndex, 'y'));
    });
    if (directions === undefined || directions.includes('rotation')) tooltipRotationAxes.forEach(({ axisId, dataIndex })=>{
        if (!multipleAxes && tooltipAxes.length > 1) return;
        tooltipAxes.push(defaultAxisTooltipConfig(rotationAxis[axisId], dataIndex, 'rotation'));
    });
    Object.keys(series).filter(_isCartesian.isCartesianSeriesType).forEach((seriesType)=>{
        const seriesOfType = series[seriesType];
        if (!seriesOfType) return [];
        return seriesOfType.seriesOrder.forEach((seriesId)=>{
            const seriesToAdd = seriesOfType.series[seriesId];
            const providedXAxisId = seriesToAdd.xAxisId ?? defaultXAxis.id;
            const providedYAxisId = seriesToAdd.yAxisId ?? defaultYAxis.id;
            const tooltipItemIndex = tooltipAxes.findIndex(({ axisDirection, axisId })=>axisDirection === 'x' && axisId === providedXAxisId || axisDirection === 'y' && axisId === providedYAxisId);
            // Test if the series uses the default axis
            if (tooltipItemIndex >= 0) {
                const zAxisId = 'zAxisId' in seriesToAdd ? seriesToAdd.zAxisId : zAxisIds[0];
                const { dataIndex } = tooltipAxes[tooltipItemIndex];
                const color = colorProcessors[seriesType]?.(seriesToAdd, xAxis[providedXAxisId], yAxis[providedYAxisId], zAxisId ? zAxis[zAxisId] : undefined)(dataIndex) ?? '';
                const value = seriesToAdd.data[dataIndex] ?? null;
                const formattedValue = seriesToAdd.valueFormatter(value, {
                    dataIndex
                });
                const formattedLabel = (0, _getLabel.getLabel)(seriesToAdd.label, 'tooltip') ?? null;
                tooltipAxes[tooltipItemIndex].seriesItems.push({
                    seriesId,
                    color,
                    value,
                    formattedValue,
                    formattedLabel,
                    markType: seriesToAdd.labelMarkType
                });
            }
        });
    });
    Object.keys(series).filter(_isPolar.isPolarSeriesType).forEach((seriesType)=>{
        const seriesOfType = series[seriesType];
        if (!seriesOfType) return [];
        return seriesOfType.seriesOrder.forEach((seriesId)=>{
            const seriesToAdd = seriesOfType.series[seriesId];
            const providedRotationAxisId = // @ts-expect-error Should be fixed when we introduce a polar series with a rotationAxisId
            seriesToAdd.rotationAxisId ?? defaultRotationAxis?.id;
            const tooltipItemIndex = tooltipAxes.findIndex(({ axisDirection, axisId })=>axisDirection === 'rotation' && axisId === providedRotationAxisId);
            // Test if the series uses the default axis
            if (tooltipItemIndex >= 0) {
                const { dataIndex } = tooltipAxes[tooltipItemIndex];
                const color = colorProcessors[seriesType]?.(seriesToAdd)(dataIndex) ?? '';
                const value = seriesToAdd.data[dataIndex] ?? null;
                const formattedValue = seriesToAdd.valueFormatter(value, {
                    dataIndex
                });
                const formattedLabel = (0, _getLabel.getLabel)(seriesToAdd.label, 'tooltip') ?? null;
                tooltipAxes[tooltipItemIndex].seriesItems.push({
                    seriesId,
                    color,
                    value,
                    formattedValue,
                    formattedLabel,
                    markType: seriesToAdd.labelMarkType
                });
            }
        });
    });
    if (!multipleAxes) return tooltipAxes.length === 0 ? tooltipAxes[0] : null;
    return tooltipAxes;
}

},{"9db06d8ae51e6ccc":"aMvY8","1fd301ed710deb3d":"f9ltK","e5d24b49de4e9c63":"6viTh","c53ba969096c4478":"65ofz","ee55437dd625a6f1":"kBm8x","eb1c02803fb6aae8":"e7xoy","cc1b491b4186b05c":"l6GPd","757cd7888ea2c6d8":"gzVB1","141f705f45368fdb":"ew8Tr","f8cc871f037362be":"iMsPz","74ff667a2ef43098":"6ghjV","b3caeabd8abc047b":"aEWka"}],"f9ltK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("11e01f56cabc0448").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useColorProcessor = useColorProcessor;
var React = _interopRequireWildcard(require("5acc0b81a74b71bf"));
var _useSelector = require("d52c0c195f83ff4b");
var _useStore = require("8027ea28ea48987");
var _useChartSeries = require("ab9e03cb96abff53");
function useColorProcessor(seriesType) {
    const store = (0, _useStore.useStore)();
    const seriesConfig = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesConfig);
    const colorProcessors = React.useMemo(()=>{
        const rep = {};
        Object.keys(seriesConfig).forEach((seriesT)=>{
            // @ts-expect-error https://github.com/microsoft/TypeScript/issues/61555
            rep[seriesT] = seriesConfig[seriesT].colorProcessor;
        });
        return rep;
    }, [
        seriesConfig
    ]);
    if (!seriesType) return colorProcessors;
    return colorProcessors[seriesType];
}

},{"11e01f56cabc0448":"6TFJp","5acc0b81a74b71bf":"jMk1U","d52c0c195f83ff4b":"65ofz","8027ea28ea48987":"6viTh","ab9e03cb96abff53":"79Eww"}],"l6GPd":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("2668d97b0c464bd8").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useMouseTracker = useMouseTracker;
exports.usePointerType = usePointerType;
exports.utcFormatter = utcFormatter;
var React = _interopRequireWildcard(require("f793aecded7b105"));
var _hooks = require("d38d6400535d3fdf");
/**
 * @deprecated We recommend using vanilla JS to let popper track mouse position.
 */ function useMouseTracker() {
    const svgRef = (0, _hooks.useSvgRef)();
    // Use a ref to avoid rerendering on every mousemove event.
    const [mousePosition, setMousePosition] = React.useState(null);
    React.useEffect(()=>{
        const element = svgRef.current;
        if (element === null) return ()=>{};
        const controller = new AbortController();
        const handleOut = (event)=>{
            if (event.pointerType !== 'mouse') setMousePosition(null);
        };
        const handleMove = (event)=>{
            setMousePosition({
                x: event.clientX,
                y: event.clientY,
                height: event.height,
                pointerType: event.pointerType
            });
        };
        element.addEventListener('pointerdown', handleMove, {
            signal: controller.signal
        });
        element.addEventListener('pointermove', handleMove, {
            signal: controller.signal
        });
        element.addEventListener('pointerup', handleOut, {
            signal: controller.signal
        });
        return ()=>{
            // Calling `.abort()` removes ALL event listeners
            // For more info, see https://kettanaito.com/blog/dont-sleep-on-abort-controller
            controller.abort();
        };
    }, [
        svgRef
    ]);
    return mousePosition;
}
function usePointerType() {
    const svgRef = (0, _hooks.useSvgRef)();
    // Use a ref to avoid rerendering on every mousemove event.
    const [pointerType, setPointerType] = React.useState(null);
    React.useEffect(()=>{
        const element = svgRef.current;
        if (element === null) return ()=>{};
        const handleOut = (event)=>{
            if (event.pointerType !== 'mouse') setPointerType(null);
        };
        const handleEnter = (event)=>{
            setPointerType({
                pointerType: event.pointerType
            });
        };
        element.addEventListener('pointerenter', handleEnter);
        element.addEventListener('pointerup', handleOut);
        return ()=>{
            element.removeEventListener('pointerenter', handleEnter);
            element.removeEventListener('pointerup', handleOut);
        };
    }, [
        svgRef
    ]);
    return pointerType;
}
function utcFormatter(v) {
    if (v instanceof Date) return v.toUTCString();
    return v.toLocaleString();
}

},{"2668d97b0c464bd8":"6TFJp","f793aecded7b105":"jMk1U","d38d6400535d3fdf":"92Hil"}],"6ghjV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartsInteractionTooltipRotationAxes = exports.selectorChartsInteractionTooltipRadiusAxes = exports.selectorChartsInteractionRotationAxisValues = exports.selectorChartsInteractionRotationAxisValue = exports.selectorChartsInteractionRotationAxisIndexes = exports.selectorChartsInteractionRotationAxisIndex = exports.selectorChartsInteractionPolarAxisTooltip = void 0;
var _isDeepEqual = require("95a42d441d8924f");
var _selectors = require("23d4a04bb4ca0814");
var _useChartInteraction = require("e3ede6fd1f26c696");
var _coordinateTransformation = require("ef87010fc1be9b96");
var _getAxisIndex = require("42f3ba0404446b8c");
var _useChartPolarAxis = require("88d95d411faf5ee0");
const optionalGetAxisId = (_, id)=>id;
const optionalGetAxisIds = (_, ids)=>ids;
/**
 * Get interaction indexes
 */ function indexGetter(value, axes, ids) {
    return Array.isArray(ids) ? ids.map((id)=>(0, _getAxisIndex.getAxisIndex)(axes.axis[id], value)) : (0, _getAxisIndex.getAxisIndex)(axes.axis[ids], value);
}
/**
 * Helper to get the rotation associated to the interaction coordinate.
 */ const selectorChartsInteractionRotationAngle = (0, _selectors.createSelector)([
    _useChartInteraction.selectorChartsInteractionPointerX,
    _useChartInteraction.selectorChartsInteractionPointerY,
    _useChartPolarAxis.selectorChartPolarCenter
], (x, y, center)=>{
    if (x === null || y === null) return null;
    return (0, _coordinateTransformation.generateSvg2rotation)(center)(x, y);
});
const selectorChartsInteractionRotationAxisIndex = exports.selectorChartsInteractionRotationAxisIndex = (0, _selectors.createSelector)([
    selectorChartsInteractionRotationAngle,
    _useChartPolarAxis.selectorChartRotationAxis,
    optionalGetAxisId
], (rotation, rotationAxis, id = rotationAxis.axisIds[0])=>rotation === null ? null : indexGetter(rotation, rotationAxis, id));
const selectorChartsInteractionRotationAxisIndexes = exports.selectorChartsInteractionRotationAxisIndexes = (0, _selectors.createSelector)([
    selectorChartsInteractionRotationAngle,
    _useChartPolarAxis.selectorChartRotationAxis,
    optionalGetAxisIds
], (rotation, rotationAxis, ids = rotationAxis.axisIds)=>rotation === null ? null : indexGetter(rotation, rotationAxis, ids));
const selectorChartsInteractionRotationAxisValue = exports.selectorChartsInteractionRotationAxisValue = (0, _selectors.createSelector)([
    _useChartPolarAxis.selectorChartRotationAxis,
    selectorChartsInteractionRotationAxisIndex,
    optionalGetAxisId
], (rotationAxis, rotationIndex, id = rotationAxis.axisIds[0])=>{
    if (rotationIndex === null || rotationIndex === -1 || rotationAxis.axisIds.length === 0) return null;
    const data = rotationAxis.axis[id]?.data;
    if (!data) return null;
    return data[rotationIndex];
});
const selectorChartsInteractionRotationAxisValues = exports.selectorChartsInteractionRotationAxisValues = (0, _selectors.createSelector)([
    _useChartPolarAxis.selectorChartRotationAxis,
    selectorChartsInteractionRotationAxisIndexes,
    optionalGetAxisIds
], (rotationAxis, rotationIndexes, ids = rotationAxis.axisIds)=>{
    if (rotationIndexes === null) return null;
    return ids.map((id, axisIndex)=>{
        const rotationIndex = rotationIndexes[axisIndex];
        if (rotationIndex === -1) return null;
        return rotationAxis.axis[id].data?.[rotationIndex];
    });
});
/**
 * Get rotation-axis ids and corresponding data index that should be display in the tooltip.
 */ const selectorChartsInteractionTooltipRotationAxes = exports.selectorChartsInteractionTooltipRotationAxes = (0, _selectors.createSelector)([
    selectorChartsInteractionRotationAxisIndexes,
    _useChartPolarAxis.selectorChartRotationAxis
], (indexes, axes)=>{
    if (indexes === null) return [];
    return axes.axisIds.map((axisId, axisIndex)=>({
            axisId,
            dataIndex: indexes[axisIndex]
        })).filter(({ axisId, dataIndex })=>axes.axis[axisId].triggerTooltip && dataIndex >= 0);
}, {
    memoizeOptions: {
        // Keep the same reference if array content is the same.
        // If possible, avoid this pattern by creating selectors that
        // uses string/number as arguments.
        resultEqualityCheck: _isDeepEqual.isDeepEqual
    }
});
/**
 * Get radius-axis ids and corresponding data index that should be displayed in the tooltip.
 */ const selectorChartsInteractionTooltipRadiusAxes = exports.selectorChartsInteractionTooltipRadiusAxes = (0, _selectors.createSelector)([], ()=>{
    // TODO implement this selector and add it to the `selectorChartsInteractionPolarAxisTooltip`
    return [];
});
/**
 * Return `true` if the axis tooltip has something to display.
 */ const selectorChartsInteractionPolarAxisTooltip = exports.selectorChartsInteractionPolarAxisTooltip = (0, _selectors.createSelector)([
    selectorChartsInteractionTooltipRotationAxes
], (rotationTooltip)=>rotationTooltip.length > 0);

},{"95a42d441d8924f":"5b5Jm","23d4a04bb4ca0814":"4YBdc","e3ede6fd1f26c696":"dwY4R","ef87010fc1be9b96":"evkKb","42f3ba0404446b8c":"2WHA8","88d95d411faf5ee0":"261wY"}],"2WHA8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAxisIndex = getAxisIndex;
var _isBandScale = require("6fdc3123f40acdc5");
var _clampAngle = require("f044289a827782a8");
/**
 * For a pointer coordinate, this function returns the value and dataIndex associated.
 * Returns `-1` if the coordinate does not match a value.
 */ function getAxisIndex(axisConfig, pointerValue) {
    const { scale, data: axisData, reverse } = axisConfig;
    if (!(0, _isBandScale.isBandScale)(scale)) throw new Error('MUI X Charts: getAxisValue is not implemented for polare continuous axes.');
    if (!axisData) return -1;
    const angleGap = (0, _clampAngle.clampAngleRad)(pointerValue - Math.min(...scale.range()));
    const dataIndex = scale.bandwidth() === 0 ? Math.floor((angleGap + scale.step() / 2) / scale.step()) % axisData.length : Math.floor(angleGap / scale.step());
    if (dataIndex < 0 || dataIndex >= axisData.length) return -1;
    return reverse ? axisData.length - 1 - dataIndex : dataIndex;
}

},{"6fdc3123f40acdc5":"58Ehn","f044289a827782a8":"8waTE"}],"atFOa":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("1e4fd1eab0014564").default;
var _interopRequireWildcard = require("a3266bcf78bb9c43").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsTooltipContainer = ChartsTooltipContainer;
var _extends2 = _interopRequireDefault(require("8ecbd43f0abe159f"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("723cd6cb81951fbc"));
var React = _interopRequireWildcard(require("aa17d07cc3d0925f"));
var _propTypes = _interopRequireDefault(require("7dec9d4111783bb9"));
var _HTMLElementType = _interopRequireDefault(require("9566fdee7ffeb480"));
var _useLazyRef = _interopRequireDefault(require("d67f27e309e4c39a"));
var _styles = require("657a845e28d7e5a9");
var _Popper = _interopRequireDefault(require("3d763acb72391bcc"));
var _NoSsr = _interopRequireDefault(require("81b82c5edfa95024"));
var _useSvgRef = require("d7d8b234f53e33a");
var _utils = require("1d0ec7185f65c3b3");
var _useSelector = require("8125922aa8231aa");
var _useStore = require("53034bf8cf177e11");
var _useChartInteraction = require("c726d9564f4345bc");
var _useChartCartesianAxis = require("ae26fd4a493dc6ae");
var _useChartPolarInteraction = require("8d3a4de18f1e93bc");
var _useAxisSystem = require("e6c824e9c93d3fbc");
var _jsxRuntime = require("8b24130798c6027d");
const _excluded = [
    "trigger",
    "classes",
    "children"
];
const noAxis = ()=>false;
const ChartsTooltipRoot = (0, _styles.styled)(_Popper.default, {
    name: 'MuiChartsTooltip',
    slot: 'Root'
})(({ theme })=>({
        pointerEvents: 'none',
        zIndex: theme.zIndex.modal
    }));
/**
 * Demos:
 *
 * - [ChartsTooltip](https://mui.com/x/react-charts/tooltip/)
 *
 * API:
 *
 * - [ChartsTooltip API](https://mui.com/x/api/charts/charts-tool-tip/)
 */ function ChartsTooltipContainer(inProps) {
    const props = (0, _styles.useThemeProps)({
        props: inProps,
        name: 'MuiChartsTooltipContainer'
    });
    const { trigger = 'axis', classes, children } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const svgRef = (0, _useSvgRef.useSvgRef)();
    const pointerType = (0, _utils.usePointerType)();
    const popperRef = React.useRef(null);
    const positionRef = (0, _useLazyRef.default)(()=>({
            x: 0,
            y: 0
        }));
    const axisSystem = (0, _useAxisSystem.useAxisSystem)();
    const store = (0, _useStore.useStore)();
    const isOpen = (0, _useSelector.useSelector)(store, trigger === 'axis' ? axisSystem === 'polar' && _useChartPolarInteraction.selectorChartsInteractionPolarAxisTooltip || axisSystem === 'cartesian' && _useChartCartesianAxis.selectorChartsInteractionAxisTooltip || noAxis : _useChartInteraction.selectorChartsInteractionItemIsDefined);
    const popperOpen = pointerType !== null && isOpen; // tooltipHasData;
    React.useEffect(()=>{
        const element = svgRef.current;
        if (element === null) return ()=>{};
        const handleMove = (event)=>{
            // eslint-disable-next-line react-compiler/react-compiler
            positionRef.current = {
                x: event.clientX,
                y: event.clientY
            };
            popperRef.current?.update();
        };
        element.addEventListener('pointermove', handleMove);
        return ()=>{
            element.removeEventListener('pointermove', handleMove);
        };
    }, [
        svgRef,
        positionRef
    ]);
    const anchorEl = React.useMemo(()=>({
            getBoundingClientRect: ()=>({
                    x: positionRef.current.x,
                    y: positionRef.current.y,
                    top: positionRef.current.y,
                    left: positionRef.current.x,
                    right: positionRef.current.x,
                    bottom: positionRef.current.y,
                    width: 0,
                    height: 0,
                    toJSON: ()=>''
                })
        }), [
        positionRef
    ]);
    const modifiers = React.useMemo(()=>[
            {
                name: 'offset',
                options: {
                    offset: ()=>{
                        if (pointerType?.pointerType !== 'touch') // The popper offset: [skidding, distance]
                        return [
                            0,
                            8
                        ];
                        return [
                            0,
                            64
                        ];
                    }
                }
            },
            ...pointerType?.pointerType === 'mouse' ? [] // Keep default behavior
             : [
                {
                    name: 'flip',
                    options: {
                        fallbackPlacements: [
                            'top-end',
                            'top-start',
                            'bottom-end',
                            'bottom'
                        ]
                    }
                }
            ]
        ], [
        pointerType
    ]);
    if (trigger === 'none') return null;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_NoSsr.default, {
        children: popperOpen && /*#__PURE__*/ (0, _jsxRuntime.jsx)(ChartsTooltipRoot, (0, _extends2.default)({
            className: classes?.root,
            open: popperOpen,
            placement: pointerType?.pointerType === 'mouse' ? 'right-start' : 'top',
            popperRef: popperRef,
            anchorEl: anchorEl,
            modifiers: modifiers
        }, other, {
            children: children
        }))
    });
}
ChartsTooltipContainer.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */ anchorEl: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _HTMLElementType.default,
        _propTypes.default.object,
        _propTypes.default.func
    ]),
    /**
   * Popper render function or node.
   */ children: _propTypes.default.node,
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypes.default.elementType,
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ components: _propTypes.default.shape({
        Root: _propTypes.default.elementType
    }),
    /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ componentsProps: _propTypes.default.shape({
        root: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object
        ])
    }),
    /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypes.default.oneOfType([
        (props, propName)=>{
            if (props[propName] == null) return new Error(`Prop '${propName}' is required but wasn't specified`);
            if (typeof props[propName] !== 'object' || props[propName].nodeType !== 1) return new Error(`Expected prop '${propName}' to be of type Element`);
            return null;
        },
        _propTypes.default.func
    ]),
    /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */ disablePortal: _propTypes.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */ keepMounted: _propTypes.default.bool,
    /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */ modifiers: _propTypes.default.arrayOf(_propTypes.default.shape({
        data: _propTypes.default.object,
        effect: _propTypes.default.func,
        enabled: _propTypes.default.bool,
        fn: _propTypes.default.func,
        name: _propTypes.default.any,
        options: _propTypes.default.object,
        phase: _propTypes.default.oneOf([
            'afterMain',
            'afterRead',
            'afterWrite',
            'beforeMain',
            'beforeRead',
            'beforeWrite',
            'main',
            'read',
            'write'
        ]),
        requires: _propTypes.default.arrayOf(_propTypes.default.string),
        requiresIfExists: _propTypes.default.arrayOf(_propTypes.default.string)
    })),
    /**
   * If `true`, the component is shown.
   */ open: _propTypes.default.bool,
    /**
   * Popper placement.
   * @default 'bottom'
   */ placement: _propTypes.default.oneOf([
        'auto-end',
        'auto-start',
        'auto',
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */ popperOptions: _propTypes.default.shape({
        modifiers: _propTypes.default.array,
        onFirstUpdate: _propTypes.default.func,
        placement: _propTypes.default.oneOf([
            'auto-end',
            'auto-start',
            'auto',
            'bottom-end',
            'bottom-start',
            'bottom',
            'left-end',
            'left-start',
            'left',
            'right-end',
            'right-start',
            'right',
            'top-end',
            'top-start',
            'top'
        ]),
        strategy: _propTypes.default.oneOf([
            'absolute',
            'fixed'
        ])
    }),
    /**
   * A ref that points to the used popper instance.
   */ popperRef: _propTypes.default.oneOfType([
        _propTypes.default.func,
        _propTypes.default.shape({
            current: _propTypes.default.shape({
                destroy: _propTypes.default.func.isRequired,
                forceUpdate: _propTypes.default.func.isRequired,
                setOptions: _propTypes.default.func.isRequired,
                state: _propTypes.default.shape({
                    attributes: _propTypes.default.object.isRequired,
                    elements: _propTypes.default.object.isRequired,
                    modifiersData: _propTypes.default.object.isRequired,
                    options: _propTypes.default.object.isRequired,
                    orderedModifiers: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
                    placement: _propTypes.default.oneOf([
                        'auto-end',
                        'auto-start',
                        'auto',
                        'bottom-end',
                        'bottom-start',
                        'bottom',
                        'left-end',
                        'left-start',
                        'left',
                        'right-end',
                        'right-start',
                        'right',
                        'top-end',
                        'top-start',
                        'top'
                    ]).isRequired,
                    rects: _propTypes.default.object.isRequired,
                    reset: _propTypes.default.bool.isRequired,
                    scrollParents: _propTypes.default.object.isRequired,
                    strategy: _propTypes.default.oneOf([
                        'absolute',
                        'fixed'
                    ]).isRequired,
                    styles: _propTypes.default.object.isRequired
                }).isRequired,
                update: _propTypes.default.func.isRequired
            })
        })
    ]),
    /**
   * The props used for each slot inside the Popper.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */ slots: _propTypes.default.object,
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */ transition: _propTypes.default.bool,
    /**
   * Select the kind of tooltip to display
   * - 'item': Shows data about the item below the mouse.
   * - 'axis': Shows values associated with the hovered x value
   * - 'none': Does not display tooltip
   * @default 'axis'
   */ trigger: _propTypes.default.oneOf([
        'axis',
        'item',
        'none'
    ])
};

},{"1e4fd1eab0014564":"1P3rZ","a3266bcf78bb9c43":"6TFJp","8ecbd43f0abe159f":"lKa0J","723cd6cb81951fbc":"17jFf","aa17d07cc3d0925f":"jMk1U","7dec9d4111783bb9":"GNqOQ","9566fdee7ffeb480":"azl5Y","d67f27e309e4c39a":"7lBOu","657a845e28d7e5a9":"7eExx","3d763acb72391bcc":"9t8Nk","81b82c5edfa95024":"bDrWf","d7d8b234f53e33a":"2YtYD","1d0ec7185f65c3b3":"l6GPd","8125922aa8231aa":"65ofz","53034bf8cf177e11":"6viTh","c726d9564f4345bc":"4pi8Z","ae26fd4a493dc6ae":"iMsPz","8d3a4de18f1e93bc":"6ghjV","e6c824e9c93d3fbc":"dz8Pz","8b24130798c6027d":"05iiF"}],"7lBOu":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("836bdefd4b9f7b13").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _useLazyRef.default;
    }
});
var _useLazyRef = _interopRequireDefault(require("9658beffa027bb73"));

},{"836bdefd4b9f7b13":"1P3rZ","9658beffa027bb73":"h7HI0"}],"h7HI0":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("24405efd4ebf80a9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = useLazyRef;
var React = _interopRequireWildcard(require("d4852ee2f430cca8"));
const UNINITIALIZED = {};
/**
 * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional
 * initialization argument, so the initialization function doesn't need to be an inline closure.
 *
 * @usage
 *   const ref = useLazyRef(sortColumns, columns)
 */ function useLazyRef(init, initArg) {
    const ref = React.useRef(UNINITIALIZED);
    if (ref.current === UNINITIALIZED) ref.current = init(initArg);
    return ref;
}

},{"24405efd4ebf80a9":"6TFJp","d4852ee2f430cca8":"jMk1U"}],"9t8Nk":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e7bbfe73179b25f2").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _Popper.default;
    }
});
var _Popper = _interopRequireDefault(require("3f36e30c859554b4"));
var _popperClasses = require("f9c6c7963e5410ff");
Object.keys(_popperClasses).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _popperClasses[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _popperClasses[key];
        }
    });
});

},{"e7bbfe73179b25f2":"1P3rZ","3f36e30c859554b4":"j0DBY","f9c6c7963e5410ff":"aa8Zl"}],"j0DBY":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("6fb9e52526fd4165").default;
var _interopRequireDefault = require("5f51fab47a525fb0").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _RtlProvider = require("394d889e40f7f575");
var _refType = _interopRequireDefault(require("513b716decdc79fe"));
var _HTMLElementType = _interopRequireDefault(require("6dbd46d586b3ad70"));
var _propTypes = _interopRequireDefault(require("ef72fc5969d38c20"));
var React = _interopRequireWildcard(require("f356e785ed29cbea"));
var _BasePopper = _interopRequireDefault(require("f2e365724dc1dc99"));
var _zeroStyled = require("9ee03dd414f0bda8");
var _DefaultPropsProvider = require("1be9cc762df51032");
var _jsxRuntime = require("2f0d05af153dc17e");
const PopperRoot = (0, _zeroStyled.styled)(_BasePopper.default, {
    name: 'MuiPopper',
    slot: 'Root',
    overridesResolver: (props, styles)=>styles.root
})({});
/**
 *
 * Demos:
 *
 * - [Autocomplete](https://mui.com/material-ui/react-autocomplete/)
 * - [Menu](https://mui.com/material-ui/react-menu/)
 * - [Popper](https://mui.com/material-ui/react-popper/)
 *
 * API:
 *
 * - [Popper API](https://mui.com/material-ui/api/popper/)
 */ const Popper = /*#__PURE__*/ React.forwardRef(function Popper(inProps, ref) {
    const isRtl = (0, _RtlProvider.useRtl)();
    const props = (0, _DefaultPropsProvider.useDefaultProps)({
        props: inProps,
        name: 'MuiPopper'
    });
    const { anchorEl, component, components, componentsProps, container, disablePortal, keepMounted, modifiers, open, placement, popperOptions, popperRef, transition, slots, slotProps, ...other } = props;
    const RootComponent = slots?.root ?? components?.Root;
    const otherProps = {
        anchorEl,
        container,
        disablePortal,
        keepMounted,
        modifiers,
        open,
        placement,
        popperOptions,
        popperRef,
        transition,
        ...other
    };
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(PopperRoot, {
        as: component,
        direction: isRtl ? 'rtl' : 'ltr',
        slots: {
            root: RootComponent
        },
        slotProps: slotProps ?? componentsProps,
        ...otherProps,
        ref: ref
    });
});
Popper.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */ anchorEl: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _HTMLElementType.default,
        _propTypes.default.object,
        _propTypes.default.func
    ]),
    /**
   * Popper render function or node.
   */ children: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypes.default.node,
        _propTypes.default.func
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypes.default.elementType,
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ components: _propTypes.default.shape({
        Root: _propTypes.default.elementType
    }),
    /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */ componentsProps: _propTypes.default.shape({
        root: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object
        ])
    }),
    /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _HTMLElementType.default,
        _propTypes.default.func
    ]),
    /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */ disablePortal: _propTypes.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */ keepMounted: _propTypes.default.bool,
    /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */ modifiers: _propTypes.default.arrayOf(_propTypes.default.shape({
        data: _propTypes.default.object,
        effect: _propTypes.default.func,
        enabled: _propTypes.default.bool,
        fn: _propTypes.default.func,
        name: _propTypes.default.any,
        options: _propTypes.default.object,
        phase: _propTypes.default.oneOf([
            'afterMain',
            'afterRead',
            'afterWrite',
            'beforeMain',
            'beforeRead',
            'beforeWrite',
            'main',
            'read',
            'write'
        ]),
        requires: _propTypes.default.arrayOf(_propTypes.default.string),
        requiresIfExists: _propTypes.default.arrayOf(_propTypes.default.string)
    })),
    /**
   * If `true`, the component is shown.
   */ open: _propTypes.default.bool.isRequired,
    /**
   * Popper placement.
   * @default 'bottom'
   */ placement: _propTypes.default.oneOf([
        'auto-end',
        'auto-start',
        'auto',
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */ popperOptions: _propTypes.default.shape({
        modifiers: _propTypes.default.array,
        onFirstUpdate: _propTypes.default.func,
        placement: _propTypes.default.oneOf([
            'auto-end',
            'auto-start',
            'auto',
            'bottom-end',
            'bottom-start',
            'bottom',
            'left-end',
            'left-start',
            'left',
            'right-end',
            'right-start',
            'right',
            'top-end',
            'top-start',
            'top'
        ]),
        strategy: _propTypes.default.oneOf([
            'absolute',
            'fixed'
        ])
    }),
    /**
   * A ref that points to the used popper instance.
   */ popperRef: _refType.default,
    /**
   * The props used for each slot inside the Popper.
   * @default {}
   */ slotProps: _propTypes.default.shape({
        root: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object
        ])
    }),
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */ slots: _propTypes.default.shape({
        root: _propTypes.default.elementType
    }),
    /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */ sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */ transition: _propTypes.default.bool
};
var _default = exports.default = Popper;

},{"6fb9e52526fd4165":"6TFJp","5f51fab47a525fb0":"1P3rZ","394d889e40f7f575":"13k4W","513b716decdc79fe":"91ftP","6dbd46d586b3ad70":"azl5Y","ef72fc5969d38c20":"GNqOQ","f356e785ed29cbea":"jMk1U","f2e365724dc1dc99":"kyj1s","9ee03dd414f0bda8":"7wsk9","1be9cc762df51032":"jO2tX","2f0d05af153dc17e":"05iiF"}],"91ftP":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("cb008783cc8dc54").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _refType.default;
    }
});
var _refType = _interopRequireDefault(require("2afcc5cf90f97a36"));

},{"cb008783cc8dc54":"1P3rZ","2afcc5cf90f97a36":"lMoIK"}],"lMoIK":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a3e3dc00f37a8649").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _propTypes = _interopRequireDefault(require("eb7a3c1f43d71682"));
const refType = _propTypes.default.oneOfType([
    _propTypes.default.func,
    _propTypes.default.object
]);
var _default = exports.default = refType;

},{"a3e3dc00f37a8649":"1P3rZ","eb7a3c1f43d71682":"GNqOQ"}],"kyj1s":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("2010a32e2f28a372").default;
var _interopRequireWildcard = require("137691bda5b6cb97").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("97627872a183479d"));
var _utils = require("1d3023475da8550a");
var _core = require("3a8fbe189ceb59d7");
var _propTypes = _interopRequireDefault(require("651025cbe6300d79"));
var _composeClasses = _interopRequireDefault(require("890717589098baf1"));
var _useSlotProps = _interopRequireDefault(require("329facdb3257739a"));
var _Portal = _interopRequireDefault(require("e6b43a3e27504e1d"));
var _popperClasses = require("5b29f028edcfede2");
var _jsxRuntime = require("5180f8da3723b36c");
function flipPlacement(placement, direction) {
    if (direction === 'ltr') return placement;
    switch(placement){
        case 'bottom-end':
            return 'bottom-start';
        case 'bottom-start':
            return 'bottom-end';
        case 'top-end':
            return 'top-start';
        case 'top-start':
            return 'top-end';
        default:
            return placement;
    }
}
function resolveAnchorEl(anchorEl) {
    return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}
function isHTMLElement(element) {
    return element.nodeType !== undefined;
}
function isVirtualElement(element) {
    return !isHTMLElement(element);
}
const useUtilityClasses = (ownerState)=>{
    const { classes } = ownerState;
    const slots = {
        root: [
            'root'
        ]
    };
    return (0, _composeClasses.default)(slots, _popperClasses.getPopperUtilityClass, classes);
};
const defaultPopperOptions = {};
const PopperTooltip = /*#__PURE__*/ React.forwardRef(function PopperTooltip(props, forwardedRef) {
    const { anchorEl, children, direction, disablePortal, modifiers, open, placement: initialPlacement, popperOptions, popperRef: popperRefProp, slotProps = {}, slots = {}, TransitionProps, // @ts-ignore internal logic
    ownerState: ownerStateProp, // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...other } = props;
    const tooltipRef = React.useRef(null);
    const ownRef = (0, _utils.unstable_useForkRef)(tooltipRef, forwardedRef);
    const popperRef = React.useRef(null);
    const handlePopperRef = (0, _utils.unstable_useForkRef)(popperRef, popperRefProp);
    const handlePopperRefRef = React.useRef(handlePopperRef);
    (0, _utils.unstable_useEnhancedEffect)(()=>{
        handlePopperRefRef.current = handlePopperRef;
    }, [
        handlePopperRef
    ]);
    React.useImperativeHandle(popperRefProp, ()=>popperRef.current, []);
    const rtlPlacement = flipPlacement(initialPlacement, direction);
    /**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */ const [placement, setPlacement] = React.useState(rtlPlacement);
    const [resolvedAnchorElement, setResolvedAnchorElement] = React.useState(resolveAnchorEl(anchorEl));
    React.useEffect(()=>{
        if (popperRef.current) popperRef.current.forceUpdate();
    });
    React.useEffect(()=>{
        if (anchorEl) setResolvedAnchorElement(resolveAnchorEl(anchorEl));
    }, [
        anchorEl
    ]);
    (0, _utils.unstable_useEnhancedEffect)(()=>{
        if (!resolvedAnchorElement || !open) return undefined;
        const handlePopperUpdate = (data)=>{
            setPlacement(data.placement);
        };
        if (resolvedAnchorElement && isHTMLElement(resolvedAnchorElement) && resolvedAnchorElement.nodeType === 1) {
            const box = resolvedAnchorElement.getBoundingClientRect();
            if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) console.warn([
                'MUI: The `anchorEl` prop provided to the component is invalid.',
                'The anchor element should be part of the document layout.',
                "Make sure the element is present in the document or that it's not display none."
            ].join('\n'));
        }
        let popperModifiers = [
            {
                name: 'preventOverflow',
                options: {
                    altBoundary: disablePortal
                }
            },
            {
                name: 'flip',
                options: {
                    altBoundary: disablePortal
                }
            },
            {
                name: 'onUpdate',
                enabled: true,
                phase: 'afterWrite',
                fn: ({ state })=>{
                    handlePopperUpdate(state);
                }
            }
        ];
        if (modifiers != null) popperModifiers = popperModifiers.concat(modifiers);
        if (popperOptions && popperOptions.modifiers != null) popperModifiers = popperModifiers.concat(popperOptions.modifiers);
        const popper = (0, _core.createPopper)(resolvedAnchorElement, tooltipRef.current, {
            placement: rtlPlacement,
            ...popperOptions,
            modifiers: popperModifiers
        });
        handlePopperRefRef.current(popper);
        return ()=>{
            popper.destroy();
            handlePopperRefRef.current(null);
        };
    }, [
        resolvedAnchorElement,
        disablePortal,
        modifiers,
        open,
        popperOptions,
        rtlPlacement
    ]);
    const childProps = {
        placement: placement
    };
    if (TransitionProps !== null) childProps.TransitionProps = TransitionProps;
    const classes = useUtilityClasses(props);
    const Root = slots.root ?? 'div';
    const rootProps = (0, _useSlotProps.default)({
        elementType: Root,
        externalSlotProps: slotProps.root,
        externalForwardedProps: other,
        additionalProps: {
            role: 'tooltip',
            ref: ownRef
        },
        ownerState: props,
        className: classes.root
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Root, {
        ...rootProps,
        children: typeof children === 'function' ? children(childProps) : children
    });
});
/**
 * @ignore - internal component.
 */ const Popper = /*#__PURE__*/ React.forwardRef(function Popper(props, forwardedRef) {
    const { anchorEl, children, container: containerProp, direction = 'ltr', disablePortal = false, keepMounted = false, modifiers, open, placement = 'bottom', popperOptions = defaultPopperOptions, popperRef, style, transition = false, slotProps = {}, slots = {}, ...other } = props;
    const [exited, setExited] = React.useState(true);
    const handleEnter = ()=>{
        setExited(false);
    };
    const handleExited = ()=>{
        setExited(true);
    };
    if (!keepMounted && !open && (!transition || exited)) return null;
    // If the container prop is provided, use that
    // If the anchorEl prop is provided, use its parent body element as the container
    // If neither are provided let the Modal take care of choosing the container
    let container;
    if (containerProp) container = containerProp;
    else if (anchorEl) {
        const resolvedAnchorEl = resolveAnchorEl(anchorEl);
        container = resolvedAnchorEl && isHTMLElement(resolvedAnchorEl) ? (0, _utils.unstable_ownerDocument)(resolvedAnchorEl).body : (0, _utils.unstable_ownerDocument)(null).body;
    }
    const display = !open && keepMounted && (!transition || exited) ? 'none' : undefined;
    const transitionProps = transition ? {
        in: open,
        onEnter: handleEnter,
        onExited: handleExited
    } : undefined;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_Portal.default, {
        disablePortal: disablePortal,
        container: container,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(PopperTooltip, {
            anchorEl: anchorEl,
            direction: direction,
            disablePortal: disablePortal,
            modifiers: modifiers,
            ref: forwardedRef,
            open: transition ? !exited : open,
            placement: placement,
            popperOptions: popperOptions,
            popperRef: popperRef,
            slotProps: slotProps,
            slots: slots,
            ...other,
            style: {
                // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
                position: 'fixed',
                // Fix Popper.js display issue
                top: 0,
                left: 0,
                display,
                ...style
            },
            TransitionProps: transitionProps,
            children: children
        })
    });
});
Popper.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */ anchorEl: (0, _utils.chainPropTypes)(_propTypes.default.oneOfType([
        _utils.HTMLElementType,
        _propTypes.default.object,
        _propTypes.default.func
    ]), (props)=>{
        if (props.open) {
            const resolvedAnchorEl = resolveAnchorEl(props.anchorEl);
            if (resolvedAnchorEl && isHTMLElement(resolvedAnchorEl) && resolvedAnchorEl.nodeType === 1) {
                const box = resolvedAnchorEl.getBoundingClientRect();
                if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) return new Error([
                    'MUI: The `anchorEl` prop provided to the component is invalid.',
                    'The anchor element should be part of the document layout.',
                    "Make sure the element is present in the document or that it's not display none."
                ].join('\n'));
            } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.getBoundingClientRect !== 'function' || isVirtualElement(resolvedAnchorEl) && resolvedAnchorEl.contextElement != null && resolvedAnchorEl.contextElement.nodeType !== 1) return new Error([
                'MUI: The `anchorEl` prop provided to the component is invalid.',
                'It should be an HTML element instance or a virtualElement ',
                '(https://popper.js.org/docs/v2/virtual-elements/).'
            ].join('\n'));
        }
        return null;
    }),
    /**
   * Popper render function or node.
   */ children: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypes.default.node,
        _propTypes.default.func
    ]),
    /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypes.default.func
    ]),
    /**
   * Direction of the text.
   * @default 'ltr'
   */ direction: _propTypes.default.oneOf([
        'ltr',
        'rtl'
    ]),
    /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */ disablePortal: _propTypes.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */ keepMounted: _propTypes.default.bool,
    /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */ modifiers: _propTypes.default.arrayOf(_propTypes.default.shape({
        data: _propTypes.default.object,
        effect: _propTypes.default.func,
        enabled: _propTypes.default.bool,
        fn: _propTypes.default.func,
        name: _propTypes.default.any,
        options: _propTypes.default.object,
        phase: _propTypes.default.oneOf([
            'afterMain',
            'afterRead',
            'afterWrite',
            'beforeMain',
            'beforeRead',
            'beforeWrite',
            'main',
            'read',
            'write'
        ]),
        requires: _propTypes.default.arrayOf(_propTypes.default.string),
        requiresIfExists: _propTypes.default.arrayOf(_propTypes.default.string)
    })),
    /**
   * If `true`, the component is shown.
   */ open: _propTypes.default.bool.isRequired,
    /**
   * Popper placement.
   * @default 'bottom'
   */ placement: _propTypes.default.oneOf([
        'auto-end',
        'auto-start',
        'auto',
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */ popperOptions: _propTypes.default.shape({
        modifiers: _propTypes.default.array,
        onFirstUpdate: _propTypes.default.func,
        placement: _propTypes.default.oneOf([
            'auto-end',
            'auto-start',
            'auto',
            'bottom-end',
            'bottom-start',
            'bottom',
            'left-end',
            'left-start',
            'left',
            'right-end',
            'right-start',
            'right',
            'top-end',
            'top-start',
            'top'
        ]),
        strategy: _propTypes.default.oneOf([
            'absolute',
            'fixed'
        ])
    }),
    /**
   * A ref that points to the used popper instance.
   */ popperRef: _utils.refType,
    /**
   * The props used for each slot inside the Popper.
   * @default {}
   */ slotProps: _propTypes.default.shape({
        root: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object
        ])
    }),
    /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */ slots: _propTypes.default.shape({
        root: _propTypes.default.elementType
    }),
    /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */ transition: _propTypes.default.bool
};
var _default = exports.default = Popper;

},{"2010a32e2f28a372":"1P3rZ","137691bda5b6cb97":"6TFJp","97627872a183479d":"jMk1U","1d3023475da8550a":"4hufy","3a8fbe189ceb59d7":"gYaaZ","651025cbe6300d79":"GNqOQ","890717589098baf1":"gluJr","329facdb3257739a":"7cNZ5","e6b43a3e27504e1d":"dfxYh","5b29f028edcfede2":"aa8Zl","5180f8da3723b36c":"05iiF"}],"gYaaZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>(0, _createPopperJs.popperGenerator)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _createPopperJs.detectOverflow));
parcelHelpers.export(exports, "createPopperBase", ()=>(0, _createPopperJs.createPopper));
parcelHelpers.export(exports, "createPopper", ()=>(0, _popperJs.createPopper)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "createPopperLite", ()=>(0, _popperLiteJs.createPopper));
var _enumsJs = require("./enums.js");
parcelHelpers.exportAll(_enumsJs, exports);
var _indexJs = require("./modifiers/index.js"); // eslint-disable-next-line import/no-unused-modules
parcelHelpers.exportAll(_indexJs, exports);
var _createPopperJs = require("./createPopper.js");
var _popperJs = require("./popper.js");
var _popperLiteJs = require("./popper-lite.js");

},{"./enums.js":"jVhmu","./modifiers/index.js":"e2tRe","./createPopper.js":"3NuA9","./popper.js":"aM4Q6","./popper-lite.js":"cK1Kf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jVhmu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "top", ()=>top);
parcelHelpers.export(exports, "bottom", ()=>bottom);
parcelHelpers.export(exports, "right", ()=>right);
parcelHelpers.export(exports, "left", ()=>left);
parcelHelpers.export(exports, "auto", ()=>auto);
parcelHelpers.export(exports, "basePlacements", ()=>basePlacements);
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "end", ()=>end);
parcelHelpers.export(exports, "clippingParents", ()=>clippingParents);
parcelHelpers.export(exports, "viewport", ()=>viewport);
parcelHelpers.export(exports, "popper", ()=>popper);
parcelHelpers.export(exports, "reference", ()=>reference);
parcelHelpers.export(exports, "variationPlacements", ()=>variationPlacements);
parcelHelpers.export(exports, "placements", ()=>placements);
parcelHelpers.export(exports, "beforeRead", ()=>beforeRead);
parcelHelpers.export(exports, "read", ()=>read);
parcelHelpers.export(exports, "afterRead", ()=>afterRead);
parcelHelpers.export(exports, "beforeMain", ()=>beforeMain);
parcelHelpers.export(exports, "main", ()=>main);
parcelHelpers.export(exports, "afterMain", ()=>afterMain);
parcelHelpers.export(exports, "beforeWrite", ()=>beforeWrite);
parcelHelpers.export(exports, "write", ()=>write);
parcelHelpers.export(exports, "afterWrite", ()=>afterWrite);
parcelHelpers.export(exports, "modifierPhases", ()=>modifierPhases);
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [
    top,
    bottom,
    right,
    left
];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {
    return acc.concat([
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []);
var placements = /*#__PURE__*/ [].concat(basePlacements, [
    auto
]).reduce(function(acc, placement) {
    return acc.concat([
        placement,
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []); // modifiers that need to read the DOM
var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers
var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)
var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [
    beforeRead,
    read,
    afterRead,
    beforeMain,
    main,
    afterMain,
    beforeWrite,
    write,
    afterWrite
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e2tRe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyStyles", ()=>(0, _applyStylesJsDefault.default));
parcelHelpers.export(exports, "arrow", ()=>(0, _arrowJsDefault.default));
parcelHelpers.export(exports, "computeStyles", ()=>(0, _computeStylesJsDefault.default));
parcelHelpers.export(exports, "eventListeners", ()=>(0, _eventListenersJsDefault.default));
parcelHelpers.export(exports, "flip", ()=>(0, _flipJsDefault.default));
parcelHelpers.export(exports, "hide", ()=>(0, _hideJsDefault.default));
parcelHelpers.export(exports, "offset", ()=>(0, _offsetJsDefault.default));
parcelHelpers.export(exports, "popperOffsets", ()=>(0, _popperOffsetsJsDefault.default));
parcelHelpers.export(exports, "preventOverflow", ()=>(0, _preventOverflowJsDefault.default));
var _applyStylesJs = require("./applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var _arrowJs = require("./arrow.js");
var _arrowJsDefault = parcelHelpers.interopDefault(_arrowJs);
var _computeStylesJs = require("./computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _eventListenersJs = require("./eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _flipJs = require("./flip.js");
var _flipJsDefault = parcelHelpers.interopDefault(_flipJs);
var _hideJs = require("./hide.js");
var _hideJsDefault = parcelHelpers.interopDefault(_hideJs);
var _offsetJs = require("./offset.js");
var _offsetJsDefault = parcelHelpers.interopDefault(_offsetJs);
var _popperOffsetsJs = require("./popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _preventOverflowJs = require("./preventOverflow.js");
var _preventOverflowJsDefault = parcelHelpers.interopDefault(_preventOverflowJs);

},{"./applyStyles.js":"k3FfN","./arrow.js":"5tq5K","./computeStyles.js":"cU0Y8","./eventListeners.js":"b3l2h","./flip.js":"8TrBc","./hide.js":"1DgVf","./offset.js":"fv6qu","./popperOffsets.js":"iQIBA","./preventOverflow.js":"hksGy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k3FfN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getNodeNameJs = require("../dom-utils/getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("../dom-utils/instanceOf.js"); // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow
function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name) {
        var style = state.styles[name] || {};
        var attributes = state.attributes[name] || {};
        var element = state.elements[name]; // arrow is optional + virtual elements
        if (!(0, _instanceOfJs.isHTMLElement)(element) || !(0, _getNodeNameJsDefault.default)(element)) return;
         // Flow doesn't support to extend this property, but it's the most
        // effective way to apply styles to an HTMLElement
        // $FlowFixMe[cannot-write]
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(name) {
            var value = attributes[name];
            if (value === false) element.removeAttribute(name);
            else element.setAttribute(name, value === true ? '' : value);
        });
    });
}
function effect(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
        popper: {
            position: state.options.strategy,
            left: '0',
            top: '0',
            margin: '0'
        },
        arrow: {
            position: 'absolute'
        },
        reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);
    return function() {
        Object.keys(state.elements).forEach(function(name) {
            var element = state.elements[name];
            var attributes = state.attributes[name] || {};
            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them
            var style = styleProperties.reduce(function(style, property) {
                style[property] = '';
                return style;
            }, {}); // arrow is optional + virtual elements
            if (!(0, _instanceOfJs.isHTMLElement)(element) || !(0, _getNodeNameJsDefault.default)(element)) return;
            Object.assign(element.style, style);
            Object.keys(attributes).forEach(function(attribute) {
                element.removeAttribute(attribute);
            });
        });
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'applyStyles',
    enabled: true,
    phase: 'write',
    fn: applyStyles,
    effect: effect,
    requires: [
        'computeStyles'
    ]
};

},{"../dom-utils/getNodeName.js":"4Hnqb","../dom-utils/instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4Hnqb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getNodeName);
function getNodeName(element) {
    return element ? (element.nodeName || '').toLowerCase() : null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ipye8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isElement", ()=>isElement);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement);
parcelHelpers.export(exports, "isShadowRoot", ()=>isShadowRoot);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function isElement(node) {
    var OwnElement = (0, _getWindowJsDefault.default)(node).Element;
    return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
    var OwnElement = (0, _getWindowJsDefault.default)(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
    // IE 11 has no ShadowRoot
    if (typeof ShadowRoot === 'undefined') return false;
    var OwnElement = (0, _getWindowJsDefault.default)(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fYC42":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindow);
function getWindow(node) {
    if (node == null) return window;
    if (node.toString() !== '[object Window]') {
        var ownerDocument = node.ownerDocument;
        return ownerDocument ? ownerDocument.defaultView || window : window;
    }
    return node;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5tq5K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _containsJs = require("../dom-utils/contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _withinJs = require("../utils/within.js");
var _mergePaddingObjectJs = require("../utils/mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("../utils/expandToHashMap.js");
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
var _enumsJs = require("../enums.js"); // eslint-disable-next-line import/no-unused-modules
var toPaddingObject = function toPaddingObject(padding, state) {
    padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
        placement: state.placement
    })) : padding;
    return (0, _mergePaddingObjectJsDefault.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMapJsDefault.default)(padding, (0, _enumsJs.basePlacements)));
};
function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets = state.modifiersData.popperOffsets;
    var basePlacement = (0, _getBasePlacementJsDefault.default)(state.placement);
    var axis = (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement);
    var isVertical = [
        (0, _enumsJs.left),
        (0, _enumsJs.right)
    ].indexOf(basePlacement) >= 0;
    var len = isVertical ? 'height' : 'width';
    if (!arrowElement || !popperOffsets) return;
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = (0, _getLayoutRectJsDefault.default)(arrowElement);
    var minProp = axis === 'y' ? (0, _enumsJs.top) : (0, _enumsJs.left);
    var maxProp = axis === 'y' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
    var startDiff = popperOffsets[axis] - state.rects.reference[axis];
    var arrowOffsetParent = (0, _getOffsetParentJsDefault.default)(arrowElement);
    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
    // outside of the popper bounds
    var min = paddingObject[minProp];
    var max = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset = (0, _withinJs.within)(min, center, max); // Prevents breaking syntax highlighting...
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}
function effect(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;
    if (arrowElement == null) return;
     // CSS selector
    if (typeof arrowElement === 'string') {
        arrowElement = state.elements.popper.querySelector(arrowElement);
        if (!arrowElement) return;
    }
    if (!(0, _containsJsDefault.default)(state.elements.popper, arrowElement)) return;
    state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'arrow',
    enabled: true,
    phase: 'main',
    fn: arrow,
    effect: effect,
    requires: [
        'popperOffsets'
    ],
    requiresIfExists: [
        'preventOverflow'
    ]
};

},{"../utils/getBasePlacement.js":"eyEpU","../dom-utils/getLayoutRect.js":"76Hja","../dom-utils/contains.js":"dndqI","../dom-utils/getOffsetParent.js":"fac6D","../utils/getMainAxisFromPlacement.js":"lqRR4","../utils/within.js":"82Rs6","../utils/mergePaddingObject.js":"4nxAg","../utils/expandToHashMap.js":"57Ue6","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eyEpU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getBasePlacement);
var _enumsJs = require("../enums.js");
function getBasePlacement(placement) {
    return placement.split('-')[0];
}

},{"../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"76Hja":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getLayoutRect);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js"); // Returns the layout rect of an element relative to its offsetParent. Layout
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
function getLayoutRect(element) {
    var clientRect = (0, _getBoundingClientRectJsDefault.default)(element); // Use the clientRect sizes if it's not been transformed.
    // Fixes https://github.com/popperjs/popper-core/issues/1223
    var width = element.offsetWidth;
    var height = element.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;
    if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;
    return {
        x: element.offsetLeft,
        y: element.offsetTop,
        width: width,
        height: height
    };
}

},{"./getBoundingClientRect.js":"8WtHW","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8WtHW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getBoundingClientRect);
var _instanceOfJs = require("./instanceOf.js");
var _mathJs = require("../utils/math.js");
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _isLayoutViewportJs = require("./isLayoutViewport.js");
var _isLayoutViewportJsDefault = parcelHelpers.interopDefault(_isLayoutViewportJs);
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
    if (includeScale === void 0) includeScale = false;
    if (isFixedStrategy === void 0) isFixedStrategy = false;
    var clientRect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    if (includeScale && (0, _instanceOfJs.isHTMLElement)(element)) {
        scaleX = element.offsetWidth > 0 ? (0, _mathJs.round)(clientRect.width) / element.offsetWidth || 1 : 1;
        scaleY = element.offsetHeight > 0 ? (0, _mathJs.round)(clientRect.height) / element.offsetHeight || 1 : 1;
    }
    var _ref = (0, _instanceOfJs.isElement)(element) ? (0, _getWindowJsDefault.default)(element) : window, visualViewport = _ref.visualViewport;
    var addVisualOffsets = !(0, _isLayoutViewportJsDefault.default)() && isFixedStrategy;
    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
    var width = clientRect.width / scaleX;
    var height = clientRect.height / scaleY;
    return {
        width: width,
        height: height,
        top: y,
        right: x + width,
        bottom: y + height,
        left: x,
        x: x,
        y: y
    };
}

},{"./instanceOf.js":"ipye8","../utils/math.js":"aHRaj","./getWindow.js":"fYC42","./isLayoutViewport.js":"lbQUA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aHRaj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "round", ()=>round);
var max = Math.max;
var min = Math.min;
var round = Math.round;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lbQUA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isLayoutViewport);
var _userAgentJs = require("../utils/userAgent.js");
var _userAgentJsDefault = parcelHelpers.interopDefault(_userAgentJs);
function isLayoutViewport() {
    return !/^((?!chrome|android).)*safari/i.test((0, _userAgentJsDefault.default)());
}

},{"../utils/userAgent.js":"cKJ5P","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cKJ5P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getUAString);
function getUAString() {
    var uaData = navigator.userAgentData;
    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) return uaData.brands.map(function(item) {
        return item.brand + "/" + item.version;
    }).join(' ');
    return navigator.userAgent;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dndqI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>contains);
var _instanceOfJs = require("./instanceOf.js");
function contains(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method
    if (parent.contains(child)) return true;
    else if (rootNode && (0, _instanceOfJs.isShadowRoot)(rootNode)) {
        var next = child;
        do {
            if (next && parent.isSameNode(next)) return true;
             // $FlowFixMe[prop-missing]: need a better way to handle this...
            next = next.parentNode || next.host;
        }while (next);
    } // Give up, the result is false
    return false;
}

},{"./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fac6D":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOffsetParent);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _isTableElementJs = require("./isTableElement.js");
var _isTableElementJsDefault = parcelHelpers.interopDefault(_isTableElementJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _userAgentJs = require("../utils/userAgent.js");
var _userAgentJsDefault = parcelHelpers.interopDefault(_userAgentJs);
function getTrueOffsetParent(element) {
    if (!(0, _instanceOfJs.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
    (0, _getComputedStyleJsDefault.default)(element).position === 'fixed') return null;
    return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block
function getContainingBlock(element) {
    var isFirefox = /firefox/i.test((0, _userAgentJsDefault.default)());
    var isIE = /Trident/i.test((0, _userAgentJsDefault.default)());
    if (isIE && (0, _instanceOfJs.isHTMLElement)(element)) {
        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
        var elementCss = (0, _getComputedStyleJsDefault.default)(element);
        if (elementCss.position === 'fixed') return null;
    }
    var currentNode = (0, _getParentNodeJsDefault.default)(element);
    if ((0, _instanceOfJs.isShadowRoot)(currentNode)) currentNode = currentNode.host;
    while((0, _instanceOfJs.isHTMLElement)(currentNode) && [
        'html',
        'body'
    ].indexOf((0, _getNodeNameJsDefault.default)(currentNode)) < 0){
        var css = (0, _getComputedStyleJsDefault.default)(currentNode); // This is non-exhaustive but covers the most common CSS properties that
        // create a containing block.
        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
        if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || [
            'transform',
            'perspective'
        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') return currentNode;
        else currentNode = currentNode.parentNode;
    }
    return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
function getOffsetParent(element) {
    var window = (0, _getWindowJsDefault.default)(element);
    var offsetParent = getTrueOffsetParent(element);
    while(offsetParent && (0, _isTableElementJsDefault.default)(offsetParent) && (0, _getComputedStyleJsDefault.default)(offsetParent).position === 'static')offsetParent = getTrueOffsetParent(offsetParent);
    if (offsetParent && ((0, _getNodeNameJsDefault.default)(offsetParent) === 'html' || (0, _getNodeNameJsDefault.default)(offsetParent) === 'body' && (0, _getComputedStyleJsDefault.default)(offsetParent).position === 'static')) return window;
    return offsetParent || getContainingBlock(element) || window;
}

},{"./getWindow.js":"fYC42","./getNodeName.js":"4Hnqb","./getComputedStyle.js":"jbfT5","./instanceOf.js":"ipye8","./isTableElement.js":"7W8QO","./getParentNode.js":"aEx5x","../utils/userAgent.js":"cKJ5P","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jbfT5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getComputedStyle);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getComputedStyle(element) {
    return (0, _getWindowJsDefault.default)(element).getComputedStyle(element);
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7W8QO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isTableElement);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
function isTableElement(element) {
    return [
        'table',
        'td',
        'th'
    ].indexOf((0, _getNodeNameJsDefault.default)(element)) >= 0;
}

},{"./getNodeName.js":"4Hnqb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aEx5x":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getParentNode);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _instanceOfJs = require("./instanceOf.js");
function getParentNode(element) {
    if ((0, _getNodeNameJsDefault.default)(element) === 'html') return element;
    return(// $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ((0, _instanceOfJs.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0, _getDocumentElementJsDefault.default)(element) // fallback
    );
}

},{"./getNodeName.js":"4Hnqb","./getDocumentElement.js":"av3Bt","./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"av3Bt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getDocumentElement);
var _instanceOfJs = require("./instanceOf.js");
function getDocumentElement(element) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return (((0, _instanceOfJs.isElement)(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

},{"./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lqRR4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getMainAxisFromPlacement);
function getMainAxisFromPlacement(placement) {
    return [
        'top',
        'bottom'
    ].indexOf(placement) >= 0 ? 'x' : 'y';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"82Rs6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "within", ()=>within);
parcelHelpers.export(exports, "withinMaxClamp", ()=>withinMaxClamp);
var _mathJs = require("./math.js");
function within(min, value, max) {
    return (0, _mathJs.max)(min, (0, _mathJs.min)(value, max));
}
function withinMaxClamp(min, value, max) {
    var v = within(min, value, max);
    return v > max ? max : v;
}

},{"./math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4nxAg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergePaddingObject);
var _getFreshSideObjectJs = require("./getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
function mergePaddingObject(paddingObject) {
    return Object.assign({}, (0, _getFreshSideObjectJsDefault.default)(), paddingObject);
}

},{"./getFreshSideObject.js":"il3RZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"il3RZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getFreshSideObject);
function getFreshSideObject() {
    return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"57Ue6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>expandToHashMap);
function expandToHashMap(value, keys) {
    return keys.reduce(function(hashMap, key) {
        hashMap[key] = value;
        return hashMap;
    }, {});
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cU0Y8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapToStyles", ()=>mapToStyles);
var _enumsJs = require("../enums.js");
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getWindowJs = require("../dom-utils/getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("../dom-utils/getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _mathJs = require("../utils/math.js"); // eslint-disable-next-line import/no-unused-modules
var unsetSides = {
    top: 'auto',
    right: 'auto',
    bottom: 'auto',
    left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.
function roundOffsetsByDPR(_ref, win) {
    var x = _ref.x, y = _ref.y;
    var dpr = win.devicePixelRatio || 1;
    return {
        x: (0, _mathJs.round)(x * dpr) / dpr || 0,
        y: (0, _mathJs.round)(y * dpr) / dpr || 0
    };
}
function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
        x: x,
        y: y
    }) : {
        x: x,
        y: y
    };
    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty('x');
    var hasY = offsets.hasOwnProperty('y');
    var sideX = (0, _enumsJs.left);
    var sideY = (0, _enumsJs.top);
    var win = window;
    if (adaptive) {
        var offsetParent = (0, _getOffsetParentJsDefault.default)(popper);
        var heightProp = 'clientHeight';
        var widthProp = 'clientWidth';
        if (offsetParent === (0, _getWindowJsDefault.default)(popper)) {
            offsetParent = (0, _getDocumentElementJsDefault.default)(popper);
            if ((0, _getComputedStyleJsDefault.default)(offsetParent).position !== 'static' && position === 'absolute') {
                heightProp = 'scrollHeight';
                widthProp = 'scrollWidth';
            }
        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it
        offsetParent;
        if (placement === (0, _enumsJs.top) || (placement === (0, _enumsJs.left) || placement === (0, _enumsJs.right)) && variation === (0, _enumsJs.end)) {
            sideY = (0, _enumsJs.bottom);
            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
            y -= offsetY - popperRect.height;
            y *= gpuAcceleration ? 1 : -1;
        }
        if (placement === (0, _enumsJs.left) || (placement === (0, _enumsJs.top) || placement === (0, _enumsJs.bottom)) && variation === (0, _enumsJs.end)) {
            sideX = (0, _enumsJs.right);
            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
            x -= offsetX - popperRect.width;
            x *= gpuAcceleration ? 1 : -1;
        }
    }
    var commonStyles = Object.assign({
        position: position
    }, adaptive && unsetSides);
    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
        x: x,
        y: y
    }, (0, _getWindowJsDefault.default)(popper)) : {
        x: x,
        y: y
    };
    x = _ref4.x;
    y = _ref4.y;
    if (gpuAcceleration) {
        var _Object$assign;
        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }
    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}
function computeStyles(_ref5) {
    var state = _ref5.state, options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
        placement: (0, _getBasePlacementJsDefault.default)(state.placement),
        variation: (0, _getVariationJsDefault.default)(state.placement),
        popper: state.elements.popper,
        popperRect: state.rects.popper,
        gpuAcceleration: gpuAcceleration,
        isFixed: state.options.strategy === 'fixed'
    };
    if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive: adaptive,
        roundOffsets: roundOffsets
    })));
    if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: 'absolute',
        adaptive: false,
        roundOffsets: roundOffsets
    })));
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
        'data-popper-placement': state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'computeStyles',
    enabled: true,
    phase: 'beforeWrite',
    fn: computeStyles,
    data: {}
};

},{"../enums.js":"jVhmu","../dom-utils/getOffsetParent.js":"fac6D","../dom-utils/getWindow.js":"fYC42","../dom-utils/getDocumentElement.js":"av3Bt","../dom-utils/getComputedStyle.js":"jbfT5","../utils/getBasePlacement.js":"eyEpU","../utils/getVariation.js":"4mx8J","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4mx8J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getVariation);
function getVariation(placement) {
    return placement.split('-')[1];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b3l2h":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("../dom-utils/getWindow.js"); // eslint-disable-next-line import/no-unused-modules
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var passive = {
    passive: true
};
function effect(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window = (0, _getWindowJsDefault.default)(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener('scroll', instance.update, passive);
    });
    if (resize) window.addEventListener('resize', instance.update, passive);
    return function() {
        if (scroll) scrollParents.forEach(function(scrollParent) {
            scrollParent.removeEventListener('scroll', instance.update, passive);
        });
        if (resize) window.removeEventListener('resize', instance.update, passive);
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'eventListeners',
    enabled: true,
    phase: 'write',
    fn: function fn() {},
    effect: effect,
    data: {}
};

},{"../dom-utils/getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8TrBc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getOppositePlacementJs = require("../utils/getOppositePlacement.js");
var _getOppositePlacementJsDefault = parcelHelpers.interopDefault(_getOppositePlacementJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getOppositeVariationPlacementJs = require("../utils/getOppositeVariationPlacement.js");
var _getOppositeVariationPlacementJsDefault = parcelHelpers.interopDefault(_getOppositeVariationPlacementJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _computeAutoPlacementJs = require("../utils/computeAutoPlacement.js");
var _computeAutoPlacementJsDefault = parcelHelpers.interopDefault(_computeAutoPlacementJs);
var _enumsJs = require("../enums.js");
var _getVariationJs = require("../utils/getVariation.js"); // eslint-disable-next-line import/no-unused-modules
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
function getExpandedFallbackPlacements(placement) {
    if ((0, _getBasePlacementJsDefault.default)(placement) === (0, _enumsJs.auto)) return [];
    var oppositePlacement = (0, _getOppositePlacementJsDefault.default)(placement);
    return [
        (0, _getOppositeVariationPlacementJsDefault.default)(placement),
        oppositePlacement,
        (0, _getOppositeVariationPlacementJsDefault.default)(oppositePlacement)
    ];
}
function flip(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) return;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = (0, _getBasePlacementJsDefault.default)(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [
        (0, _getOppositePlacementJsDefault.default)(preferredPlacement)
    ] : getExpandedFallbackPlacements(preferredPlacement));
    var placements = [
        preferredPlacement
    ].concat(fallbackPlacements).reduce(function(acc, placement) {
        return acc.concat((0, _getBasePlacementJsDefault.default)(placement) === (0, _enumsJs.auto) ? (0, _computeAutoPlacementJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding,
            flipVariations: flipVariations,
            allowedAutoPlacements: allowedAutoPlacements
        }) : placement);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements[0];
    for(var i = 0; i < placements.length; i++){
        var placement = placements[i];
        var _basePlacement = (0, _getBasePlacementJsDefault.default)(placement);
        var isStartVariation = (0, _getVariationJsDefault.default)(placement) === (0, _enumsJs.start);
        var isVertical = [
            (0, _enumsJs.top),
            (0, _enumsJs.bottom)
        ].indexOf(_basePlacement) >= 0;
        var len = isVertical ? 'width' : 'height';
        var overflow = (0, _detectOverflowJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            altBoundary: altBoundary,
            padding: padding
        });
        var mainVariationSide = isVertical ? isStartVariation ? (0, _enumsJs.right) : (0, _enumsJs.left) : isStartVariation ? (0, _enumsJs.bottom) : (0, _enumsJs.top);
        if (referenceRect[len] > popperRect[len]) mainVariationSide = (0, _getOppositePlacementJsDefault.default)(mainVariationSide);
        var altVariationSide = (0, _getOppositePlacementJsDefault.default)(mainVariationSide);
        var checks = [];
        if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);
        if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
        if (checks.every(function(check) {
            return check;
        })) {
            firstFittingPlacement = placement;
            makeFallbackChecks = false;
            break;
        }
        checksMap.set(placement, checks);
    }
    if (makeFallbackChecks) {
        // `2` may be desired in some cases – research later
        var numberOfChecks = flipVariations ? 3 : 1;
        var _loop = function _loop(_i) {
            var fittingPlacement = placements.find(function(placement) {
                var checks = checksMap.get(placement);
                if (checks) return checks.slice(0, _i).every(function(check) {
                    return check;
                });
            });
            if (fittingPlacement) {
                firstFittingPlacement = fittingPlacement;
                return "break";
            }
        };
        for(var _i = numberOfChecks; _i > 0; _i--){
            var _ret = _loop(_i);
            if (_ret === "break") break;
        }
    }
    if (state.placement !== firstFittingPlacement) {
        state.modifiersData[name]._skip = true;
        state.placement = firstFittingPlacement;
        state.reset = true;
    }
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'flip',
    enabled: true,
    phase: 'main',
    fn: flip,
    requiresIfExists: [
        'offset'
    ],
    data: {
        _skip: false
    }
};

},{"../utils/getOppositePlacement.js":"98Iju","../utils/getBasePlacement.js":"eyEpU","../utils/getOppositeVariationPlacement.js":"l3jQn","../utils/detectOverflow.js":"2YWVs","../utils/computeAutoPlacement.js":"2ataH","../enums.js":"jVhmu","../utils/getVariation.js":"4mx8J","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"98Iju":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOppositePlacement);
var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
};
function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l3jQn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOppositeVariationPlacement);
var hash = {
    start: 'end',
    end: 'start'
};
function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
        return hash[matched];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2YWVs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>detectOverflow);
var _getClippingRectJs = require("../dom-utils/getClippingRect.js");
var _getClippingRectJsDefault = parcelHelpers.interopDefault(_getClippingRectJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getBoundingClientRectJs = require("../dom-utils/getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _computeOffsetsJs = require("./computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
var _rectToClientRectJs = require("./rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _enumsJs = require("../enums.js");
var _instanceOfJs = require("../dom-utils/instanceOf.js");
var _mergePaddingObjectJs = require("./mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("./expandToHashMap.js"); // eslint-disable-next-line import/no-unused-modules
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
function detectOverflow(state, options) {
    if (options === void 0) options = {};
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? (0, _enumsJs.clippingParents) : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? (0, _enumsJs.viewport) : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? (0, _enumsJs.popper) : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = (0, _mergePaddingObjectJsDefault.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMapJsDefault.default)(padding, (0, _enumsJs.basePlacements)));
    var altContext = elementContext === (0, _enumsJs.popper) ? (0, _enumsJs.reference) : (0, _enumsJs.popper);
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = (0, _getClippingRectJsDefault.default)((0, _instanceOfJs.isElement)(element) ? element : element.contextElement || (0, _getDocumentElementJsDefault.default)(state.elements.popper), boundary, rootBoundary, strategy);
    var referenceClientRect = (0, _getBoundingClientRectJsDefault.default)(state.elements.reference);
    var popperOffsets = (0, _computeOffsetsJsDefault.default)({
        reference: referenceClientRect,
        element: popperRect,
        strategy: 'absolute',
        placement: placement
    });
    var popperClientRect = (0, _rectToClientRectJsDefault.default)(Object.assign({}, popperRect, popperOffsets));
    var elementClientRect = elementContext === (0, _enumsJs.popper) ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
    // 0 or negative = within the clipping rect
    var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element
    if (elementContext === (0, _enumsJs.popper) && offsetData) {
        var offset = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key) {
            var multiply = [
                (0, _enumsJs.right),
                (0, _enumsJs.bottom)
            ].indexOf(key) >= 0 ? 1 : -1;
            var axis = [
                (0, _enumsJs.top),
                (0, _enumsJs.bottom)
            ].indexOf(key) >= 0 ? 'y' : 'x';
            overflowOffsets[key] += offset[axis] * multiply;
        });
    }
    return overflowOffsets;
}

},{"../dom-utils/getClippingRect.js":"heMj5","../dom-utils/getDocumentElement.js":"av3Bt","../dom-utils/getBoundingClientRect.js":"8WtHW","./computeOffsets.js":"hCFQM","./rectToClientRect.js":"h62Ik","../enums.js":"jVhmu","../dom-utils/instanceOf.js":"ipye8","./mergePaddingObject.js":"4nxAg","./expandToHashMap.js":"57Ue6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"heMj5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getClippingRect);
var _enumsJs = require("../enums.js");
var _getViewportRectJs = require("./getViewportRect.js");
var _getViewportRectJsDefault = parcelHelpers.interopDefault(_getViewportRectJs);
var _getDocumentRectJs = require("./getDocumentRect.js");
var _getDocumentRectJsDefault = parcelHelpers.interopDefault(_getDocumentRectJs);
var _listScrollParentsJs = require("./listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _containsJs = require("./contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _rectToClientRectJs = require("../utils/rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _mathJs = require("../utils/math.js");
function getInnerBoundingClientRect(element, strategy) {
    var rect = (0, _getBoundingClientRectJsDefault.default)(element, false, strategy === 'fixed');
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
    return clippingParent === (0, _enumsJs.viewport) ? (0, _rectToClientRectJsDefault.default)((0, _getViewportRectJsDefault.default)(element, strategy)) : (0, _instanceOfJs.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : (0, _rectToClientRectJsDefault.default)((0, _getDocumentRectJsDefault.default)((0, _getDocumentElementJsDefault.default)(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`
function getClippingParents(element) {
    var clippingParents = (0, _listScrollParentsJsDefault.default)((0, _getParentNodeJsDefault.default)(element));
    var canEscapeClipping = [
        'absolute',
        'fixed'
    ].indexOf((0, _getComputedStyleJsDefault.default)(element).position) >= 0;
    var clipperElement = canEscapeClipping && (0, _instanceOfJs.isHTMLElement)(element) ? (0, _getOffsetParentJsDefault.default)(element) : element;
    if (!(0, _instanceOfJs.isElement)(clipperElement)) return [];
     // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414
    return clippingParents.filter(function(clippingParent) {
        return (0, _instanceOfJs.isElement)(clippingParent) && (0, _containsJsDefault.default)(clippingParent, clipperElement) && (0, _getNodeNameJsDefault.default)(clippingParent) !== 'body';
    });
} // Gets the maximum area that the element is visible in due to any number of
function getClippingRect(element, boundary, rootBoundary, strategy) {
    var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
    var clippingParents = [].concat(mainClippingParents, [
        rootBoundary
    ]);
    var firstClippingParent = clippingParents[0];
    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {
        var rect = getClientRectFromMixedType(element, clippingParent, strategy);
        accRect.top = (0, _mathJs.max)(rect.top, accRect.top);
        accRect.right = (0, _mathJs.min)(rect.right, accRect.right);
        accRect.bottom = (0, _mathJs.min)(rect.bottom, accRect.bottom);
        accRect.left = (0, _mathJs.max)(rect.left, accRect.left);
        return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent, strategy));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
}

},{"../enums.js":"jVhmu","./getViewportRect.js":"fBHZw","./getDocumentRect.js":"1pyhi","./listScrollParents.js":"b5rfb","./getOffsetParent.js":"fac6D","./getDocumentElement.js":"av3Bt","./getComputedStyle.js":"jbfT5","./instanceOf.js":"ipye8","./getBoundingClientRect.js":"8WtHW","./getParentNode.js":"aEx5x","./contains.js":"dndqI","./getNodeName.js":"4Hnqb","../utils/rectToClientRect.js":"h62Ik","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fBHZw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getViewportRect);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _isLayoutViewportJs = require("./isLayoutViewport.js");
var _isLayoutViewportJsDefault = parcelHelpers.interopDefault(_isLayoutViewportJs);
function getViewportRect(element, strategy) {
    var win = (0, _getWindowJsDefault.default)(element);
    var html = (0, _getDocumentElementJsDefault.default)(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0;
    if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height;
        var layoutViewport = (0, _isLayoutViewportJsDefault.default)();
        if (layoutViewport || !layoutViewport && strategy === 'fixed') {
            x = visualViewport.offsetLeft;
            y = visualViewport.offsetTop;
        }
    }
    return {
        width: width,
        height: height,
        x: x + (0, _getWindowScrollBarXJsDefault.default)(element),
        y: y
    };
}

},{"./getWindow.js":"fYC42","./getDocumentElement.js":"av3Bt","./getWindowScrollBarX.js":"dZ6cX","./isLayoutViewport.js":"lbQUA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dZ6cX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindowScrollBarX);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
function getWindowScrollBarX(element) {
    // If <html> has a CSS width greater than the viewport, then this will be
    // incorrect for RTL.
    // Popper 1 is broken in this case and never had a bug report so let's assume
    // it's not an issue. I don't think anyone ever specifies width on <html>
    // anyway.
    // Browsers where the left scrollbar doesn't cause an issue report `0` for
    // this (e.g. Edge 2019, IE11, Safari)
    return (0, _getBoundingClientRectJsDefault.default)((0, _getDocumentElementJsDefault.default)(element)).left + (0, _getWindowScrollJsDefault.default)(element).scrollLeft;
}

},{"./getBoundingClientRect.js":"8WtHW","./getDocumentElement.js":"av3Bt","./getWindowScroll.js":"28xxo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"28xxo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindowScroll);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getWindowScroll(node) {
    var win = (0, _getWindowJsDefault.default)(node);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
        scrollLeft: scrollLeft,
        scrollTop: scrollTop
    };
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1pyhi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getDocumentRect);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _mathJs = require("../utils/math.js"); // Gets the entire size of the scrollable document area, even extending outside
function getDocumentRect(element) {
    var _element$ownerDocumen;
    var html = (0, _getDocumentElementJsDefault.default)(element);
    var winScroll = (0, _getWindowScrollJsDefault.default)(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = (0, _mathJs.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = (0, _mathJs.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + (0, _getWindowScrollBarXJsDefault.default)(element);
    var y = -winScroll.scrollTop;
    if ((0, _getComputedStyleJsDefault.default)(body || html).direction === 'rtl') x += (0, _mathJs.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
    return {
        width: width,
        height: height,
        x: x,
        y: y
    };
}

},{"./getDocumentElement.js":"av3Bt","./getComputedStyle.js":"jbfT5","./getWindowScrollBarX.js":"dZ6cX","./getWindowScroll.js":"28xxo","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b5rfb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>listScrollParents);
var _getScrollParentJs = require("./getScrollParent.js");
var _getScrollParentJsDefault = parcelHelpers.interopDefault(_getScrollParentJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
function listScrollParents(element, list) {
    var _element$ownerDocumen;
    if (list === void 0) list = [];
    var scrollParent = (0, _getScrollParentJsDefault.default)(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = (0, _getWindowJsDefault.default)(scrollParent);
    var target = isBody ? [
        win
    ].concat(win.visualViewport || [], (0, _isScrollParentJsDefault.default)(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : updatedList.concat(listScrollParents((0, _getParentNodeJsDefault.default)(target)));
}

},{"./getScrollParent.js":"jG2vI","./getParentNode.js":"aEx5x","./getWindow.js":"fYC42","./isScrollParent.js":"kF6fv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jG2vI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getScrollParent);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
function getScrollParent(node) {
    if ([
        'html',
        'body',
        '#document'
    ].indexOf((0, _getNodeNameJsDefault.default)(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
    if ((0, _instanceOfJs.isHTMLElement)(node) && (0, _isScrollParentJsDefault.default)(node)) return node;
    return getScrollParent((0, _getParentNodeJsDefault.default)(node));
}

},{"./getParentNode.js":"aEx5x","./isScrollParent.js":"kF6fv","./getNodeName.js":"4Hnqb","./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kF6fv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isScrollParent);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
function isScrollParent(element) {
    // Firefox wants us to check `-x` and `-y` variations as well
    var _getComputedStyle = (0, _getComputedStyleJsDefault.default)(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

},{"./getComputedStyle.js":"jbfT5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h62Ik":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>rectToClientRect);
function rectToClientRect(rect) {
    return Object.assign({}, rect, {
        left: rect.x,
        top: rect.y,
        right: rect.x + rect.width,
        bottom: rect.y + rect.height
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hCFQM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>computeOffsets);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getMainAxisFromPlacementJs = require("./getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _enumsJs = require("../enums.js");
function computeOffsets(_ref) {
    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? (0, _getBasePlacementJsDefault.default)(placement) : null;
    var variation = placement ? (0, _getVariationJsDefault.default)(placement) : null;
    var commonX = reference.x + reference.width / 2 - element.width / 2;
    var commonY = reference.y + reference.height / 2 - element.height / 2;
    var offsets;
    switch(basePlacement){
        case 0, _enumsJs.top:
            offsets = {
                x: commonX,
                y: reference.y - element.height
            };
            break;
        case 0, _enumsJs.bottom:
            offsets = {
                x: commonX,
                y: reference.y + reference.height
            };
            break;
        case 0, _enumsJs.right:
            offsets = {
                x: reference.x + reference.width,
                y: commonY
            };
            break;
        case 0, _enumsJs.left:
            offsets = {
                x: reference.x - element.width,
                y: commonY
            };
            break;
        default:
            offsets = {
                x: reference.x,
                y: reference.y
            };
    }
    var mainAxis = basePlacement ? (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement) : null;
    if (mainAxis != null) {
        var len = mainAxis === 'y' ? 'height' : 'width';
        switch(variation){
            case 0, _enumsJs.start:
                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
                break;
            case 0, _enumsJs.end:
                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
                break;
            default:
        }
    }
    return offsets;
}

},{"./getBasePlacement.js":"eyEpU","./getVariation.js":"4mx8J","./getMainAxisFromPlacement.js":"lqRR4","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2ataH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>computeAutoPlacement);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("./detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
function computeAutoPlacement(state, options) {
    if (options === void 0) options = {};
    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? (0, _enumsJs.placements) : _options$allowedAutoP;
    var variation = (0, _getVariationJsDefault.default)(placement);
    var placements = variation ? flipVariations ? (0, _enumsJs.variationPlacements) : (0, _enumsJs.variationPlacements).filter(function(placement) {
        return (0, _getVariationJsDefault.default)(placement) === variation;
    }) : (0, _enumsJs.basePlacements);
    var allowedPlacements = placements.filter(function(placement) {
        return allowedAutoPlacements.indexOf(placement) >= 0;
    });
    if (allowedPlacements.length === 0) allowedPlacements = placements;
     // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...
    var overflows = allowedPlacements.reduce(function(acc, placement) {
        acc[placement] = (0, _detectOverflowJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding
        })[(0, _getBasePlacementJsDefault.default)(placement)];
        return acc;
    }, {});
    return Object.keys(overflows).sort(function(a, b) {
        return overflows[a] - overflows[b];
    });
}

},{"./getVariation.js":"4mx8J","../enums.js":"jVhmu","./detectOverflow.js":"2YWVs","./getBasePlacement.js":"eyEpU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1DgVf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) preventedOffsets = {
        x: 0,
        y: 0
    };
    return {
        top: overflow.top - rect.height - preventedOffsets.y,
        right: overflow.right - rect.width + preventedOffsets.x,
        bottom: overflow.bottom - rect.height + preventedOffsets.y,
        left: overflow.left - rect.width - preventedOffsets.x
    };
}
function isAnySideFullyClipped(overflow) {
    return [
        (0, _enumsJs.top),
        (0, _enumsJs.right),
        (0, _enumsJs.bottom),
        (0, _enumsJs.left)
    ].some(function(side) {
        return overflow[side] >= 0;
    });
}
function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = (0, _detectOverflowJsDefault.default)(state, {
        elementContext: 'reference'
    });
    var popperAltOverflow = (0, _detectOverflowJsDefault.default)(state, {
        altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
        referenceClippingOffsets: referenceClippingOffsets,
        popperEscapeOffsets: popperEscapeOffsets,
        isReferenceHidden: isReferenceHidden,
        hasPopperEscaped: hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
        'data-popper-reference-hidden': isReferenceHidden,
        'data-popper-escaped': hasPopperEscaped
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'hide',
    enabled: true,
    phase: 'main',
    requiresIfExists: [
        'preventOverflow'
    ],
    fn: hide
};

},{"../enums.js":"jVhmu","../utils/detectOverflow.js":"2YWVs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fv6qu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "distanceAndSkiddingToXY", ()=>distanceAndSkiddingToXY);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _enumsJs = require("../enums.js"); // eslint-disable-next-line import/no-unused-modules
function distanceAndSkiddingToXY(placement, rects, offset) {
    var basePlacement = (0, _getBasePlacementJsDefault.default)(placement);
    var invertDistance = [
        (0, _enumsJs.left),
        (0, _enumsJs.top)
    ].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
        placement: placement
    })) : offset, skidding = _ref[0], distance = _ref[1];
    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [
        (0, _enumsJs.left),
        (0, _enumsJs.right)
    ].indexOf(basePlacement) >= 0 ? {
        x: distance,
        y: skidding
    } : {
        x: skidding,
        y: distance
    };
}
function offset(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset = _options$offset === void 0 ? [
        0,
        0
    ] : _options$offset;
    var data = (0, _enumsJs.placements).reduce(function(acc, placement) {
        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
        return acc;
    }, {});
    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
        state.modifiersData.popperOffsets.x += x;
        state.modifiersData.popperOffsets.y += y;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'offset',
    enabled: true,
    phase: 'main',
    requires: [
        'popperOffsets'
    ],
    fn: offset
};

},{"../utils/getBasePlacement.js":"eyEpU","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iQIBA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _computeOffsetsJs = require("../utils/computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    // Offsets are the actual position the popper needs to have to be
    // properly positioned near its reference element
    // This is the most basic placement, and will be adjusted by
    // the modifiers in the next step
    state.modifiersData[name] = (0, _computeOffsetsJsDefault.default)({
        reference: state.rects.reference,
        element: state.rects.popper,
        strategy: 'absolute',
        placement: state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'popperOffsets',
    enabled: true,
    phase: 'read',
    fn: popperOffsets,
    data: {}
};

},{"../utils/computeOffsets.js":"hCFQM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hksGy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _getAltAxisJs = require("../utils/getAltAxis.js");
var _getAltAxisJsDefault = parcelHelpers.interopDefault(_getAltAxisJs);
var _withinJs = require("../utils/within.js");
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getFreshSideObjectJs = require("../utils/getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
var _mathJs = require("../utils/math.js");
function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = (0, _detectOverflowJsDefault.default)(state, {
        boundary: boundary,
        rootBoundary: rootBoundary,
        padding: padding,
        altBoundary: altBoundary
    });
    var basePlacement = (0, _getBasePlacementJsDefault.default)(state.placement);
    var variation = (0, _getVariationJsDefault.default)(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement);
    var altAxis = (0, _getAltAxisJsDefault.default)(mainAxis);
    var popperOffsets = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
        placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
        mainAxis: tetherOffsetValue,
        altAxis: tetherOffsetValue
    } : Object.assign({
        mainAxis: 0,
        altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data = {
        x: 0,
        y: 0
    };
    if (!popperOffsets) return;
    if (checkMainAxis) {
        var _offsetModifierState$;
        var mainSide = mainAxis === 'y' ? (0, _enumsJs.top) : (0, _enumsJs.left);
        var altSide = mainAxis === 'y' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
        var len = mainAxis === 'y' ? 'height' : 'width';
        var offset = popperOffsets[mainAxis];
        var min = offset + overflow[mainSide];
        var max = offset - overflow[altSide];
        var additive = tether ? -popperRect[len] / 2 : 0;
        var minLen = variation === (0, _enumsJs.start) ? referenceRect[len] : popperRect[len];
        var maxLen = variation === (0, _enumsJs.start) ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
        // outside the reference bounds
        var arrowElement = state.elements.arrow;
        var arrowRect = tether && arrowElement ? (0, _getLayoutRectJsDefault.default)(arrowElement) : {
            width: 0,
            height: 0
        };
        var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0, _getFreshSideObjectJsDefault.default)();
        var arrowPaddingMin = arrowPaddingObject[mainSide];
        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
        // to include its full size in the calculation. If the reference is small
        // and near the edge of a boundary, the popper can overflow even if the
        // reference is not overflowing as well (e.g. virtual elements with no
        // width or height)
        var arrowLen = (0, _withinJs.within)(0, referenceRect[len], arrowRect[len]);
        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
        var arrowOffsetParent = state.elements.arrow && (0, _getOffsetParentJsDefault.default)(state.elements.arrow);
        var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
        var tetherMax = offset + maxOffset - offsetModifierValue;
        var preventedOffset = (0, _withinJs.within)(tether ? (0, _mathJs.min)(min, tetherMin) : min, offset, tether ? (0, _mathJs.max)(max, tetherMax) : max);
        popperOffsets[mainAxis] = preventedOffset;
        data[mainAxis] = preventedOffset - offset;
    }
    if (checkAltAxis) {
        var _offsetModifierState$2;
        var _mainSide = mainAxis === 'x' ? (0, _enumsJs.top) : (0, _enumsJs.left);
        var _altSide = mainAxis === 'x' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
        var _offset = popperOffsets[altAxis];
        var _len = altAxis === 'y' ? 'height' : 'width';
        var _min = _offset + overflow[_mainSide];
        var _max = _offset - overflow[_altSide];
        var isOriginSide = [
            (0, _enumsJs.top),
            (0, _enumsJs.left)
        ].indexOf(basePlacement) !== -1;
        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
        var _preventedOffset = tether && isOriginSide ? (0, _withinJs.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0, _withinJs.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
        popperOffsets[altAxis] = _preventedOffset;
        data[altAxis] = _preventedOffset - _offset;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'preventOverflow',
    enabled: true,
    phase: 'main',
    fn: preventOverflow,
    requiresIfExists: [
        'offset'
    ]
};

},{"../enums.js":"jVhmu","../utils/getBasePlacement.js":"eyEpU","../utils/getMainAxisFromPlacement.js":"lqRR4","../utils/getAltAxis.js":"hB6bd","../utils/within.js":"82Rs6","../dom-utils/getLayoutRect.js":"76Hja","../dom-utils/getOffsetParent.js":"fac6D","../utils/detectOverflow.js":"2YWVs","../utils/getVariation.js":"4mx8J","../utils/getFreshSideObject.js":"il3RZ","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hB6bd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getAltAxis);
function getAltAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3NuA9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>popperGenerator);
parcelHelpers.export(exports, "createPopper", ()=>createPopper);
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _detectOverflowJsDefault.default));
var _getCompositeRectJs = require("./dom-utils/getCompositeRect.js");
var _getCompositeRectJsDefault = parcelHelpers.interopDefault(_getCompositeRectJs);
var _getLayoutRectJs = require("./dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _listScrollParentsJs = require("./dom-utils/listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _orderModifiersJs = require("./utils/orderModifiers.js");
var _orderModifiersJsDefault = parcelHelpers.interopDefault(_orderModifiersJs);
var _debounceJs = require("./utils/debounce.js");
var _debounceJsDefault = parcelHelpers.interopDefault(_debounceJs);
var _mergeByNameJs = require("./utils/mergeByName.js");
var _mergeByNameJsDefault = parcelHelpers.interopDefault(_mergeByNameJs);
var _detectOverflowJs = require("./utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _instanceOfJs = require("./dom-utils/instanceOf.js");
var DEFAULT_OPTIONS = {
    placement: 'bottom',
    modifiers: [],
    strategy: 'absolute'
};
function areValidElements() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    return !args.some(function(element) {
        return !(element && typeof element.getBoundingClientRect === 'function');
    });
}
function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) generatorOptions = {};
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper(reference, popper, options) {
        if (options === void 0) options = defaultOptions;
        var state = {
            placement: 'bottom',
            orderedModifiers: [],
            options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
            modifiersData: {},
            elements: {
                reference: reference,
                popper: popper
            },
            attributes: {},
            styles: {}
        };
        var effectCleanupFns = [];
        var isDestroyed = false;
        var instance = {
            state: state,
            setOptions: function setOptions(setOptionsAction) {
                var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
                cleanupModifierEffects();
                state.options = Object.assign({}, defaultOptions, state.options, options);
                state.scrollParents = {
                    reference: (0, _instanceOfJs.isElement)(reference) ? (0, _listScrollParentsJsDefault.default)(reference) : reference.contextElement ? (0, _listScrollParentsJsDefault.default)(reference.contextElement) : [],
                    popper: (0, _listScrollParentsJsDefault.default)(popper)
                }; // Orders the modifiers based on their dependencies and `phase`
                // properties
                var orderedModifiers = (0, _orderModifiersJsDefault.default)((0, _mergeByNameJsDefault.default)([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers
                state.orderedModifiers = orderedModifiers.filter(function(m) {
                    return m.enabled;
                });
                runModifierEffects();
                return instance.update();
            },
            // Sync update – it will always be executed, even if not necessary. This
            // is useful for low frequency updates where sync behavior simplifies the
            // logic.
            // For high frequency updates (e.g. `resize` and `scroll` events), always
            // prefer the async Popper#update method
            forceUpdate: function forceUpdate() {
                if (isDestroyed) return;
                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
                // anymore
                if (!areValidElements(reference, popper)) return;
                 // Store the reference and popper rects to be read by modifiers
                state.rects = {
                    reference: (0, _getCompositeRectJsDefault.default)(reference, (0, _getOffsetParentJsDefault.default)(popper), state.options.strategy === 'fixed'),
                    popper: (0, _getLayoutRectJsDefault.default)(popper)
                }; // Modifiers have the ability to reset the current update cycle. The
                // most common use case for this is the `flip` modifier changing the
                // placement, which then needs to re-run all the modifiers, because the
                // logic was previously ran for the previous placement and is therefore
                // stale/incorrect
                state.reset = false;
                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
                // is filled with the initial data specified by the modifier. This means
                // it doesn't persist and is fresh on each update.
                // To ensure persistent data, use `${name}#persistent`
                state.orderedModifiers.forEach(function(modifier) {
                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
                });
                for(var index = 0; index < state.orderedModifiers.length; index++){
                    if (state.reset === true) {
                        state.reset = false;
                        index = -1;
                        continue;
                    }
                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
                    if (typeof fn === 'function') state = fn({
                        state: state,
                        options: _options,
                        name: name,
                        instance: instance
                    }) || state;
                }
            },
            // Async and optimistically optimized update – it will not be executed if
            // not necessary (debounced to run at most once-per-tick)
            update: (0, _debounceJsDefault.default)(function() {
                return new Promise(function(resolve) {
                    instance.forceUpdate();
                    resolve(state);
                });
            }),
            destroy: function destroy() {
                cleanupModifierEffects();
                isDestroyed = true;
            }
        };
        if (!areValidElements(reference, popper)) return instance;
        instance.setOptions(options).then(function(state) {
            if (!isDestroyed && options.onFirstUpdate) options.onFirstUpdate(state);
        }); // Modifiers have the ability to execute arbitrary code before the first
        // update cycle runs. They will be executed in the same order as the update
        // cycle. This is useful when a modifier adds some persistent data that
        // other modifiers need to use, but the modifier is run after the dependent
        // one.
        function runModifierEffects() {
            state.orderedModifiers.forEach(function(_ref) {
                var name = _ref.name, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, effect = _ref.effect;
                if (typeof effect === 'function') {
                    var cleanupFn = effect({
                        state: state,
                        name: name,
                        instance: instance,
                        options: options
                    });
                    var noopFn = function noopFn() {};
                    effectCleanupFns.push(cleanupFn || noopFn);
                }
            });
        }
        function cleanupModifierEffects() {
            effectCleanupFns.forEach(function(fn) {
                return fn();
            });
            effectCleanupFns = [];
        }
        return instance;
    };
}
var createPopper = /*#__PURE__*/ popperGenerator(); // eslint-disable-next-line import/no-unused-modules

},{"./dom-utils/getCompositeRect.js":"ghVTw","./dom-utils/getLayoutRect.js":"76Hja","./dom-utils/listScrollParents.js":"b5rfb","./dom-utils/getOffsetParent.js":"fac6D","./utils/orderModifiers.js":"6x9qu","./utils/debounce.js":"gWj20","./utils/mergeByName.js":"8Xt9o","./utils/detectOverflow.js":"2YWVs","./dom-utils/instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ghVTw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getCompositeRect);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getNodeScrollJs = require("./getNodeScroll.js");
var _getNodeScrollJsDefault = parcelHelpers.interopDefault(_getNodeScrollJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _mathJs = require("../utils/math.js");
function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = (0, _mathJs.round)(rect.width) / element.offsetWidth || 1;
    var scaleY = (0, _mathJs.round)(rect.height) / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) isFixed = false;
    var isOffsetParentAnElement = (0, _instanceOfJs.isHTMLElement)(offsetParent);
    var offsetParentIsScaled = (0, _instanceOfJs.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
    var documentElement = (0, _getDocumentElementJsDefault.default)(offsetParent);
    var rect = (0, _getBoundingClientRectJsDefault.default)(elementOrVirtualElement, offsetParentIsScaled, isFixed);
    var scroll = {
        scrollLeft: 0,
        scrollTop: 0
    };
    var offsets = {
        x: 0,
        y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if ((0, _getNodeNameJsDefault.default)(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
        (0, _isScrollParentJsDefault.default)(documentElement)) scroll = (0, _getNodeScrollJsDefault.default)(offsetParent);
        if ((0, _instanceOfJs.isHTMLElement)(offsetParent)) {
            offsets = (0, _getBoundingClientRectJsDefault.default)(offsetParent, true);
            offsets.x += offsetParent.clientLeft;
            offsets.y += offsetParent.clientTop;
        } else if (documentElement) offsets.x = (0, _getWindowScrollBarXJsDefault.default)(documentElement);
    }
    return {
        x: rect.left + scroll.scrollLeft - offsets.x,
        y: rect.top + scroll.scrollTop - offsets.y,
        width: rect.width,
        height: rect.height
    };
}

},{"./getBoundingClientRect.js":"8WtHW","./getNodeScroll.js":"DCVjT","./getNodeName.js":"4Hnqb","./instanceOf.js":"ipye8","./getWindowScrollBarX.js":"dZ6cX","./getDocumentElement.js":"av3Bt","./isScrollParent.js":"kF6fv","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"DCVjT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getNodeScroll);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _instanceOfJs = require("./instanceOf.js");
var _getHTMLElementScrollJs = require("./getHTMLElementScroll.js");
var _getHTMLElementScrollJsDefault = parcelHelpers.interopDefault(_getHTMLElementScrollJs);
function getNodeScroll(node) {
    if (node === (0, _getWindowJsDefault.default)(node) || !(0, _instanceOfJs.isHTMLElement)(node)) return (0, _getWindowScrollJsDefault.default)(node);
    else return (0, _getHTMLElementScrollJsDefault.default)(node);
}

},{"./getWindowScroll.js":"28xxo","./getWindow.js":"fYC42","./instanceOf.js":"ipye8","./getHTMLElementScroll.js":"lJ0P1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lJ0P1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getHTMLElementScroll);
function getHTMLElementScroll(element) {
    return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6x9qu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>orderModifiers);
var _enumsJs = require("../enums.js"); // source: https://stackoverflow.com/questions/49875255
function order(modifiers) {
    var map = new Map();
    var visited = new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
        map.set(modifier.name, modifier);
    }); // On visiting object, check for its dependencies and visit them recursively
    function sort(modifier) {
        visited.add(modifier.name);
        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
        requires.forEach(function(dep) {
            if (!visited.has(dep)) {
                var depModifier = map.get(dep);
                if (depModifier) sort(depModifier);
            }
        });
        result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
        if (!visited.has(modifier.name)) // check for visited object
        sort(modifier);
    });
    return result;
}
function orderModifiers(modifiers) {
    // order based on dependencies
    var orderedModifiers = order(modifiers); // order based on phase
    return (0, _enumsJs.modifierPhases).reduce(function(acc, phase) {
        return acc.concat(orderedModifiers.filter(function(modifier) {
            return modifier.phase === phase;
        }));
    }, []);
}

},{"../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gWj20":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>debounce);
function debounce(fn) {
    var pending;
    return function() {
        if (!pending) pending = new Promise(function(resolve) {
            Promise.resolve().then(function() {
                pending = undefined;
                resolve(fn());
            });
        });
        return pending;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8Xt9o":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergeByName);
function mergeByName(modifiers) {
    var merged = modifiers.reduce(function(merged, current) {
        var existing = merged[current.name];
        merged[current.name] = existing ? Object.assign({}, existing, current, {
            options: Object.assign({}, existing.options, current.options),
            data: Object.assign({}, existing.data, current.data)
        }) : current;
        return merged;
    }, {}); // IE11 does not support Object.values
    return Object.keys(merged).map(function(key) {
        return merged[key];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aM4Q6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPopperLite", ()=>(0, _popperLiteJs.createPopper)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "createPopper", ()=>createPopper) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "popperGenerator", ()=>(0, _createPopperJs.popperGenerator));
parcelHelpers.export(exports, "defaultModifiers", ()=>defaultModifiers);
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _createPopperJs.detectOverflow));
var _createPopperJs = require("./createPopper.js");
var _eventListenersJs = require("./modifiers/eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _popperOffsetsJs = require("./modifiers/popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _computeStylesJs = require("./modifiers/computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _applyStylesJs = require("./modifiers/applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var _offsetJs = require("./modifiers/offset.js");
var _offsetJsDefault = parcelHelpers.interopDefault(_offsetJs);
var _flipJs = require("./modifiers/flip.js");
var _flipJsDefault = parcelHelpers.interopDefault(_flipJs);
var _preventOverflowJs = require("./modifiers/preventOverflow.js");
var _preventOverflowJsDefault = parcelHelpers.interopDefault(_preventOverflowJs);
var _arrowJs = require("./modifiers/arrow.js");
var _arrowJsDefault = parcelHelpers.interopDefault(_arrowJs);
var _hideJs = require("./modifiers/hide.js");
var _hideJsDefault = parcelHelpers.interopDefault(_hideJs);
var _popperLiteJs = require("./popper-lite.js");
var _indexJs = require("./modifiers/index.js");
parcelHelpers.exportAll(_indexJs, exports);
var defaultModifiers = [
    (0, _eventListenersJsDefault.default),
    (0, _popperOffsetsJsDefault.default),
    (0, _computeStylesJsDefault.default),
    (0, _applyStylesJsDefault.default),
    (0, _offsetJsDefault.default),
    (0, _flipJsDefault.default),
    (0, _preventOverflowJsDefault.default),
    (0, _arrowJsDefault.default),
    (0, _hideJsDefault.default)
];
var createPopper = /*#__PURE__*/ (0, _createPopperJs.popperGenerator)({
    defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

},{"./createPopper.js":"3NuA9","./modifiers/eventListeners.js":"b3l2h","./modifiers/popperOffsets.js":"iQIBA","./modifiers/computeStyles.js":"cU0Y8","./modifiers/applyStyles.js":"k3FfN","./modifiers/offset.js":"fv6qu","./modifiers/flip.js":"8TrBc","./modifiers/preventOverflow.js":"hksGy","./modifiers/arrow.js":"5tq5K","./modifiers/hide.js":"1DgVf","./popper-lite.js":false,"./modifiers/index.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cK1Kf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPopper", ()=>createPopper);
parcelHelpers.export(exports, "popperGenerator", ()=>(0, _createPopperJs.popperGenerator));
parcelHelpers.export(exports, "defaultModifiers", ()=>defaultModifiers);
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _createPopperJs.detectOverflow));
var _createPopperJs = require("./createPopper.js");
var _eventListenersJs = require("./modifiers/eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _popperOffsetsJs = require("./modifiers/popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _computeStylesJs = require("./modifiers/computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _applyStylesJs = require("./modifiers/applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var defaultModifiers = [
    (0, _eventListenersJsDefault.default),
    (0, _popperOffsetsJsDefault.default),
    (0, _computeStylesJsDefault.default),
    (0, _applyStylesJsDefault.default)
];
var createPopper = /*#__PURE__*/ (0, _createPopperJs.popperGenerator)({
    defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

},{"./createPopper.js":"3NuA9","./modifiers/eventListeners.js":"b3l2h","./modifiers/popperOffsets.js":"iQIBA","./modifiers/computeStyles.js":"cU0Y8","./modifiers/applyStyles.js":"k3FfN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dfxYh":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("a82b907c840a8cb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _Portal.default;
    }
});
var _Portal = _interopRequireDefault(require("abe16231f31b8b80"));

},{"a82b907c840a8cb":"1P3rZ","abe16231f31b8b80":"iV5lK"}],"iV5lK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("a305e0f1f931ebf6").default;
var _interopRequireWildcard = require("8e592d796a7a7d3a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("571111d11e5a435b"));
var ReactDOM = _interopRequireWildcard(require("cc2a3f43f35ed13d"));
var _propTypes = _interopRequireDefault(require("317de9743800d2a0"));
var _utils = require("332cc7e6dcfeee1f");
function getContainer(container) {
    return typeof container === 'function' ? container() : container;
}
/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 *
 * Demos:
 *
 * - [Portal](https://mui.com/material-ui/react-portal/)
 *
 * API:
 *
 * - [Portal API](https://mui.com/material-ui/api/portal/)
 */ const Portal = /*#__PURE__*/ React.forwardRef(function Portal(props, forwardedRef) {
    const { children, container, disablePortal = false } = props;
    const [mountNode, setMountNode] = React.useState(null);
    const handleRef = (0, _utils.unstable_useForkRef)(/*#__PURE__*/ React.isValidElement(children) ? (0, _utils.unstable_getReactElementRef)(children) : null, forwardedRef);
    (0, _utils.unstable_useEnhancedEffect)(()=>{
        if (!disablePortal) setMountNode(getContainer(container) || document.body);
    }, [
        container,
        disablePortal
    ]);
    (0, _utils.unstable_useEnhancedEffect)(()=>{
        if (mountNode && !disablePortal) {
            (0, _utils.unstable_setRef)(forwardedRef, mountNode);
            return ()=>{
                (0, _utils.unstable_setRef)(forwardedRef, null);
            };
        }
        return undefined;
    }, [
        forwardedRef,
        mountNode,
        disablePortal
    ]);
    if (disablePortal) {
        if (/*#__PURE__*/ React.isValidElement(children)) {
            const newProps = {
                ref: handleRef
            };
            return /*#__PURE__*/ React.cloneElement(children, newProps);
        }
        return children;
    }
    return mountNode ? /*#__PURE__*/ ReactDOM.createPortal(children, mountNode) : mountNode;
});
Portal.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * The children to render into the `container`.
   */ children: _propTypes.default.node,
    /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypes.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypes.default.func
    ]),
    /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */ disablePortal: _propTypes.default.bool
};
// eslint-disable-next-line
Portal["propTypes"] = (0, _utils.exactProp)(Portal.propTypes);
var _default = exports.default = Portal;

},{"a305e0f1f931ebf6":"1P3rZ","8e592d796a7a7d3a":"6TFJp","571111d11e5a435b":"jMk1U","cc2a3f43f35ed13d":"i4X7T","317de9743800d2a0":"GNqOQ","332cc7e6dcfeee1f":"4hufy"}],"aa8Zl":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("7e2bad21cbc23520").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.getPopperUtilityClass = getPopperUtilityClass;
var _generateUtilityClasses = _interopRequireDefault(require("8469036fa538e739"));
var _generateUtilityClass = _interopRequireDefault(require("39a2b3a4bff8f01c"));
function getPopperUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiPopper', slot);
}
const popperClasses = (0, _generateUtilityClasses.default)('MuiPopper', [
    'root'
]);
var _default = exports.default = popperClasses;

},{"7e2bad21cbc23520":"1P3rZ","8469036fa538e739":"3J0Rs","39a2b3a4bff8f01c":"iAc9p"}],"bDrWf":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("e1e176852c91b02a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _NoSsr.default;
    }
});
var _NoSsr = _interopRequireDefault(require("9f9630a12b1ec0f4"));

},{"e1e176852c91b02a":"1P3rZ","9f9630a12b1ec0f4":"g2CPq"}],"g2CPq":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("8523750ef7d75b72").default;
var _interopRequireWildcard = require("93198ecb214f2f8a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("29a65a8f6bbd898b"));
var _propTypes = _interopRequireDefault(require("35395a30c4b63541"));
var _utils = require("5172bb8e71eb6d17");
/**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 *
 * * Escape hatch for broken dependencies not supporting SSR.
 * * Improve the time-to-first paint on the client by only rendering above the fold.
 * * Reduce the rendering time on the server.
 * * Under too heavy server load, you can turn on service degradation.
 *
 * Demos:
 *
 * - [No SSR](https://mui.com/material-ui/react-no-ssr/)
 *
 * API:
 *
 * - [NoSsr API](https://mui.com/material-ui/api/no-ssr/)
 */ function NoSsr(props) {
    const { children, defer = false, fallback = null } = props;
    const [mountedState, setMountedState] = React.useState(false);
    (0, _utils.unstable_useEnhancedEffect)(()=>{
        if (!defer) setMountedState(true);
    }, [
        defer
    ]);
    React.useEffect(()=>{
        if (defer) setMountedState(true);
    }, [
        defer
    ]);
    // TODO casting won't be needed at one point https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65135
    return mountedState ? children : fallback;
}
NoSsr.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * You can wrap a node.
   */ children: _propTypes.default.node,
    /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   * @default false
   */ defer: _propTypes.default.bool,
    /**
   * The fallback content to display.
   * @default null
   */ fallback: _propTypes.default.node
};
// eslint-disable-next-line
NoSsr["propTypes"] = (0, _utils.exactProp)(NoSsr.propTypes);
var _default = exports.default = NoSsr;

},{"8523750ef7d75b72":"1P3rZ","93198ecb214f2f8a":"6TFJp","29a65a8f6bbd898b":"jMk1U","35395a30c4b63541":"GNqOQ","5172bb8e71eb6d17":"4hufy"}],"dz8Pz":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAxisSystem = useAxisSystem;
var _useChartCartesianAxis = require("21b15e65e4744fca");
var _useChartPolarAxis = require("1115acc256b0bc15");
var _useSelector = require("f60fe96267f346d1");
var _useStore = require("bcced9330267d103");
/**
 * @internals
 *
 * Get the coordinate system implemented.
 * The hook assumes polar and cartesian are never implemented at the same time.
 * @returns The coordinate system
 */ function useAxisSystem() {
    const store = (0, _useStore.useStore)();
    const rawRotationAxis = (0, _useSelector.useSelector)(store, _useChartPolarAxis.selectorChartRawRotationAxis);
    const rawXAxis = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartRawXAxis);
    if (rawRotationAxis !== undefined) return 'polar';
    if (rawXAxis !== undefined) return 'cartesian';
    return 'none';
}

},{"21b15e65e4744fca":"iMsPz","1115acc256b0bc15":"eNmV7","f60fe96267f346d1":"65ofz","bcced9330267d103":"6viTh"}],"1RTSF":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"b9W6N":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    legendClasses: true,
    continuousColorLegendClasses: true,
    piecewiseColorLegendClasses: true,
    piecewiseColorDefaultLabelFormatter: true
};
Object.defineProperty(exports, "continuousColorLegendClasses", {
    enumerable: true,
    get: function() {
        return _continuousColorLegendClasses.continuousColorLegendClasses;
    }
});
Object.defineProperty(exports, "legendClasses", {
    enumerable: true,
    get: function() {
        return _chartsLegendClasses.legendClasses;
    }
});
Object.defineProperty(exports, "piecewiseColorDefaultLabelFormatter", {
    enumerable: true,
    get: function() {
        return _piecewiseColorDefaultLabelFormatter.piecewiseColorDefaultLabelFormatter;
    }
});
Object.defineProperty(exports, "piecewiseColorLegendClasses", {
    enumerable: true,
    get: function() {
        return _piecewiseColorLegendClasses.piecewiseColorLegendClasses;
    }
});
var _ChartsLegend = require("68d1cccc6673b31c");
Object.keys(_ChartsLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ChartsLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsLegend[key];
        }
    });
});
var _chartsLegend = require("cd102eb4b52e6502");
Object.keys(_chartsLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _chartsLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _chartsLegend[key];
        }
    });
});
var _direction = require("ce376bebbf16203d");
Object.keys(_direction).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _direction[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _direction[key];
        }
    });
});
var _legendContext = require("65681e02a96d79bd");
Object.keys(_legendContext).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _legendContext[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _legendContext[key];
        }
    });
});
var _chartsLegendClasses = require("5bd41cae4e706de4");
var _ContinuousColorLegend = require("aeebd0d7640f3fd8");
Object.keys(_ContinuousColorLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ContinuousColorLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ContinuousColorLegend[key];
        }
    });
});
var _colorLegend = require("da5a6a8e2d9809ef");
Object.keys(_colorLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _colorLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _colorLegend[key];
        }
    });
});
var _continuousColorLegendClasses = require("9ee4fb200613d27d");
var _PiecewiseColorLegend = require("9150264c646b90fa");
Object.keys(_PiecewiseColorLegend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _PiecewiseColorLegend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _PiecewiseColorLegend[key];
        }
    });
});
var _piecewiseColorLegendClasses = require("aaf75bc3ff31a6ea");
var _piecewiseColorDefaultLabelFormatter = require("f9fc54d8e786324");
var _legend = require("47ada35aa9fc1f78");
Object.keys(_legend).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _legend[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _legend[key];
        }
    });
});

},{"68d1cccc6673b31c":"69UOg","cd102eb4b52e6502":"9sDfn","ce376bebbf16203d":"d24Gn","65681e02a96d79bd":"7wjZW","5bd41cae4e706de4":"bgdSu","aeebd0d7640f3fd8":"cMdHH","da5a6a8e2d9809ef":"cWcyv","9ee4fb200613d27d":"5uPBX","9150264c646b90fa":"86SYV","aaf75bc3ff31a6ea":"b96ht","f9fc54d8e786324":"8QGSV","47ada35aa9fc1f78":"fdrDt"}],"69UOg":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("bb32ef6f7d50c6ff").default;
var _interopRequireWildcard = require("9975c41c774b717c").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLegend = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("7f60ad7bfade56a2"));
var _extends2 = _interopRequireDefault(require("b575e02f41a82f81"));
var React = _interopRequireWildcard(require("8447a0cc2fd846a4"));
var _styles = require("64f207ef71e09773");
var _propTypes = _interopRequireDefault(require("74b5f202bf150f9a"));
var _clsx = _interopRequireDefault(require("fb670f11924e74b3"));
var _useLegend = require("857a3b36d7c1dd7a");
var _ChartsLabelMark = require("17762fdc9cd2c475");
var _onClickContextBuilder = require("d041c47f493e999c");
var _chartsLegendClasses = require("3869e31b9482ba93");
var _consumeSlots = require("f3cd387cd4e6f71e");
var _ChartsLabel = require("a9ce0361b3deeeae");
var _jsxRuntime = require("e9ce265228da2cc0");
const _excluded = [
    "direction",
    "onItemClick",
    "className",
    "classes"
];
const RootElement = (0, _styles.styled)('ul', {
    name: 'MuiChartsLegend',
    slot: 'Root'
})(({ ownerState, theme })=>(0, _extends2.default)({}, theme.typography.caption, {
        color: (theme.vars || theme).palette.text.primary,
        lineHeight: '100%',
        display: 'flex',
        flexDirection: ownerState.direction === 'vertical' ? 'column' : 'row',
        alignItems: ownerState.direction === 'vertical' ? undefined : 'center',
        flexShrink: 0,
        gap: theme.spacing(2),
        listStyleType: 'none',
        paddingInlineStart: 0,
        marginBlock: theme.spacing(1),
        marginInline: theme.spacing(1),
        flexWrap: 'wrap',
        li: {
            display: ownerState.direction === 'horizontal' ? 'inline-flex' : undefined
        },
        [`button.${_chartsLegendClasses.legendClasses.series}`]: {
            // Reset button styles
            background: 'none',
            border: 'none',
            padding: 0,
            fontFamily: 'inherit',
            fontWeight: 'inherit',
            fontSize: 'inherit',
            letterSpacing: 'inherit',
            color: 'inherit'
        },
        [`& .${_chartsLegendClasses.legendClasses.series}`]: {
            display: ownerState.direction === 'vertical' ? 'flex' : 'inline-flex',
            alignItems: 'center',
            gap: theme.spacing(1)
        }
    }));
const ChartsLegend = exports.ChartsLegend = (0, _consumeSlots.consumeSlots)('MuiChartsLegend', 'legend', {
    defaultProps: {
        direction: 'horizontal'
    },
    // @ts-expect-error position is used only in the slots, but it is passed to the SVG wrapper.
    // We omit it here to avoid passing to slots.
    omitProps: [
        'position'
    ],
    classesResolver: _chartsLegendClasses.useUtilityClasses
}, /*#__PURE__*/ React.forwardRef(function ChartsLegend(props, ref) {
    const data = (0, _useLegend.useLegend)();
    const { onItemClick, className, classes } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    if (data.items.length === 0) return null;
    const Element = onItemClick ? 'button' : 'div';
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(RootElement, (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ref: ref
    }, other, {
        ownerState: props,
        children: data.items.map((item, i)=>{
            return /*#__PURE__*/ (0, _jsxRuntime.jsx)("li", {
                children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(Element, {
                    className: classes?.series,
                    role: onItemClick ? 'button' : undefined,
                    type: onItemClick ? 'button' : undefined,
                    onClick: onItemClick ? // @ts-ignore onClick is only attached to a button
                    (event)=>onItemClick(event, (0, _onClickContextBuilder.seriesContextBuilder)(item), i) : undefined,
                    children: [
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelMark.ChartsLabelMark, {
                            className: classes?.mark,
                            color: item.color,
                            type: item.markType
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabel.ChartsLabel, {
                            className: classes?.label,
                            children: item.label
                        })
                    ]
                })
            }, item.id);
        })
    }));
}));
ChartsLegend.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    className: _propTypes.default.string,
    /**
   * The direction of the legend layout.
   * The default depends on the chart.
   */ direction: _propTypes.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * Callback fired when a legend item is clicked.
   * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event The click event.
   * @param {SeriesLegendItemContext} legendItem The legend item data.
   * @param {number} index The index of the clicked legend item.
   */ onItemClick: _propTypes.default.func,
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ])
};

},{"bb32ef6f7d50c6ff":"1P3rZ","9975c41c774b717c":"6TFJp","7f60ad7bfade56a2":"17jFf","b575e02f41a82f81":"lKa0J","8447a0cc2fd846a4":"jMk1U","64f207ef71e09773":"7eExx","74b5f202bf150f9a":"GNqOQ","fb670f11924e74b3":"dOSJC","857a3b36d7c1dd7a":"aMDAZ","17762fdc9cd2c475":"hyAIM","d041c47f493e999c":"aGlTJ","3869e31b9482ba93":"bgdSu","f3cd387cd4e6f71e":"aFfK4","a9ce0361b3deeeae":"9prOk","e9ce265228da2cc0":"05iiF"}],"aGlTJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seriesContextBuilder = void 0;
const seriesContextBuilder = (context)=>({
        type: 'series',
        color: context.color,
        label: context.label,
        seriesId: context.seriesId,
        itemId: context.itemId
    });
exports.seriesContextBuilder = seriesContextBuilder;

},{}],"bgdSu":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5bbd5f6914a13e24").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useUtilityClasses = exports.legendClasses = void 0;
var _generateUtilityClass = _interopRequireDefault(require("2461a5580be6aebb"));
var _generateUtilityClasses = _interopRequireDefault(require("6460e7b32d0d2e86"));
var _composeClasses = _interopRequireDefault(require("8feb057dd4079e08"));
function getLegendUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsLegend', slot);
}
const useUtilityClasses = (props)=>{
    const { classes, direction } = props;
    const slots = {
        root: [
            'root',
            direction
        ],
        mark: [
            'mark'
        ],
        label: [
            'label'
        ],
        series: [
            'series'
        ]
    };
    return (0, _composeClasses.default)(slots, getLegendUtilityClass, classes);
};
exports.useUtilityClasses = useUtilityClasses;
const legendClasses = exports.legendClasses = (0, _generateUtilityClasses.default)('MuiChartsLegend', [
    'root',
    'series',
    'mark',
    'label',
    'vertical',
    'horizontal'
]);

},{"5bbd5f6914a13e24":"1P3rZ","2461a5580be6aebb":"iAc9p","6460e7b32d0d2e86":"3J0Rs","8feb057dd4079e08":"gluJr"}],"aFfK4":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("9d9108216da9d98a").default;
var _interopRequireWildcard = require("d6f5c0d8b7a5eb3b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.consumeSlots = void 0;
var _extends2 = _interopRequireDefault(require("2857b9eb05f2e0e1"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("28855d9cb2c87307"));
var _styles = require("681d32b16489d26b");
var _resolveProps = _interopRequireDefault(require("4e905f3be378d1ca"));
var _useSlotProps2 = _interopRequireDefault(require("30a40fab3988dcbb"));
var React = _interopRequireWildcard(require("d945e50f04783a6f"));
var _jsxRuntime = require("134e6ba9f280f8e");
const _excluded = [
    "slots",
    "slotProps"
], _excluded2 = [
    "ownerState"
];
/**
 * A higher order component that consumes a slot from the props and renders the component provided in the slot.
 *
 * This HOC will wrap a single component, and will render the component provided in the slot, if it exists.
 *
 * If you need to render multiple components, you can manually consume the slots from the props and render them in your component instead of using this HOC.
 *
 * In the example below, `MyComponent` will render the component provided in `mySlot` slot, if it exists. Otherwise, it will render the `DefaultComponent`.
 *
 * @example
 *
 * ```tsx
 * type MyComponentProps = {
 *   direction: 'row' | 'column';
 *   slots?: {
 *     mySlot?: React.JSXElementConstructor<{ direction: 'row' | 'column' }>;
 *   }
 * };
 *
 * const MyComponent = consumeSlots(
 *   'MuiMyComponent',
 *   'mySlot',
 *   function DefaultComponent(props: MyComponentProps) {
 *     return (
 *       <div className={props.classes.root}>
 *         {props.direction}
 *       </div>
 *     );
 *   }
 * );
 * ```
 *
 * @param {string} name The mui component name.
 * @param {string} slotPropName The name of the prop to retrieve the slot from.
 * @param {object} options Options for the HOC.
 * @param {boolean} options.propagateSlots Whether to propagate the slots to the component, this is always false if the slot is provided.
 * @param {Record<string, any>} options.defaultProps A set of defaults for the component, will be deep merged with the props.
 * @param {Array<keyof Props>} options.omitProps An array of props to omit from the component.
 * @param {Function} options.classesResolver A function that returns the classes for the component. It receives the props, after theme props and defaults have been applied. And the theme object as the second argument.
 * @param InComponent The component to render if the slot is not provided.
 */ const consumeSlots = (name, slotPropName, options, InComponent)=>{
    function ConsumeSlotsInternal(props, ref) {
        const themedProps = (0, _styles.useThemeProps)({
            props,
            // eslint-disable-next-line material-ui/mui-name-matches-component-name
            name
        });
        const defaultProps = typeof options.defaultProps === 'function' ? options.defaultProps(themedProps) : options.defaultProps ?? {};
        const defaultizedProps = (0, _resolveProps.default)(defaultProps, themedProps);
        const _ref = defaultizedProps, { slots, slotProps } = _ref, other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
        const theme = (0, _styles.useTheme)();
        const classes = options.classesResolver?.(defaultizedProps, theme);
        // Can be a function component or a forward ref component.
        const Component = slots?.[slotPropName] ?? InComponent;
        const propagateSlots = options.propagateSlots && !slots?.[slotPropName];
        const _useSlotProps = (0, _useSlotProps2.default)({
            elementType: Component,
            externalSlotProps: slotProps?.[slotPropName],
            additionalProps: (0, _extends2.default)({}, other, {
                classes
            }, propagateSlots && {
                slots,
                slotProps
            }),
            ownerState: {}
        }), originalOutProps = (0, _objectWithoutPropertiesLoose2.default)(_useSlotProps, _excluded2);
        const outProps = (0, _extends2.default)({}, originalOutProps);
        for (const prop of options.omitProps ?? [])delete outProps[prop];
        Component.displayName = `${name}.slots.${slotPropName}`;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, (0, _extends2.default)({}, outProps, {
            ref: ref
        }));
    }
    return /*#__PURE__*/ React.forwardRef(ConsumeSlotsInternal);
};
exports.consumeSlots = consumeSlots;

},{"9d9108216da9d98a":"1P3rZ","d6f5c0d8b7a5eb3b":"6TFJp","2857b9eb05f2e0e1":"lKa0J","28855d9cb2c87307":"17jFf","681d32b16489d26b":"7eExx","4e905f3be378d1ca":"hO4GV","30a40fab3988dcbb":"7cNZ5","d945e50f04783a6f":"jMk1U","134e6ba9f280f8e":"05iiF"}],"9prOk":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("dc9f2c7e9eaa149e").default;
var _interopRequireWildcard = require("4009c8b5d07c47c9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLabel = void 0;
var _extends2 = _interopRequireDefault(require("9621319a5a72851d"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("3f07b130efd917c3"));
var React = _interopRequireWildcard(require("abee61f2fa762c9b"));
var _propTypes = _interopRequireDefault(require("cbdf5ea93166bd33"));
var _clsx = _interopRequireDefault(require("f0900fdf30f64543"));
var _labelClasses = require("cb7d173605cda1d7");
var _consumeThemeProps = require("560dfcd63cca8ae5");
var _jsxRuntime = require("3249e5ec7677c6f4");
const _excluded = [
    "children",
    "className",
    "classes"
];
/**
 * Generates the label mark for the tooltip and legend.
 * @ignore - internal component.
 */ const ChartsLabel = exports.ChartsLabel = (0, _consumeThemeProps.consumeThemeProps)('MuiChartsLabel', {
    classesResolver: _labelClasses.useUtilityClasses
}, function ChartsLabel(props, ref) {
    const { children, className, classes } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("span", (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ref: ref
    }, other, {
        children: children
    }));
});
ChartsLabel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    children: _propTypes.default.node,
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object
};

},{"dc9f2c7e9eaa149e":"1P3rZ","4009c8b5d07c47c9":"6TFJp","9621319a5a72851d":"lKa0J","3f07b130efd917c3":"17jFf","abee61f2fa762c9b":"jMk1U","cbdf5ea93166bd33":"GNqOQ","f0900fdf30f64543":"dOSJC","cb7d173605cda1d7":"1hiqD","560dfcd63cca8ae5":"4S77q","3249e5ec7677c6f4":"05iiF"}],"1hiqD":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("87b7a36144d4dd75").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getLabelUtilityClass = getLabelUtilityClass;
exports.useUtilityClasses = exports.labelClasses = void 0;
var _composeClasses = _interopRequireDefault(require("4b7a590a66a3db9f"));
var _generateUtilityClass = _interopRequireDefault(require("c4b01f726a1f621d"));
var _generateUtilityClasses = _interopRequireDefault(require("909ab3ed67e2c499"));
function getLabelUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsLabel', slot);
}
const labelClasses = exports.labelClasses = (0, _generateUtilityClasses.default)('MuiChartsLabel', [
    'root'
]);
const useUtilityClasses = (props)=>{
    const slots = {
        root: [
            'root'
        ]
    };
    return (0, _composeClasses.default)(slots, getLabelUtilityClass, props.classes);
};
exports.useUtilityClasses = useUtilityClasses;

},{"87b7a36144d4dd75":"1P3rZ","4b7a590a66a3db9f":"gluJr","c4b01f726a1f621d":"iAc9p","909ab3ed67e2c499":"3J0Rs"}],"9sDfn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"d24Gn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"7wjZW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"cMdHH":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("97b67c0c5668b2d1").default;
var _interopRequireWildcard = require("6a55e5adaa3903ee").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ContinuousColorLegend = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("2b9df3dbff4a0a00"));
var _extends2 = _interopRequireDefault(require("e9e99e7330ade58f"));
var React = _interopRequireWildcard(require("e89c09e85d7d0435"));
var _propTypes = _interopRequireDefault(require("899329d993bb84d4"));
var _styles = require("771d139c04095895");
var _clsx = _interopRequireDefault(require("3c932fc915790c45"));
var _useAxis = require("59598f4c972dde65");
var _ChartsLabel = require("f56cf1e09d46f374");
var _ChartsLabelGradient = require("a5ba0a7ac4ae637c");
var _consumeThemeProps = require("1861ef31c7155346");
var _continuousColorLegendClasses = require("904837f1379dd723");
var _useChartGradientId = require("ea80aae675f02b2d");
var _jsxRuntime = require("4cb90be046c80aba");
const _excluded = [
    "minLabel",
    "maxLabel",
    "direction",
    "axisDirection",
    "axisId",
    "rotateGradient",
    "reverse",
    "classes",
    "className",
    "gradientId",
    "labelPosition",
    "thickness"
];
const templateAreas = (reverse)=>{
    const startLabel = reverse ? 'max-label' : 'min-label';
    const endLabel = reverse ? 'min-label' : 'max-label';
    return {
        row: {
            start: `
    '${startLabel} . ${endLabel}'
    'gradient gradient gradient'
  `,
            end: `
      'gradient gradient gradient'
      '${startLabel} . ${endLabel}'
    `,
            extremes: `
      '${startLabel} gradient ${endLabel}'
    `
        },
        column: {
            start: `
      '${endLabel} gradient'
      '. gradient'
      '${startLabel} gradient'
    `,
            end: `
      'gradient ${endLabel}'
      'gradient .'
      'gradient ${startLabel}'
    `,
            extremes: `
      '${endLabel}'
      'gradient'
      '${startLabel}'
    `
        }
    };
};
const RootElement = (0, _styles.styled)('ul', {
    name: 'MuiContinuousColorLegend',
    slot: 'Root'
})(({ theme, ownerState })=>(0, _extends2.default)({}, theme.typography.caption, {
        color: (theme.vars || theme).palette.text.primary,
        lineHeight: '100%',
        display: 'grid',
        flexShrink: 0,
        gap: theme.spacing(0.5),
        listStyleType: 'none',
        paddingInlineStart: 0,
        marginBlock: theme.spacing(1),
        marginInline: theme.spacing(1),
        [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.horizontal}`]: {
            gridTemplateRows: 'min-content min-content',
            gridTemplateColumns: 'min-content auto min-content',
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.start}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).row.start
            },
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.end}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).row.end
            },
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.extremes}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).row.extremes,
                gridTemplateRows: 'min-content',
                alignItems: 'center'
            }
        },
        [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.vertical}`]: {
            gridTemplateRows: 'min-content auto min-content',
            gridTemplateColumns: 'min-content min-content',
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.start}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).column.start,
                [`.${_continuousColorLegendClasses.continuousColorLegendClasses.maxLabel}, .${_continuousColorLegendClasses.continuousColorLegendClasses.minLabel}`]: {
                    justifySelf: 'end'
                }
            },
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.end}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).column.end,
                [`.${_continuousColorLegendClasses.continuousColorLegendClasses.maxLabel}, .${_continuousColorLegendClasses.continuousColorLegendClasses.minLabel}`]: {
                    justifySelf: 'start'
                }
            },
            [`&.${_continuousColorLegendClasses.continuousColorLegendClasses.extremes}`]: {
                gridTemplateAreas: templateAreas(ownerState.reverse).column.extremes,
                gridTemplateColumns: 'min-content',
                [`.${_continuousColorLegendClasses.continuousColorLegendClasses.maxLabel}, .${_continuousColorLegendClasses.continuousColorLegendClasses.minLabel}`]: {
                    justifySelf: 'center'
                }
            }
        },
        [`.${_continuousColorLegendClasses.continuousColorLegendClasses.gradient}`]: {
            gridArea: 'gradient'
        },
        [`.${_continuousColorLegendClasses.continuousColorLegendClasses.maxLabel}`]: {
            gridArea: 'max-label'
        },
        [`.${_continuousColorLegendClasses.continuousColorLegendClasses.minLabel}`]: {
            gridArea: 'min-label'
        }
    }));
const getText = (label, value, formattedValue)=>{
    if (typeof label === 'string') return label;
    return label?.({
        value,
        formattedValue
    }) ?? formattedValue;
};
const isZAxis = (axis)=>axis.scale === undefined;
const ContinuousColorLegend = exports.ContinuousColorLegend = (0, _consumeThemeProps.consumeThemeProps)('MuiContinuousColorLegend', {
    defaultProps: {
        direction: 'horizontal',
        labelPosition: 'end',
        axisDirection: 'z'
    },
    classesResolver: _continuousColorLegendClasses.useUtilityClasses
}, function ContinuousColorLegend(props, ref) {
    const { minLabel, maxLabel, direction, axisDirection, axisId, rotateGradient, reverse, classes, className, gradientId, thickness } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const generateGradientId = (0, _useChartGradientId.useChartGradientIdObjectBoundBuilder)();
    const axisItem = (0, _useAxis.useAxis)({
        axisDirection,
        axisId
    });
    const colorMap = axisItem?.colorMap;
    if (!colorMap || !colorMap.type || colorMap.type !== 'continuous') return null;
    const minValue = colorMap.min ?? 0;
    const maxValue = colorMap.max ?? 100;
    // Get texts to display
    const valueFormatter = isZAxis(axisItem) ? undefined : axisItem.valueFormatter;
    const formattedMin = valueFormatter ? valueFormatter(minValue, {
        location: 'legend'
    }) : minValue.toLocaleString();
    const formattedMax = valueFormatter ? valueFormatter(maxValue, {
        location: 'legend'
    }) : maxValue.toLocaleString();
    const minText = getText(minLabel, minValue, formattedMin);
    const maxText = getText(maxLabel, maxValue, formattedMax);
    const minComponent = /*#__PURE__*/ (0, _jsxRuntime.jsx)("li", {
        className: classes?.minLabel,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabel.ChartsLabel, {
            className: classes?.label,
            children: minText
        })
    });
    const maxComponent = /*#__PURE__*/ (0, _jsxRuntime.jsx)("li", {
        className: classes?.maxLabel,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabel.ChartsLabel, {
            className: classes?.label,
            children: maxText
        })
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(RootElement, (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ref: ref
    }, other, {
        ownerState: props,
        children: [
            reverse ? maxComponent : minComponent,
            /*#__PURE__*/ (0, _jsxRuntime.jsx)("li", {
                className: classes?.gradient,
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelGradient.ChartsLabelGradient, {
                    direction: direction,
                    rotate: rotateGradient,
                    reverse: reverse,
                    thickness: thickness,
                    gradientId: gradientId ?? generateGradientId(axisItem.id)
                })
            }),
            reverse ? minComponent : maxComponent
        ]
    }));
});
ContinuousColorLegend.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * The axis direction containing the color configuration to represent.
   * @default 'z'
   */ axisDirection: _propTypes.default.oneOf([
        'x',
        'y',
        'z'
    ]),
    /**
   * The id of the axis item with the color configuration to represent.
   * @default The first axis item.
   */ axisId: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]),
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    className: _propTypes.default.string,
    /**
   * The direction of the legend layout.
   * @default 'horizontal'
   */ direction: _propTypes.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * The id for the gradient to use.
   * If not provided, it will use the generated gradient from the axis configuration.
   * The `gradientId` will be used as `fill="url(#gradientId)"`.
   * @default auto-generated id
   */ gradientId: _propTypes.default.string,
    /**
   * Where to position the labels relative to the gradient.
   * @default 'end'
   */ labelPosition: _propTypes.default.oneOf([
        'start',
        'end',
        'extremes'
    ]),
    /**
   * The label to display at the maximum side of the gradient.
   * Can either be a string, or a function.
   * If not defined, the formatted maximal value is display.
   * @default formattedValue
   */ maxLabel: _propTypes.default.oneOfType([
        _propTypes.default.func,
        _propTypes.default.string
    ]),
    /**
   * The label to display at the minimum side of the gradient.
   * Can either be a string, or a function.
   * @default formattedValue
   */ minLabel: _propTypes.default.oneOfType([
        _propTypes.default.func,
        _propTypes.default.string
    ]),
    /**
   * If `true`, the gradient and labels will be reversed.
   * @default false
   */ reverse: _propTypes.default.bool,
    /**
   * If provided, the gradient will be rotated by 90deg.
   * Useful for linear gradients that are not in the correct orientation.
   */ rotateGradient: _propTypes.default.bool,
    /**
   * The thickness of the gradient
   * @default 12
   */ thickness: _propTypes.default.number,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ])
};

},{"97b67c0c5668b2d1":"1P3rZ","6a55e5adaa3903ee":"6TFJp","2b9df3dbff4a0a00":"17jFf","e9e99e7330ade58f":"lKa0J","e89c09e85d7d0435":"jMk1U","899329d993bb84d4":"GNqOQ","771d139c04095895":"7eExx","3c932fc915790c45":"dOSJC","59598f4c972dde65":"hqvIW","f56cf1e09d46f374":"9prOk","a5ba0a7ac4ae637c":"7Ctb7","1861ef31c7155346":"4S77q","904837f1379dd723":"5uPBX","ea80aae675f02b2d":"8rjJB","4cb90be046c80aba":"05iiF"}],"hqvIW":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useAxis = useAxis;
var _useZAxis = require("325d18daee7103a7");
var _useAxis = require("f7691ecb0c8edc87");
/**
 * Helper to select an axis definition according to its direction and id.
 */ function useAxis({ axisDirection, axisId }) {
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const { yAxis, yAxisIds } = (0, _useAxis.useYAxes)();
    const { zAxis, zAxisIds } = (0, _useZAxis.useZAxes)();
    switch(axisDirection){
        case 'x':
            {
                const id = typeof axisId === 'string' ? axisId : xAxisIds[axisId ?? 0];
                return xAxis[id];
            }
        case 'y':
            {
                const id = typeof axisId === 'string' ? axisId : yAxisIds[axisId ?? 0];
                return yAxis[id];
            }
        case 'z':
        default:
            {
                const id = typeof axisId === 'string' ? axisId : zAxisIds[axisId ?? 0];
                return zAxis[id];
            }
    }
}

},{"325d18daee7103a7":"ew8Tr","f7691ecb0c8edc87":"gzVB1"}],"7Ctb7":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("213adb0b8a66240d").default;
var _interopRequireWildcard = require("278a78848622a04f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLabelGradient = void 0;
var _extends2 = _interopRequireDefault(require("d1d583a4c51962fd"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("5986abd1653659cc"));
var React = _interopRequireWildcard(require("b407ebbaed5938cc"));
var _propTypes = _interopRequireDefault(require("f36f5dde3f1d0494"));
var _styles = require("786094a8d84d8662");
var _clsx = _interopRequireDefault(require("57420c3918489fce"));
var _RtlProvider = require("eb84dc6925765464");
var _labelGradientClasses = require("a2c687cbe01c7a76");
var _consumeThemeProps = require("3c2e45fcc82a6cd8");
var _jsxRuntime = require("3c154d359b48960f");
const _excluded = [
    "gradientId",
    "direction",
    "classes",
    "className",
    "rotate",
    "reverse",
    "thickness"
];
const getRotation = (direction, reverse, rotate, isRtl)=>{
    const angle = (direction === 'vertical' ? -90 : 0) + (rotate ? 90 : 0) + (reverse ? 180 : 0);
    if (isRtl && direction !== 'vertical') return angle + 180;
    return angle;
};
const Root = (0, _styles.styled)('div', {
    name: 'MuiChartsLabelGradient',
    slot: 'Root'
})(({ ownerState })=>{
    const rotation = getRotation(ownerState.direction, ownerState.reverse, ownerState.rotate, ownerState.isRtl);
    return {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        [`.${_labelGradientClasses.labelGradientClasses.mask}`]: {
            borderRadius: 2,
            overflow: 'hidden'
        },
        [`&.${_labelGradientClasses.labelGradientClasses.horizontal}`]: {
            width: '100%',
            [`.${_labelGradientClasses.labelGradientClasses.mask}`]: {
                height: ownerState.thickness,
                width: '100%'
            }
        },
        [`&.${_labelGradientClasses.labelGradientClasses.vertical}`]: {
            height: '100%',
            [`.${_labelGradientClasses.labelGradientClasses.mask}`]: {
                width: ownerState.thickness,
                height: '100%',
                '> svg': {
                    height: '100%'
                }
            }
        },
        svg: {
            transform: `rotate(${rotation}deg)`,
            display: 'block'
        }
    };
});
/**
 * Generates the label Gradient for the tooltip and legend.
 * @ignore - internal component.
 */ const ChartsLabelGradient = exports.ChartsLabelGradient = (0, _consumeThemeProps.consumeThemeProps)('MuiChartsLabelGradient', {
    defaultProps: {
        direction: 'horizontal',
        thickness: 12
    },
    classesResolver: _labelGradientClasses.useUtilityClasses
}, function ChartsLabelGradient(props, ref) {
    const { gradientId, classes, className } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const isRtl = (0, _RtlProvider.useRtl)();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Root, (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ownerState: (0, _extends2.default)({}, props, {
            isRtl
        }),
        "aria-hidden": "true",
        ref: ref
    }, other, {
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("div", {
            className: classes?.mask,
            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("svg", {
                viewBox: "0 0 24 24",
                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("rect", {
                    className: classes?.fill,
                    width: "24",
                    height: "24",
                    fill: `url(#${gradientId})`
                })
            })
        })
    }));
});
ChartsLabelGradient.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * The direction of the gradient.
   * @default 'horizontal'
   */ direction: _propTypes.default.oneOf([
        'vertical',
        'horizontal'
    ]),
    /**
   * A unique identifier for the gradient.
   * The `gradientId` will be used as `fill="url(#gradientId)"`.
   */ gradientId: _propTypes.default.string.isRequired,
    /**
   * If `true`, the gradient will be reversed.
   */ reverse: _propTypes.default.bool,
    /**
   * If provided, the gradient will be rotated by 90deg.
   * Useful for linear gradients that are not in the correct orientation.
   */ rotate: _propTypes.default.bool,
    /**
   * The thickness of the gradient
   * @default 12
   */ thickness: _propTypes.default.number
};

},{"213adb0b8a66240d":"1P3rZ","278a78848622a04f":"6TFJp","d1d583a4c51962fd":"lKa0J","5986abd1653659cc":"17jFf","b407ebbaed5938cc":"jMk1U","f36f5dde3f1d0494":"GNqOQ","786094a8d84d8662":"7eExx","57420c3918489fce":"dOSJC","eb84dc6925765464":"13k4W","a2c687cbe01c7a76":"3Cxjp","3c2e45fcc82a6cd8":"4S77q","3c154d359b48960f":"05iiF"}],"3Cxjp":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("5fdd0a0c5d9e1359").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getLabelGradientUtilityClass = getLabelGradientUtilityClass;
exports.useUtilityClasses = exports.labelGradientClasses = void 0;
var _composeClasses = _interopRequireDefault(require("b075754a0f422006"));
var _generateUtilityClass = _interopRequireDefault(require("3ffb5a4df4e23073"));
var _generateUtilityClasses = _interopRequireDefault(require("7e1941538641e4d0"));
function getLabelGradientUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsLabelGradient', slot);
}
const labelGradientClasses = exports.labelGradientClasses = (0, _generateUtilityClasses.default)('MuiChartsLabelGradient', [
    'root',
    'vertical',
    'horizontal',
    'mask',
    'fill'
]);
const useUtilityClasses = (props)=>{
    const { direction } = props;
    const slots = {
        root: [
            'root',
            direction
        ],
        mask: [
            'mask'
        ],
        fill: [
            'fill'
        ]
    };
    return (0, _composeClasses.default)(slots, getLabelGradientUtilityClass, props.classes);
};
exports.useUtilityClasses = useUtilityClasses;

},{"5fdd0a0c5d9e1359":"1P3rZ","b075754a0f422006":"gluJr","3ffb5a4df4e23073":"iAc9p","7e1941538641e4d0":"3J0Rs"}],"5uPBX":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("3651711d2094c39e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useUtilityClasses = exports.continuousColorLegendClasses = void 0;
var _generateUtilityClass = _interopRequireDefault(require("74dd53db54fcfd89"));
var _generateUtilityClasses = _interopRequireDefault(require("84ce496c3b0a78bd"));
var _composeClasses = _interopRequireDefault(require("9ff6dc751e55463d"));
function getLegendUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiContinuousColorLegend', slot);
}
const useUtilityClasses = (props)=>{
    const { classes, direction, labelPosition } = props;
    const slots = {
        root: [
            'root',
            direction,
            labelPosition
        ],
        minLabel: [
            'minLabel'
        ],
        maxLabel: [
            'maxLabel'
        ],
        gradient: [
            'gradient'
        ],
        mark: [
            'mark'
        ],
        label: [
            'label'
        ]
    };
    return (0, _composeClasses.default)(slots, getLegendUtilityClass, classes);
};
exports.useUtilityClasses = useUtilityClasses;
const continuousColorLegendClasses = exports.continuousColorLegendClasses = (0, _generateUtilityClasses.default)('MuiContinuousColorLegend', [
    'root',
    'minLabel',
    'maxLabel',
    'gradient',
    'vertical',
    'horizontal',
    'start',
    'end',
    'extremes',
    'label'
]);

},{"3651711d2094c39e":"1P3rZ","74dd53db54fcfd89":"iAc9p","84ce496c3b0a78bd":"3J0Rs","9ff6dc751e55463d":"gluJr"}],"cWcyv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"86SYV":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("24688f7df037987f").default;
var _interopRequireWildcard = require("65228b3a944a984a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PiecewiseColorLegend = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("b925bd3d86e93e9d"));
var _extends2 = _interopRequireDefault(require("9df88cc5c815ab5e"));
var React = _interopRequireWildcard(require("7a96a423aed288ae"));
var _propTypes = _interopRequireDefault(require("d3cb497b78f878f3"));
var _styles = require("2b289f822a7560c2");
var _clsx = _interopRequireDefault(require("64524e9ec9f9963"));
var _ChartsLabel = require("61a14861e76175b4");
var _ChartsLabelMark = require("3c8ab9427aea17cc");
var _consumeThemeProps = require("5b13e80e3b831e7b");
var _piecewiseColorLegendClasses = require("e318b27d161ee05f");
var _useAxis = require("7a60556bcd7e7812");
var _piecewiseColorDefaultLabelFormatter = require("26bfeb66507091b6");
var _jsxRuntime = require("cceaba5871d0359e");
const _excluded = [
    "direction",
    "classes",
    "className",
    "markType",
    "labelPosition",
    "axisDirection",
    "axisId",
    "labelFormatter",
    "onItemClick"
];
const RootElement = (0, _styles.styled)('ul', {
    name: 'MuiPiecewiseColorLegend',
    slot: 'Root'
})(({ theme, ownerState })=>{
    return (0, _extends2.default)({}, theme.typography.caption, {
        color: (theme.vars || theme).palette.text.primary,
        lineHeight: '100%',
        display: 'flex',
        flexDirection: ownerState.direction === 'vertical' ? 'column' : 'row',
        flexShrink: 0,
        gap: theme.spacing(0.5),
        listStyleType: 'none',
        paddingInlineStart: 0,
        marginBlock: theme.spacing(1),
        marginInline: theme.spacing(1),
        width: 'max-content',
        [`button.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.item}`]: {
            // Reset button styles
            background: 'none',
            border: 'none',
            padding: 0,
            cursor: ownerState.onItemClick ? 'pointer' : 'unset',
            fontFamily: 'inherit',
            fontWeight: 'inherit',
            fontSize: 'inherit',
            letterSpacing: 'inherit',
            color: 'inherit'
        },
        [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.item}`]: {
            display: 'flex',
            gap: theme.spacing(0.5)
        },
        [`li :not(.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.minLabel}, .${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.maxLabel}) .${_piecewiseColorLegendClasses.piecewiseColorLegendClasses?.mark}`]: {
            alignSelf: 'center'
        },
        [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.start}`]: {
            alignItems: 'end'
        },
        [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.end}`]: {
            alignItems: 'start'
        },
        [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.horizontal}`]: {
            alignItems: 'center',
            [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.item}`]: {
                flexDirection: 'column'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.start}`]: {
                alignItems: 'end'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.end}`]: {
                alignItems: 'start'
            },
            [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.minLabel}`]: {
                alignItems: 'end'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.extremes}`]: {
                [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.minLabel}, .${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.maxLabel}`]: {
                    alignItems: 'center',
                    display: 'flex',
                    flexDirection: 'row'
                }
            }
        },
        [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.vertical}`]: {
            [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.item}`]: {
                flexDirection: 'row',
                alignItems: 'center'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.start}`]: {
                alignItems: 'end'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.end}`]: {
                alignItems: 'start'
            },
            [`&.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.extremes}`]: {
                alignItems: 'center',
                [`.${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.minLabel}, .${_piecewiseColorLegendClasses.piecewiseColorLegendClasses.maxLabel}`]: {
                    alignItems: 'center',
                    display: 'flex',
                    flexDirection: 'column'
                }
            }
        }
    });
});
const PiecewiseColorLegend = exports.PiecewiseColorLegend = (0, _consumeThemeProps.consumeThemeProps)('MuiPiecewiseColorLegend', {
    defaultProps: {
        direction: 'horizontal',
        labelPosition: 'extremes',
        labelFormatter: _piecewiseColorDefaultLabelFormatter.piecewiseColorDefaultLabelFormatter
    },
    classesResolver: _piecewiseColorLegendClasses.useUtilityClasses
}, function PiecewiseColorLegend(props, ref) {
    const { direction, classes, className, markType, labelPosition, axisDirection, axisId, labelFormatter, onItemClick } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const isVertical = direction === 'vertical';
    const isReverse = isVertical;
    const axisItem = (0, _useAxis.useAxis)({
        axisDirection,
        axisId
    });
    const colorMap = axisItem?.colorMap;
    if (!colorMap || !colorMap.type || colorMap.type !== 'piecewise') return null;
    const valueFormatter = (v)=>axisItem.valueFormatter?.(v, {
            location: 'legend'
        }) ?? v.toLocaleString();
    const formattedLabels = colorMap.thresholds.map(valueFormatter);
    const startClass = isReverse ? classes?.maxLabel : classes?.minLabel;
    const endClass = isReverse ? classes?.minLabel : classes?.maxLabel;
    const colors = colorMap.colors.map((color, colorIndex)=>({
            color,
            colorIndex
        }));
    const orderedColors = isReverse ? colors.reverse() : colors;
    const isStart = labelPosition === 'start';
    const isEnd = labelPosition === 'end';
    const isExtremes = labelPosition === 'extremes';
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(RootElement, (0, _extends2.default)({
        className: (0, _clsx.default)(classes?.root, className),
        ref: ref
    }, other, {
        ownerState: props,
        children: orderedColors.map(({ color, colorIndex }, index)=>{
            const isFirst = index === 0;
            const isLast = index === colorMap.colors.length - 1;
            const isFirstColor = colorIndex === 0;
            const isLastColor = colorIndex === colorMap.colors.length - 1;
            const data = (0, _extends2.default)({
                index: colorIndex,
                length: formattedLabels.length
            }, isFirstColor ? {
                min: null,
                formattedMin: null
            } : {
                min: colorMap.thresholds[colorIndex - 1],
                formattedMin: formattedLabels[colorIndex - 1]
            }, isLastColor ? {
                max: null,
                formattedMax: null
            } : {
                max: colorMap.thresholds[colorIndex],
                formattedMax: formattedLabels[colorIndex]
            });
            const label = labelFormatter?.(data);
            if (label === null || label === undefined) return null;
            const isTextBefore = isStart || isExtremes && isFirst;
            const isTextAfter = isEnd || isExtremes && isLast;
            const clickObject = {
                type: 'piecewiseColor',
                color,
                label,
                minValue: data.min,
                maxValue: data.max
            };
            const Element = onItemClick ? 'button' : 'div';
            return /*#__PURE__*/ (0, _jsxRuntime.jsx)("li", {
                children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(Element, {
                    role: onItemClick ? 'button' : undefined,
                    type: onItemClick ? 'button' : undefined,
                    onClick: // @ts-ignore onClick is only attached to a button
                    onItemClick ? (event)=>onItemClick(event, clickObject, index) : undefined,
                    className: (0, _clsx.default)(classes?.item, index === 0 && `${startClass}`, index === orderedColors.length - 1 && `${endClass}`),
                    children: [
                        isTextBefore && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabel.ChartsLabel, {
                            className: classes?.label,
                            children: label
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabelMark.ChartsLabelMark, {
                            className: classes?.mark,
                            type: markType,
                            color: color
                        }),
                        isTextAfter && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLabel.ChartsLabel, {
                            className: classes?.label,
                            children: label
                        })
                    ]
                })
            }, colorIndex);
        })
    }));
});
PiecewiseColorLegend.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * The axis direction containing the color configuration to represent.
   * @default 'z'
   */ axisDirection: _propTypes.default.oneOf([
        'x',
        'y',
        'z'
    ]),
    /**
   * The id of the axis item with the color configuration to represent.
   * @default The first axis item.
   */ axisId: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]),
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    className: _propTypes.default.string,
    /**
   * The direction of the legend layout.
   * @default 'horizontal'
   */ direction: _propTypes.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * Format the legend labels.
   * @param {PiecewiseLabelFormatterParams} params The bound of the piece to format.
   * @returns {string|null} The displayed label, `''` to skip the label but show the color mark, or `null` to skip it entirely.
   */ labelFormatter: _propTypes.default.func,
    /**
   * Where to position the labels relative to the gradient.
   * @default 'extremes'
   */ labelPosition: _propTypes.default.oneOf([
        'start',
        'end',
        'extremes'
    ]),
    /**
   * The type of the mark.
   * @default 'square'
   */ markType: _propTypes.default.oneOf([
        'square',
        'circle',
        'line'
    ]),
    /**
   * Callback fired when a legend item is clicked.
   * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event The click event.
   * @param {PiecewiseColorLegendItemContext} legendItem The legend item data.
   * @param {number} index The index of the clicked legend item.
   */ onItemClick: _propTypes.default.func,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ])
};

},{"24688f7df037987f":"1P3rZ","65228b3a944a984a":"6TFJp","b925bd3d86e93e9d":"17jFf","9df88cc5c815ab5e":"lKa0J","7a96a423aed288ae":"jMk1U","d3cb497b78f878f3":"GNqOQ","2b289f822a7560c2":"7eExx","64524e9ec9f9963":"dOSJC","61a14861e76175b4":"9prOk","3c8ab9427aea17cc":"hyAIM","5b13e80e3b831e7b":"4S77q","e318b27d161ee05f":"b96ht","7a60556bcd7e7812":"hqvIW","26bfeb66507091b6":"8QGSV","cceaba5871d0359e":"05iiF"}],"b96ht":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("8b2a77b944b697e9").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useUtilityClasses = exports.piecewiseColorLegendClasses = void 0;
var _generateUtilityClass = _interopRequireDefault(require("4d997d6f90146beb"));
var _generateUtilityClasses = _interopRequireDefault(require("8acae87142976e47"));
var _composeClasses = _interopRequireDefault(require("8e78feca19a020a"));
function getLegendUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiPiecewiseColorLegendClasses', slot);
}
const useUtilityClasses = (props)=>{
    const { classes, direction, labelPosition } = props;
    const slots = {
        root: [
            'root',
            direction,
            labelPosition
        ],
        minLabel: [
            'minLabel'
        ],
        maxLabel: [
            'maxLabel'
        ],
        item: [
            'item'
        ],
        mark: [
            'mark'
        ],
        label: [
            'label'
        ]
    };
    return (0, _composeClasses.default)(slots, getLegendUtilityClass, classes);
};
exports.useUtilityClasses = useUtilityClasses;
const piecewiseColorLegendClasses = exports.piecewiseColorLegendClasses = (0, _generateUtilityClasses.default)('MuiPiecewiseColorLegendClasses', [
    'root',
    'minLabel',
    'maxLabel',
    'item',
    'vertical',
    'horizontal',
    'start',
    'end',
    'extremes',
    'mark',
    'label'
]);

},{"8b2a77b944b697e9":"1P3rZ","4d997d6f90146beb":"iAc9p","8acae87142976e47":"3J0Rs","8e78feca19a020a":"gluJr"}],"8QGSV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.piecewiseColorDefaultLabelFormatter = piecewiseColorDefaultLabelFormatter;
function piecewiseColorDefaultLabelFormatter(params) {
    if (params.min === null) return `<${params.formattedMax}`;
    if (params.max === null) return `>${params.formattedMin}`;
    return `${params.formattedMin}-${params.formattedMax}`;
}

},{}],"fdrDt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"gy2mI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsAxisHighlight = require("9b1d3224e566919d");
Object.keys(_ChartsAxisHighlight).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsAxisHighlight[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsAxisHighlight[key];
        }
    });
});
var _chartsAxisHighlightClasses = require("ef5626a361f4cfd1");
Object.keys(_chartsAxisHighlightClasses).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _chartsAxisHighlightClasses[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _chartsAxisHighlightClasses[key];
        }
    });
});
var _ChartsAxisHighlight2 = require("d48ac92d413631d5");
Object.keys(_ChartsAxisHighlight2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsAxisHighlight2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsAxisHighlight2[key];
        }
    });
});
var _ChartsAxisHighlightPath = require("8b74681669cf4520");
Object.keys(_ChartsAxisHighlightPath).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsAxisHighlightPath[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsAxisHighlightPath[key];
        }
    });
});

},{"9b1d3224e566919d":"4lyKf","ef5626a361f4cfd1":"glgmZ","d48ac92d413631d5":"5COa3","8b74681669cf4520":"4WxSa"}],"4lyKf":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("be89de20ec476857").default;
var _interopRequireWildcard = require("d4ccfe88bf1a3274").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsAxisHighlight = ChartsAxisHighlight;
var React = _interopRequireWildcard(require("ef0bda118fe6b346"));
var _propTypes = _interopRequireDefault(require("44ed6a4167c39b84"));
var _composeClasses = _interopRequireDefault(require("ea3ddeef0b947313"));
var _chartsAxisHighlightClasses = require("6bcc55e0f25f44e9");
var _ChartsYAxisHighlight = _interopRequireDefault(require("1008993d66488617"));
var _ChartsXAxisHighlight = _interopRequireDefault(require("22ddf0ad76339a51"));
var _jsxRuntime = require("d4b287579fd32580");
const useUtilityClasses = ()=>{
    const slots = {
        root: [
            'root'
        ]
    };
    return (0, _composeClasses.default)(slots, _chartsAxisHighlightClasses.getAxisHighlightUtilityClass);
};
/**
 * Demos:
 *
 * - [Custom components](https://mui.com/x/react-charts/components/)
 *
 * API:
 *
 * - [ChartsAxisHighlight API](https://mui.com/x/api/charts/charts-axis-highlight/)
 */ function ChartsAxisHighlight(props) {
    const { x: xAxisHighlight, y: yAxisHighlight } = props;
    const classes = useUtilityClasses();
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
        children: [
            xAxisHighlight && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsXAxisHighlight.default, {
                type: xAxisHighlight,
                classes: classes
            }),
            yAxisHighlight && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsYAxisHighlight.default, {
                type: yAxisHighlight,
                classes: classes
            })
        ]
    });
}
ChartsAxisHighlight.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    x: _propTypes.default.oneOf([
        'band',
        'line',
        'none'
    ]),
    y: _propTypes.default.oneOf([
        'band',
        'line',
        'none'
    ])
};

},{"be89de20ec476857":"1P3rZ","d4ccfe88bf1a3274":"6TFJp","ef0bda118fe6b346":"jMk1U","44ed6a4167c39b84":"GNqOQ","ea3ddeef0b947313":"gluJr","6bcc55e0f25f44e9":"glgmZ","1008993d66488617":"duFl6","22ddf0ad76339a51":"2pBaY","d4b287579fd32580":"05iiF"}],"glgmZ":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("becb7b4f31c6c674").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.chartsAxisHighlightClasses = void 0;
exports.getAxisHighlightUtilityClass = getAxisHighlightUtilityClass;
var _generateUtilityClass = _interopRequireDefault(require("bf38fbfb5a016737"));
var _generateUtilityClasses = _interopRequireDefault(require("983b932f7b9640d9"));
function getAxisHighlightUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsAxisHighlight', slot);
}
const chartsAxisHighlightClasses = exports.chartsAxisHighlightClasses = (0, _generateUtilityClasses.default)('MuiChartsAxisHighlight', [
    'root'
]);

},{"becb7b4f31c6c674":"1P3rZ","bf38fbfb5a016737":"iAc9p","983b932f7b9640d9":"3J0Rs"}],"duFl6":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("1cd862b6e6625b99").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ChartsYHighlight;
var React = _interopRequireWildcard(require("33936d1d1b95bcb"));
var _useScale = require("5e2da99a435ff36e");
var _isBandScale = require("c9126729ae71cec7");
var _useSelector = require("339cec5e9ca221b");
var _useStore = require("b50137463d2e1734");
var _useChartCartesianAxis = require("825dae77f7d9316f");
var _hooks = require("ad2524f984449201");
var _ChartsAxisHighlightPath = require("8894b38c913cdc3c");
var _jsxRuntime = require("5838c0412c0fe97b");
/**
 * @ignore - internal component.
 */ function ChartsYHighlight(props) {
    const { type, classes } = props;
    const { left, width } = (0, _hooks.useDrawingArea)();
    const yScale = (0, _useScale.useYScale)();
    const store = (0, _useStore.useStore)();
    const axisYValue = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionYAxisValue);
    const getYPosition = (0, _useScale.getValueToPositionMapper)(yScale);
    const isBandScaleY = type === 'band' && axisYValue !== null && (0, _isBandScale.isBandScale)(yScale);
    {
        const isError = isBandScaleY && yScale(axisYValue) === undefined;
        if (isError) console.error([
            `MUI X Charts: The position value provided for the axis is not valid for the current scale.`,
            `This probably means something is wrong with the data passed to the chart.`,
            `The ChartsAxisHighlight component will not be displayed.`
        ].join('\n'));
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
        children: [
            isBandScaleY && yScale(axisYValue) !== undefined && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisHighlightPath.ChartsAxisHighlightPath, {
                d: `M ${left} ${// @ts-expect-error, yScale value is checked in the statement above
                yScale(axisYValue) - (yScale.step() - yScale.bandwidth()) / 2} l 0 ${yScale.step()} l ${width} 0 l 0 ${-yScale.step()} Z`,
                className: classes.root,
                ownerState: {
                    axisHighlight: 'band'
                }
            }),
            type === 'line' && axisYValue !== null && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisHighlightPath.ChartsAxisHighlightPath, {
                d: `M ${left} ${getYPosition(axisYValue)} L ${left + width} ${getYPosition(axisYValue)}`,
                className: classes.root,
                ownerState: {
                    axisHighlight: 'line'
                }
            })
        ]
    });
}

},{"1cd862b6e6625b99":"6TFJp","33936d1d1b95bcb":"jMk1U","5e2da99a435ff36e":"uL1ts","c9126729ae71cec7":"58Ehn","339cec5e9ca221b":"65ofz","b50137463d2e1734":"6viTh","825dae77f7d9316f":"iMsPz","ad2524f984449201":"92Hil","8894b38c913cdc3c":"4WxSa","5838c0412c0fe97b":"05iiF"}],"4WxSa":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("6f941e10ab4e684a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsAxisHighlightPath = void 0;
var _extends2 = _interopRequireDefault(require("54a3cdd91bd29170"));
var _styles = require("a3cb2beeff84d22b");
const ChartsAxisHighlightPath = exports.ChartsAxisHighlightPath = (0, _styles.styled)('path', {
    name: 'MuiChartsAxisHighlight',
    slot: 'Root'
})(({ theme })=>({
        pointerEvents: 'none',
        variants: [
            {
                props: {
                    axisHighlight: 'band'
                },
                style: (0, _extends2.default)({
                    fill: 'white',
                    fillOpacity: 0.1
                }, theme.applyStyles('light', {
                    fill: 'gray'
                }))
            },
            {
                props: {
                    axisHighlight: 'line'
                },
                style: (0, _extends2.default)({
                    strokeDasharray: '5 2',
                    stroke: '#ffffff'
                }, theme.applyStyles('light', {
                    stroke: '#000000'
                }))
            }
        ]
    }));

},{"6f941e10ab4e684a":"1P3rZ","54a3cdd91bd29170":"lKa0J","a3cb2beeff84d22b":"7eExx"}],"2pBaY":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("6bc9fb6540440b16").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ChartsXHighlight;
var React = _interopRequireWildcard(require("769246ed824d737a"));
var _useScale = require("f4236c1e35b6c2b5");
var _isBandScale = require("20f8e5b0e11f8fc8");
var _useSelector = require("e48af5b603cf76b8");
var _useStore = require("1a7e392de89a39ca");
var _useChartCartesianAxis = require("750a0dabf5394b26");
var _hooks = require("c88c6cd2048f4efc");
var _ChartsAxisHighlightPath = require("58711af5d039f440");
var _jsxRuntime = require("5c66520f4cc7796b");
/**
 * @ignore - internal component.
 */ function ChartsXHighlight(props) {
    const { type, classes } = props;
    const { top, height } = (0, _hooks.useDrawingArea)();
    const xScale = (0, _useScale.useXScale)();
    const store = (0, _useStore.useStore)();
    const axisXValue = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionXAxisValue);
    const getXPosition = (0, _useScale.getValueToPositionMapper)(xScale);
    const isBandScaleX = type === 'band' && axisXValue !== null && (0, _isBandScale.isBandScale)(xScale);
    {
        const isError = isBandScaleX && xScale(axisXValue) === undefined;
        if (isError) console.error([
            `MUI X Charts: The position value provided for the axis is not valid for the current scale.`,
            `This probably means something is wrong with the data passed to the chart.`,
            `The ChartsAxisHighlight component will not be displayed.`
        ].join('\n'));
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
        children: [
            isBandScaleX && xScale(axisXValue) !== undefined && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisHighlightPath.ChartsAxisHighlightPath, {
                d: `M ${xScale(axisXValue) - (xScale.step() - xScale.bandwidth()) / 2} ${top} l ${xScale.step()} 0 l 0 ${height} l ${-xScale.step()} 0 Z`,
                className: classes.root,
                ownerState: {
                    axisHighlight: 'band'
                }
            }),
            type === 'line' && axisXValue !== null && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxisHighlightPath.ChartsAxisHighlightPath, {
                d: `M ${getXPosition(axisXValue)} ${top} L ${getXPosition(axisXValue)} ${top + height}`,
                className: classes.root,
                ownerState: {
                    axisHighlight: 'line'
                }
            })
        ]
    });
}

},{"6bc9fb6540440b16":"6TFJp","769246ed824d737a":"jMk1U","f4236c1e35b6c2b5":"uL1ts","20f8e5b0e11f8fc8":"58Ehn","e48af5b603cf76b8":"65ofz","1a7e392de89a39ca":"6viTh","750a0dabf5394b26":"iMsPz","c88c6cd2048f4efc":"92Hil","58711af5d039f440":"4WxSa","5c66520f4cc7796b":"05iiF"}],"5COa3":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"jqVGn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsClipPath = require("a3028e5fd592d9a5");
Object.keys(_ChartsClipPath).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsClipPath[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsClipPath[key];
        }
    });
});

},{"a3028e5fd592d9a5":"5EoZK"}],"5EoZK":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("bcd8d77973ba17e8").default;
var _interopRequireDefault = require("70200e9f66bbc69").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsClipPath = ChartsClipPath;
var _extends2 = _interopRequireDefault(require("b75db50af860c153"));
var React = _interopRequireWildcard(require("bacc4145ad34f0be"));
var _propTypes = _interopRequireDefault(require("4980db0c683d3f99"));
var _useDrawingArea = require("e542722f68f5fd06");
var _jsxRuntime = require("23f06dac8da42146");
/**
 * API:
 *
 * - [ChartsClipPath API](https://mui.com/x/api/charts/charts-clip-path/)
 */ function ChartsClipPath(props) {
    const { id, offset: offsetProps } = props;
    const { left, top, width, height } = (0, _useDrawingArea.useDrawingArea)();
    const offset = (0, _extends2.default)({
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    }, offsetProps);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("clipPath", {
        id: id,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)("rect", {
            x: left - offset.left,
            y: top - offset.top,
            width: width + offset.left + offset.right,
            height: height + offset.top + offset.bottom
        })
    });
}
ChartsClipPath.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    id: _propTypes.default.string.isRequired,
    offset: _propTypes.default.shape({
        bottom: _propTypes.default.number,
        left: _propTypes.default.number,
        right: _propTypes.default.number,
        top: _propTypes.default.number
    })
};

},{"bcd8d77973ba17e8":"6TFJp","70200e9f66bbc69":"1P3rZ","b75db50af860c153":"lKa0J","bacc4145ad34f0be":"jMk1U","4980db0c683d3f99":"GNqOQ","e542722f68f5fd06":"6LtKb","23f06dac8da42146":"05iiF"}],"cisN1":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("5daf39de7bf4f9b8").default;
var _interopRequireWildcard = require("8bada7bacc53d893").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LineHighlightPlot = LineHighlightPlot;
var _extends2 = _interopRequireDefault(require("9d9f670d7b13fed9"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("fda917843957a748"));
var React = _interopRequireWildcard(require("8a1cb7ca0ef620ab"));
var _propTypes = _interopRequireDefault(require("a597886f21c6e5b8"));
var _useStore = require("bff5213ff2b34e8b");
var _useSelector = require("f5016acac543233");
var _LineHighlightElement = require("b39e8fa341a02ec3");
var _useScale = require("f892d19a0c50541d");
var _constants = require("32f170d7530a82be");
var _useLineSeries = require("97dc451b4642f710");
var _getColor = _interopRequireDefault(require("f8d7a39ed0270811"));
var _ChartProvider = require("e39b519554903ced");
var _useChartCartesianAxis = require("fa490374c49f4b7d");
var _useAxis = require("d17d8e0a5241f38e");
var _jsxRuntime = require("52d3aec6051a72c9");
const _excluded = [
    "slots",
    "slotProps"
];
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LineHighlightPlot API](https://mui.com/x/api/charts/line-highlight-plot/)
 */ function LineHighlightPlot(props) {
    const { slots, slotProps } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const seriesData = (0, _useLineSeries.useLineSeriesContext)();
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const { yAxis, yAxisIds } = (0, _useAxis.useYAxes)();
    const { instance } = (0, _ChartProvider.useChartContext)();
    const store = (0, _useStore.useStore)();
    const highlightedIndex = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartsInteractionXAxisIndex);
    if (highlightedIndex === null) return null;
    if (seriesData === undefined) return null;
    const { series, stackingGroups } = seriesData;
    const defaultXAxisId = xAxisIds[0];
    const defaultYAxisId = yAxisIds[0];
    const Element = slots?.lineHighlight ?? _LineHighlightElement.LineHighlightElement;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("g", (0, _extends2.default)({}, other, {
        children: stackingGroups.flatMap(({ ids: groupIds })=>{
            return groupIds.flatMap((seriesId)=>{
                const { xAxisId = defaultXAxisId, yAxisId = defaultYAxisId, stackedData, data, disableHighlight, shape = 'circle' } = series[seriesId];
                if (disableHighlight || data[highlightedIndex] == null) return null;
                const xScale = (0, _useScale.getValueToPositionMapper)(xAxis[xAxisId].scale);
                const yScale = yAxis[yAxisId].scale;
                const xData = xAxis[xAxisId].data;
                if (xData === undefined) throw new Error(`MUI X Charts: ${xAxisId === _constants.DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id "${xAxisId}"`} should have data property to be able to display a line plot.`);
                const x = xScale(xData[highlightedIndex]);
                const y = yScale(stackedData[highlightedIndex][1]); // This should not be undefined since y should not be a band scale
                if (!instance.isPointInside({
                    x,
                    y
                })) return null;
                const colorGetter = (0, _getColor.default)(series[seriesId], xAxis[xAxisId], yAxis[yAxisId]);
                return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Element, (0, _extends2.default)({
                    id: seriesId,
                    color: colorGetter(highlightedIndex),
                    x: x,
                    y: y,
                    shape: shape
                }, slotProps?.lineHighlight), `${seriesId}`);
            });
        })
    }));
}
LineHighlightPlot.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * The props used for each component slot.
   * @default {}
   */ slotProps: _propTypes.default.object,
    /**
   * Overridable component slots.
   * @default {}
   */ slots: _propTypes.default.object
};

},{"5daf39de7bf4f9b8":"1P3rZ","8bada7bacc53d893":"6TFJp","9d9f670d7b13fed9":"lKa0J","fda917843957a748":"17jFf","8a1cb7ca0ef620ab":"jMk1U","a597886f21c6e5b8":"GNqOQ","bff5213ff2b34e8b":"6viTh","f5016acac543233":"65ofz","b39e8fa341a02ec3":"bigPa","f892d19a0c50541d":"uL1ts","32f170d7530a82be":"2sqkC","97dc451b4642f710":"kI0zE","f8d7a39ed0270811":"awyA2","e39b519554903ced":"8cPIy","fa490374c49f4b7d":"iMsPz","d17d8e0a5241f38e":"gzVB1","52d3aec6051a72c9":"05iiF"}],"bigPa":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("2b1129dea9acbacf").default;
var _interopRequireWildcard = require("e6c47627dd2b511a").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LineHighlightElement = LineHighlightElement;
exports.getHighlightElementUtilityClass = getHighlightElementUtilityClass;
exports.lineHighlightElementClasses = void 0;
var _extends2 = _interopRequireDefault(require("ca3b166e830baaaa"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("6c2ca78a3b9a3faf"));
var React = _interopRequireWildcard(require("c582c59777af52f2"));
var _propTypes = _interopRequireDefault(require("eded5da67351bd8e"));
var _reactMajor = _interopRequireDefault(require("f0797ecf4c91f7af"));
var _d3Shape = require("6ded1ae8b0dfe669");
var _composeClasses = _interopRequireDefault(require("9de6b4c571c97a18"));
var _generateUtilityClass = _interopRequireDefault(require("c1d76109e9757b2a"));
var _generateUtilityClasses = _interopRequireDefault(require("dca4c664cb145303"));
var _getSymbol = require("9d73d0b08a5a5438");
var _jsxRuntime = require("b5d09d383fb44524");
const _excluded = [
    "x",
    "y",
    "id",
    "classes",
    "color",
    "shape"
];
function getHighlightElementUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiHighlightElement', slot);
}
const lineHighlightElementClasses = exports.lineHighlightElementClasses = (0, _generateUtilityClasses.default)('MuiHighlightElement', [
    'root'
]);
const useUtilityClasses = (ownerState)=>{
    const { classes, id } = ownerState;
    const slots = {
        root: [
            'root',
            `series-${id}`
        ]
    };
    return (0, _composeClasses.default)(slots, getHighlightElementUtilityClass, classes);
};
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LineHighlightElement API](https://mui.com/x/api/charts/line-highlight-element/)
 */ function LineHighlightElement(props) {
    const { x, y, color, shape } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const classes = useUtilityClasses(props);
    const Element = shape === 'circle' ? 'circle' : 'path';
    const additionalProps = shape === 'circle' ? {
        cx: 0,
        cy: 0,
        r: other.r === undefined ? 5 : other.r
    } : {
        d: (0, _d3Shape.symbol)(_d3Shape.symbolsFill[(0, _getSymbol.getSymbol)(shape)])()
    };
    // React 18 does not recognize `transformOrigin` and React 19 does not recognize `transform-origin`
    const transformOrigin = _reactMajor.default > 18 ? {
        transformOrigin: `${x} ${y}`
    } : {
        'transform-origin': `${x} ${y}`
    };
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Element, (0, _extends2.default)({
        pointerEvents: "none",
        className: classes.root,
        transform: `translate(${x} ${y})`,
        fill: color
    }, transformOrigin, additionalProps, other));
}
LineHighlightElement.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    classes: _propTypes.default.object,
    id: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.string
    ]).isRequired,
    shape: _propTypes.default.oneOf([
        'circle',
        'cross',
        'diamond',
        'square',
        'star',
        'triangle',
        'wye'
    ]).isRequired
};

},{"2b1129dea9acbacf":"1P3rZ","e6c47627dd2b511a":"6TFJp","ca3b166e830baaaa":"lKa0J","6c2ca78a3b9a3faf":"17jFf","c582c59777af52f2":"jMk1U","eded5da67351bd8e":"GNqOQ","f0797ecf4c91f7af":"afZfL","6ded1ae8b0dfe669":"bw44j","9de6b4c571c97a18":"gluJr","c1d76109e9757b2a":"iAc9p","dca4c664cb145303":"3J0Rs","9d73d0b08a5a5438":"cnV0V","b5d09d383fb44524":"05iiF"}],"afZfL":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("78014cccf1ed0c73").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("16129edb51051fdf"));
var _default = exports.default = parseInt(React.version, 10);

},{"78014cccf1ed0c73":"6TFJp","16129edb51051fdf":"jMk1U"}],"cfHRT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsGrid = require("9f8e86cdd3e9e3f4");
Object.keys(_ChartsGrid).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsGrid[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsGrid[key];
        }
    });
});
var _chartsGridClasses = require("443a9d27fd20a7e6");
Object.keys(_chartsGridClasses).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _chartsGridClasses[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _chartsGridClasses[key];
        }
    });
});

},{"9f8e86cdd3e9e3f4":"8sYEv","443a9d27fd20a7e6":"7Q5GC"}],"8sYEv":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("fe5523086ac5472c").default;
var _interopRequireWildcard = require("620f9afa84d71c0b").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsGrid = ChartsGrid;
var _extends2 = _interopRequireDefault(require("1cc506d81946a3b4"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("81da720059872429"));
var React = _interopRequireWildcard(require("f6a0d924e66ffdcc"));
var _propTypes = _interopRequireDefault(require("e4f4db217df645b5"));
var _composeClasses = _interopRequireDefault(require("11620c8f0fa5ba5d"));
var _styles = require("8cceb47755817fe5");
var _chartsGridClasses = require("4f7710fcbf9bfe32");
var _useDrawingArea = require("7433909f68390d37");
var _styledComponents = require("55bf760feba59bc4");
var _ChartsVerticalGrid = require("ac51d08924bc158d");
var _ChartsHorizontalGrid = require("f42216e6d0933809");
var _useAxis = require("d9893eaa830d3d2b");
var _jsxRuntime = require("7fe2a587b01b47e6");
const _excluded = [
    "vertical",
    "horizontal"
];
const useUtilityClasses = ({ classes })=>{
    const slots = {
        root: [
            'root'
        ],
        verticalLine: [
            'line',
            'verticalLine'
        ],
        horizontalLine: [
            'line',
            'horizontalLine'
        ]
    };
    return (0, _composeClasses.default)(slots, _chartsGridClasses.getChartsGridUtilityClass, classes);
};
/**
 * Demos:
 *
 * - [Axis](https://mui.com/x/react-charts/axis/)
 *
 * API:
 *
 * - [ChartsGrid API](https://mui.com/x/api/charts/charts-axis/)
 */ function ChartsGrid(inProps) {
    const props = (0, _styles.useThemeProps)({
        props: inProps,
        name: 'MuiChartsGrid'
    });
    const drawingArea = (0, _useDrawingArea.useDrawingArea)();
    const { vertical, horizontal } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const { xAxis, xAxisIds } = (0, _useAxis.useXAxes)();
    const { yAxis, yAxisIds } = (0, _useAxis.useYAxes)();
    const classes = useUtilityClasses(props);
    const horizontalAxis = yAxis[yAxisIds[0]];
    const verticalAxis = xAxis[xAxisIds[0]];
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_styledComponents.GridRoot, (0, _extends2.default)({}, other, {
        className: classes.root,
        children: [
            vertical && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsVerticalGrid.ChartsGridVertical, {
                axis: verticalAxis,
                start: drawingArea.top,
                end: drawingArea.height + drawingArea.top,
                classes: classes
            }),
            horizontal && /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsHorizontalGrid.ChartsGridHorizontal, {
                axis: horizontalAxis,
                start: drawingArea.left,
                end: drawingArea.width + drawingArea.left,
                classes: classes
            })
        ]
    }));
}
ChartsGrid.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   */ classes: _propTypes.default.object,
    /**
   * Displays horizontal grid.
   */ horizontal: _propTypes.default.bool,
    /**
   * Displays vertical grid.
   */ vertical: _propTypes.default.bool
};

},{"fe5523086ac5472c":"1P3rZ","620f9afa84d71c0b":"6TFJp","1cc506d81946a3b4":"lKa0J","81da720059872429":"17jFf","f6a0d924e66ffdcc":"jMk1U","e4f4db217df645b5":"GNqOQ","11620c8f0fa5ba5d":"gluJr","8cceb47755817fe5":"7eExx","4f7710fcbf9bfe32":"7Q5GC","7433909f68390d37":"6LtKb","55bf760feba59bc4":"3FTES","ac51d08924bc158d":"gHfwu","f42216e6d0933809":"2QyD1","d9893eaa830d3d2b":"gzVB1","7fe2a587b01b47e6":"05iiF"}],"7Q5GC":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("96141b575d1fc388").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.chartsGridClasses = void 0;
exports.getChartsGridUtilityClass = getChartsGridUtilityClass;
var _generateUtilityClass = _interopRequireDefault(require("ca25c20add25bb39"));
var _generateUtilityClasses = _interopRequireDefault(require("732cad9251c642a6"));
function getChartsGridUtilityClass(slot) {
    return (0, _generateUtilityClass.default)('MuiChartsGrid', slot);
}
const chartsGridClasses = exports.chartsGridClasses = (0, _generateUtilityClasses.default)('MuiChartsGrid', [
    'root',
    'line',
    'horizontalLine',
    'verticalLine'
]);

},{"96141b575d1fc388":"1P3rZ","ca25c20add25bb39":"iAc9p","732cad9251c642a6":"3J0Rs"}],"3FTES":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GridRoot = exports.GridLine = void 0;
var _styles = require("fed5ace8ff90f2e");
var _chartsGridClasses = require("cb2d6a64270e86");
const GridRoot = exports.GridRoot = (0, _styles.styled)('g', {
    name: 'MuiChartsGrid',
    slot: 'Root',
    overridesResolver: (props, styles)=>[
            {
                [`&.${_chartsGridClasses.chartsGridClasses.verticalLine}`]: styles.verticalLine
            },
            {
                [`&.${_chartsGridClasses.chartsGridClasses.horizontalLine}`]: styles.horizontalLine
            },
            styles.root
        ]
})({});
const GridLine = exports.GridLine = (0, _styles.styled)('line', {
    name: 'MuiChartsGrid',
    slot: 'Line'
})(({ theme })=>({
        stroke: (theme.vars || theme).palette.divider,
        shapeRendering: 'crispEdges',
        strokeWidth: 1
    }));

},{"fed5ace8ff90f2e":"7eExx","cb2d6a64270e86":"7Q5GC"}],"gHfwu":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("339ee4ba6242def1").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsGridVertical = ChartsGridVertical;
var React = _interopRequireWildcard(require("659f0fe30de80517"));
var _useTicks = require("9ba011b75c05ffc7");
var _styledComponents = require("3467929e4b949e0c");
var _jsxRuntime = require("7c83592482b62530");
/**
 * @ignore - internal component.
 */ function ChartsGridVertical(props) {
    const { axis, start, end, classes } = props;
    const { scale, tickNumber, tickInterval } = axis;
    const xTicks = (0, _useTicks.useTicks)({
        scale,
        tickNumber,
        tickInterval
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(React.Fragment, {
        children: xTicks.map(({ value, offset })=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(_styledComponents.GridLine, {
                y1: start,
                y2: end,
                x1: offset,
                x2: offset,
                className: classes.verticalLine
            }, `vertical-${value.getTime?.() ?? value}`))
    });
}

},{"339ee4ba6242def1":"6TFJp","659f0fe30de80517":"jMk1U","9ba011b75c05ffc7":"5xWvO","3467929e4b949e0c":"3FTES","7c83592482b62530":"05iiF"}],"2QyD1":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("3d3b83119da4afa7").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsGridHorizontal = ChartsGridHorizontal;
var React = _interopRequireWildcard(require("d803d47ee7634c17"));
var _useTicks = require("5c696a6b23c525ef");
var _styledComponents = require("11a63b9804f63e44");
var _jsxRuntime = require("aa91914a734f771e");
/**
 * @ignore - internal component.
 */ function ChartsGridHorizontal(props) {
    const { axis, start, end, classes } = props;
    const { scale, tickNumber, tickInterval } = axis;
    const yTicks = (0, _useTicks.useTicks)({
        scale,
        tickNumber,
        tickInterval
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(React.Fragment, {
        children: yTicks.map(({ value, offset })=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(_styledComponents.GridLine, {
                y1: offset,
                y2: offset,
                x1: start,
                x2: end,
                className: classes.horizontalLine
            }, `horizontal-${value.getTime?.() ?? value}`))
    });
}

},{"3d3b83119da4afa7":"6TFJp","d803d47ee7634c17":"jMk1U","5c696a6b23c525ef":"5xWvO","11a63b9804f63e44":"3FTES","aa91914a734f771e":"05iiF"}],"fcpxR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChartsLoadingOverlay", {
    enumerable: true,
    get: function() {
        return _ChartsLoadingOverlay.ChartsLoadingOverlay;
    }
});
Object.defineProperty(exports, "ChartsNoDataOverlay", {
    enumerable: true,
    get: function() {
        return _ChartsNoDataOverlay.ChartsNoDataOverlay;
    }
});
Object.defineProperty(exports, "ChartsOverlay", {
    enumerable: true,
    get: function() {
        return _ChartsOverlay.ChartsOverlay;
    }
});
var _ChartsOverlay = require("2e968bf22e88fe50");
var _ChartsLoadingOverlay = require("8e4d78951864c14");
var _ChartsNoDataOverlay = require("b8b506c84268e8b");

},{"2e968bf22e88fe50":"3Y4HZ","8e4d78951864c14":"2o4fV","b8b506c84268e8b":"aK1hs"}],"3Y4HZ":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("b2d87d6f3f180c92").default;
var _interopRequireDefault = require("dc71083b87370494").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsOverlay = ChartsOverlay;
exports.useNoData = useNoData;
var _extends2 = _interopRequireDefault(require("1be356ac08ffac15"));
var React = _interopRequireWildcard(require("4312e34b9b993f4"));
var _ChartsLoadingOverlay = require("a54dba0aa765bbe5");
var _useSeries = require("e15fc60aee74e284");
var _ChartsNoDataOverlay = require("d4bb9e78617c4e72");
var _jsxRuntime = require("16633b810d8886ba");
function useNoData() {
    const seriesPerType = (0, _useSeries.useSeries)();
    return Object.values(seriesPerType).every((seriesOfGivenType)=>{
        if (!seriesOfGivenType) return true;
        const { series, seriesOrder } = seriesOfGivenType;
        return seriesOrder.every((seriesId)=>series[seriesId].data.length === 0);
    });
}
function ChartsOverlay(props) {
    const noData = useNoData();
    if (props.loading) {
        const LoadingOverlay = props.slots?.loadingOverlay ?? _ChartsLoadingOverlay.ChartsLoadingOverlay;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(LoadingOverlay, (0, _extends2.default)({}, props.slotProps?.loadingOverlay));
    }
    if (noData) {
        const NoDataOverlay = props.slots?.noDataOverlay ?? _ChartsNoDataOverlay.ChartsNoDataOverlay;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(NoDataOverlay, (0, _extends2.default)({}, props.slotProps?.noDataOverlay));
    }
    return null;
}

},{"b2d87d6f3f180c92":"6TFJp","dc71083b87370494":"1P3rZ","1be356ac08ffac15":"lKa0J","4312e34b9b993f4":"jMk1U","a54dba0aa765bbe5":"2o4fV","e15fc60aee74e284":"aMvY8","d4bb9e78617c4e72":"aK1hs","16633b810d8886ba":"05iiF"}],"2o4fV":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("bb9cbe84006dcba2").default;
var _interopRequireWildcard = require("2d6747631fd54719").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsLoadingOverlay = ChartsLoadingOverlay;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("938a742a4ab67d10"));
var _extends2 = _interopRequireDefault(require("c17c722a8f0a5214"));
var React = _interopRequireWildcard(require("e06e3f4dc31b470f"));
var _styles = require("19461d30978530cc");
var _useDrawingArea = require("b14b40181c41d65");
var _useChartsLocalization = require("cae9c6b96b587668");
var _jsxRuntime = require("eea43883e5040a15");
const _excluded = [
    "message"
];
const StyledText = (0, _styles.styled)('text')(({ theme })=>(0, _extends2.default)({}, theme.typography.body2, {
        stroke: 'none',
        fill: (theme.vars || theme).palette.text.primary,
        shapeRendering: 'crispEdges',
        textAnchor: 'middle',
        dominantBaseline: 'middle'
    }));
function ChartsLoadingOverlay(props) {
    const { message } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const { top, left, height, width } = (0, _useDrawingArea.useDrawingArea)();
    const { localeText } = (0, _useChartsLocalization.useChartsLocalization)();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(StyledText, (0, _extends2.default)({
        x: left + width / 2,
        y: top + height / 2
    }, other, {
        children: message ?? localeText.loading
    }));
}

},{"bb9cbe84006dcba2":"1P3rZ","2d6747631fd54719":"6TFJp","938a742a4ab67d10":"17jFf","c17c722a8f0a5214":"lKa0J","e06e3f4dc31b470f":"jMk1U","19461d30978530cc":"7eExx","b14b40181c41d65":"6LtKb","cae9c6b96b587668":"8bMMH","eea43883e5040a15":"05iiF"}],"aK1hs":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("4cbc38e4f6f6de4e").default;
var _interopRequireWildcard = require("df88ae376aece289").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsNoDataOverlay = ChartsNoDataOverlay;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("317287863e0aeab"));
var _extends2 = _interopRequireDefault(require("d7047360ed443b9c"));
var React = _interopRequireWildcard(require("bfa451674ed4dbf7"));
var _styles = require("2543cfb09a8400c1");
var _useDrawingArea = require("29169f8df07bcc6f");
var _useChartsLocalization = require("6b211c7f32578e5d");
var _jsxRuntime = require("802f2428a800e422");
const _excluded = [
    "message"
];
const StyledText = (0, _styles.styled)('text')(({ theme })=>(0, _extends2.default)({}, theme.typography.body2, {
        stroke: 'none',
        fill: (theme.vars || theme).palette.text.primary,
        shapeRendering: 'crispEdges',
        textAnchor: 'middle',
        dominantBaseline: 'middle'
    }));
function ChartsNoDataOverlay(props) {
    const { message } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const { top, left, height, width } = (0, _useDrawingArea.useDrawingArea)();
    const { localeText } = (0, _useChartsLocalization.useChartsLocalization)();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(StyledText, (0, _extends2.default)({
        x: left + width / 2,
        y: top + height / 2
    }, other, {
        children: message ?? localeText.noData
    }));
}

},{"4cbc38e4f6f6de4e":"1P3rZ","df88ae376aece289":"6TFJp","317287863e0aeab":"17jFf","d7047360ed443b9c":"lKa0J","bfa451674ed4dbf7":"jMk1U","2543cfb09a8400c1":"7eExx","29169f8df07bcc6f":"6LtKb","6b211c7f32578e5d":"8bMMH","802f2428a800e422":"05iiF"}],"a8Lym":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("6ec0f374334ed01e").default;
var _interopRequireWildcard = require("b48f1be6272fb886").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useLineChartProps = void 0;
var _extends2 = _interopRequireDefault(require("fe55622b179ebd8a"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("da3ce1473afc5662"));
var React = _interopRequireWildcard(require("ff9915cac1037696"));
var _useId = _interopRequireDefault(require("38698a4b1fa8801f"));
var _constants = require("37a4d8c341fcc1e1");
var _LineChart = require("eb82d5278f4ae5a");
const _excluded = [
    "xAxis",
    "yAxis",
    "series",
    "width",
    "height",
    "margin",
    "colors",
    "dataset",
    "sx",
    "onAreaClick",
    "onLineClick",
    "onMarkClick",
    "axisHighlight",
    "disableLineItemHighlight",
    "hideLegend",
    "grid",
    "children",
    "slots",
    "slotProps",
    "skipAnimation",
    "loading",
    "highlightedItem",
    "onHighlightChange",
    "className"
];
/**
 * A helper function that extracts LineChartProps from the input props
 * and returns an object with props for the children components of LineChart.
 *
 * @param props The input props for LineChart
 * @returns An object with props for the children components of LineChart
 */ const useLineChartProps = (props)=>{
    const { xAxis, yAxis, series, width, height, margin, colors, dataset, sx, onAreaClick, onLineClick, onMarkClick, axisHighlight, disableLineItemHighlight, grid, children, slots, slotProps, skipAnimation, loading, highlightedItem, onHighlightChange, className } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const id = (0, _useId.default)();
    const clipPathId = `${id}-clip-path`;
    const seriesWithDefault = React.useMemo(()=>series.map((s)=>(0, _extends2.default)({
                disableHighlight: !!disableLineItemHighlight,
                type: 'line'
            }, s)), [
        disableLineItemHighlight,
        series
    ]);
    const chartContainerProps = (0, _extends2.default)({}, other, {
        series: seriesWithDefault,
        width,
        height,
        margin,
        colors,
        dataset,
        xAxis: xAxis ?? [
            {
                id: _constants.DEFAULT_X_AXIS_KEY,
                scaleType: 'point',
                data: Array.from({
                    length: Math.max(...series.map((s)=>(s.data ?? dataset ?? []).length))
                }, (_, index)=>index)
            }
        ],
        yAxis,
        highlightedItem,
        onHighlightChange,
        disableAxisListener: slotProps?.tooltip?.trigger !== 'axis' && axisHighlight?.x === 'none' && axisHighlight?.y === 'none',
        className,
        skipAnimation,
        plugins: _LineChart.LINE_CHART_PLUGINS
    });
    const gridProps = {
        vertical: grid?.vertical,
        horizontal: grid?.horizontal
    };
    const clipPathGroupProps = {
        clipPath: `url(#${clipPathId})`
    };
    const clipPathProps = {
        id: clipPathId
    };
    const areaPlotProps = {
        slots,
        slotProps,
        onItemClick: onAreaClick
    };
    const linePlotProps = {
        slots,
        slotProps,
        onItemClick: onLineClick
    };
    const markPlotProps = {
        slots,
        slotProps,
        onItemClick: onMarkClick,
        skipAnimation
    };
    const overlayProps = {
        slots,
        slotProps,
        loading
    };
    const chartsAxisProps = {
        slots,
        slotProps
    };
    const axisHighlightProps = (0, _extends2.default)({
        x: 'line'
    }, axisHighlight);
    const lineHighlightPlotProps = {
        slots,
        slotProps
    };
    const legendProps = {
        slots,
        slotProps
    };
    const chartsWrapperProps = {
        sx,
        legendPosition: props.slotProps?.legend?.position,
        legendDirection: props.slotProps?.legend?.direction
    };
    return {
        chartsWrapperProps,
        chartContainerProps,
        gridProps,
        clipPathProps,
        clipPathGroupProps,
        areaPlotProps,
        linePlotProps,
        markPlotProps,
        overlayProps,
        chartsAxisProps,
        axisHighlightProps,
        lineHighlightPlotProps,
        legendProps,
        children
    };
};
exports.useLineChartProps = useLineChartProps;

},{"6ec0f374334ed01e":"1P3rZ","b48f1be6272fb886":"6TFJp","fe55622b179ebd8a":"lKa0J","da3ce1473afc5662":"17jFf","ff9915cac1037696":"jMk1U","38698a4b1fa8801f":"ko2Df","37a4d8c341fcc1e1":"2sqkC","eb82d5278f4ae5a":"1pr5n"}],"1pr5n":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LINE_CHART_PLUGINS = void 0;
var _useChartZAxis = require("81e2d0c12c9126e1");
var _useChartCartesianAxis = require("4076732326e7c461");
var _useChartInteraction = require("d053e1e96b43cf52");
var _useChartHighlight = require("3018bd6e8136cd6e");
const LINE_CHART_PLUGINS = exports.LINE_CHART_PLUGINS = [
    _useChartZAxis.useChartZAxis,
    _useChartCartesianAxis.useChartCartesianAxis,
    _useChartInteraction.useChartInteraction,
    _useChartHighlight.useChartHighlight
];

},{"81e2d0c12c9126e1":"1DuPh","4076732326e7c461":"iMsPz","d053e1e96b43cf52":"4pi8Z","3018bd6e8136cd6e":"i6CFN"}],"ko43C":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("7c0c7132e3d0e9c3").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartContainerProps = void 0;
var _extends2 = _interopRequireDefault(require("a94bdba8e351d7e3"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("ecea016562bb43e4"));
var _allPlugins = require("ec2af6b2b6159bbb");
const _excluded = [
    "width",
    "height",
    "margin",
    "children",
    "series",
    "colors",
    "dataset",
    "desc",
    "onAxisClick",
    "disableVoronoi",
    "voronoiMaxRadius",
    "onItemClick",
    "disableAxisListener",
    "highlightedItem",
    "onHighlightChange",
    "sx",
    "title",
    "xAxis",
    "yAxis",
    "zAxis",
    "rotationAxis",
    "radiusAxis",
    "skipAnimation",
    "seriesConfig",
    "plugins",
    "localeText"
];
const useChartContainerProps = (props, ref)=>{
    const _ref = props, { width, height, margin, children, series, colors, dataset, desc, onAxisClick, disableVoronoi, voronoiMaxRadius, onItemClick, disableAxisListener, highlightedItem, onHighlightChange, sx, title, xAxis, yAxis, zAxis, rotationAxis, radiusAxis, skipAnimation, seriesConfig, plugins, localeText } = _ref, other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
    const chartsSurfaceProps = (0, _extends2.default)({
        title,
        desc,
        sx,
        ref
    }, other);
    const chartDataProviderProps = {
        margin,
        series,
        colors,
        dataset,
        disableAxisListener,
        highlightedItem,
        onHighlightChange,
        onAxisClick,
        disableVoronoi,
        voronoiMaxRadius,
        onItemClick,
        xAxis,
        yAxis,
        zAxis,
        rotationAxis,
        radiusAxis,
        skipAnimation,
        width,
        height,
        localeText,
        seriesConfig,
        plugins: plugins ?? _allPlugins.DEFAULT_PLUGINS
    };
    return {
        chartDataProviderProps,
        chartsSurfaceProps,
        children
    };
};
exports.useChartContainerProps = useChartContainerProps;

},{"7c0c7132e3d0e9c3":"1P3rZ","a94bdba8e351d7e3":"lKa0J","ecea016562bb43e4":"17jFf","ec2af6b2b6159bbb":"5atFx"}],"5atFx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_PLUGINS = void 0;
var _useChartCartesianAxis = require("d725d7f2f80e75b1");
var _useChartHighlight = require("33867a974e6bbf07");
var _useChartInteraction = require("6c849c7677f4da19");
var _useChartVoronoi = require("2fed4335b4fa604c");
var _useChartZAxis = require("acbfb3d68fd30e19");
// This file should be removed after creating all plugins in favor of a file per chart type.
const DEFAULT_PLUGINS = exports.DEFAULT_PLUGINS = [
    _useChartZAxis.useChartZAxis,
    _useChartCartesianAxis.useChartCartesianAxis,
    _useChartInteraction.useChartInteraction,
    _useChartHighlight.useChartHighlight,
    _useChartVoronoi.useChartVoronoi
];

},{"d725d7f2f80e75b1":"iMsPz","33867a974e6bbf07":"i6CFN","6c849c7677f4da19":"4pi8Z","2fed4335b4fa604c":"aivZ4","acbfb3d68fd30e19":"1DuPh"}],"aivZ4":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    useChartVoronoi: true
};
Object.defineProperty(exports, "useChartVoronoi", {
    enumerable: true,
    get: function() {
        return _useChartVoronoi.useChartVoronoi;
    }
});
var _useChartVoronoi = require("45eb5fcd73ed7f37");
var _useChartVoronoi2 = require("235148f9fba117c5");
Object.keys(_useChartVoronoi2).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _useChartVoronoi2[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _useChartVoronoi2[key];
        }
    });
});

},{"45eb5fcd73ed7f37":"eoNsh","235148f9fba117c5":"7socF"}],"eoNsh":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("82e87224cd1c6479").default;
var _interopRequireDefault = require("2de78b2b1eb1ad55").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartVoronoi = void 0;
var _extends2 = _interopRequireDefault(require("403706aa6b8a2c4"));
var React = _interopRequireWildcard(require("ab73f7451ae01ed9"));
var _useEnhancedEffect = _interopRequireDefault(require("ea762f04b808a768"));
var _useEventCallback = _interopRequireDefault(require("5a45ccefe8dd5ec1"));
var _d3Delaunay = require("32222e4dbda37269");
var _useScale = require("42e6ce90cfde7689");
var _getSVGPoint = require("1861a622196d0202");
var _useSelector = require("4b4726f697480114");
var _useChartCartesianAxis = require("528ebddfe78a6d02");
var _useChartSeries = require("72f3a6827d0a6ff2");
var _useChartDimensions = require("c021ffade93bda43");
const useChartVoronoi = ({ svgRef, params, store, instance })=>{
    const { disableVoronoi, voronoiMaxRadius, onItemClick } = params;
    const drawingArea = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);
    const { axis: xAxis, axisIds: xAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartXAxis);
    const { axis: yAxis, axisIds: yAxisIds } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartYAxis);
    const zoomIsInteracting = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartZoomIsInteracting);
    const { series, seriesOrder } = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesProcessed)?.scatter ?? {};
    const voronoiRef = React.useRef({});
    const delauneyRef = React.useRef(undefined);
    const lastFind = React.useRef(undefined);
    const defaultXAxisId = xAxisIds[0];
    const defaultYAxisId = yAxisIds[0];
    (0, _useEnhancedEffect.default)(()=>{
        store.update((prev)=>prev.voronoi.isVoronoiEnabled === !disableVoronoi ? prev : (0, _extends2.default)({}, prev, {
                voronoi: {
                    isVoronoiEnabled: !disableVoronoi
                }
            }));
    }, [
        store,
        disableVoronoi
    ]);
    (0, _useEnhancedEffect.default)(()=>{
        // This effect generate and store the Delaunay object that's used to map coordinate to closest point.
        if (zoomIsInteracting || seriesOrder === undefined || series === undefined || disableVoronoi) // If there is no scatter chart series
        return;
        voronoiRef.current = {};
        let points = [];
        seriesOrder.forEach((seriesId)=>{
            const { data, xAxisId, yAxisId } = series[seriesId];
            const xScale = xAxis[xAxisId ?? defaultXAxisId].scale;
            const yScale = yAxis[yAxisId ?? defaultYAxisId].scale;
            const getXPosition = (0, _useScale.getValueToPositionMapper)(xScale);
            const getYPosition = (0, _useScale.getValueToPositionMapper)(yScale);
            const seriesPoints = data.flatMap(({ x, y })=>{
                const pointX = getXPosition(x);
                const pointY = getYPosition(y);
                if (!instance.isPointInside({
                    x: pointX,
                    y: pointY
                })) // If the point is not displayed we move them to a trash coordinate.
                // This avoids managing index mapping before/after filtering.
                // The trash point is far enough such that any point in the drawing area will be closer to the mouse than the trash coordinate.
                return [
                    -drawingArea.width,
                    -drawingArea.height
                ];
                return [
                    pointX,
                    pointY
                ];
            });
            voronoiRef.current[seriesId] = {
                seriesId,
                startIndex: points.length,
                endIndex: points.length + seriesPoints.length
            };
            points = points.concat(seriesPoints);
        });
        delauneyRef.current = new _d3Delaunay.Delaunay(points);
        lastFind.current = undefined;
    }, [
        zoomIsInteracting,
        defaultXAxisId,
        defaultYAxisId,
        series,
        seriesOrder,
        xAxis,
        yAxis,
        drawingArea,
        instance,
        disableVoronoi
    ]);
    React.useEffect(()=>{
        if (svgRef.current === null || disableVoronoi) return undefined;
        const element = svgRef.current;
        function getClosestPoint(event) {
            // Get mouse coordinate in global SVG space
            const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, event);
            if (!instance.isPointInside(svgPoint)) {
                lastFind.current = undefined;
                return 'outside-chart';
            }
            if (!delauneyRef.current) return 'no-point-found';
            const closestPointIndex = delauneyRef.current.find(svgPoint.x, svgPoint.y, lastFind.current);
            if (closestPointIndex === undefined) return 'no-point-found';
            lastFind.current = closestPointIndex;
            const closestSeries = Object.values(voronoiRef.current).find((value)=>{
                return 2 * closestPointIndex >= value.startIndex && 2 * closestPointIndex < value.endIndex;
            });
            if (closestSeries === undefined) return 'no-point-found';
            const dataIndex = (2 * closestPointIndex - voronoiRef.current[closestSeries.seriesId].startIndex) / 2;
            if (voronoiMaxRadius !== undefined) {
                const pointX = delauneyRef.current.points[2 * closestPointIndex];
                const pointY = delauneyRef.current.points[2 * closestPointIndex + 1];
                const dist2 = (pointX - svgPoint.x) ** 2 + (pointY - svgPoint.y) ** 2;
                if (dist2 > voronoiMaxRadius ** 2) // The closest point is too far to be considered.
                return 'outside-voronoi-max-radius';
            }
            return {
                seriesId: closestSeries.seriesId,
                dataIndex
            };
        }
        const handleMouseLeave = ()=>{
            instance.cleanInteraction?.();
            instance.clearHighlight?.();
        };
        const handleMouseMove = (event)=>{
            const closestPoint = getClosestPoint(event);
            if (closestPoint === 'outside-chart') {
                instance.cleanInteraction?.();
                instance.clearHighlight?.();
                return;
            }
            if (closestPoint === 'outside-voronoi-max-radius' || closestPoint === 'no-point-found') {
                instance.removeItemInteraction?.();
                instance.clearHighlight?.();
                return;
            }
            const { seriesId, dataIndex } = closestPoint;
            instance.setItemInteraction?.({
                type: 'scatter',
                seriesId,
                dataIndex
            });
            instance.setHighlight?.({
                seriesId,
                dataIndex
            });
        };
        const handleMouseClick = (event)=>{
            if (!onItemClick) return;
            const closestPoint = getClosestPoint(event);
            if (typeof closestPoint === 'string') // No point fond for any reason
            return;
            const { seriesId, dataIndex } = closestPoint;
            onItemClick(event, {
                type: 'scatter',
                seriesId,
                dataIndex
            });
        };
        element.addEventListener('pointerleave', handleMouseLeave);
        element.addEventListener('pointermove', handleMouseMove);
        element.addEventListener('click', handleMouseClick);
        return ()=>{
            element.removeEventListener('pointerleave', handleMouseLeave);
            element.removeEventListener('pointermove', handleMouseMove);
            element.removeEventListener('click', handleMouseClick);
        };
    }, [
        svgRef,
        yAxis,
        xAxis,
        voronoiMaxRadius,
        onItemClick,
        disableVoronoi,
        drawingArea,
        instance
    ]);
    // Instance implementation
    const enableVoronoiCallback = (0, _useEventCallback.default)(()=>{
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                voronoi: (0, _extends2.default)({}, prev.voronoi, {
                    isVoronoiEnabled: true
                })
            }));
    });
    const disableVoronoiCallback = (0, _useEventCallback.default)(()=>{
        store.update((prev)=>(0, _extends2.default)({}, prev, {
                voronoi: (0, _extends2.default)({}, prev.voronoi, {
                    isVoronoiEnabled: false
                })
            }));
    });
    return {
        instance: {
            enableVoronoi: enableVoronoiCallback,
            disableVoronoi: disableVoronoiCallback
        }
    };
};
exports.useChartVoronoi = useChartVoronoi;
useChartVoronoi.getDefaultizedParams = ({ params })=>(0, _extends2.default)({}, params, {
        disableVoronoi: params.disableVoronoi ?? !params.series.some((item)=>item.type === 'scatter')
    });
useChartVoronoi.getInitialState = (params)=>({
        voronoi: {
            isVoronoiEnabled: !params.disableVoronoi
        }
    });
useChartVoronoi.params = {
    disableVoronoi: true,
    voronoiMaxRadius: true,
    onItemClick: true
};

},{"82e87224cd1c6479":"6TFJp","2de78b2b1eb1ad55":"1P3rZ","403706aa6b8a2c4":"lKa0J","ab73f7451ae01ed9":"jMk1U","ea762f04b808a768":"egHZg","5a45ccefe8dd5ec1":"7odel","32222e4dbda37269":"2c8El","42e6ce90cfde7689":"uL1ts","1861a622196d0202":"5546x","4b4726f697480114":"65ofz","528ebddfe78a6d02":"iMsPz","72f3a6827d0a6ff2":"79Eww","c021ffade93bda43":"5c4j2"}],"2c8El":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-delaunay` (CommonJS)
// See upstream license: https://github.com/d3/d3-delaunay/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("4a144243ccee51e");

},{"4a144243ccee51e":"c8d24"}],"c8d24":[function(require,module,exports,__globalThis) {
// `x-charts-vendor/d3-delaunay` (CommonJS)
// See upstream license: https://github.com/d3/d3-delaunay/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-delaunay`
module.exports = require("86f01a49085aa408");

},{"86f01a49085aa408":"4ncZl"}],"4ncZl":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("6e512e1af6c26657").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Delaunay", {
    enumerable: true,
    get: function() {
        return _delaunay.default;
    }
});
Object.defineProperty(exports, "Voronoi", {
    enumerable: true,
    get: function() {
        return _voronoi.default;
    }
});
var _delaunay = _interopRequireDefault(require("42c9b01231580542"));
var _voronoi = _interopRequireDefault(require("37db1230a6d83a39"));

},{"6e512e1af6c26657":"1P3rZ","42c9b01231580542":"3dYTN","37db1230a6d83a39":"fwZi2"}],"3dYTN":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("cb4052c1a2ed9969").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _index = _interopRequireDefault(require("702726502f322863"));
var _path = _interopRequireDefault(require("ffb5175cc0236898"));
var _polygon = _interopRequireDefault(require("3f946e8a6cf44198"));
var _voronoi = _interopRequireDefault(require("a419238690bfdbf1"));
const tau = 2 * Math.PI, pow = Math.pow;
function pointX(p) {
    return p[0];
}
function pointY(p) {
    return p[1];
}
// A triangulation is collinear if all its triangles have a non-null area
function collinear(d) {
    const { triangles, coords } = d;
    for(let i = 0; i < triangles.length; i += 3){
        const a = 2 * triangles[i], b = 2 * triangles[i + 1], c = 2 * triangles[i + 2], cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
        if (cross > 1e-10) return false;
    }
    return true;
}
function jitter(x, y, r) {
    return [
        x + Math.sin(x + y) * r,
        y + Math.cos(x - y) * r
    ];
}
class Delaunay {
    static from(points, fx = pointX, fy = pointY, that) {
        return new Delaunay("length" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));
    }
    constructor(points){
        this._delaunator = new _index.default(points);
        this.inedges = new Int32Array(points.length / 2);
        this._hullIndex = new Int32Array(points.length / 2);
        this.points = this._delaunator.coords;
        this._init();
    }
    update() {
        this._delaunator.update();
        this._init();
        return this;
    }
    _init() {
        const d = this._delaunator, points = this.points;
        // check for collinear
        if (d.hull && d.hull.length > 2 && collinear(d)) {
            this.collinear = Int32Array.from({
                length: points.length / 2
            }, (_, i)=>i).sort((i, j)=>points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors
            const e = this.collinear[0], f = this.collinear[this.collinear.length - 1], bounds = [
                points[2 * e],
                points[2 * e + 1],
                points[2 * f],
                points[2 * f + 1]
            ], r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
            for(let i = 0, n = points.length / 2; i < n; ++i){
                const p = jitter(points[2 * i], points[2 * i + 1], r);
                points[2 * i] = p[0];
                points[2 * i + 1] = p[1];
            }
            this._delaunator = new _index.default(points);
        } else delete this.collinear;
        const halfedges = this.halfedges = this._delaunator.halfedges;
        const hull = this.hull = this._delaunator.hull;
        const triangles = this.triangles = this._delaunator.triangles;
        const inedges = this.inedges.fill(-1);
        const hullIndex = this._hullIndex.fill(-1);
        // Compute an index from each point to an (arbitrary) incoming halfedge
        // Used to give the first neighbor of each point; for this reason,
        // on the hull we give priority to exterior halfedges
        for(let e = 0, n = halfedges.length; e < n; ++e){
            const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
            if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
        }
        for(let i = 0, n = hull.length; i < n; ++i)hullIndex[hull[i]] = i;
        // degenerate case: 1 or 2 (distinct) points
        if (hull.length <= 2 && hull.length > 0) {
            this.triangles = new Int32Array(3).fill(-1);
            this.halfedges = new Int32Array(3).fill(-1);
            this.triangles[0] = hull[0];
            inedges[hull[0]] = 1;
            if (hull.length === 2) {
                inedges[hull[1]] = 0;
                this.triangles[1] = hull[1];
                this.triangles[2] = hull[1];
            }
        }
    }
    voronoi(bounds) {
        return new _voronoi.default(this, bounds);
    }
    *neighbors(i) {
        const { inedges, hull, _hullIndex, halfedges, triangles, collinear } = this;
        // degenerate case with several collinear points
        if (collinear) {
            const l = collinear.indexOf(i);
            if (l > 0) yield collinear[l - 1];
            if (l < collinear.length - 1) yield collinear[l + 1];
            return;
        }
        const e0 = inedges[i];
        if (e0 === -1) return; // coincident point
        let e = e0, p0 = -1;
        do {
            yield p0 = triangles[e];
            e = e % 3 === 2 ? e - 2 : e + 1;
            if (triangles[e] !== i) return; // bad triangulation
            e = halfedges[e];
            if (e === -1) {
                const p = hull[(_hullIndex[i] + 1) % hull.length];
                if (p !== p0) yield p;
                return;
            }
        }while (e !== e0);
    }
    find(x, y, i = 0) {
        if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
        const i0 = i;
        let c;
        while((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0)i = c;
        return c;
    }
    _step(i, x, y) {
        const { inedges, hull, _hullIndex, halfedges, triangles, points } = this;
        if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
        let c = i;
        let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);
        const e0 = inedges[i];
        let e = e0;
        do {
            let t = triangles[e];
            const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);
            if (dt < dc) dc = dt, c = t;
            e = e % 3 === 2 ? e - 2 : e + 1;
            if (triangles[e] !== i) break; // bad triangulation
            e = halfedges[e];
            if (e === -1) {
                e = hull[(_hullIndex[i] + 1) % hull.length];
                if (e !== t) {
                    if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;
                }
                break;
            }
        }while (e !== e0);
        return c;
    }
    render(context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        const { points, halfedges, triangles } = this;
        for(let i = 0, n = halfedges.length; i < n; ++i){
            const j = halfedges[i];
            if (j < i) continue;
            const ti = triangles[i] * 2;
            const tj = triangles[j] * 2;
            context.moveTo(points[ti], points[ti + 1]);
            context.lineTo(points[tj], points[tj + 1]);
        }
        this.renderHull(context);
        return buffer && buffer.value();
    }
    renderPoints(context, r) {
        if (r === undefined && (!context || typeof context.moveTo !== "function")) r = context, context = null;
        r = r == undefined ? 2 : +r;
        const buffer = context == null ? context = new _path.default() : undefined;
        const { points } = this;
        for(let i = 0, n = points.length; i < n; i += 2){
            const x = points[i], y = points[i + 1];
            context.moveTo(x + r, y);
            context.arc(x, y, r, 0, tau);
        }
        return buffer && buffer.value();
    }
    renderHull(context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        const { hull, points } = this;
        const h = hull[0] * 2, n = hull.length;
        context.moveTo(points[h], points[h + 1]);
        for(let i = 1; i < n; ++i){
            const h = 2 * hull[i];
            context.lineTo(points[h], points[h + 1]);
        }
        context.closePath();
        return buffer && buffer.value();
    }
    hullPolygon() {
        const polygon = new _polygon.default();
        this.renderHull(polygon);
        return polygon.value();
    }
    renderTriangle(i, context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        const { points, triangles } = this;
        const t0 = triangles[i *= 3] * 2;
        const t1 = triangles[i + 1] * 2;
        const t2 = triangles[i + 2] * 2;
        context.moveTo(points[t0], points[t0 + 1]);
        context.lineTo(points[t1], points[t1 + 1]);
        context.lineTo(points[t2], points[t2 + 1]);
        context.closePath();
        return buffer && buffer.value();
    }
    *trianglePolygons() {
        const { triangles } = this;
        for(let i = 0, n = triangles.length / 3; i < n; ++i)yield this.trianglePolygon(i);
    }
    trianglePolygon(i) {
        const polygon = new _polygon.default();
        this.renderTriangle(i, polygon);
        return polygon.value();
    }
}
exports.default = Delaunay;
function flatArray(points, fx, fy, that) {
    const n = points.length;
    const array = new Float64Array(n * 2);
    for(let i = 0; i < n; ++i){
        const p = points[i];
        array[i * 2] = fx.call(that, p, i, points);
        array[i * 2 + 1] = fy.call(that, p, i, points);
    }
    return array;
}
function* flatIterable(points, fx, fy, that) {
    let i = 0;
    for (const p of points){
        yield fx.call(that, p, i, points);
        yield fy.call(that, p, i, points);
        ++i;
    }
}

},{"cb4052c1a2ed9969":"1P3rZ","702726502f322863":"jvw0s","ffb5175cc0236898":"2AN4k","3f946e8a6cf44198":"1IicI","a419238690bfdbf1":"fwZi2"}],"jvw0s":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _index = require("e19010f950e224e9");
const EPSILON = Math.pow(2, -52);
const EDGE_STACK = new Uint32Array(512);
class Delaunator {
    static from(points, getX = defaultGetX, getY = defaultGetY) {
        const n = points.length;
        const coords = new Float64Array(n * 2);
        for(let i = 0; i < n; i++){
            const p = points[i];
            coords[2 * i] = getX(p);
            coords[2 * i + 1] = getY(p);
        }
        return new Delaunator(coords);
    }
    constructor(coords){
        const n = coords.length >> 1;
        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');
        this.coords = coords;
        // arrays that will store the triangulation graph
        const maxTriangles = Math.max(2 * n - 5, 0);
        this._triangles = new Uint32Array(maxTriangles * 3);
        this._halfedges = new Int32Array(maxTriangles * 3);
        // temporary arrays for tracking the edges of the advancing convex hull
        this._hashSize = Math.ceil(Math.sqrt(n));
        this._hullPrev = new Uint32Array(n); // edge to prev edge
        this._hullNext = new Uint32Array(n); // edge to next edge
        this._hullTri = new Uint32Array(n); // edge to adjacent triangle
        this._hullHash = new Int32Array(this._hashSize); // angular edge hash
        // temporary arrays for sorting points
        this._ids = new Uint32Array(n);
        this._dists = new Float64Array(n);
        this.update();
    }
    update() {
        const { coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash } = this;
        const n = coords.length >> 1;
        // populate an array of point indices; calculate input data bbox
        let minX = Infinity;
        let minY = Infinity;
        let maxX = -Infinity;
        let maxY = -Infinity;
        for(let i = 0; i < n; i++){
            const x = coords[2 * i];
            const y = coords[2 * i + 1];
            if (x < minX) minX = x;
            if (y < minY) minY = y;
            if (x > maxX) maxX = x;
            if (y > maxY) maxY = y;
            this._ids[i] = i;
        }
        const cx = (minX + maxX) / 2;
        const cy = (minY + maxY) / 2;
        let i0, i1, i2;
        // pick a seed point close to the center
        for(let i = 0, minDist = Infinity; i < n; i++){
            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist) {
                i0 = i;
                minDist = d;
            }
        }
        const i0x = coords[2 * i0];
        const i0y = coords[2 * i0 + 1];
        // find the point closest to the seed
        for(let i = 0, minDist = Infinity; i < n; i++){
            if (i === i0) continue;
            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist && d > 0) {
                i1 = i;
                minDist = d;
            }
        }
        let i1x = coords[2 * i1];
        let i1y = coords[2 * i1 + 1];
        let minRadius = Infinity;
        // find the third point which forms the smallest circumcircle with the first two
        for(let i = 0; i < n; i++){
            if (i === i0 || i === i1) continue;
            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);
            if (r < minRadius) {
                i2 = i;
                minRadius = r;
            }
        }
        let i2x = coords[2 * i2];
        let i2y = coords[2 * i2 + 1];
        if (minRadius === Infinity) {
            // order collinear points by dx (or dy if all x are identical)
            // and return the list as a hull
            for(let i = 0; i < n; i++)this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];
            quicksort(this._ids, this._dists, 0, n - 1);
            const hull = new Uint32Array(n);
            let j = 0;
            for(let i = 0, d0 = -Infinity; i < n; i++){
                const id = this._ids[i];
                const d = this._dists[id];
                if (d > d0) {
                    hull[j++] = id;
                    d0 = d;
                }
            }
            this.hull = hull.subarray(0, j);
            this.triangles = new Uint32Array(0);
            this.halfedges = new Uint32Array(0);
            return;
        }
        // swap the order of the seed points for counter-clockwise orientation
        if ((0, _index.orient2d)(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {
            const i = i1;
            const x = i1x;
            const y = i1y;
            i1 = i2;
            i1x = i2x;
            i1y = i2y;
            i2 = i;
            i2x = x;
            i2y = y;
        }
        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
        this._cx = center.x;
        this._cy = center.y;
        for(let i = 0; i < n; i++)this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
        // sort the points by distance from the seed triangle circumcenter
        quicksort(this._ids, this._dists, 0, n - 1);
        // set up the seed triangle as the starting hull
        this._hullStart = i0;
        let hullSize = 3;
        hullNext[i0] = hullPrev[i2] = i1;
        hullNext[i1] = hullPrev[i0] = i2;
        hullNext[i2] = hullPrev[i1] = i0;
        hullTri[i0] = 0;
        hullTri[i1] = 1;
        hullTri[i2] = 2;
        hullHash.fill(-1);
        hullHash[this._hashKey(i0x, i0y)] = i0;
        hullHash[this._hashKey(i1x, i1y)] = i1;
        hullHash[this._hashKey(i2x, i2y)] = i2;
        this.trianglesLen = 0;
        this._addTriangle(i0, i1, i2, -1, -1, -1);
        for(let k = 0, xp, yp; k < this._ids.length; k++){
            const i = this._ids[k];
            const x = coords[2 * i];
            const y = coords[2 * i + 1];
            // skip near-duplicate points
            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
            xp = x;
            yp = y;
            // skip seed triangle points
            if (i === i0 || i === i1 || i === i2) continue;
            // find a visible edge on the convex hull using edge hash
            let start = 0;
            for(let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++){
                start = hullHash[(key + j) % this._hashSize];
                if (start !== -1 && start !== hullNext[start]) break;
            }
            start = hullPrev[start];
            let e = start, q;
            while(q = hullNext[e], (0, _index.orient2d)(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0){
                e = q;
                if (e === start) {
                    e = -1;
                    break;
                }
            }
            if (e === -1) continue; // likely a near-duplicate point; skip it
            // add the first triangle from the point
            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);
            // recursively flip triangles from the point until they satisfy the Delaunay condition
            hullTri[i] = this._legalize(t + 2);
            hullTri[e] = t; // keep track of boundary triangles on the hull
            hullSize++;
            // walk forward through the hull, adding more triangles and flipping recursively
            let n = hullNext[e];
            while(q = hullNext[n], (0, _index.orient2d)(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0){
                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
                hullTri[i] = this._legalize(t + 2);
                hullNext[n] = n; // mark as removed
                hullSize--;
                n = q;
            }
            // walk backward from the other side, adding more triangles and flipping
            if (e === start) while(q = hullPrev[e], (0, _index.orient2d)(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0){
                t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);
                this._legalize(t + 2);
                hullTri[q] = t;
                hullNext[e] = e; // mark as removed
                hullSize--;
                e = q;
            }
            // update the hull indices
            this._hullStart = hullPrev[i] = e;
            hullNext[e] = hullPrev[n] = i;
            hullNext[i] = n;
            // save the two new edges in the hash table
            hullHash[this._hashKey(x, y)] = i;
            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
        }
        this.hull = new Uint32Array(hullSize);
        for(let i = 0, e = this._hullStart; i < hullSize; i++){
            this.hull[i] = e;
            e = hullNext[e];
        }
        // trim typed triangle mesh arrays
        this.triangles = this._triangles.subarray(0, this.trianglesLen);
        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    }
    _hashKey(x, y) {
        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
    }
    _legalize(a) {
        const { _triangles: triangles, _halfedges: halfedges, coords } = this;
        let i = 0;
        let ar = 0;
        // recursion eliminated with a fixed-size stack
        while(true){
            const b = halfedges[a];
            /* if the pair of triangles doesn't satisfy the Delaunay condition
       * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
       * then do the same check/flip recursively for the new pair of triangles
       *
       *           pl                    pl
       *          /||\                  /  \
       *       al/ || \bl            al/    \a
       *        /  ||  \              /      \
       *       /  a||b  \    flip    /___ar___\
       *     p0\   ||   /p1   =>   p0\---bl---/p1
       *        \  ||  /              \      /
       *       ar\ || /br             b\    /br
       *          \||/                  \  /
       *           pr                    pr
       */ const a0 = a - a % 3;
            ar = a0 + (a + 2) % 3;
            if (b === -1) {
                // convex hull edge
                if (i === 0) break;
                a = EDGE_STACK[--i];
                continue;
            }
            const b0 = b - b % 3;
            const al = a0 + (a + 1) % 3;
            const bl = b0 + (b + 2) % 3;
            const p0 = triangles[ar];
            const pr = triangles[a];
            const pl = triangles[al];
            const p1 = triangles[bl];
            const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);
            if (illegal) {
                triangles[a] = p1;
                triangles[b] = p0;
                const hbl = halfedges[bl];
                // edge swapped on the other side of the hull (rare); fix the halfedge reference
                if (hbl === -1) {
                    let e = this._hullStart;
                    do {
                        if (this._hullTri[e] === bl) {
                            this._hullTri[e] = a;
                            break;
                        }
                        e = this._hullPrev[e];
                    }while (e !== this._hullStart);
                }
                this._link(a, hbl);
                this._link(b, halfedges[ar]);
                this._link(ar, bl);
                const br = b0 + (b + 1) % 3;
                // don't worry about hitting the cap: it can only happen on extremely degenerate input
                if (i < EDGE_STACK.length) EDGE_STACK[i++] = br;
            } else {
                if (i === 0) break;
                a = EDGE_STACK[--i];
            }
        }
        return ar;
    }
    _link(a, b) {
        this._halfedges[a] = b;
        if (b !== -1) this._halfedges[b] = a;
    }
    // add a new triangle given vertex indices and adjacent half-edge ids
    _addTriangle(i0, i1, i2, a, b, c) {
        const t = this.trianglesLen;
        this._triangles[t] = i0;
        this._triangles[t + 1] = i1;
        this._triangles[t + 2] = i2;
        this._link(t, a);
        this._link(t + 1, b);
        this._link(t + 2, c);
        this.trianglesLen += 3;
        return t;
    }
}
// monotonically increases with real angle, but doesn't need expensive trigonometry
exports.default = Delaunator;
function pseudoAngle(dx, dy) {
    const p = dx / (Math.abs(dx) + Math.abs(dy));
    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
}
function dist(ax, ay, bx, by) {
    const dx = ax - bx;
    const dy = ay - by;
    return dx * dx + dy * dy;
}
function inCircle(ax, ay, bx, by, cx, cy, px, py) {
    const dx = ax - px;
    const dy = ay - py;
    const ex = bx - px;
    const ey = by - py;
    const fx = cx - px;
    const fy = cy - py;
    const ap = dx * dx + dy * dy;
    const bp = ex * ex + ey * ey;
    const cp = fx * fx + fy * fy;
    return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;
}
function circumradius(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;
    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);
    const x = (ey * bl - dy * cl) * d;
    const y = (dx * cl - ex * bl) * d;
    return x * x + y * y;
}
function circumcenter(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;
    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);
    const x = ax + (ey * bl - dy * cl) * d;
    const y = ay + (dx * cl - ex * bl) * d;
    return {
        x,
        y
    };
}
function quicksort(ids, dists, left, right) {
    if (right - left <= 20) for(let i = left + 1; i <= right; i++){
        const temp = ids[i];
        const tempDist = dists[temp];
        let j = i - 1;
        while(j >= left && dists[ids[j]] > tempDist)ids[j + 1] = ids[j--];
        ids[j + 1] = temp;
    }
    else {
        const median = left + right >> 1;
        let i = left + 1;
        let j = right;
        swap(ids, median, i);
        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);
        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);
        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);
        const temp = ids[i];
        const tempDist = dists[temp];
        while(true){
            do i++;
            while (dists[ids[i]] < tempDist);
            do j--;
            while (dists[ids[j]] > tempDist);
            if (j < i) break;
            swap(ids, i, j);
        }
        ids[left + 1] = ids[j];
        ids[j] = temp;
        if (right - i + 1 >= j - left) {
            quicksort(ids, dists, i, right);
            quicksort(ids, dists, left, j - 1);
        } else {
            quicksort(ids, dists, left, j - 1);
            quicksort(ids, dists, i, right);
        }
    }
}
function swap(arr, i, j) {
    const tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}
function defaultGetX(p) {
    return p[0];
}
function defaultGetY(p) {
    return p[1];
}

},{"e19010f950e224e9":"axRNx"}],"axRNx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "incircle", {
    enumerable: true,
    get: function() {
        return _incircle.incircle;
    }
});
Object.defineProperty(exports, "incirclefast", {
    enumerable: true,
    get: function() {
        return _incircle.incirclefast;
    }
});
Object.defineProperty(exports, "insphere", {
    enumerable: true,
    get: function() {
        return _insphere.insphere;
    }
});
Object.defineProperty(exports, "inspherefast", {
    enumerable: true,
    get: function() {
        return _insphere.inspherefast;
    }
});
Object.defineProperty(exports, "orient2d", {
    enumerable: true,
    get: function() {
        return _orient2d.orient2d;
    }
});
Object.defineProperty(exports, "orient2dfast", {
    enumerable: true,
    get: function() {
        return _orient2d.orient2dfast;
    }
});
Object.defineProperty(exports, "orient3d", {
    enumerable: true,
    get: function() {
        return _orient3d.orient3d;
    }
});
Object.defineProperty(exports, "orient3dfast", {
    enumerable: true,
    get: function() {
        return _orient3d.orient3dfast;
    }
});
var _orient2d = require("10c019945710f93b");
var _orient3d = require("abc2e4d7f76f808e");
var _incircle = require("37d2a10786c0c838");
var _insphere = require("a1e436ec746ad65");

},{"10c019945710f93b":"6kzB2","abc2e4d7f76f808e":"hpJme","37d2a10786c0c838":"hpzLM","a1e436ec746ad65":"dCHgn"}],"6kzB2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.orient2d = orient2d;
exports.orient2dfast = orient2dfast;
var _util = require("3b35bd8f75eb6c7d");
const ccwerrboundA = (3 + 16 * _util.epsilon) * _util.epsilon;
const ccwerrboundB = (2 + 12 * _util.epsilon) * _util.epsilon;
const ccwerrboundC = (9 + 64 * _util.epsilon) * _util.epsilon * _util.epsilon;
const B = (0, _util.vec)(4);
const C1 = (0, _util.vec)(8);
const C2 = (0, _util.vec)(12);
const D = (0, _util.vec)(16);
const u = (0, _util.vec)(4);
function orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {
    let acxtail, acytail, bcxtail, bcytail;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;
    const acx = ax - cx;
    const bcx = bx - cx;
    const acy = ay - cy;
    const bcy = by - cy;
    s1 = acx * bcy;
    c = _util.splitter * acx;
    ahi = c - (c - acx);
    alo = acx - ahi;
    c = _util.splitter * bcy;
    bhi = c - (c - bcy);
    blo = bcy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acy * bcx;
    c = _util.splitter * acy;
    ahi = c - (c - acy);
    alo = acy - ahi;
    c = _util.splitter * bcx;
    bhi = c - (c - bcx);
    blo = bcx - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    B[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    B[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    B[2] = _j - (u3 - bvirt) + (_i - bvirt);
    B[3] = u3;
    let det = (0, _util.estimate)(4, B);
    let errbound = ccwerrboundB * detsum;
    if (det >= errbound || -det >= errbound) return det;
    bvirt = ax - acx;
    acxtail = ax - (acx + bvirt) + (bvirt - cx);
    bvirt = bx - bcx;
    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);
    bvirt = ay - acy;
    acytail = ay - (acy + bvirt) + (bvirt - cy);
    bvirt = by - bcy;
    bcytail = by - (bcy + bvirt) + (bvirt - cy);
    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) return det;
    errbound = ccwerrboundC * detsum + _util.resulterrbound * Math.abs(det);
    det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);
    if (det >= errbound || -det >= errbound) return det;
    s1 = acxtail * bcy;
    c = _util.splitter * acxtail;
    ahi = c - (c - acxtail);
    alo = acxtail - ahi;
    c = _util.splitter * bcy;
    bhi = c - (c - bcy);
    blo = bcy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acytail * bcx;
    c = _util.splitter * acytail;
    ahi = c - (c - acytail);
    alo = acytail - ahi;
    c = _util.splitter * bcx;
    bhi = c - (c - bcx);
    blo = bcx - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const C1len = (0, _util.sum)(4, B, 4, u, C1);
    s1 = acx * bcytail;
    c = _util.splitter * acx;
    ahi = c - (c - acx);
    alo = acx - ahi;
    c = _util.splitter * bcytail;
    bhi = c - (c - bcytail);
    blo = bcytail - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acy * bcxtail;
    c = _util.splitter * acy;
    ahi = c - (c - acy);
    alo = acy - ahi;
    c = _util.splitter * bcxtail;
    bhi = c - (c - bcxtail);
    blo = bcxtail - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const C2len = (0, _util.sum)(C1len, C1, 4, u, C2);
    s1 = acxtail * bcytail;
    c = _util.splitter * acxtail;
    ahi = c - (c - acxtail);
    alo = acxtail - ahi;
    c = _util.splitter * bcytail;
    bhi = c - (c - bcytail);
    blo = bcytail - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acytail * bcxtail;
    c = _util.splitter * acytail;
    ahi = c - (c - acytail);
    alo = acytail - ahi;
    c = _util.splitter * bcxtail;
    bhi = c - (c - bcxtail);
    blo = bcxtail - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const Dlen = (0, _util.sum)(C2len, C2, 4, u, D);
    return D[Dlen - 1];
}
function orient2d(ax, ay, bx, by, cx, cy) {
    const detleft = (ay - cy) * (bx - cx);
    const detright = (ax - cx) * (by - cy);
    const det = detleft - detright;
    const detsum = Math.abs(detleft + detright);
    if (Math.abs(det) >= ccwerrboundA * detsum) return det;
    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);
}
function orient2dfast(ax, ay, bx, by, cx, cy) {
    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);
}

},{"3b35bd8f75eb6c7d":"3F9YU"}],"3F9YU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.epsilon = void 0;
exports.estimate = estimate;
exports.negate = negate;
exports.resulterrbound = void 0;
exports.scale = scale;
exports.splitter = void 0;
exports.sum = sum;
exports.sum_three = sum_three;
exports.vec = vec;
const epsilon = exports.epsilon = 1.1102230246251565e-16;
const splitter = exports.splitter = 134217729;
const resulterrbound = exports.resulterrbound = (3 + 8 * epsilon) * epsilon;
// fast_expansion_sum_zeroelim routine from oritinal code
function sum(elen, e, flen, f, h) {
    let Q, Qnew, hh, bvirt;
    let enow = e[0];
    let fnow = f[0];
    let eindex = 0;
    let findex = 0;
    if (fnow > enow === fnow > -enow) {
        Q = enow;
        enow = e[++eindex];
    } else {
        Q = fnow;
        fnow = f[++findex];
    }
    let hindex = 0;
    if (eindex < elen && findex < flen) {
        if (fnow > enow === fnow > -enow) {
            Qnew = enow + Q;
            hh = Q - (Qnew - enow);
            enow = e[++eindex];
        } else {
            Qnew = fnow + Q;
            hh = Q - (Qnew - fnow);
            fnow = f[++findex];
        }
        Q = Qnew;
        if (hh !== 0) h[hindex++] = hh;
        while(eindex < elen && findex < flen){
            if (fnow > enow === fnow > -enow) {
                Qnew = Q + enow;
                bvirt = Qnew - Q;
                hh = Q - (Qnew - bvirt) + (enow - bvirt);
                enow = e[++eindex];
            } else {
                Qnew = Q + fnow;
                bvirt = Qnew - Q;
                hh = Q - (Qnew - bvirt) + (fnow - bvirt);
                fnow = f[++findex];
            }
            Q = Qnew;
            if (hh !== 0) h[hindex++] = hh;
        }
    }
    while(eindex < elen){
        Qnew = Q + enow;
        bvirt = Qnew - Q;
        hh = Q - (Qnew - bvirt) + (enow - bvirt);
        enow = e[++eindex];
        Q = Qnew;
        if (hh !== 0) h[hindex++] = hh;
    }
    while(findex < flen){
        Qnew = Q + fnow;
        bvirt = Qnew - Q;
        hh = Q - (Qnew - bvirt) + (fnow - bvirt);
        fnow = f[++findex];
        Q = Qnew;
        if (hh !== 0) h[hindex++] = hh;
    }
    if (Q !== 0 || hindex === 0) h[hindex++] = Q;
    return hindex;
}
function sum_three(alen, a, blen, b, clen, c, tmp, out) {
    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);
}
// scale_expansion_zeroelim routine from oritinal code
function scale(elen, e, b, h) {
    let Q, sum, hh, product1, product0;
    let bvirt, c, ahi, alo, bhi, blo;
    c = splitter * b;
    bhi = c - (c - b);
    blo = b - bhi;
    let enow = e[0];
    Q = enow * b;
    c = splitter * enow;
    ahi = c - (c - enow);
    alo = enow - ahi;
    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);
    let hindex = 0;
    if (hh !== 0) h[hindex++] = hh;
    for(let i = 1; i < elen; i++){
        enow = e[i];
        product1 = enow * b;
        c = splitter * enow;
        ahi = c - (c - enow);
        alo = enow - ahi;
        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);
        sum = Q + product0;
        bvirt = sum - Q;
        hh = Q - (sum - bvirt) + (product0 - bvirt);
        if (hh !== 0) h[hindex++] = hh;
        Q = product1 + sum;
        hh = sum - (Q - product1);
        if (hh !== 0) h[hindex++] = hh;
    }
    if (Q !== 0 || hindex === 0) h[hindex++] = Q;
    return hindex;
}
function negate(elen, e) {
    for(let i = 0; i < elen; i++)e[i] = -e[i];
    return elen;
}
function estimate(elen, e) {
    let Q = e[0];
    for(let i = 1; i < elen; i++)Q += e[i];
    return Q;
}
function vec(n) {
    return new Float64Array(n);
}

},{}],"hpJme":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.orient3d = orient3d;
exports.orient3dfast = orient3dfast;
var _util = require("87b9b7211f0d9798");
const o3derrboundA = (7 + 56 * _util.epsilon) * _util.epsilon;
const o3derrboundB = (3 + 28 * _util.epsilon) * _util.epsilon;
const o3derrboundC = (26 + 288 * _util.epsilon) * _util.epsilon * _util.epsilon;
const bc = (0, _util.vec)(4);
const ca = (0, _util.vec)(4);
const ab = (0, _util.vec)(4);
const at_b = (0, _util.vec)(4);
const at_c = (0, _util.vec)(4);
const bt_c = (0, _util.vec)(4);
const bt_a = (0, _util.vec)(4);
const ct_a = (0, _util.vec)(4);
const ct_b = (0, _util.vec)(4);
const bct = (0, _util.vec)(8);
const cat = (0, _util.vec)(8);
const abt = (0, _util.vec)(8);
const u = (0, _util.vec)(4);
const _8 = (0, _util.vec)(8);
const _8b = (0, _util.vec)(8);
const _16 = (0, _util.vec)(8);
const _12 = (0, _util.vec)(12);
let fin = (0, _util.vec)(192);
let fin2 = (0, _util.vec)(192);
function finadd(finlen, alen, a) {
    finlen = (0, _util.sum)(finlen, fin, alen, a, fin2);
    const tmp = fin;
    fin = fin2;
    fin2 = tmp;
    return finlen;
}
function tailinit(xtail, ytail, ax, ay, bx, by, a, b) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;
    if (xtail === 0) {
        if (ytail === 0) {
            a[0] = 0;
            b[0] = 0;
            return 1;
        } else {
            negate = -ytail;
            s1 = negate * ax;
            c = _util.splitter * negate;
            ahi = c - (c - negate);
            alo = negate - ahi;
            c = _util.splitter * ax;
            bhi = c - (c - ax);
            blo = ax - bhi;
            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            a[1] = s1;
            s1 = ytail * bx;
            c = _util.splitter * ytail;
            ahi = c - (c - ytail);
            alo = ytail - ahi;
            c = _util.splitter * bx;
            bhi = c - (c - bx);
            blo = bx - bhi;
            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            b[1] = s1;
            return 2;
        }
    } else if (ytail === 0) {
        s1 = xtail * ay;
        c = _util.splitter * xtail;
        ahi = c - (c - xtail);
        alo = xtail - ahi;
        c = _util.splitter * ay;
        bhi = c - (c - ay);
        blo = ay - bhi;
        a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
        a[1] = s1;
        negate = -xtail;
        s1 = negate * by;
        c = _util.splitter * negate;
        ahi = c - (c - negate);
        alo = negate - ahi;
        c = _util.splitter * by;
        bhi = c - (c - by);
        blo = by - bhi;
        b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
        b[1] = s1;
        return 2;
    } else {
        s1 = xtail * ay;
        c = _util.splitter * xtail;
        ahi = c - (c - xtail);
        alo = xtail - ahi;
        c = _util.splitter * ay;
        bhi = c - (c - ay);
        blo = ay - bhi;
        s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
        t1 = ytail * ax;
        c = _util.splitter * ytail;
        ahi = c - (c - ytail);
        alo = ytail - ahi;
        c = _util.splitter * ax;
        bhi = c - (c - ax);
        blo = ax - bhi;
        t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
        _i = s0 - t0;
        bvirt = s0 - _i;
        a[0] = s0 - (_i + bvirt) + (bvirt - t0);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 - t1;
        bvirt = _0 - _i;
        a[1] = _0 - (_i + bvirt) + (bvirt - t1);
        u3 = _j + _i;
        bvirt = u3 - _j;
        a[2] = _j - (u3 - bvirt) + (_i - bvirt);
        a[3] = u3;
        s1 = ytail * bx;
        c = _util.splitter * ytail;
        ahi = c - (c - ytail);
        alo = ytail - ahi;
        c = _util.splitter * bx;
        bhi = c - (c - bx);
        blo = bx - bhi;
        s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
        t1 = xtail * by;
        c = _util.splitter * xtail;
        ahi = c - (c - xtail);
        alo = xtail - ahi;
        c = _util.splitter * by;
        bhi = c - (c - by);
        blo = by - bhi;
        t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
        _i = s0 - t0;
        bvirt = s0 - _i;
        b[0] = s0 - (_i + bvirt) + (bvirt - t0);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 - t1;
        bvirt = _0 - _i;
        b[1] = _0 - (_i + bvirt) + (bvirt - t1);
        u3 = _j + _i;
        bvirt = u3 - _j;
        b[2] = _j - (u3 - bvirt) + (_i - bvirt);
        b[3] = u3;
        return 4;
    }
}
function tailadd(finlen, a, b, k, z) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;
    s1 = a * b;
    c = _util.splitter * a;
    ahi = c - (c - a);
    alo = a - ahi;
    c = _util.splitter * b;
    bhi = c - (c - b);
    blo = b - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    c = _util.splitter * k;
    bhi = c - (c - k);
    blo = k - bhi;
    _i = s0 * k;
    c = _util.splitter * s0;
    ahi = c - (c - s0);
    alo = s0 - ahi;
    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);
    _j = s1 * k;
    c = _util.splitter * s1;
    ahi = c - (c - s1);
    alo = s1 - ahi;
    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);
    _k = _i + _0;
    bvirt = _k - _i;
    u[1] = _i - (_k - bvirt) + (_0 - bvirt);
    u3 = _j + _k;
    u[2] = _k - (u3 - _j);
    u[3] = u3;
    finlen = finadd(finlen, 4, u);
    if (z !== 0) {
        c = _util.splitter * z;
        bhi = c - (c - z);
        blo = z - bhi;
        _i = s0 * z;
        c = _util.splitter * s0;
        ahi = c - (c - s0);
        alo = s0 - ahi;
        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);
        _j = s1 * z;
        c = _util.splitter * s1;
        ahi = c - (c - s1);
        alo = s1 - ahi;
        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);
        _k = _i + _0;
        bvirt = _k - _i;
        u[1] = _i - (_k - bvirt) + (_0 - bvirt);
        u3 = _j + _k;
        u[2] = _k - (u3 - _j);
        u[3] = u3;
        finlen = finadd(finlen, 4, u);
    }
    return finlen;
}
function orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {
    let finlen;
    let adxtail, bdxtail, cdxtail;
    let adytail, bdytail, cdytail;
    let adztail, bdztail, cdztail;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;
    s1 = bdx * cdy;
    c = _util.splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = _util.splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cdx * bdy;
    c = _util.splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = _util.splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bc[3] = u3;
    s1 = cdx * ady;
    c = _util.splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = _util.splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = adx * cdy;
    c = _util.splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = _util.splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ca[3] = u3;
    s1 = adx * bdy;
    c = _util.splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = _util.splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bdx * ady;
    c = _util.splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = _util.splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ab[3] = u3;
    finlen = (0, _util.sum)((0, _util.sum)((0, _util.scale)(4, bc, adz, _8), _8, (0, _util.scale)(4, ca, bdz, _8b), _8b, _16), _16, (0, _util.scale)(4, ab, cdz, _8), _8, fin);
    let det = (0, _util.estimate)(finlen, fin);
    let errbound = o3derrboundB * permanent;
    if (det >= errbound || -det >= errbound) return det;
    bvirt = ax - adx;
    adxtail = ax - (adx + bvirt) + (bvirt - dx);
    bvirt = bx - bdx;
    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);
    bvirt = cx - cdx;
    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);
    bvirt = ay - ady;
    adytail = ay - (ady + bvirt) + (bvirt - dy);
    bvirt = by - bdy;
    bdytail = by - (bdy + bvirt) + (bvirt - dy);
    bvirt = cy - cdy;
    cdytail = cy - (cdy + bvirt) + (bvirt - dy);
    bvirt = az - adz;
    adztail = az - (adz + bvirt) + (bvirt - dz);
    bvirt = bz - bdz;
    bdztail = bz - (bdz + bvirt) + (bvirt - dz);
    bvirt = cz - cdz;
    cdztail = cz - (cdz + bvirt) + (bvirt - dz);
    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) return det;
    errbound = o3derrboundC * permanent + _util.resulterrbound * Math.abs(det);
    det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);
    if (det >= errbound || -det >= errbound) return det;
    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);
    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);
    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);
    const bctlen = (0, _util.sum)(bt_len, bt_c, ct_len, ct_b, bct);
    finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adz, _16), _16);
    const catlen = (0, _util.sum)(ct_len, ct_a, at_len, at_c, cat);
    finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdz, _16), _16);
    const abtlen = (0, _util.sum)(at_len, at_b, bt_len, bt_a, abt);
    finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdz, _16), _16);
    if (adztail !== 0) {
        finlen = finadd(finlen, (0, _util.scale)(4, bc, adztail, _12), _12);
        finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adztail, _16), _16);
    }
    if (bdztail !== 0) {
        finlen = finadd(finlen, (0, _util.scale)(4, ca, bdztail, _12), _12);
        finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdztail, _16), _16);
    }
    if (cdztail !== 0) {
        finlen = finadd(finlen, (0, _util.scale)(4, ab, cdztail, _12), _12);
        finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdztail, _16), _16);
    }
    if (adxtail !== 0) {
        if (bdytail !== 0) finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);
        if (cdytail !== 0) finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);
    }
    if (bdxtail !== 0) {
        if (cdytail !== 0) finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);
        if (adytail !== 0) finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);
    }
    if (cdxtail !== 0) {
        if (adytail !== 0) finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);
        if (bdytail !== 0) finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);
    }
    return fin[finlen - 1];
}
function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;
    const bdxcdy = bdx * cdy;
    const cdxbdy = cdx * bdy;
    const cdxady = cdx * ady;
    const adxcdy = adx * cdy;
    const adxbdy = adx * bdy;
    const bdxady = bdx * ady;
    const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);
    const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);
    const errbound = o3derrboundA * permanent;
    if (det > errbound || -det > errbound) return det;
    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);
}
function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;
    return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);
}

},{"87b9b7211f0d9798":"3F9YU"}],"hpzLM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.incircle = incircle;
exports.incirclefast = incirclefast;
var _util = require("f8d37ae9bfac71d2");
const iccerrboundA = (10 + 96 * _util.epsilon) * _util.epsilon;
const iccerrboundB = (4 + 48 * _util.epsilon) * _util.epsilon;
const iccerrboundC = (44 + 576 * _util.epsilon) * _util.epsilon * _util.epsilon;
const bc = (0, _util.vec)(4);
const ca = (0, _util.vec)(4);
const ab = (0, _util.vec)(4);
const aa = (0, _util.vec)(4);
const bb = (0, _util.vec)(4);
const cc = (0, _util.vec)(4);
const u = (0, _util.vec)(4);
const v = (0, _util.vec)(4);
const axtbc = (0, _util.vec)(8);
const aytbc = (0, _util.vec)(8);
const bxtca = (0, _util.vec)(8);
const bytca = (0, _util.vec)(8);
const cxtab = (0, _util.vec)(8);
const cytab = (0, _util.vec)(8);
const abt = (0, _util.vec)(8);
const bct = (0, _util.vec)(8);
const cat = (0, _util.vec)(8);
const abtt = (0, _util.vec)(4);
const bctt = (0, _util.vec)(4);
const catt = (0, _util.vec)(4);
const _8 = (0, _util.vec)(8);
const _16 = (0, _util.vec)(16);
const _16b = (0, _util.vec)(16);
const _16c = (0, _util.vec)(16);
const _32 = (0, _util.vec)(32);
const _32b = (0, _util.vec)(32);
const _48 = (0, _util.vec)(48);
const _64 = (0, _util.vec)(64);
let fin = (0, _util.vec)(1152);
let fin2 = (0, _util.vec)(1152);
function finadd(finlen, a, alen) {
    finlen = (0, _util.sum)(finlen, fin, a, alen, fin2);
    const tmp = fin;
    fin = fin2;
    fin2 = tmp;
    return finlen;
}
function incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {
    let finlen;
    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;
    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;
    let abtlen, bctlen, catlen;
    let abttlen, bcttlen, cattlen;
    let n1, n0;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    s1 = bdx * cdy;
    c = _util.splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = _util.splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cdx * bdy;
    c = _util.splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = _util.splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bc[3] = u3;
    s1 = cdx * ady;
    c = _util.splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = _util.splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = adx * cdy;
    c = _util.splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = _util.splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ca[3] = u3;
    s1 = adx * bdy;
    c = _util.splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = _util.splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bdx * ady;
    c = _util.splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = _util.splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ab[3] = u3;
    finlen = (0, _util.sum)((0, _util.sum)((0, _util.sum)((0, _util.scale)((0, _util.scale)(4, bc, adx, _8), _8, adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ca, bdx, _8), _8, bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ab, cdx, _8), _8, cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);
    let det = (0, _util.estimate)(finlen, fin);
    let errbound = iccerrboundB * permanent;
    if (det >= errbound || -det >= errbound) return det;
    bvirt = ax - adx;
    adxtail = ax - (adx + bvirt) + (bvirt - dx);
    bvirt = ay - ady;
    adytail = ay - (ady + bvirt) + (bvirt - dy);
    bvirt = bx - bdx;
    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);
    bvirt = by - bdy;
    bdytail = by - (bdy + bvirt) + (bvirt - dy);
    bvirt = cx - cdx;
    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);
    bvirt = cy - cdy;
    cdytail = cy - (cdy + bvirt) + (bvirt - dy);
    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) return det;
    errbound = iccerrboundC * permanent + _util.resulterrbound * Math.abs(det);
    det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));
    if (det >= errbound || -det >= errbound) return det;
    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {
        s1 = adx * adx;
        c = _util.splitter * adx;
        ahi = c - (c - adx);
        alo = adx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = ady * ady;
        c = _util.splitter * ady;
        ahi = c - (c - ady);
        alo = ady - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);
        aa[3] = u3;
    }
    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {
        s1 = bdx * bdx;
        c = _util.splitter * bdx;
        ahi = c - (c - bdx);
        alo = bdx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = bdy * bdy;
        c = _util.splitter * bdy;
        ahi = c - (c - bdy);
        alo = bdy - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);
        bb[3] = u3;
    }
    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {
        s1 = cdx * cdx;
        c = _util.splitter * cdx;
        ahi = c - (c - cdx);
        alo = cdx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = cdy * cdy;
        c = _util.splitter * cdy;
        ahi = c - (c - cdy);
        alo = cdy - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);
        cc[3] = u3;
    }
    if (adxtail !== 0) {
        axtbclen = (0, _util.scale)(4, bc, adxtail, axtbc);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(axtbclen, axtbc, 2 * adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);
    }
    if (adytail !== 0) {
        aytbclen = (0, _util.scale)(4, bc, adytail, aytbc);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(aytbclen, aytbc, 2 * ady, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, adytail, _8), _8, cdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);
    }
    if (bdxtail !== 0) {
        bxtcalen = (0, _util.scale)(4, ca, bdxtail, bxtca);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bxtcalen, bxtca, 2 * bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);
    }
    if (bdytail !== 0) {
        bytcalen = (0, _util.scale)(4, ca, bdytail, bytca);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bytcalen, bytca, 2 * bdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, bdytail, _8), _8, adx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);
    }
    if (cdxtail !== 0) {
        cxtablen = (0, _util.scale)(4, ab, cdxtail, cxtab);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cxtablen, cxtab, 2 * cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, ady, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);
    }
    if (cdytail !== 0) {
        cytablen = (0, _util.scale)(4, ab, cdytail, cytab);
        finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cytablen, cytab, 2 * cdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, cdytail, _8), _8, bdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);
    }
    if (adxtail !== 0 || adytail !== 0) {
        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {
            s1 = bdxtail * cdy;
            c = _util.splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = _util.splitter * cdy;
            bhi = c - (c - cdy);
            blo = cdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdx * cdytail;
            c = _util.splitter * bdx;
            ahi = c - (c - bdx);
            alo = bdx - ahi;
            c = _util.splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            u[3] = u3;
            s1 = cdxtail * -bdy;
            c = _util.splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = _util.splitter * -bdy;
            bhi = c - (c - -bdy);
            blo = -bdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdx * -bdytail;
            c = _util.splitter * cdx;
            ahi = c - (c - cdx);
            alo = cdx - ahi;
            c = _util.splitter * -bdytail;
            bhi = c - (c - -bdytail);
            blo = -bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            bctlen = (0, _util.sum)(4, u, 4, v, bct);
            s1 = bdxtail * cdytail;
            c = _util.splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = _util.splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdxtail * bdytail;
            c = _util.splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = _util.splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            bctt[3] = u3;
            bcttlen = 4;
        } else {
            bct[0] = 0;
            bctlen = 1;
            bctt[0] = 0;
            bcttlen = 1;
        }
        if (adxtail !== 0) {
            const len = (0, _util.scale)(bctlen, bct, adxtail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(axtbclen, axtbc, adxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * adx, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(bcttlen, bctt, adxtail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * adx, _16), _16, (0, _util.scale)(len2, _8, adxtail, _16b), _16b, (0, _util.scale)(len, _16c, adxtail, _32), _32, _32b, _64), _64);
            if (bdytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdytail, _16), _16);
            if (cdytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, -adxtail, _8), _8, cdytail, _16), _16);
        }
        if (adytail !== 0) {
            const len = (0, _util.scale)(bctlen, bct, adytail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(aytbclen, aytbc, adytail, _16), _16, (0, _util.scale)(len, _16c, 2 * ady, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(bcttlen, bctt, adytail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * ady, _16), _16, (0, _util.scale)(len2, _8, adytail, _16b), _16b, (0, _util.scale)(len, _16c, adytail, _32), _32, _32b, _64), _64);
        }
    }
    if (bdxtail !== 0 || bdytail !== 0) {
        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {
            s1 = cdxtail * ady;
            c = _util.splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = _util.splitter * ady;
            bhi = c - (c - ady);
            blo = ady - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdx * adytail;
            c = _util.splitter * cdx;
            ahi = c - (c - cdx);
            alo = cdx - ahi;
            c = _util.splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            u[3] = u3;
            n1 = -cdy;
            n0 = -cdytail;
            s1 = adxtail * n1;
            c = _util.splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = _util.splitter * n1;
            bhi = c - (c - n1);
            blo = n1 - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adx * n0;
            c = _util.splitter * adx;
            ahi = c - (c - adx);
            alo = adx - ahi;
            c = _util.splitter * n0;
            bhi = c - (c - n0);
            blo = n0 - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            catlen = (0, _util.sum)(4, u, 4, v, cat);
            s1 = cdxtail * adytail;
            c = _util.splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = _util.splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adxtail * cdytail;
            c = _util.splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = _util.splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            catt[3] = u3;
            cattlen = 4;
        } else {
            cat[0] = 0;
            catlen = 1;
            catt[0] = 0;
            cattlen = 1;
        }
        if (bdxtail !== 0) {
            const len = (0, _util.scale)(catlen, cat, bdxtail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bxtcalen, bxtca, bdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdx, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(cattlen, catt, bdxtail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdx, _16), _16, (0, _util.scale)(len2, _8, bdxtail, _16b), _16b, (0, _util.scale)(len, _16c, bdxtail, _32), _32, _32b, _64), _64);
            if (cdytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdytail, _16), _16);
            if (adytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, -bdxtail, _8), _8, adytail, _16), _16);
        }
        if (bdytail !== 0) {
            const len = (0, _util.scale)(catlen, cat, bdytail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bytcalen, bytca, bdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdy, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(cattlen, catt, bdytail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdy, _16), _16, (0, _util.scale)(len2, _8, bdytail, _16b), _16b, (0, _util.scale)(len, _16c, bdytail, _32), _32, _32b, _64), _64);
        }
    }
    if (cdxtail !== 0 || cdytail !== 0) {
        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {
            s1 = adxtail * bdy;
            c = _util.splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = _util.splitter * bdy;
            bhi = c - (c - bdy);
            blo = bdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adx * bdytail;
            c = _util.splitter * adx;
            ahi = c - (c - adx);
            alo = adx - ahi;
            c = _util.splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            u[3] = u3;
            n1 = -ady;
            n0 = -adytail;
            s1 = bdxtail * n1;
            c = _util.splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = _util.splitter * n1;
            bhi = c - (c - n1);
            blo = n1 - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdx * n0;
            c = _util.splitter * bdx;
            ahi = c - (c - bdx);
            alo = bdx - ahi;
            c = _util.splitter * n0;
            bhi = c - (c - n0);
            blo = n0 - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            abtlen = (0, _util.sum)(4, u, 4, v, abt);
            s1 = adxtail * bdytail;
            c = _util.splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = _util.splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdxtail * adytail;
            c = _util.splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = _util.splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            abtt[3] = u3;
            abttlen = 4;
        } else {
            abt[0] = 0;
            abtlen = 1;
            abtt[0] = 0;
            abttlen = 1;
        }
        if (cdxtail !== 0) {
            const len = (0, _util.scale)(abtlen, abt, cdxtail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cxtablen, cxtab, cdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdx, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(abttlen, abtt, cdxtail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdx, _16), _16, (0, _util.scale)(len2, _8, cdxtail, _16b), _16b, (0, _util.scale)(len, _16c, cdxtail, _32), _32, _32b, _64), _64);
            if (adytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, adytail, _16), _16);
            if (bdytail !== 0) finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);
        }
        if (cdytail !== 0) {
            const len = (0, _util.scale)(abtlen, abt, cdytail, _16c);
            finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cytablen, cytab, cdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdy, _32), _32, _48), _48);
            const len2 = (0, _util.scale)(abttlen, abtt, cdytail, _8);
            finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdy, _16), _16, (0, _util.scale)(len2, _8, cdytail, _16b), _16b, (0, _util.scale)(len, _16c, cdytail, _32), _32, _32b, _64), _64);
        }
    }
    return fin[finlen - 1];
}
function incircle(ax, ay, bx, by, cx, cy, dx, dy) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const bdxcdy = bdx * cdy;
    const cdxbdy = cdx * bdy;
    const alift = adx * adx + ady * ady;
    const cdxady = cdx * ady;
    const adxcdy = adx * cdy;
    const blift = bdx * bdx + bdy * bdy;
    const adxbdy = adx * bdy;
    const bdxady = bdx * ady;
    const clift = cdx * cdx + cdy * cdy;
    const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);
    const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;
    const errbound = iccerrboundA * permanent;
    if (det > errbound || -det > errbound) return det;
    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);
}
function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {
    const adx = ax - dx;
    const ady = ay - dy;
    const bdx = bx - dx;
    const bdy = by - dy;
    const cdx = cx - dx;
    const cdy = cy - dy;
    const abdet = adx * bdy - bdx * ady;
    const bcdet = bdx * cdy - cdx * bdy;
    const cadet = cdx * ady - adx * cdy;
    const alift = adx * adx + ady * ady;
    const blift = bdx * bdx + bdy * bdy;
    const clift = cdx * cdx + cdy * cdy;
    return alift * bcdet + blift * cadet + clift * abdet;
}

},{"f8d37ae9bfac71d2":"3F9YU"}],"dCHgn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.insphere = insphere;
exports.inspherefast = inspherefast;
var _util = require("d1ff737bb84106d1");
const isperrboundA = (16 + 224 * _util.epsilon) * _util.epsilon;
const isperrboundB = (5 + 72 * _util.epsilon) * _util.epsilon;
const isperrboundC = (71 + 1408 * _util.epsilon) * _util.epsilon * _util.epsilon;
const ab = (0, _util.vec)(4);
const bc = (0, _util.vec)(4);
const cd = (0, _util.vec)(4);
const de = (0, _util.vec)(4);
const ea = (0, _util.vec)(4);
const ac = (0, _util.vec)(4);
const bd = (0, _util.vec)(4);
const ce = (0, _util.vec)(4);
const da = (0, _util.vec)(4);
const eb = (0, _util.vec)(4);
const abc = (0, _util.vec)(24);
const bcd = (0, _util.vec)(24);
const cde = (0, _util.vec)(24);
const dea = (0, _util.vec)(24);
const eab = (0, _util.vec)(24);
const abd = (0, _util.vec)(24);
const bce = (0, _util.vec)(24);
const cda = (0, _util.vec)(24);
const deb = (0, _util.vec)(24);
const eac = (0, _util.vec)(24);
const adet = (0, _util.vec)(1152);
const bdet = (0, _util.vec)(1152);
const cdet = (0, _util.vec)(1152);
const ddet = (0, _util.vec)(1152);
const edet = (0, _util.vec)(1152);
const abdet = (0, _util.vec)(2304);
const cddet = (0, _util.vec)(2304);
const cdedet = (0, _util.vec)(3456);
const deter = (0, _util.vec)(5760);
const _8 = (0, _util.vec)(8);
const _8b = (0, _util.vec)(8);
const _8c = (0, _util.vec)(8);
const _16 = (0, _util.vec)(16);
const _24 = (0, _util.vec)(24);
const _48 = (0, _util.vec)(48);
const _48b = (0, _util.vec)(48);
const _96 = (0, _util.vec)(96);
const _192 = (0, _util.vec)(192);
const _384x = (0, _util.vec)(384);
const _384y = (0, _util.vec)(384);
const _384z = (0, _util.vec)(384);
const _768 = (0, _util.vec)(768);
function sum_three_scale(a, b, c, az, bz, cz, out) {
    return (0, _util.sum_three)((0, _util.scale)(4, a, az, _8), _8, (0, _util.scale)(4, b, bz, _8b), _8b, (0, _util.scale)(4, c, cz, _8c), _8c, _16, out);
}
function liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {
    const len = (0, _util.sum)((0, _util.sum)(alen, a, blen, b, _48), _48, (0, _util.negate)((0, _util.sum)(clen, c, dlen, d, _48b), _48b), _48b, _96);
    return (0, _util.sum_three)((0, _util.scale)((0, _util.scale)(len, _96, x, _192), _192, x, _384x), _384x, (0, _util.scale)((0, _util.scale)(len, _96, y, _192), _192, y, _384y), _384y, (0, _util.scale)((0, _util.scale)(len, _96, z, _192), _192, z, _384z), _384z, _768, out);
}
function insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;
    s1 = ax * by;
    c = _util.splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = _util.splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bx * ay;
    c = _util.splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = _util.splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ab[3] = u3;
    s1 = bx * cy;
    c = _util.splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = _util.splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cx * by;
    c = _util.splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = _util.splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bc[3] = u3;
    s1 = cx * dy;
    c = _util.splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = _util.splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dx * cy;
    c = _util.splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = _util.splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);
    cd[3] = u3;
    s1 = dx * ey;
    c = _util.splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = _util.splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ex * dy;
    c = _util.splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = _util.splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    de[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    de[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    de[2] = _j - (u3 - bvirt) + (_i - bvirt);
    de[3] = u3;
    s1 = ex * ay;
    c = _util.splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = _util.splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ax * ey;
    c = _util.splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = _util.splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ea[3] = u3;
    s1 = ax * cy;
    c = _util.splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = _util.splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cx * ay;
    c = _util.splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = _util.splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ac[3] = u3;
    s1 = bx * dy;
    c = _util.splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = _util.splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dx * by;
    c = _util.splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = _util.splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bd[3] = u3;
    s1 = cx * ey;
    c = _util.splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = _util.splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ex * cy;
    c = _util.splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = _util.splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ce[3] = u3;
    s1 = dx * ay;
    c = _util.splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = _util.splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ax * dy;
    c = _util.splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = _util.splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    da[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    da[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    da[2] = _j - (u3 - bvirt) + (_i - bvirt);
    da[3] = u3;
    s1 = ex * by;
    c = _util.splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = _util.splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bx * ey;
    c = _util.splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = _util.splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);
    eb[3] = u3;
    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);
    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);
    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);
    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);
    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);
    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);
    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);
    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);
    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);
    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);
    const deterlen = (0, _util.sum_three)(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, (0, _util.sum_three)(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);
    return deter[deterlen - 1];
}
const xdet = (0, _util.vec)(96);
const ydet = (0, _util.vec)(96);
const zdet = (0, _util.vec)(96);
const fin = (0, _util.vec)(1152);
function liftadapt(a, b, c, az, bz, cz, x, y, z, out) {
    const len = sum_three_scale(a, b, c, az, bz, cz, _24);
    return (0, _util.sum_three)((0, _util.scale)((0, _util.scale)(len, _24, x, _48), _48, x, xdet), xdet, (0, _util.scale)((0, _util.scale)(len, _24, y, _48), _48, y, ydet), ydet, (0, _util.scale)((0, _util.scale)(len, _24, z, _48), _48, z, zdet), zdet, _192, out);
}
function insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {
    let ab3, bc3, cd3, da3, ac3, bd3;
    let aextail, bextail, cextail, dextail;
    let aeytail, beytail, ceytail, deytail;
    let aeztail, beztail, ceztail, deztail;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;
    const aex = ax - ex;
    const bex = bx - ex;
    const cex = cx - ex;
    const dex = dx - ex;
    const aey = ay - ey;
    const bey = by - ey;
    const cey = cy - ey;
    const dey = dy - ey;
    const aez = az - ez;
    const bez = bz - ez;
    const cez = cz - ez;
    const dez = dz - ez;
    s1 = aex * bey;
    c = _util.splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = _util.splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bex * aey;
    c = _util.splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = _util.splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    ab3 = _j + _i;
    bvirt = ab3 - _j;
    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);
    ab[3] = ab3;
    s1 = bex * cey;
    c = _util.splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = _util.splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cex * bey;
    c = _util.splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = _util.splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    bc3 = _j + _i;
    bvirt = bc3 - _j;
    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);
    bc[3] = bc3;
    s1 = cex * dey;
    c = _util.splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = _util.splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dex * cey;
    c = _util.splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = _util.splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    cd3 = _j + _i;
    bvirt = cd3 - _j;
    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);
    cd[3] = cd3;
    s1 = dex * aey;
    c = _util.splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = _util.splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = aex * dey;
    c = _util.splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = _util.splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    da[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    da[1] = _0 - (_i + bvirt) + (bvirt - t1);
    da3 = _j + _i;
    bvirt = da3 - _j;
    da[2] = _j - (da3 - bvirt) + (_i - bvirt);
    da[3] = da3;
    s1 = aex * cey;
    c = _util.splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = _util.splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cex * aey;
    c = _util.splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = _util.splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);
    ac3 = _j + _i;
    bvirt = ac3 - _j;
    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);
    ac[3] = ac3;
    s1 = bex * dey;
    c = _util.splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = _util.splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dex * bey;
    c = _util.splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = _util.splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    bd3 = _j + _i;
    bvirt = bd3 - _j;
    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);
    bd[3] = bd3;
    const finlen = (0, _util.sum)((0, _util.sum)((0, _util.negate)(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, (0, _util.sum)((0, _util.negate)(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);
    let det = (0, _util.estimate)(finlen, fin);
    let errbound = isperrboundB * permanent;
    if (det >= errbound || -det >= errbound) return det;
    bvirt = ax - aex;
    aextail = ax - (aex + bvirt) + (bvirt - ex);
    bvirt = ay - aey;
    aeytail = ay - (aey + bvirt) + (bvirt - ey);
    bvirt = az - aez;
    aeztail = az - (aez + bvirt) + (bvirt - ez);
    bvirt = bx - bex;
    bextail = bx - (bex + bvirt) + (bvirt - ex);
    bvirt = by - bey;
    beytail = by - (bey + bvirt) + (bvirt - ey);
    bvirt = bz - bez;
    beztail = bz - (bez + bvirt) + (bvirt - ez);
    bvirt = cx - cex;
    cextail = cx - (cex + bvirt) + (bvirt - ex);
    bvirt = cy - cey;
    ceytail = cy - (cey + bvirt) + (bvirt - ey);
    bvirt = cz - cez;
    ceztail = cz - (cez + bvirt) + (bvirt - ez);
    bvirt = dx - dex;
    dextail = dx - (dex + bvirt) + (bvirt - ex);
    bvirt = dy - dey;
    deytail = dy - (dey + bvirt) + (bvirt - ey);
    bvirt = dz - dez;
    deztail = dz - (dez + bvirt) + (bvirt - ez);
    if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) return det;
    errbound = isperrboundC * permanent + _util.resulterrbound * Math.abs(det);
    const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);
    const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);
    const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);
    const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);
    const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);
    const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);
    det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));
    if (det >= errbound || -det >= errbound) return det;
    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);
}
function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {
    const aex = ax - ex;
    const bex = bx - ex;
    const cex = cx - ex;
    const dex = dx - ex;
    const aey = ay - ey;
    const bey = by - ey;
    const cey = cy - ey;
    const dey = dy - ey;
    const aez = az - ez;
    const bez = bz - ez;
    const cez = cz - ez;
    const dez = dz - ez;
    const aexbey = aex * bey;
    const bexaey = bex * aey;
    const ab = aexbey - bexaey;
    const bexcey = bex * cey;
    const cexbey = cex * bey;
    const bc = bexcey - cexbey;
    const cexdey = cex * dey;
    const dexcey = dex * cey;
    const cd = cexdey - dexcey;
    const dexaey = dex * aey;
    const aexdey = aex * dey;
    const da = dexaey - aexdey;
    const aexcey = aex * cey;
    const cexaey = cex * aey;
    const ac = aexcey - cexaey;
    const bexdey = bex * dey;
    const dexbey = dex * bey;
    const bd = bexdey - dexbey;
    const alift = aex * aex + aey * aey + aez * aez;
    const blift = bex * bex + bey * bey + bez * bez;
    const clift = cex * cex + cey * cey + cez * cez;
    const dlift = dex * dex + dey * dey + dez * dez;
    const det = clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab) + (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));
    const aezplus = Math.abs(aez);
    const bezplus = Math.abs(bez);
    const cezplus = Math.abs(cez);
    const dezplus = Math.abs(dez);
    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);
    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);
    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);
    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);
    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);
    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);
    const permanent = (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift + (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift + (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift + (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;
    const errbound = isperrboundA * permanent;
    if (det > errbound || -det > errbound) return det;
    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);
}
function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {
    const aex = pax - pex;
    const bex = pbx - pex;
    const cex = pcx - pex;
    const dex = pdx - pex;
    const aey = pay - pey;
    const bey = pby - pey;
    const cey = pcy - pey;
    const dey = pdy - pey;
    const aez = paz - pez;
    const bez = pbz - pez;
    const cez = pcz - pez;
    const dez = pdz - pez;
    const ab = aex * bey - bex * aey;
    const bc = bex * cey - cex * bey;
    const cd = cex * dey - dex * cey;
    const da = dex * aey - aex * dey;
    const ac = aex * cey - cex * aey;
    const bd = bex * dey - dex * bey;
    const abc = aez * bc - bez * ac + cez * ab;
    const bcd = bez * cd - cez * bd + dez * bc;
    const cda = cez * da + dez * ac + aez * cd;
    const dab = dez * ab + aez * bd + bez * da;
    const alift = aex * aex + aey * aey + aez * aez;
    const blift = bex * bex + bey * bey + bez * bez;
    const clift = cex * cex + cey * cey + cez * cez;
    const dlift = dex * dex + dey * dey + dez * dez;
    return clift * dab - dlift * abc + (alift * bcd - blift * cda);
}

},{"d1ff737bb84106d1":"3F9YU"}],"2AN4k":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const epsilon = 1e-6;
class Path {
    constructor(){
        this._x0 = this._y0 = // start of current subpath
        this._x1 = this._y1 = null; // end of current subpath
        this._ = "";
    }
    moveTo(x, y) {
        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
    }
    closePath() {
        if (this._x1 !== null) {
            this._x1 = this._x0, this._y1 = this._y0;
            this._ += "Z";
        }
    }
    lineTo(x, y) {
        this._ += `L${this._x1 = +x},${this._y1 = +y}`;
    }
    arc(x, y, r) {
        x = +x, y = +y, r = +r;
        const x0 = x + r;
        const y0 = y;
        if (r < 0) throw new Error("negative radius");
        if (this._x1 === null) this._ += `M${x0},${y0}`;
        else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += "L" + x0 + "," + y0;
        if (!r) return;
        this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
    }
    rect(x, y, w, h) {
        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
    }
    value() {
        return this._ || null;
    }
}
exports.default = Path;

},{}],"1IicI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
class Polygon {
    constructor(){
        this._ = [];
    }
    moveTo(x, y) {
        this._.push([
            x,
            y
        ]);
    }
    closePath() {
        this._.push(this._[0].slice());
    }
    lineTo(x, y) {
        this._.push([
            x,
            y
        ]);
    }
    value() {
        return this._.length ? this._ : null;
    }
}
exports.default = Polygon;

},{}],"fwZi2":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("b2be96272c3f4cdb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _path = _interopRequireDefault(require("f25eea40feecf6f2"));
var _polygon = _interopRequireDefault(require("989df1aeb233c95f"));
class Voronoi {
    constructor(delaunay, [xmin, ymin, xmax, ymax] = [
        0,
        0,
        960,
        500
    ]){
        if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
        this.delaunay = delaunay;
        this._circumcenters = new Float64Array(delaunay.points.length * 2);
        this.vectors = new Float64Array(delaunay.points.length * 2);
        this.xmax = xmax, this.xmin = xmin;
        this.ymax = ymax, this.ymin = ymin;
        this._init();
    }
    update() {
        this.delaunay.update();
        this._init();
        return this;
    }
    _init() {
        const { delaunay: { points, hull, triangles }, vectors } = this;
        let bx, by; // lazily computed barycenter of the hull
        // Compute circumcenters.
        const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
        for(let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2){
            const t1 = triangles[i] * 2;
            const t2 = triangles[i + 1] * 2;
            const t3 = triangles[i + 2] * 2;
            const x1 = points[t1];
            const y1 = points[t1 + 1];
            const x2 = points[t2];
            const y2 = points[t2 + 1];
            const x3 = points[t3];
            const y3 = points[t3 + 1];
            const dx = x2 - x1;
            const dy = y2 - y1;
            const ex = x3 - x1;
            const ey = y3 - y1;
            const ab = (dx * ey - dy * ex) * 2;
            if (Math.abs(ab) < 1e-9) {
                // For a degenerate triangle, the circumcenter is at the infinity, in a
                // direction orthogonal to the halfedge and away from the “center” of
                // the diagram <bx, by>, defined as the hull’s barycenter.
                if (bx === undefined) {
                    bx = by = 0;
                    for (const i of hull)bx += points[i * 2], by += points[i * 2 + 1];
                    bx /= hull.length, by /= hull.length;
                }
                const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);
                x = (x1 + x3) / 2 - a * ey;
                y = (y1 + y3) / 2 + a * ex;
            } else {
                const d = 1 / ab;
                const bl = dx * dx + dy * dy;
                const cl = ex * ex + ey * ey;
                x = x1 + (ey * bl - dy * cl) * d;
                y = y1 + (dx * cl - ex * bl) * d;
            }
            circumcenters[j] = x;
            circumcenters[j + 1] = y;
        }
        // Compute exterior cell rays.
        let h = hull[hull.length - 1];
        let p0, p1 = h * 4;
        let x0, x1 = points[2 * h];
        let y0, y1 = points[2 * h + 1];
        vectors.fill(0);
        for(let i = 0; i < hull.length; ++i){
            h = hull[i];
            p0 = p1, x0 = x1, y0 = y1;
            p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
            vectors[p0 + 2] = vectors[p1] = y0 - y1;
            vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
        }
    }
    render(context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        const { delaunay: { halfedges, inedges, hull }, circumcenters, vectors } = this;
        if (hull.length <= 1) return null;
        for(let i = 0, n = halfedges.length; i < n; ++i){
            const j = halfedges[i];
            if (j < i) continue;
            const ti = Math.floor(i / 3) * 2;
            const tj = Math.floor(j / 3) * 2;
            const xi = circumcenters[ti];
            const yi = circumcenters[ti + 1];
            const xj = circumcenters[tj];
            const yj = circumcenters[tj + 1];
            this._renderSegment(xi, yi, xj, yj, context);
        }
        let h0, h1 = hull[hull.length - 1];
        for(let i = 0; i < hull.length; ++i){
            h0 = h1, h1 = hull[i];
            const t = Math.floor(inedges[h1] / 3) * 2;
            const x = circumcenters[t];
            const y = circumcenters[t + 1];
            const v = h0 * 4;
            const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);
            if (p) this._renderSegment(x, y, p[0], p[1], context);
        }
        return buffer && buffer.value();
    }
    renderBounds(context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
        return buffer && buffer.value();
    }
    renderCell(i, context) {
        const buffer = context == null ? context = new _path.default() : undefined;
        const points = this._clip(i);
        if (points === null || !points.length) return;
        context.moveTo(points[0], points[1]);
        let n = points.length;
        while(points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1)n -= 2;
        for(let i = 2; i < n; i += 2)if (points[i] !== points[i - 2] || points[i + 1] !== points[i - 1]) context.lineTo(points[i], points[i + 1]);
        context.closePath();
        return buffer && buffer.value();
    }
    *cellPolygons() {
        const { delaunay: { points } } = this;
        for(let i = 0, n = points.length / 2; i < n; ++i){
            const cell = this.cellPolygon(i);
            if (cell) cell.index = i, yield cell;
        }
    }
    cellPolygon(i) {
        const polygon = new _polygon.default();
        this.renderCell(i, polygon);
        return polygon.value();
    }
    _renderSegment(x0, y0, x1, y1, context) {
        let S;
        const c0 = this._regioncode(x0, y0);
        const c1 = this._regioncode(x1, y1);
        if (c0 === 0 && c1 === 0) {
            context.moveTo(x0, y0);
            context.lineTo(x1, y1);
        } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
            context.moveTo(S[0], S[1]);
            context.lineTo(S[2], S[3]);
        }
    }
    contains(i, x, y) {
        if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
        return this.delaunay._step(i, x, y) === i;
    }
    *neighbors(i) {
        const ci = this._clip(i);
        if (ci) for (const j of this.delaunay.neighbors(i)){
            const cj = this._clip(j);
            // find the common edge
            if (cj) loop: for(let ai = 0, li = ci.length; ai < li; ai += 2){
                for(let aj = 0, lj = cj.length; aj < lj; aj += 2)if (ci[ai] === cj[aj] && ci[ai + 1] === cj[aj + 1] && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {
                    yield j;
                    break loop;
                }
            }
        }
    }
    _cell(i) {
        const { circumcenters, delaunay: { inedges, halfedges, triangles } } = this;
        const e0 = inedges[i];
        if (e0 === -1) return null; // coincident point
        const points = [];
        let e = e0;
        do {
            const t = Math.floor(e / 3);
            points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
            e = e % 3 === 2 ? e - 2 : e + 1;
            if (triangles[e] !== i) break; // bad triangulation
            e = halfedges[e];
        }while (e !== e0 && e !== -1);
        return points;
    }
    _clip(i) {
        // degenerate case (1 valid point: return the box)
        if (i === 0 && this.delaunay.hull.length === 1) return [
            this.xmax,
            this.ymin,
            this.xmax,
            this.ymax,
            this.xmin,
            this.ymax,
            this.xmin,
            this.ymin
        ];
        const points = this._cell(i);
        if (points === null) return null;
        const { vectors: V } = this;
        const v = i * 4;
        return this._simplify(V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points));
    }
    _clipFinite(i, points) {
        const n = points.length;
        let P = null;
        let x0, y0, x1 = points[n - 2], y1 = points[n - 1];
        let c0, c1 = this._regioncode(x1, y1);
        let e0, e1 = 0;
        for(let j = 0; j < n; j += 2){
            x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
            c0 = c1, c1 = this._regioncode(x1, y1);
            if (c0 === 0 && c1 === 0) {
                e0 = e1, e1 = 0;
                if (P) P.push(x1, y1);
                else P = [
                    x1,
                    y1
                ];
            } else {
                let S, sx0, sy0, sx1, sy1;
                if (c0 === 0) {
                    if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
                    [sx0, sy0, sx1, sy1] = S;
                } else {
                    if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
                    [sx1, sy1, sx0, sy0] = S;
                    e0 = e1, e1 = this._edgecode(sx0, sy0);
                    if (e0 && e1) this._edge(i, e0, e1, P, P.length);
                    if (P) P.push(sx0, sy0);
                    else P = [
                        sx0,
                        sy0
                    ];
                }
                e0 = e1, e1 = this._edgecode(sx1, sy1);
                if (e0 && e1) this._edge(i, e0, e1, P, P.length);
                if (P) P.push(sx1, sy1);
                else P = [
                    sx1,
                    sy1
                ];
            }
        }
        if (P) {
            e0 = e1, e1 = this._edgecode(P[0], P[1]);
            if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) return [
            this.xmax,
            this.ymin,
            this.xmax,
            this.ymax,
            this.xmin,
            this.ymax,
            this.xmin,
            this.ymin
        ];
        return P;
    }
    _clipSegment(x0, y0, x1, y1, c0, c1) {
        // for more robustness, always consider the segment in the same order
        const flip = c0 < c1;
        if (flip) [x0, y0, x1, y1, c0, c1] = [
            x1,
            y1,
            x0,
            y0,
            c1,
            c0
        ];
        while(true){
            if (c0 === 0 && c1 === 0) return flip ? [
                x1,
                y1,
                x0,
                y0
            ] : [
                x0,
                y0,
                x1,
                y1
            ];
            if (c0 & c1) return null;
            let x, y, c = c0 || c1;
            if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;
            else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;
            else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;
            else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
            if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);
            else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
        }
    }
    _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
        let P = Array.from(points), p;
        if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
        if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);
        if (P = this._clipFinite(i, P)) for(let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2){
            c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
            if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
        }
        else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) P = [
            this.xmin,
            this.ymin,
            this.xmax,
            this.ymin,
            this.xmax,
            this.ymax,
            this.xmin,
            this.ymax
        ];
        return P;
    }
    _edge(i, e0, e1, P, j) {
        while(e0 !== e1){
            let x, y;
            switch(e0){
                case 5:
                    e0 = 4;
                    continue;
                // top-left
                case 4:
                    e0 = 6, x = this.xmax, y = this.ymin;
                    break;
                // top
                case 6:
                    e0 = 2;
                    continue;
                // top-right
                case 2:
                    e0 = 10, x = this.xmax, y = this.ymax;
                    break;
                // right
                case 10:
                    e0 = 8;
                    continue;
                // bottom-right
                case 8:
                    e0 = 9, x = this.xmin, y = this.ymax;
                    break;
                // bottom
                case 9:
                    e0 = 1;
                    continue;
                // bottom-left
                case 1:
                    e0 = 5, x = this.xmin, y = this.ymin;
                    break;
            }
            // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are
            // undefined, the conditional statement will be executed.
            if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) P.splice(j, 0, x, y), j += 2;
        }
        return j;
    }
    _project(x0, y0, vx, vy) {
        let t = Infinity, c, x, y;
        if (vy < 0) {
            // top
            if (y0 <= this.ymin) return null;
            if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
        } else if (vy > 0) {
            // bottom
            if (y0 >= this.ymax) return null;
            if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
        }
        if (vx > 0) {
            // right
            if (x0 >= this.xmax) return null;
            if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
        } else if (vx < 0) {
            // left
            if (x0 <= this.xmin) return null;
            if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
        }
        return [
            x,
            y
        ];
    }
    _edgecode(x, y) {
        return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);
    }
    _regioncode(x, y) {
        return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);
    }
    _simplify(P) {
        if (P && P.length > 4) {
            for(let i = 0; i < P.length; i += 2){
                const j = (i + 2) % P.length, k = (i + 4) % P.length;
                if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) P.splice(j, 2), i -= 2;
            }
            if (!P.length) P = null;
        }
        return P;
    }
}
exports.default = Voronoi;

},{"b2be96272c3f4cdb":"1P3rZ","f25eea40feecf6f2":"2AN4k","989df1aeb233c95f":"1IicI"}],"7socF":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectorChartsVoronoiIsVoronoiEnabled = void 0;
var _selectors = require("b1da905776260659");
const selectVoronoi = (state)=>state.voronoi;
const selectorChartsVoronoiIsVoronoiEnabled = exports.selectorChartsVoronoiIsVoronoiEnabled = (0, _selectors.createSelector)(selectVoronoi, (voronoi)=>voronoi?.isVoronoiEnabled);

},{"b1da905776260659":"4YBdc"}],"bHiZW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartDataProvider = require("ea0b61b1edcd7b37");
Object.keys(_ChartDataProvider).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartDataProvider[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartDataProvider[key];
        }
    });
});

},{"ea0b61b1edcd7b37":"bsX0C"}],"bsX0C":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireWildcard = require("c90dfeb44321ded8").default;
var _interopRequireDefault = require("b357781d204eafe6").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartDataProvider = ChartDataProvider;
var _extends2 = _interopRequireDefault(require("ebf2fc5804e89ed"));
var React = _interopRequireWildcard(require("d112ecad89ef3abf"));
var _propTypes = _interopRequireDefault(require("ccfd275419f88604"));
var _useChartDataProviderProps = require("a242a13687c459f0");
var _ChartProvider = require("adb299f6e399d9b0");
var _ChartsLocalizationProvider = require("f5aeedb8a38efabc");
var _jsxRuntime = require("903e49f5ceed88e3");
/**
 * Orchestrates the data providers for the chart components and hooks.
 *
 * Use this component if you have custom HTML components that need to access the chart data.
 *
 * Demos:
 *
 * - [Composition](https://mui.com/x/react-charts/composition/)
 *
 * API:
 *
 * - [ChartDataProvider API](https://mui.com/x/api/charts/chart-data-provider/)
 *
 * @example
 * ```jsx
 * <ChartDataProvider
 *   series={[{ label: "Label", type: "bar", data: [10, 20] }]}
 *   xAxis={[{ data: ["A", "B"], scaleType: "band", id: "x-axis" }]}
 * >
 *   <ChartsSurface>
 *      <BarPlot />
 *      <ChartsXAxis axisId="x-axis" />
 *   </ChartsSurface>
 *   {'Custom Legend Component'}
 * </ChartDataProvider>
 * ```
 */ function ChartDataProvider(props) {
    const { children, localeText, chartProviderProps } = (0, _useChartDataProviderProps.useChartDataProviderProps)(props);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartProvider.ChartProvider, (0, _extends2.default)({}, chartProviderProps, {
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsLocalizationProvider.ChartsLocalizationProvider, {
            localeText: localeText,
            children: children
        })
    }));
}
ChartDataProvider.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    apiRef: _propTypes.default.shape({
        current: _propTypes.default.any
    }),
    /**
   * Color palette used to colorize multiple series.
   * @default rainbowSurgePalette
   */ colors: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.string),
        _propTypes.default.func
    ]),
    /**
   * An array of objects that can be used to populate series and axes data using their `dataKey` property.
   */ dataset: _propTypes.default.arrayOf(_propTypes.default.object),
    /**
   * The height of the chart in px. If not defined, it takes the height of the parent element.
   */ height: _propTypes.default.number,
    /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */ id: _propTypes.default.string,
    /**
   * Localized text for chart components.
   */ localeText: _propTypes.default.object,
    /**
   * The margin between the SVG and the drawing area.
   * It's used for leaving some space for extra information such as the x- and y-axis or legend.
   *
   * Accepts a `number` to be used on all sides or an object with the optional properties: `top`, `bottom`, `left`, and `right`.
   */ margin: _propTypes.default.oneOfType([
        _propTypes.default.number,
        _propTypes.default.shape({
            bottom: _propTypes.default.number,
            left: _propTypes.default.number,
            right: _propTypes.default.number,
            top: _propTypes.default.number
        })
    ]),
    /**
   * The array of series to display.
   * Each type of series has its own specificity.
   * Please refer to the appropriate docs page to learn more about it.
   */ series: _propTypes.default.arrayOf(_propTypes.default.object),
    /**
   * If `true`, animations are skipped.
   * If unset or `false`, the animations respects the user's `prefers-reduced-motion` setting.
   */ skipAnimation: _propTypes.default.bool,
    theme: _propTypes.default.oneOf([
        'dark',
        'light'
    ]),
    /**
   * The width of the chart in px. If not defined, it takes the width of the parent element.
   */ width: _propTypes.default.number
};

},{"c90dfeb44321ded8":"6TFJp","b357781d204eafe6":"1P3rZ","ebf2fc5804e89ed":"lKa0J","d112ecad89ef3abf":"jMk1U","ccfd275419f88604":"GNqOQ","a242a13687c459f0":"gvC8h","adb299f6e399d9b0":"8cPIy","f5aeedb8a38efabc":"kgNmo","903e49f5ceed88e3":"05iiF"}],"gvC8h":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("ca87f698bc6b933f").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useChartDataProviderProps = void 0;
var _extends2 = _interopRequireDefault(require("15cc4e4ee2358703"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("c6a66f92920329ba"));
var _styles = require("8d46076a57bc20f4");
var _allPlugins = require("f311fe94f1f3ef5e");
const _excluded = [
    "children",
    "localeText",
    "plugins",
    "seriesConfig"
];
const useChartDataProviderProps = (props)=>{
    const { children, localeText, plugins = _allPlugins.DEFAULT_PLUGINS, seriesConfig } = props, other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
    const theme = (0, _styles.useTheme)();
    const chartProviderProps = {
        plugins: plugins,
        seriesConfig,
        pluginParams: (0, _extends2.default)({
            theme: theme.palette.mode
        }, other)
    };
    return {
        children,
        localeText,
        chartProviderProps
    };
};
exports.useChartDataProviderProps = useChartDataProviderProps;

},{"ca87f698bc6b933f":"1P3rZ","15cc4e4ee2358703":"lKa0J","c6a66f92920329ba":"17jFf","8d46076a57bc20f4":"7eExx","f311fe94f1f3ef5e":"5atFx"}],"kgNmo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChartsLocalizationProvider", {
    enumerable: true,
    get: function() {
        return _ChartsLocalizationProvider.ChartsLocalizationProvider;
    }
});
var _ChartsLocalizationProvider = require("7a748fb137545885");

},{"7a748fb137545885":"8X1WH"}],"9iwL6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsSurface = require("345a6d465dc1f03c");
Object.keys(_ChartsSurface).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsSurface[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsSurface[key];
        }
    });
});

},{"345a6d465dc1f03c":"a5f3J"}],"a5f3J":[function(require,module,exports,__globalThis) {
"use strict";
'use client';
var _interopRequireDefault = require("29eb5dca69b39f2d").default;
var _interopRequireWildcard = require("13487fc36e6bcafb").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsSurface = void 0;
var _extends2 = _interopRequireDefault(require("2630dd708af2843f"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("1499574afe53b17f"));
var _styles = require("22666f8cab2f55d0");
var _propTypes = _interopRequireDefault(require("9d3e6eb7015e9b94"));
var React = _interopRequireWildcard(require("e536939e3ce2930"));
var _useForkRef = _interopRequireDefault(require("675989ee22b4c2e"));
var _ChartsAxesGradients = require("70eab49f205e864");
var _useSvgRef = require("24a9b6171ae464a9");
var _useSelector = require("35de69875238c03f");
var _useStore = require("e4b87d779232b83");
var _useChartDimensions = require("16260b24a1813e6b");
var _jsxRuntime = require("c722a78c5768ee36");
const _excluded = [
    "children",
    "className",
    "title",
    "desc"
];
const ChartsSurfaceStyles = (0, _styles.styled)('svg', {
    name: 'MuiChartsSurface',
    slot: 'Root'
})(({ ownerState })=>({
        width: ownerState.width ?? '100%',
        height: ownerState.height ?? '100%',
        display: 'flex',
        position: 'relative',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        overflow: 'hidden',
        // This prevents default touch actions when using the svg on mobile devices.
        // For example, prevent page scroll & zoom.
        touchAction: 'none'
    }));
/**
 * It provides the drawing area for the chart elements.
 * It is the root `<svg>` of all the chart elements.
 *
 * It also provides the `title` and `desc` elements for the chart.
 *
 * Demos:
 *
 * - [Composition](https://mui.com/x/api/charts/composition/)
 *
 * API:
 *
 * - [ChartsSurface API](https://mui.com/x/api/charts/charts-surface/)
 */ const ChartsSurface = exports.ChartsSurface = /*#__PURE__*/ React.forwardRef(function ChartsSurface(inProps, ref) {
    const store = (0, _useStore.useStore)();
    const { width: svgWidth, height: svgHeight } = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartContainerSize);
    const { width: propsWidth, height: propsHeight } = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartPropsSize);
    const svgRef = (0, _useSvgRef.useSvgRef)();
    const handleRef = (0, _useForkRef.default)(svgRef, ref);
    const themeProps = (0, _styles.useThemeProps)({
        props: inProps,
        name: 'MuiChartsSurface'
    });
    const { children, className, title, desc } = themeProps, other = (0, _objectWithoutPropertiesLoose2.default)(themeProps, _excluded);
    const hasIntrinsicSize = svgHeight > 0 && svgWidth > 0;
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(ChartsSurfaceStyles, (0, _extends2.default)({
        ownerState: {
            width: propsWidth,
            height: propsHeight
        },
        viewBox: `${0} ${0} ${svgWidth} ${svgHeight}`,
        className: className
    }, other, {
        ref: handleRef,
        children: [
            title && /*#__PURE__*/ (0, _jsxRuntime.jsx)("title", {
                children: title
            }),
            desc && /*#__PURE__*/ (0, _jsxRuntime.jsx)("desc", {
                children: desc
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsAxesGradients.ChartsAxesGradients, {}),
            hasIntrinsicSize && children
        ]
    }));
});
ChartsSurface.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // | To update them edit the TypeScript types and run "pnpm proptypes"  |
    // ----------------------------------------------------------------------
    children: _propTypes.default.node,
    className: _propTypes.default.string,
    desc: _propTypes.default.string,
    sx: _propTypes.default.oneOfType([
        _propTypes.default.arrayOf(_propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.object,
            _propTypes.default.bool
        ])),
        _propTypes.default.func,
        _propTypes.default.object
    ]),
    title: _propTypes.default.string
};

},{"29eb5dca69b39f2d":"1P3rZ","13487fc36e6bcafb":"6TFJp","2630dd708af2843f":"lKa0J","1499574afe53b17f":"17jFf","22666f8cab2f55d0":"7eExx","9d3e6eb7015e9b94":"GNqOQ","e536939e3ce2930":"jMk1U","675989ee22b4c2e":"g7kn5","70eab49f205e864":"9YtlH","24a9b6171ae464a9":"2YtYD","35de69875238c03f":"65ofz","e4b87d779232b83":"6viTh","16260b24a1813e6b":"fCnQx","c722a78c5768ee36":"05iiF"}],"9YtlH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsAxesGradients = require("fcf512173ec62643");
Object.keys(_ChartsAxesGradients).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsAxesGradients[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsAxesGradients[key];
        }
    });
});

},{"fcf512173ec62643":"5bFjG"}],"5bFjG":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireDefault = require("4c80b8709c299fc1").default;
var _interopRequireWildcard = require("4ef880d6a339b2b5").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsAxesGradients = ChartsAxesGradients;
var React = _interopRequireWildcard(require("a746b829639795ed"));
var _hooks = require("1029cb0aa142281e");
var _ChartsPiecewiseGradient = _interopRequireDefault(require("e85993e52d3fbfd"));
var _ChartsContinuousGradient = _interopRequireDefault(require("fb8123070bdca689"));
var _ChartsContinuousGradientObjectBound = _interopRequireDefault(require("382e934feba92163"));
var _useZAxis = require("1a3d3253804f8447");
var _useChartGradientId = require("4f2015626a33fad5");
var _jsxRuntime = require("697fd1151bd039d3");
function ChartsAxesGradients() {
    const { top, height, bottom, left, width, right } = (0, _hooks.useDrawingArea)();
    const svgHeight = top + height + bottom;
    const svgWidth = left + width + right;
    const getGradientId = (0, _useChartGradientId.useChartGradientIdBuilder)();
    const getObjectBoundGradientId = (0, _useChartGradientId.useChartGradientIdObjectBoundBuilder)();
    const { xAxis, xAxisIds } = (0, _hooks.useXAxes)();
    const { yAxis, yAxisIds } = (0, _hooks.useYAxes)();
    const { zAxis, zAxisIds } = (0, _useZAxis.useZAxes)();
    const filteredYAxisIds = yAxisIds.filter((axisId)=>yAxis[axisId].colorMap !== undefined);
    const filteredXAxisIds = xAxisIds.filter((axisId)=>xAxis[axisId].colorMap !== undefined);
    const filteredZAxisIds = zAxisIds.filter((axisId)=>zAxis[axisId].colorMap !== undefined);
    if (filteredYAxisIds.length === 0 && filteredXAxisIds.length === 0 && filteredZAxisIds.length === 0) return null;
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)("defs", {
        children: [
            filteredYAxisIds.map((axisId)=>{
                const gradientId = getGradientId(axisId);
                const objectBoundGradientId = getObjectBoundGradientId(axisId);
                const { colorMap, scale, colorScale, reverse } = yAxis[axisId];
                if (colorMap?.type === 'piecewise') return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsPiecewiseGradient.default, {
                    isReversed: !reverse,
                    scale: scale,
                    colorMap: colorMap,
                    size: svgHeight,
                    gradientId: gradientId,
                    direction: "y"
                }, gradientId);
                if (colorMap?.type === 'continuous') return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
                    children: [
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsContinuousGradient.default, {
                            isReversed: !reverse,
                            scale: scale,
                            colorScale: colorScale,
                            colorMap: colorMap,
                            size: svgHeight,
                            gradientId: gradientId,
                            direction: "y"
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsContinuousGradientObjectBound.default, {
                            isReversed: reverse,
                            colorScale: colorScale,
                            colorMap: colorMap,
                            gradientId: objectBoundGradientId
                        })
                    ]
                }, gradientId);
                return null;
            }),
            filteredXAxisIds.map((axisId)=>{
                const gradientId = getGradientId(axisId);
                const objectBoundGradientId = getObjectBoundGradientId(axisId);
                const { colorMap, scale, reverse, colorScale } = xAxis[axisId];
                if (colorMap?.type === 'piecewise') return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsPiecewiseGradient.default, {
                    isReversed: reverse,
                    scale: scale,
                    colorMap: colorMap,
                    size: svgWidth,
                    gradientId: gradientId,
                    direction: "x"
                }, gradientId);
                if (colorMap?.type === 'continuous') return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
                    children: [
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsContinuousGradient.default, {
                            isReversed: reverse,
                            scale: scale,
                            colorScale: colorScale,
                            colorMap: colorMap,
                            size: svgWidth,
                            gradientId: gradientId,
                            direction: "x"
                        }),
                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsContinuousGradientObjectBound.default, {
                            isReversed: reverse,
                            colorScale: colorScale,
                            colorMap: colorMap,
                            gradientId: objectBoundGradientId
                        })
                    ]
                }, gradientId);
                return null;
            }),
            filteredZAxisIds.map((axisId)=>{
                const objectBoundGradientId = getObjectBoundGradientId(axisId);
                const { colorMap, colorScale } = zAxis[axisId];
                if (colorMap?.type === 'continuous') return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ChartsContinuousGradientObjectBound.default, {
                    colorScale: colorScale,
                    colorMap: colorMap,
                    gradientId: objectBoundGradientId
                }, objectBoundGradientId);
                return null;
            })
        ]
    });
}

},{"4c80b8709c299fc1":"1P3rZ","4ef880d6a339b2b5":"6TFJp","a746b829639795ed":"jMk1U","1029cb0aa142281e":"92Hil","e85993e52d3fbfd":"2UYao","fb8123070bdca689":"fc1Vf","382e934feba92163":"RzK9a","1a3d3253804f8447":"ew8Tr","4f2015626a33fad5":"8rjJB","697fd1151bd039d3":"05iiF"}],"2UYao":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("731d57df6e45af9e").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ChartsPiecewiseGradient;
var React = _interopRequireWildcard(require("b8de92b04b4197eb"));
var _jsxRuntime = require("c10fcbb366b5ecce");
function ChartsPiecewiseGradient(props) {
    const { isReversed, gradientId, size, direction, scale, colorMap } = props;
    if (size <= 0) return null;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("linearGradient", {
        id: gradientId,
        x1: "0",
        x2: "0",
        y1: "0",
        y2: "0",
        [`${direction}${isReversed ? 1 : 2}`]: `${size}px`,
        gradientUnits: "userSpaceOnUse" // Use the SVG coordinate instead of the component ones.
        ,
        children: colorMap.thresholds.map((threshold, index)=>{
            const x = scale(threshold);
            if (x === undefined) return null;
            const offset = isReversed ? 1 - x / size : x / size;
            if (Number.isNaN(offset)) return null;
            return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(React.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxRuntime.jsx)("stop", {
                        offset: offset,
                        stopColor: colorMap.colors[index],
                        stopOpacity: 1
                    }),
                    /*#__PURE__*/ (0, _jsxRuntime.jsx)("stop", {
                        offset: offset,
                        stopColor: colorMap.colors[index + 1],
                        stopOpacity: 1
                    })
                ]
            }, threshold.toString() + index);
        })
    });
}

},{"731d57df6e45af9e":"6TFJp","b8de92b04b4197eb":"jMk1U","c10fcbb366b5ecce":"05iiF"}],"fc1Vf":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("829905165ea23f85").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ChartsContinuousGradient;
var React = _interopRequireWildcard(require("4ed8946e1a91f813"));
var _d3Interpolate = require("555f612c94a92dd2");
var _jsxRuntime = require("5c364fe1e3dd8607");
const PX_PRECISION = 10;
function ChartsContinuousGradient(props) {
    const { gradientUnits, isReversed, gradientId, size, direction, scale, colorScale, colorMap } = props;
    const extremumValues = [
        colorMap.min ?? 0,
        colorMap.max ?? 100
    ];
    const extremumPositions = extremumValues.map(scale).filter((p)=>p !== undefined);
    if (extremumPositions.length !== 2) return null;
    const interpolator = typeof extremumValues[0] === 'number' ? (0, _d3Interpolate.interpolateNumber)(extremumValues[0], extremumValues[1]) : (0, _d3Interpolate.interpolateDate)(extremumValues[0], extremumValues[1]);
    const numberOfPoints = Math.round((Math.max(...extremumPositions) - Math.min(...extremumPositions)) / PX_PRECISION);
    const keyPrefix = `${extremumValues[0]}-${extremumValues[1]}-`;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("linearGradient", {
        id: gradientId,
        x1: "0",
        x2: "0",
        y1: "0",
        y2: "0",
        [`${direction}${isReversed ? 1 : 2}`]: gradientUnits === 'objectBoundingBox' ? 1 : `${size}px`,
        gradientUnits: gradientUnits ?? 'userSpaceOnUse' // Use the SVG coordinate instead of the component ones.
        ,
        children: Array.from({
            length: numberOfPoints + 1
        }, (_, index)=>{
            const value = interpolator(index / numberOfPoints);
            if (value === undefined) return null;
            const x = scale(value);
            if (x === undefined) return null;
            const offset = isReversed ? 1 - x / size : x / size;
            const color = colorScale(value);
            if (color === null) return null;
            return /*#__PURE__*/ (0, _jsxRuntime.jsx)("stop", {
                offset: offset,
                stopColor: color,
                stopOpacity: 1
            }, keyPrefix + index);
        })
    });
}

},{"829905165ea23f85":"6TFJp","4ed8946e1a91f813":"jMk1U","555f612c94a92dd2":"2yPAl","5c364fe1e3dd8607":"05iiF"}],"RzK9a":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("e7a589c2cb0a8e62").default;
var _interopRequireDefault = require("8bddbb815967fab4").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ChartsContinuousGradientObjectBound;
var _extends2 = _interopRequireDefault(require("d1d8d850da45a4f3"));
var React = _interopRequireWildcard(require("be9fce5b770b722f"));
var _d3Interpolate = require("f8540590215d9328");
var _jsxRuntime = require("94893c70a4764878");
const PX_PRECISION = 10;
const getDirection = (isReversed)=>{
    if (isReversed) return {
        x1: '1',
        x2: '0',
        y1: '0',
        y2: '0'
    };
    return {
        x1: '0',
        x2: '1',
        y1: '0',
        y2: '0'
    };
};
/**
 * Generates gradients to be used in tooltips and legends.
 */ function ChartsContinuousGradientObjectBound(props) {
    const { isReversed, gradientId, colorScale, colorMap } = props;
    const extremumValues = [
        colorMap.min ?? 0,
        colorMap.max ?? 100
    ];
    const interpolator = typeof extremumValues[0] === 'number' ? (0, _d3Interpolate.interpolateNumber)(extremumValues[0], extremumValues[1]) : (0, _d3Interpolate.interpolateDate)(extremumValues[0], extremumValues[1]);
    const numberOfPoints = PX_PRECISION;
    const keyPrefix = `${extremumValues[0]}-${extremumValues[1]}-`;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)("linearGradient", (0, _extends2.default)({
        id: gradientId
    }, getDirection(isReversed), {
        gradientUnits: 'objectBoundingBox' // Use the SVG coordinate instead of the component ones.
        ,
        children: Array.from({
            length: numberOfPoints + 1
        }, (_, index)=>{
            const offset = index / numberOfPoints;
            const value = interpolator(offset);
            if (value === undefined) return null;
            const color = colorScale(value);
            if (color === null) return null;
            return /*#__PURE__*/ (0, _jsxRuntime.jsx)("stop", {
                offset: offset,
                stopColor: color,
                stopOpacity: 1
            }, keyPrefix + index);
        })
    }));
}

},{"e7a589c2cb0a8e62":"6TFJp","8bddbb815967fab4":"1P3rZ","d1d8d850da45a4f3":"lKa0J","be9fce5b770b722f":"jMk1U","f8540590215d9328":"2yPAl","94893c70a4764878":"05iiF"}],"bXUZW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ChartsWrapper = require("f8efa8baf05076cf");
Object.keys(_ChartsWrapper).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _ChartsWrapper[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _ChartsWrapper[key];
        }
    });
});

},{"f8efa8baf05076cf":"jJtPT"}],"jJtPT":[function(require,module,exports,__globalThis) {
"use strict";
var _interopRequireWildcard = require("63064c539cead7aa").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChartsWrapper = ChartsWrapper;
var React = _interopRequireWildcard(require("6ce36b517c19dfdf"));
var _styles = require("2705c3a90259e42b");
var _useChartRootRef = require("a1b866451c97f770");
var _jsxRuntime = require("b511852641de085b");
const getDirection = (direction, position)=>{
    if (direction === 'vertical') {
        if (position?.horizontal === 'start') return 'row';
        return 'row-reverse';
    }
    if (position?.vertical === 'bottom') return 'column-reverse';
    return 'column';
};
const getAlign = (direction, position)=>{
    if (direction === 'vertical') {
        if (position?.vertical === 'top') return 'flex-start';
        if (position?.vertical === 'bottom') return 'flex-end';
    }
    if (direction === 'horizontal') {
        if (position?.horizontal === 'start') return 'flex-start';
        if (position?.horizontal === 'end') return 'flex-end';
    }
    return 'center';
};
const Root = (0, _styles.styled)('div', {
    name: 'MuiChartsWrapper',
    slot: 'Root'
})(({ ownerState })=>({
        display: 'flex',
        flexDirection: getDirection(ownerState.legendDirection, ownerState.legendPosition),
        flex: 1,
        justifyContent: 'center',
        alignItems: getAlign(ownerState.legendDirection, ownerState.legendPosition)
    }));
/**
 * @ignore - internal component.
 *
 * Wrapper for the charts components.
 * Its main purpose is to position the HTML legend in the correct place.
 */ function ChartsWrapper(props) {
    const { children, sx } = props;
    const chartRootRef = (0, _useChartRootRef.useChartRootRef)();
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Root, {
        ref: chartRootRef,
        ownerState: props,
        sx: sx,
        children: children
    });
}

},{"63064c539cead7aa":"6TFJp","6ce36b517c19dfdf":"jMk1U","2705c3a90259e42b":"7eExx","a1b866451c97f770":"fNeDq","b511852641de085b":"05iiF"}]},["7wZbQ","2R06K"], "2R06K", "parcelRequire94c2", {}, "./", "/", "http://localhost:1234")

//# sourceMappingURL=ctrlify.0f77c784.js.map
